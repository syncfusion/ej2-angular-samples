{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewChild } from '@angular/core';\nimport { MaskChangeEventArgs, Input } from '@syncfusion/ej2-inputs';\nimport { MaskedTextBoxComponent, MaskedTextBoxModule } from '@syncfusion/ej2-angular-inputs';\nimport { DropDownListComponent, DropDownListModule } from '@syncfusion/ej2-angular-dropdowns';\n\n\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    standalone: true,\n    imports: [\n        MaskedTextBoxModule,\n        FormsModule,\n        DropDownListModule,\n        \n        \n    ],\n})\nexport class AppComponent {\n    constructor() { }\n    @ViewChild('formatMask')\n    public formatMask: MaskedTextBoxComponent;\n    @ViewChild('sample')\n    public listObj: DropDownListComponent;\n    public ddlFields: Object = { text: 'prompt', value: 'prompt' };\n    // Prompt character options\n    public promptData: Object[] = [\n        { prompt: '_' },\n        { prompt: '#' },\n        { prompt: '@' },\n        { prompt: '*' },\n    ];\n    public dynamicMask: string = \"(999)-999-9999\";\n    public dynamicPrompt: string = \"_\";\n    public onCreated(): void {\n        (document.getElementById('val2') as HTMLElement).innerHTML = this.formatMask.getMaskedValue();\n    }\n    // Masked and un-masked values will be updated in the properties panel, while Masked Textbox value changes\n    public maskChange(target: MaskChangeEventArgs): void {\n        (document.getElementById('val1') as HTMLElement).innerHTML = target.value;\n        (document.getElementById('val2') as HTMLElement).innerHTML = target.maskedValue;\n    }\n    // Styles will be added, while focusing Masked Textbox\n    public focusIn(target: HTMLElement): void {\n        target.parentElement.classList.add('e-input-focus');\n    }\n    // Styles will be removed, when Masked Textbox has been focused out\n    public focusOut(target: HTMLElement): void {\n        target.parentElement.classList.remove('e-input-focus');\n    }\n    public setValues(target: HTMLElement): void {\n        setTimeout(\n            () => {\n                // Masked and un-masked values will be updated in the properties panel, while Masked Textbox value changes\n                (document.getElementById('val1') as HTMLElement).innerHTML = this.formatMask.value;\n                (document.getElementById('val2') as HTMLElement).innerHTML = this.formatMask.getMaskedValue();\n            },\n            100);\n    }\n    // Set selection range\n    public sampleInput(target: HTMLElement): void {\n        let ele1: HTMLInputElement = (document.getElementById('input1') as HTMLInputElement);\n        let start: number = ele1.selectionStart;\n        let end: number = ele1.selectionEnd;\n        setTimeout(\n            () => {\n                ele1.setSelectionRange(start, end);\n            },\n            10);\n    }\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section\">\n    <div class=\"col-lg-8\">\n        <div class=\"content-wrapper\">\n            <div>\n                <div class=\"control-label\">Formats</div>\n                <ejs-maskedtextbox #formatMask=\"\" [mask]=\"dynamicMask\" (created)=\"onCreated()\" [promptChar]=\"dynamicPrompt\" (change)=\"maskChange($event)\" floatLabelType=\"Never\"></ejs-maskedtextbox>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-lg-4 property-section\">\n        <div class=\"property-panel-section\">\n            <div class=\"property-panel-header\">Properties</div>\n            <div class=\"property-panel-content\">\n                <table id=\"property\" title=\"Properties\">\n                    <tbody>\n                        <tr>\n                            <td style=\"padding:10px 0 0 10px;width:50%\">\n                                <div>Mask</div>\n                            </td>\n                            <td style=\"padding:10px 0 0 0;width:50%\">\n                                <div class=\"e-input-group\">\n                                    <input id=\"input1\" class=\"e-input\" type=\"text\" [(ngModel)]=\"dynamicMask\" (input)=\"sampleInput($event.target)\" (keyup)=\"setValues($event.target)\"\n                                        (focus)=\"focusIn($event.target)\" (blur)=\"focusOut($event.target)\" />\n                                </div>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style=\"padding:10px 0 0 10px;width:50%\">\n                                <div>Prompt Character</div>\n                            </td>\n                            <td style=\"padding:10px 0 0 0;width:50%\">\n                                <div>\n                                    <ejs-dropdownlist id=\"sample-list\" #sample [dataSource]=\"promptData\" [(value)]=\"dynamicPrompt\" (change)=\"setValues($event.target)\"\n                                        [fields]=\"ddlFields\" popupheight=\"220px\"></ejs-dropdownlist>\n                                </div>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style=\"padding:10px 0 0 10px;width:50%\">\n                                <div>Value</div>\n                            </td>\n                            <td style=\"padding:10px 0 0 0;width:50%\">\n                                <div id=\"val1\" type=\"text\"></div>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style=\"padding:10px 0 0 10px;width:50%\">\n                                <div>Masked Value</div>\n                            </td>\n                            <td style=\"padding:10px 0 0 0;width:50%\">\n                                <div id=\"val2\" type=\"text\"></div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n<style>\n    .property-panel-content {\n        padding: 0 10px 10px 0;\n        overflow: auto;\n    }\n    \n    .content-wrapper {\n        width: 45%;\n        margin: 0 auto;\n        min-width: 185px;\n        max-width: 350px;\n    }\n    \n    .control-label {\n        padding: 24px 0px 10px 0px;\n        font-size: 12px;\n    }\n    \n</style>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}