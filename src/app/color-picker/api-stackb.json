{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { ColorPickerComponent, ColorPickerMode, ColorPickerEventArgs, ColorPickerModule } from '@syncfusion/ej2-angular-inputs';\nimport { ChangeEventArgs as DdlChangeEventArgs, DropDownListModule } from '@syncfusion/ej2-angular-dropdowns';\nimport { ChangeEventArgs } from '@syncfusion/ej2-buttons';\n\nimport { CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\n\n\n/**\n * API sample\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ ColorPickerModule, DropDownListModule, CheckBoxModule, ]\n})\nexport class AppComponent {\n    @ViewChild('colorpicker')\n    public colorPicker: ColorPickerComponent;\n\n    public ddlFields: Object = { text: 'type', value: 'type' };\n\n    public type: Object[] = [{ type: 'Picker' }, { type: 'Palette' }];\n\n    public colorValue: string = '#0db1e7';\n\n    public typeChange(args: DdlChangeEventArgs): void {\n        this.colorPicker.mode = args.value as ColorPickerMode;\n        this.colorPicker.dataBind();\n    }\n\n    public button_onChange(args: ChangeEventArgs) {\n        this.colorPicker.showButtons = args.checked;\n        this.colorPicker.dataBind();\n    }\n\n    public mode_onChange(args: ChangeEventArgs) {\n        this.colorPicker.modeSwitcher = args.checked;\n        this.colorPicker.dataBind();\n    }\n\n    public disabled_onChange(args: ChangeEventArgs) {\n        this.colorPicker.disabled = args.checked;\n        this.colorPicker.dataBind();\n    }\n\n    // function to handle the ColorPicker change event\n    public change(args: ColorPickerEventArgs): void {\n        this.colorValue = args.currentValue.hex;\n    }\n\n    onValueChange(e: MouseEvent): void {\n        const val: string = (e.target as HTMLInputElement).value;\n        // Sets to color picker default color value if user enters the invalid hex code\n        this.colorPicker.value = val && val.length > 2 ? (val[0] !== '#' ? `#${val}` : val) : '#008000';\n        this.colorPicker.dataBind();\n    }\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n\n<div class=\"control-section\">\n    <div class=\"col-lg-8\">\n        <div id=\"api-control\">\n            <h4>Choose a color</h4>\n            <input ejs-colorpicker id='color-picker' #colorpicker type='color' [value]=\"colorValue\" (change)=\"change($event)\" />\n        </div>\n    </div>\n\n    <div class=\"col-lg-4 property-section\">\n        <div class=\"property-panel-section\">\n            <div class=\"property-panel-header\">Properties</div>\n            <div class=\"property-panel-content\">\n                <table id=\"property\" title=\"Properties\">\n                    <tbody>\n                        <tr>\n                            <td style=\"padding:10px 0 5px 10px;width:50%\">\n                                <div>Value</div>\n                            </td>\n                            <td style=\"padding:10px 0 0 0;width:50%\">\n                                <div class=\"e-input-group\">\n                                    <input id=\"value\" class=\"e-input\" aria-label=\"Value\" type=\"text\" [value]=\"colorValue\" [spellcheck]=\"false\" (input)=\"onValueChange($event)\" />\n                                </div>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style=\"padding:10px 0 5px 10px;width:50%\">\n                                <div>Mode</div>\n                            </td>\n                            <td style=\"padding:10px 0 0 0;width:50%\">\n                                <div>\n                                    <ejs-dropdownlist id=\"sample-list\" [dataSource]=\"type\" value='Picker' (change)=\"typeChange($event)\" [fields]=\"ddlFields\"\n                                        popupheight=\"220px\"></ejs-dropdownlist>\n                                </div>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style=\"padding:10px 0 10px 10px;width:50%\">\n                                <div>Disable</div>\n                            </td>\n                            <td style=\"padding:10px 0 10px 0;width:50%\">\n                                <ejs-checkbox id='disabled' aria-label=\"Disable\" [checked]=\"false\" (change)=\"disabled_onChange($event)\"></ejs-checkbox>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style=\"padding:10px 0 10px 10px;width:50%\">\n                                <div>Show Buttons</div>\n                            </td>\n                            <td style=\"padding:10px 0 10px 0;width:50%\">\n                                <ejs-checkbox id='button' aria-label=\"Show Buttons\" [checked]=\"true\" (change)=\"button_onChange($event)\"></ejs-checkbox>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style=\"padding:10px 0 10px 10px;width:50%\">\n                                <div>Mode Switcher</div>\n                            </td>\n                            <td style=\"padding:10px 0 10px 0;width:50%\">\n                                <ejs-checkbox id='mode-switch' aria-label=\"Mode Switcher\" [checked]=\"true\" (change)=\"mode_onChange($event)\"></ejs-checkbox>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n","app.component.css":"/* custom code start*/\n#api-control {\n    width: 45%;\n    margin: 30px auto;\n    padding-top: 50px;\n    text-align: center;\n}\n\n#api-control h4 {\n    margin-bottom: 20px;\n}\n\n.highcontrast #api-control h4 {\n    color: rgba(255, 255, 255, 0.64);\n}\n\n.material-dark #api-control h4 {\n    color: rgba(255, 255, 255, 0.64);\n}\n\n.fabric-dark #api-control h4 {\n    color: rgba(255, 255, 255, 0.64);\n}\n\n.bootstrap-dark #api-control h4 {\n    color: rgba(255, 255, 255, 0.64);\n}\n\n.tailwind-dark #api-control h4 {\n    color: rgba(255, 255, 255, 0.64);\n}\n\n.e-bigger #api-control h4 {\n    font-size: 20px;\n}\n\n.property-panel-content {\n    padding: 0 10px 10px 0;\n    overflow: auto;\n}\n/* custom code end*/","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}