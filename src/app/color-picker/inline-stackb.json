{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { ColorPickerEventArgs, ColorPickerModule, ColorPickerComponent } from '@syncfusion/ej2-angular-inputs';\nimport { Browser } from '@syncfusion/ej2-base';\n\n\n\n/**\n * Inline Mode sample\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ ColorPickerModule, ]\n})\nexport class AppComponent {\n    @ViewChild('inlinePicker') inlinePicker: ColorPickerComponent;\n    @ViewChild('inlinePalette') inlinePalette: ColorPickerComponent;\n    public ctrlSwitch: boolean = false;\n\n    // function to handle the ColorPicker change event\n    public change(args: ColorPickerEventArgs): void {\n        document.getElementById('preview').style.backgroundColor = args.currentValue.hex;\n    }\n\n    ngOnInit(): void {\n         // custom code start\n        if (Browser.isDevice) {\n            document.getElementById('inline-control').classList.add('e-mobile-control');\n        }\n        // custom code end\n    }\n\n    // custom code start\n    ngAfterViewInit(): void {\n        if (this.inlinePicker) {\n            this.inlinePicker.refresh();\n        }\n        if (this.inlinePalette) {\n            this.inlinePalette.refresh();\n        }\n    }\n    // custom code end\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n\n<div class=\"inline control-section\">\n    <div id=\"inline-control\">\n        <div class=\"row\">\n            <div id=\"preview\"></div>\n        </div>\n        <div id=\"inline-content\" class=\"row\">\n            <div class=\"col-xs-12 col-sm-12 col-lg-6 col-md-6\">\n                <h4>Inline Palette</h4>\n                <input ejs-colorpicker #inlinePalette id=\"inline-color-palette\" type=\"color\" mode=\"Palette\" [modeSwitcher]=\"ctrlSwitch\" inline=\"true\" [showButtons]=\"ctrlSwitch\"\n                    (change)=\"change($event)\" />\n            </div>\n            <div class=\"col-xs-12 col-sm-12 col-lg-6 col-md-6\">\n                <h4>Inline Picker</h4>\n                <input ejs-colorpicker #inlinePicker id=\"inline-color-picker\" type=\"color\" [modeSwitcher]=\"ctrlSwitch\" inline=\"true\" [showButtons]=\"ctrlSwitch\"\n                    (change)=\"change($event)\" />\n            </div>\n        </div>\n    </div>\n</div>\n","app.component.css":"/* custom code start*/\n/* Common sample level styles */\n#inline-control {\n    width: 100%;\n    text-align: center;\n}\n#inline-control .col-xs-12 {\n    margin: 10px 0;\n}\n#inline-control h4 {\n    margin-bottom: 20px;\n    color: rgba(0, 0, 0, 0.64);\n}\n.highcontrast #inline-control h4 {\n    color: rgba(255, 255, 255, 0.64);\n}\n.material-dark #inline-control h4 {\n    color: rgba(255, 255, 255, 0.64);\n}\n.fabric-dark #inline-control h4 {\n    color: rgba(255, 255, 255, 0.64);\n}\n.bootstrap-dark #inline-control h4 {\n    color: rgba(255, 255, 255, 0.64);\n}\n.tailwind-dark #inline-control h4 {\n    color: rgba(255, 255, 255, 0.64);\n}\n.fluent-dark #colorpicker-control h4,\n.fluent2-dark #colorpicker-control h4,\n.fluent2-highcontrast #colorpicker-control h4,\n.bootstrap5\\.3-dark #colorpicker-control h4 {\n    color: #fff;\n}\n.e-bigger #inline-control h4 {\n    font-size: 20px;\n}\n\n/* Preview area styles */\n#inline-control #preview {\n    background: transparent url('/assets/color-picker/pen.png') no-repeat;\n    display: inline-block;\n    height: 80px;\n    margin: 10px 0;\n    width: 600px;\n    background-color: #008000;\n}\n#inline-control.e-mobile-control #preview {\n    background: transparent url('/assets/color-picker/pen_mobile.png') no-repeat;\n    background-color: #008000;\n    height: 35px;\n    width: 300px;\n}\n.highcontrast #inline-control #preview {\n    background: transparent url('/assets/color-picker/pen_highcontrast.png') no-repeat;\n    background-color: #008000;\n}\n.highcontrast #inline-control.e-mobile-control #preview {\n    background: transparent url('/assets/color-picker/pen_mobile_highcontrast.png') no-repeat;\n    background-color: #008000;\n}\n\n/* sample level styles for mobile */\n#inline-control.e-mobile-control h4 {\n    margin-bottom: 15px;\n}\n#inline-control.e-mobile-control #inline-content {\n    display: flex;\n    flex-wrap: nowrap;\n    overflow-x: auto;\n}\n#inline-control.e-mobile-control #inline-content .col-xs-12 {\n    flex: 0 0 auto;\n    margin-top: 5px;\n}\n/* custom code end*/","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}