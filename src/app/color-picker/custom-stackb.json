{"dependencies.json":"{\"@syncfusion/ej2-base\": \"*\", \"@syncfusion/ej2-buttons\": \"*\", \"@syncfusion/ej2-splitbuttons\": \"*\", \"@syncfusion/ej2-calendars\": \"*\", \"@syncfusion/ej2-charts\": \"*\", \"@syncfusion/ej2-diagrams\": \"*\", \"@syncfusion/ej2-maps\": \"*\", \"@syncfusion/ej2-treemap\": \"*\", \"@syncfusion/ej2-circulargauge\": \"*\", \"@syncfusion/ej2-data\": \"*\", \"@syncfusion/ej2-dropdowns\": \"*\", \"@syncfusion/ej2-grids\": \"*\", \"@syncfusion/ej2-inputs\": \"*\", \"@syncfusion/ej2-lists\": \"*\", \"@syncfusion/ej2-navigations\": \"*\", \"@syncfusion/ej2-popups\": \"*\", \"@syncfusion/ej2-lineargauge\": \"*\", \"@syncfusion/ej2-pdf-export\": \"*\", \"@syncfusion/ej2-compression\": \"*\", \"@syncfusion/ej2-excel-export\": \"*\", \"@syncfusion/ej2-file-utils\": \"*\", \"@syncfusion/ej2-svg-base\": \"*\", \"@syncfusion/ej2-documenteditor\": \"*\", \"@syncfusion/ej2-richtexteditor\": \"*\", \"@syncfusion/ej2-notifications\": \"*\", \"@syncfusion/ej2-heatmap\": \"*\", \"@syncfusion/ej2-pivotview\": \"*\", \"@syncfusion/ej2-schedule\": \"*\", \"@syncfusion/ej2-layouts\": \"*\", \"@syncfusion/ej2-angular-base\": \"*\", \"@syncfusion/ej2-angular-buttons\": \"*\", \"@syncfusion/ej2-angular-splitbuttons\": \"*\", \"@syncfusion/ej2-angular-calendars\": \"*\", \"@syncfusion/ej2-angular-charts\": \"*\", \"@syncfusion/ej2-angular-diagrams\": \"*\", \"@syncfusion/ej2-angular-maps\": \"*\", \"@syncfusion/ej2-angular-treemap\": \"*\", \"@syncfusion/ej2-angular-circulargauge\": \"*\", \"@syncfusion/ej2-angular-dropdowns\": \"*\", \"@syncfusion/ej2-angular-grids\": \"*\", \"@syncfusion/ej2-angular-inputs\": \"*\", \"@syncfusion/ej2-angular-lists\": \"*\", \"@syncfusion/ej2-angular-navigations\": \"*\", \"@syncfusion/ej2-angular-popups\": \"*\", \"@syncfusion/ej2-angular-lineargauge\": \"*\", \"@syncfusion/ej2-angular-documenteditor\": \"*\", \"@syncfusion/ej2-angular-richtexteditor\": \"*\", \"@syncfusion/ej2-angular-notifications\": \"*\", \"@syncfusion/ej2-angular-heatmap\": \"*\", \"@syncfusion/ej2-angular-pivotview\": \"*\", \"@syncfusion/ej2-angular-schedule\": \"*\", \"@syncfusion/ej2-angular-layouts\": \"*\" , \"@angular/http\": \"*\", \"rxjs-compat\":\"*\"}","main.ts":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n","polyfills.ts":"/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol';\n// import 'core-js/es6/object';\n// import 'core-js/es6/function';\n// import 'core-js/es6/parse-int';\n// import 'core-js/es6/parse-float';\n// import 'core-js/es6/number';\n// import 'core-js/es6/math';\n// import 'core-js/es6/string';\n// import 'core-js/es6/date';\n// import 'core-js/es6/array';\n// import 'core-js/es6/regexp';\n// import 'core-js/es6/map';\n// import 'core-js/es6/weak-map';\n// import 'core-js/es6/set';\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect';\n\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\nimport 'core-js/es7/reflect';\n\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n **/\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n */\n\n // (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n // (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n // (window as any).__zone_symbol__BLACK_LISTED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n\n /*\n * in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n * with the following flag, it will bypass `zone.js` patch for IE/Edge\n */\n// (window as any).__Zone_enable_cross_context_check = true;\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n<link href=\"../styles/OpenNew.css\" rel=\"stylesheet\">\n  <link href=\"//cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\" />\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body class=\"ej2-new\"> \n\n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WLQL39J\"height=\"0\"width=\"0\"style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app/app.module.ts":"import { CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\n\nimport { ColorPickerModule } from '@syncfusion/ej2-angular-inputs';\n\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from '../app.component';\n\n@NgModule({ declarations: [   AppComponent ], imports: [ BrowserModule, ColorPickerModule, BrowserModule, CheckBoxModule], providers: [], bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","app.component.html":"\n<div class=\"control-section\">\n    <div id=\"custom-control\">\n        <div class=\"row\">\n            <div id=\"e-shirt-preview\"></div>\n        </div>\n        <div id=\"custom-content\" class=\"row\">\n            <div class=\"col-xs-12 col-sm-12 col-lg-6 col-md-6 e-circle-wrap\">\n                <input ejs-colorpicker id=\"circle-palette\" type=\"color\" mode=\"Palette\" [modeSwitcher]=\"ctrlSwitch\" [columns]=\"biggerPalettesColn\"\n                    inline=\"true\" [showButtons]=\"ctrlSwitch\" [presetColors]=\"circlePaletteColors\" (beforeTileRender)=\"beforeCircleTileRender($event)\"\n                    (change)=\"change($event)\" />\n            </div>\n            <div class=\"col-xs-12 col-sm-12 col-lg-6 col-md-6 e-rounded-wrap\">\n                <input ejs-colorpicker #colorpicker id=\"rounded-palette\" type=\"color\" mode=\"Palette\" [modeSwitcher]=\"ctrlSwitch\" inline=\"true\"\n                    [showButtons]=\"ctrlSwitch\" [columns]=\"roundedPalettesColn\" [presetColors]=\"roundedPaletteColors\" (beforeTileRender)=\"beforeRoundedTileRender($event)\"\n                    (change)=\"roundedPaletteChange($event)\" />\n            </div>\n            <div class=\"col-xs-12 col-sm-12 col-lg-6 col-md-6 e-square-wrap\">\n                <input ejs-colorpicker id=\"square-palette\" type=\"color\" mode=\"Palette\" [modeSwitcher]=\"ctrlSwitch\" inline=\"true\" [showButtons]=\"ctrlSwitch\"\n                    [columns]=\"squarePalettesColn\" [presetColors]=\"squarePaletteColors\" (beforeTileRender)=\"beforeSquareTileRender($event)\"\n                    (change)=\"change($event)\" />\n            </div>\n            <div class=\"col-xs-12 col-sm-12 col-lg-6 col-md-6 e-scroll-wrap\">\n                <input ejs-colorpicker id=\"scroll-palette\" type=\"color\" mode=\"Palette\" inline=\"true\" [modeSwitcher]=\"ctrlSwitch\" [showButtons]=\"ctrlSwitch\"\n                    [columns]=\"biggerPalettesColn\" [presetColors]=\"scrollPaletteColors\" (beforeTileRender)=\"beforeScrollTileRender($event)\"\n                    (change)=\"change($event)\" />\n            </div>\n        </div>\n    </div>\n</div>\n","app.component.css":"/* custom code start*/\n/* Common sample level styles */\n#custom-control {\n    margin: auto 0;\n    text-align: center;\n}\n#custom-control .col-lg-6 {\n    margin-bottom: 20px;\n}\n#custom-control .col-lg-6.e-circle-wrap {\n    width: 26%;\n}\n#custom-control .col-lg-6.e-square-wrap {\n    margin-top: 37px;\n    width: 22%;\n}\n#custom-control .col-lg-6.e-rounded-wrap {\n    margin-top: 35px;\n    width: 20%;\n}\n#custom-control .col-lg-6.e-scroll-wrap {\n    width: 32%;\n}\n\n/* Preview area styles */\n#custom-control #e-shirt-preview {\n    background: transparent url('~/assets/color-picker/shirt.png') no-repeat;\n    height: 320px;\n    margin: 20px auto;\n    display: inline-block;\n    width: 400px;\n    background-color: rgb(244, 67, 54);\n}\n#custom-control.e-mobile-control #e-shirt-preview {\n    margin-left: -21%;\n    width: 320px;\n}\n.highcontrast #custom-control #e-shirt-preview {\n    background: transparent url('~/assets/color-picker/shirt_highcontrast.png') no-repeat;\n    background-color: rgb(244, 67, 54);\n}\n\n/* Common sample level styles for mobile */\n#custom-control.e-mobile-control .col-lg-6 {\n    width: 55%;\n}\n@media only screen and (min-width: 768px) {\n    #custom-control.e-mobile-control .col-sm-12 {\n        width: 25%;\n    }\n}\n#custom-control.e-mobile-control #custom-content {\n    display: flex;\n    flex-wrap: nowrap;\n    overflow-x: auto;\n}\n#custom-control.e-mobile-control #custom-content .col-xs-12 {\n    flex: 0 0 auto;\n}\n/* custom code end*/\n/* Circle palette customization */\n.e-container .e-palette .e-circle-palette {\n    border: 0;\n    height: 32px;\n    width: 32px;\n    border-radius: 20px;\n    margin: 4px;\n}\n.e-bigger .e-container .e-palette .e-circle-palette {\n    height: 32px;\n    width: 32px;\n}\n.e-container .e-palette .e-circle-palette:hover {\n    box-shadow: none;\n    transform: scale(1.2);\n    transition: transform .2s ease-out;\n}\n.e-circle-palette .e-circle-selection {\n    height: 32px;\n    width: 32px;\n    border-radius: 20px;\n    display: inline-block;\n    transform: scale(0);\n    transition: transform 1.2s ease-in;\n}\n.e-circle-palette.e-selected .e-circle-selection {\n    transform: scale(0.8);\n    background-color: #fff;\n    transition: transform .2s ease-out;\n}\n#circle-palette+.e-container,\n#scroll-palette+.e-container {\n    background-color: transparent;\n    border-color: transparent;\n    box-shadow: none;\n}\n\n/* Scrollable palette customization */\n#scroll-palette+.e-container .e-custom-palette.e-palette-group,\n.e-bigger #scroll-palette+.e-container .e-custom-palette.e-palette-group {\n    height: 125px;\n}\n.e-container .e-palette .e-scroll-palette {\n    border: 0;\n    color: #fff;\n    line-height: 24px;\n    font-size: 16px;\n    height: 24px;\n    width: 35px;\n    margin-top: 2px;\n    margin-left: 10px;\n}\n.e-bigger .e-container .e-palette .e-scroll-palette {\n    height: 24px;\n    width: 35px;\n}\n.e-container .e-palette .e-scroll-palette.e-selected::before {\n    content: '\\e303';\n}\n.highcontrast .e-container .e-palette {\n    border-bottom-color: transparent;\n}\n\n/* Square palette customization */\n.e-container .e-palette .e-square-palette,\n.e-bigger .e-container .e-palette .e-square-palette {\n    width: 20px;\n    height: 20px;\n}\n#square-palette+.e-container .e-custom-palette .e-palette,\n#rounded-palette+.e-container .e-custom-palette .e-palette {\n    padding: 5px;\n}\n\n/* Rounded corner palette customization */\n.e-container .e-palette .e-rounded-palette {\n    border-radius: 4px;\n    margin: 3px;\n    height: 16px;\n    width: 16px;\n}\n.e-bigger .e-container .e-palette .e-rounded-palette {\n    height: 16px;\n    width: 16px;\n}\n.e-container .e-palette .e-rounded-palette:hover,\n.e-container .e-palette .e-scroll-palette:hover {\n    box-shadow: none;\n}\n.e-container .e-palette .e-circle-palette.e-selected,\n.e-container .e-palette .e-rounded-palette.e-selected,\n.e-container .e-palette .e-square-palette.e-selected,\n.e-container .e-palette .e-scroll-palette.e-selected {\n    outline: none;\n}\n\n@font-face {\n    font-family: 'e-select';\n    src:\n    url(data:application/x-font-ttf;charset=utf-8;base64,AAEAAAAKAIAAAwAgT1MvMjlwRfUAAAEoAAAAVmNtYXDjE+NYAAABiAAAADZnbHlmjV5i3AAAAcgAAAAoaGVhZBSSE5oAAADQAAAANmhoZWEIUQQDAAAArAAAACRobXR4CAAAAAAAAYAAAAAIbG9jYQAUAAAAAAHAAAAABm1heHABDQASAAABCAAAACBuYW1lrzQ6OQAAAfAAAAIxcG9zdCXq1t8AAAQkAAAAMwABAAAEAAAAAFwEAAAAAAAD9AABAAAAAAAAAAAAAAAAAAAAAgABAAAAAQAAW40vW18PPPUACwQAAAAAANi/55MAAAAA2L/nkwAAAAAD9AN3AAAACAACAAAAAAAAAAEAAAACAAYAAQAAAAAAAgAAAAoACgAAAP8AAAAAAAAAAQQAAZAABQAAAokCzAAAAI8CiQLMAAAB6wAyAQgAAAIABQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGZFZABA4wPjAwQAAAAAXAQAAAAAAAABAAAAAAAABAAAAAQAAAAAAAACAAAAAwAAABQAAwABAAAAFAAEACIAAAAEAAQAAQAA4wP//wAA4wP//wAAAAEABAAAAAEAAAAAAAAAFAAAAAEAAAAAA/QDdwAFAAAJAQcJAScBcf8AZQFlAoNlAVUBAmb+mAKIZgAAABIA3gABAAAAAAAAAAEAAAABAAAAAAABAAgAAQABAAAAAAACAAcACQABAAAAAAADAAgAEAABAAAAAAAEAAgAGAABAAAAAAAFAAsAIAABAAAAAAAGAAgAKwABAAAAAAAKACwAMwABAAAAAAALABIAXwADAAEECQAAAAIAcQADAAEECQABABAAcwADAAEECQACAA4AgwADAAEECQADABAAkQADAAEECQAEABAAoQADAAEECQAFABYAsQADAAEECQAGABAAxwADAAEECQAKAFgA1wADAAEECQALACQBLyBlLXNlbGVjdFJlZ3VsYXJlLXNlbGVjdGUtc2VsZWN0VmVyc2lvbiAxLjBlLXNlbGVjdEZvbnQgZ2VuZXJhdGVkIHVzaW5nIFN5bmNmdXNpb24gTWV0cm8gU3R1ZGlvd3d3LnN5bmNmdXNpb24uY29tACAAZQAtAHMAZQBsAGUAYwB0AFIAZQBnAHUAbABhAHIAZQAtAHMAZQBsAGUAYwB0AGUALQBzAGUAbABlAGMAdABWAGUAcgBzAGkAbwBuACAAMQAuADAAZQAtAHMAZQBsAGUAYwB0AEYAbwBuAHQAIABnAGUAbgBlAHIAYQB0AGUAZAAgAHUAcwBpAG4AZwAgAFMAeQBuAGMAZgB1AHMAaQBvAG4AIABNAGUAdAByAG8AIABTAHQAdQBkAGkAbwB3AHcAdwAuAHMAeQBuAGMAZgB1AHMAaQBvAG4ALgBjAG8AbQAAAAACAAAAAAAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBAgEDAAlTZWxlY3Rpb24AAAA=) format('truetype');\n    font-weight: normal;\n    font-style: normal;\n}\n    \n.e-palette-icons {\n    font-family: 'e-select';\n    font-style: normal;\n    font-weight: normal;\n    font-variant: normal;\n    text-transform: none;\n    line-height: 1;\n}","app.component.ts":"import { Component, ViewEncapsulation, Inject, ViewChild } from '@angular/core';\nimport { ColorPickerComponent, ColorPickerEventArgs, PaletteTileEventArgs } from '@syncfusion/ej2-angular-inputs';\nimport { addClass, Browser, createElement } from '@syncfusion/ej2-base';\n\n/**\n * Custom sample\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None\n\n})\nexport class AppComponent {\n    @ViewChild('colorpicker')\n    public colorPicker: ColorPickerComponent;\n\n    constructor() {\n        \n    }\n\n    public squarePalettesColn: number = 8;\n\n    public roundedPalettesColn: number = 5;\n\n    public biggerPalettesColn: number = 4;\n\n    public ctrlSwitch: boolean = false;\n\n    public circlePaletteColors: { [key: string]: string[] } = {\n        'custom': ['#f44336', '#e91e63', '#9c27b0', '#673ab7', '#2196f3', '#03a9f4', '#00bcd4',\n            '#009688', '#8bc34a', '#cddc39', '#ffeb3b', '#ffc107']\n    };\n\n    public squarePaletteColors: { [key: string]: string[] } = {\n        'custom1': ['#b80000', '#db3e00', '#fccb00', '#008b02',\n            '#006b76', '#1273de', '#004dcf', '#5300eb',\n            '#eb9694', '#fad0c3', '#fef3bd', '#c1e1c5',\n            '#bedadc', '#c4def6', '#bed3f3', '#d4c4fb']\n    };\n\n    public roundedPaletteColors: { [key: string]: string[] } = {\n        'custom1': ['#ff6900', '#fcb900', '#7bdcb5', '#00d084',\n            '#8ed1fc', '#0693e3', '#abb8c3', '#eb144c',\n            '#f78da7', '#9900ef']\n    };\n\n    public scrollPaletteColors: { [key: string]: string[] } = {\n        'custom1': ['#ef9a9a', '#e57373', '#ef5350',\n            '#f44336', '#f48fb1', '#f06292',\n            '#ec407a', '#e91e63', '#ce93d8',\n            '#ba68c8', '#ab47bc', '#9c27b0',\n            '#b39ddb', '#9575cd', '#7e57c2', '#673AB7'],\n        'custom2': ['#9FA8DA', '#7986CB', '#5C6BC0', '#3F51B5',\n            '#90CAF9', '#64B5F6', '#42A5F5', '#2196F3',\n            '#81D4FA', '#4FC3F7', '#29B6F6', '#03A9F4',\n            '#80DEEA', '#4DD0E1', '#26C6DA', '#00BCD4'],\n        'custom3': ['#80CBC4', '#4DB6AC', '#26A69A', '#009688',\n            '#A5D6A7', '#81C784', '#66BB6A', '#4CAF50',\n            '#C5E1A5', '#AED581', '#9CCC65', '#8BC34A', '#E6EE9C',\n            '#DCE775', '#D4E157', '#CDDC39'],\n        'custom4': ['#FFF59D', '#FFF176', '#FFEE58', '#FFEB3B',\n            '#FFE082', '#FFD54F', '#FFCA28', '#FFC107',\n            '#FFCC80', '#FFB74D', '#FFA726', '#FF9800', '#FFAB91',\n            '#FF8A65', '#FF7043', '#FF5722']\n    };\n\n    public beforeCircleTileRender(args: PaletteTileEventArgs): void {\n        args.element.classList.add('e-circle-palette');\n        args.element.appendChild(createElement('span', { className: 'e-circle-selection' }));\n    }\n\n    public beforeSquareTileRender(args: PaletteTileEventArgs): void {\n        args.element.classList.add('e-square-palette');\n    }\n\n    public beforeRoundedTileRender(args: PaletteTileEventArgs): void {\n        args.element.classList.add('e-rounded-palette');\n    }\n\n    public beforeScrollTileRender(args: PaletteTileEventArgs): void {\n        addClass([args.element], ['e-palette-icons', 'e-scroll-palette']);\n    }\n\n    public roundedPaletteChange(args: ColorPickerEventArgs): void {\n        (this.colorPicker.element.nextElementSibling.querySelector('.e-selected') as HTMLElement).style.boxShadow\n            = args.currentValue.hex + ' 0 0 4px';\n        document.getElementById('e-shirt-preview').style.backgroundColor = args.currentValue.hex;\n    }\n\n    // function to handle the ColorPicker change event\n    public change(args: ColorPickerEventArgs): void {\n        document.getElementById('e-shirt-preview').style.backgroundColor = args.currentValue.hex;\n    }\n\n    ngOnInit(): void {\n        // custom code start\n        if (Browser.isDevice) {\n            document.getElementById('custom-control').classList.add('e-mobile-control');\n        }\n        // custom code end\n    }\n}"}