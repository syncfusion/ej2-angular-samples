{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { CommonModule } from '@angular/common';\nimport { Component, ViewEncapsulation, ViewChild, Inject } from '@angular/core';\nimport { DashboardLayoutComponent, DashboardLayoutAllModule } from '@syncfusion/ej2-angular-layouts';\nimport { DialogComponent, DialogModule } from '@syncfusion/ej2-angular-popups';\nimport { ChartComponent, AccumulationChart, AccumulationChartAllModule, ChartAllModule, IAccLoadedEventArgs, AccumulationTheme, Chart, LineSeries, Category, AccumulationDataLabel, PieSeries, AccumulationTooltip, } from '@syncfusion/ej2-angular-charts';\nimport { ButtonComponent, ButtonModule } from '@syncfusion/ej2-angular-buttons';\n\n// Inject necessary services for the charts\nChart.Inject(LineSeries, Category);\nAccumulationChart.Inject(AccumulationDataLabel, PieSeries, AccumulationTooltip);\n\n@Component({\n    selector: 'app-root',\n    styleUrls: ['app.component.css'],\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [\n        DashboardLayoutAllModule,\n        ButtonModule,\n        DialogModule,\n        ChartAllModule,\n        AccumulationChartAllModule,\n        CommonModule\n    ],\n})\nexport class AppComponent {\n    @ViewChild('default_dashboard')\n    public dashboardObject: DashboardLayoutComponent;\n    @ViewChild('toggleBtn')\n    public toggleBtn: ButtonComponent | any;\n    @ViewChild('template')\n    public dialogObj: DialogComponent | any;\n    @ViewChild('pie')\n    public pie: AccumulationChart;\n    @ViewChild('piechart') public piechart: ChartComponent;\n    @ViewChild('colchart') public colchart: ChartComponent;\n    public centerTitle: any;\n\n    constructor(){\n        this.centerTitle = document.createElement('div') as HTMLElement;\n        \n    }\n  \n    ngAfterViewInit() {\n        this.centerTitle.innerHTML = 'Active <br> users  &nbsp';\n        this.centerTitle.style.position = 'absolute';\n        this.centerTitle.style.visibility = 'hidden';\n    }\n\n    // Dashboard\n    public cellSpacing: number[] = [10, 10];\n    public cellAspectRatio = 100 / 85;\n    public count: number = 3;\n    onPanelResizeStop(args) {\n        if (args.element) {\n            let innerElement =\n                args.element.querySelector(\n                    '.e-panel-container .e-panel-content .e-control'\n                ) ||\n                args.element.querySelector(\n                    '.e-panel-container .e-panel-content div .e-control'\n                );\n            if (innerElement) {\n                const innerElementInstance = innerElement.ej2_instances[0];\n                innerElementInstance.height = '95%';\n                innerElementInstance.width = '100%';\n                innerElementInstance.refresh();\n            }\n        }\n    }\n\n    // Dialog\n    public width: string = '500px';\n    public dialogHeader: string = 'Add a widget';\n    public height: string = '100px';\n    public isModal: Boolean = true;\n    public isVisible: Boolean = false;\n    public showCloseIcon: Boolean = true;\n    public target: string = '#target';\n    public animationSettings = { effect: 'Zoom' };\n\n    // Button\n    onClick(): void {\n        if (!this.toggleBtn.element.classList.contains('e-active')) {\n            this.dashboardObject.allowResizing = true;\n            this.dashboardObject.allowDragging = true;\n            this.toggleBtn.content = 'SAVE';\n            this.toggleBtn.iconCss = 'save';\n            document.getElementById('dialogBtn').style.display = 'block';\n        } else {\n            this.dashboardObject.allowResizing = false;\n            this.dashboardObject.allowDragging = false;\n            this.toggleBtn.content = 'EDIT';\n            this.toggleBtn.iconCss = 'edit';\n            document.getElementById('dialogBtn').style.display = 'none';\n        }\n    }\n\n    // Pie Chart\n    public enablesmartlabel: boolean = true;\n    public startAngle: number = 0;\n    public endAngle: number = 360;\n    public dataLabel: Object = {\n        visible: true,\n        position: 'Inside',\n        name: 'value',\n        font: { color: 'white', fontWeight: '600', size: '14px' },\n    };\n    public palettes: any = ['#00bdaed1', '#357cd2bf', '#e56691e8'];\n    public legendSettings: Object = {\n        visible: false,\n        toggleVisibility: false,\n    };\n    public tooltip: Object = {\n        enable: true,\n        header: '<b>${point.x}</b>',\n        format: 'Composition : <b>${point.y}%</b>',\n    };\n    public pieData: any = [\n        { x: 'Jan', y: 12.5, text: 'January' },\n        { x: 'Feb', y: 25, text: 'February' },\n        { x: 'Mar', y: 50, text: 'March' },\n    ];\n    public piechartLoad(args: IAccLoadedEventArgs): void {\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.accumulation.theme = <AccumulationTheme>(\n            (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(\n                /-dark/i,\n                'Dark'\n            )\n        );\n    }\n    animationComplete(args: any): void {\n        this.centerTitle.style.fontSize = this.getFontSize(\n            this.pie.initialClipRect.width\n        );\n        let rect: ClientRect = this.centerTitle.getBoundingClientRect();\n        this.centerTitle.style.top = this.pie.origin.y - rect.height / 2 + 'px';\n        this.centerTitle.style.left = this.pie.origin.x - rect.width / 2 + 'px';\n        this.centerTitle.style.visibility = 'visible';\n        let points: any[] = this.pie.visibleSeries[0].points;\n        for (let i: number = 0; i < points.length; i++) {\n            let point: any = points[i];\n            if (point.labelPosition === 'Outside' && point.labelVisible) {\n                let label: HTMLElement = document.getElementById(\n                    'pie_datalabel_Series_0_text_' + point.index\n                );\n                label.setAttribute('fill', 'black');\n            }\n        }\n    }\n    textRender(args: any): void {\n        args.series.dataLabel.font.size = this.getFontSize(\n            this.pie.initialClipRect.width\n        );\n        this.pie.animateSeries = true;\n    }\n    getFontSize(width: any): string {\n        if (width > 300) {\n            return '13px';\n        } else if (width > 250) {\n            return '13px';\n        } else {\n            return '13px';\n        }\n    }\n\n    // Bar Chart\n    public primaryXAxis: object = {\n        valueType: 'Category',\n        interval: 1,\n        majorGridLines: { width: 0 },\n    };\n    public chartArea: object = { border: { width: 0 } };\n    public primaryYAxis: object = {\n        majorGridLines: { width: 0 },\n        majorTickLines: { width: 0 },\n        lineStyle: { width: 0 },\n        labelStyle: { color: 'transparent' },\n    };\n    public marker: object = {\n        dataLabel: {\n            visible: false,\n            position: 'Top',\n            font: { fontWeight: '600', color: '#ffffff' },\n        },\n    };\n    public data: any = [\n        { x: 'Jan', y: 46 },\n        { x: 'Feb', y: 27 },\n        { x: 'Mar', y: 26 },\n    ];\n    public data1: any = [\n        { x: 'Jan', y: 37 },\n        { x: 'Feb', y: 23 },\n        { x: 'Mar', y: 18 },\n    ];\n    public data2: any = [\n        { x: 'Jan', y: 38 },\n        { x: 'Feb', y: 17 },\n        { x: 'Mar', y: 26 },\n    ];\n\n    // Spline Chart\n    lineprimaryXAxis: object = {\n        valueType: 'DateTime',\n        labelFormat: 'MMM',\n        majorGridLines: { width: 0 },\n        intervalType: 'Months',\n        edgeLabelPlacement: 'Shift',\n    };\n    lineprimaryYAxis: object = {\n        maximum: 4,\n        interval: 1,\n        labelFormat: '{value}%',\n        lineStyle: { width: 0 },\n        majorTickLines: { width: 0 },\n        minorTickLines: { width: 0 },\n    };\n    public linelegendSettings: Object = { visible: true };\n    public widthValue: any = '100%';\n    public heightValue: any = '100%';\n    public splineData1: any = [\n        { x: new Date(2002, 0, 1), y: 2.2 },\n        { x: new Date(2003, 0, 1), y: 3.4 },\n        { x: new Date(2004, 0, 1), y: 2.8 },\n        { x: new Date(2005, 0, 1), y: 1.6 },\n        { x: new Date(2006, 0, 1), y: 2.3 },\n        { x: new Date(2007, 0, 1), y: 2.5 },\n        { x: new Date(2008, 0, 1), y: 2.9 },\n        { x: new Date(2009, 0, 1), y: 3.8 },\n        { x: new Date(2010, 0, 1), y: 1.4 },\n        { x: new Date(2011, 0, 1), y: 3.1 },\n    ];\n    public splineData2: any = [\n        { x: new Date(2002, 0, 1), y: 2 },\n        { x: new Date(2003, 0, 1), y: 1.7 },\n        { x: new Date(2004, 0, 1), y: 1.8 },\n        { x: new Date(2005, 0, 1), y: 2.1 },\n        { x: new Date(2006, 0, 1), y: 2.3 },\n        { x: new Date(2007, 0, 1), y: 1.7 },\n        { x: new Date(2008, 0, 1), y: 1.5 },\n        { x: new Date(2009, 0, 1), y: 2.8 },\n        { x: new Date(2010, 0, 1), y: 1.5 },\n        { x: new Date(2011, 0, 1), y: 2.3 },\n    ];\n    public lineborder: object = { color: 'transparent' };\n    load(args: any): void {\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.chart.theme = <any>(\n            (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(\n                /-dark/i,\n                'Dark'\n            )\n        );\n        if (selectedTheme === 'highcontrast') {\n            args.chart.series[0].marker.dataLabel.font.color = '#000000';\n            args.chart.series[1].marker.dataLabel.font.color = '#000000';\n            args.chart.series[2].marker.dataLabel.font.color = '#000000';\n        }\n    }\n\n    addWidget(): void {\n        this.dialogObj.show();\n\n        document.getElementById('bartemplate').onclick = () => {\n            this.dialogObj.hide();\n            var countValue = this.count.toString();\n            var panel = [\n                {\n                    id: '_layout' + countValue,\n                    sizeX: 1,\n                    sizeY: 1,\n                    row: 0,\n                    col: 0,\n                    header: '<div>Bar Chart</div>',\n                    content:\n                        '<div id=_bar' +\n                        countValue +\n                        ' style=\"height:100%; width:100%\"></div>',\n                },\n            ];\n            this.count = this.count + 1;\n            this.dashboardObject.addPanel(panel[0]);\n            // Create bar chart and append to the new Dashboard panel content\n            var barchartObj = new Chart({\n                chartArea: this.chartArea,\n                primaryXAxis: {\n                    valueType: 'Category',\n                    interval: 1,\n                    majorGridLines: { width: 0 },\n                },\n                width: '99%',\n                primaryYAxis: {\n                    majorGridLines: { width: 0 },\n                    majorTickLines: { width: 0 },\n                    lineStyle: { width: 0 },\n                    labelStyle: { color: 'transparent' },\n                },\n                height: '100%',\n                series: [\n                    {\n                        type: 'Column',\n                        xName: 'x',\n                        width: 2,\n                        yName: 'y',\n                        name: 'Jan',\n                        fill: '#00bdae',\n                        dataSource: [\n                            { x: 'Jan', y: 46 },\n                            { x: 'Feb', y: 27 },\n                            { x: 'Mar', y: 26 },\n                        ],\n                        marker: {\n                            dataLabel: {\n                                visible: false,\n                                position: 'Top',\n                                font: {\n                                    fontWeight: '600',\n                                    color: '#ffffff',\n                                },\n                            },\n                        },\n                    },\n                    {\n                        type: 'Column',\n                        xName: 'x',\n                        width: 2,\n                        yName: 'y',\n                        name: 'Feb',\n                        fill: '#e56691',\n                        dataSource: [\n                            { x: 'Jan', y: 37 },\n                            { x: 'Feb', y: 23 },\n                            { x: 'Mar', y: 18 },\n                        ],\n                        marker: {\n                            dataLabel: {\n                                visible: false,\n                                position: 'Top',\n                                font: { fontWeight: '600', color: '#ffffff' },\n                            },\n                        },\n                    },\n                    {\n                        type: 'Column',\n                        xName: 'x',\n                        width: 2,\n                        yName: 'y',\n                        name: 'Mar',\n                        fill: '#357cd2',\n                        dataSource: [\n                            { x: 'Jan', y: 38 },\n                            { x: 'Feb', y: 17 },\n                            { x: 'Mar', y: 26 },\n                        ],\n                        marker: {\n                            dataLabel: {\n                                visible: false,\n                                position: 'Top',\n                                font: { fontWeight: '600', color: '#ffffff' },\n                            },\n                        },\n                    },\n                ],\n            });\n            barchartObj.appendTo('#' + '_bar' + countValue);\n            barchartObj.refresh();\n        };\n\n        document.getElementById('pietemplate').onclick = () => {\n            this.dialogObj.hide();\n            var countValue = this.count.toString();\n            var panel = [\n                {\n                    id: '_layout' + countValue,\n                    sizeX: 1,\n                    sizeY: 1,\n                    row: 0,\n                    col: 0,\n                    header: '<div>Pie Chart</div>',\n                    content:\n                        '<div id=_pie' +\n                        countValue +\n                        ' style=\"height:100%; width:100%\"></div>',\n                },\n            ];\n            this.count = this.count + 1;\n            this.dashboardObject.addPanel(panel[0]);\n            // Create pie chart and append to the new Dashboard panel content\n            var pie = new AccumulationChart({\n                series: [\n                    {\n                        dataSource: [\n                            { x: 'Jan', y: 12.5, text: 'January' },\n                            { x: 'Feb', y: 25, text: 'February' },\n                            { x: 'Mar', y: 50, text: 'March' },\n                        ],\n                        palettes: ['#00bdaed1', '#357cd2bf', '#e56691e8'],\n                        radius: '100%',\n                        xName: 'x',\n                        yName: 'y',\n                        startAngle: 0,\n                        endAngle: 360,\n                        innerRadius: '40%',\n                        name: 'Earnings',\n                        dataLabel: {\n                            visible: true,\n                            name: 'value',\n                            position: 'Inside',\n                            font: { color: 'white', fontWeight: '600', size: '14px' },\n                        },\n                    },\n                ],\n                tooltip: {\n                    enable: true,\n                    header: '<b>${point.x}</b>',\n                    format: 'Composition : <b>${point.y}%</b>',\n                },\n                legendSettings: {\n                    visible: false,\n                    toggleVisibility: false,\n                },\n                width: '100%',\n                height: '100%',\n            });\n            pie.appendTo('#' + '_pie' + countValue);\n            pie.refresh();\n        };\n\n        document.getElementById('splinetemplate').onclick = () => {\n            this.dialogObj.hide();\n            var countValue = this.count.toString();\n            var panel = [\n                {\n                    id: '_layout' + countValue,\n                    sizeX: 2,\n                    sizeY: 1,\n                    row: 0,\n                    col: 0,\n                    header: '<div>Spline Chart</div>',\n                    content:\n                        '<div id=_spline' +\n                        countValue +\n                        ' style=\"height:100%; width:100%\"></div>',\n                },\n            ];\n            this.count = this.count + 1;\n            this.dashboardObject.addPanel(panel[0]);\n            // Create a Spline chart and append to the new Dashboard panel content\n            var chart = new Chart({\n                primaryXAxis: {\n                    valueType: 'DateTime',\n                    labelFormat: 'MMM',\n                    majorGridLines: { width: 0 },\n                    intervalType: 'Months',\n                    edgeLabelPlacement: 'Shift',\n                },\n                primaryYAxis: {\n                    maximum: 4,\n                    interval: 1,\n                    labelFormat: '{value}',\n                    lineStyle: { width: 0 },\n                    majorTickLines: { width: 0 },\n                    minorTickLines: { width: 0 },\n                },\n                chartArea: {\n                    border: {\n                        width: 0,\n                    },\n                },\n                series: [\n                    {\n                        dataSource: [\n                            { x: new Date(2002, 0, 1), y: 2.2 },\n                            { x: new Date(2003, 0, 1), y: 3.4 },\n                            { x: new Date(2004, 0, 1), y: 2.8 },\n                            { x: new Date(2005, 0, 1), y: 1.6 },\n                            { x: new Date(2006, 0, 1), y: 2.3 },\n                            { x: new Date(2007, 0, 1), y: 2.5 },\n                            { x: new Date(2008, 0, 1), y: 2.9 },\n                            { x: new Date(2009, 0, 1), y: 3.8 },\n                            { x: new Date(2010, 0, 1), y: 1.4 },\n                            { x: new Date(2011, 0, 1), y: 3.1 },\n                        ],\n                        name: 'Jan',\n                        xName: 'x',\n                        yName: 'y',\n                        type: 'SplineArea',\n                        border: { color: 'transparent' },\n                        fill: 'rgb(239, 183, 202)',\n                        opacity: 0.5,\n                    },\n                    {\n                        dataSource: [\n                            { x: new Date(2002, 0, 1), y: 2 },\n                            { x: new Date(2003, 0, 1), y: 1.7 },\n                            { x: new Date(2004, 0, 1), y: 1.8 },\n                            { x: new Date(2005, 0, 1), y: 2.1 },\n                            { x: new Date(2006, 0, 1), y: 2.3 },\n                            { x: new Date(2007, 0, 1), y: 1.7 },\n                            { x: new Date(2008, 0, 1), y: 1.5 },\n                            { x: new Date(2009, 0, 1), y: 2.8 },\n                            { x: new Date(2010, 0, 1), y: 1.5 },\n                            { x: new Date(2011, 0, 1), y: 2.3 },\n                        ],\n                        name: 'Feb',\n                        xName: 'x',\n                        yName: 'y',\n                        type: 'SplineArea',\n                        border: { color: 'transparent' },\n                        fill: 'rgb(0, 189, 174)',\n                        opacity: 0.5,\n                    },\n                ],\n                width: '99%',\n                height: '100%',\n            });\n            chart.appendTo('#' + '_spline' + countValue);\n            chart.refresh();\n        };\n    }\n}  ","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section\">\n    <div>\n        <div style=\"width: 100%; height: 30px\">\n            <button id=\"togglebtn\" #toggleBtn style=\"float: right; width: 75px\"\n                class=\"e-btn e-outline e-flat e-primary e-btn-icons\" ejs-button iconCss=\"edit\" [isToggle]=\"true\"\n                (click)=\"onClick()\">\n                Edit\n            </button>\n        </div>\n\n        <div style=\"padding: 5px; margin-top: 5px; text-align: end\">\n            <div class=\"add-widget-button e-control e-btn e-lib\" id=\"dialogBtn\" (click)=\"addWidget()\">\n                <b>Add New Widget</b>\n            </div>\n        </div>\n    </div>\n\n    <ejs-dashboardlayout id=\"defaultLayout\" #default_dashboard [cellAspectRatio]=\"cellAspectRatio\" columns=\"2\"\n        [allowResizing]=\"false\" [cellSpacing]=\"cellSpacing\" [allowDragging]=\"false\"\n        (resizeStop)=\"onPanelResizeStop($event)\">\n        <e-panels>\n            <e-panel [sizeX]=\"1\" [sizeY]=\"1\" [row]=\"0\" [col]=\"0\">\n                <ng-template #header>\n                    <div><b>Bar Chart</b></div>\n                </ng-template>\n                <ng-template #content>\n                    <div id=\"barchart\" style=\"height:100%; width:100%\">\n                        <ejs-chart style=\"display:block;\" id=\"colChart\" #colchart [chartArea]=\"chartArea\" width=\"100%\"\n                            height=\"100%\" [primaryXAxis]=\"primaryXAxis\" [primaryYAxis]=\"primaryYAxis\"\n                            (load)=\"load($event)\">\n                            <e-series-collection>\n                                <e-series [dataSource]=\"data\" type=\"Column\" xName=\"x\" yName=\"y\" name=\"Jan\" width=\"2\"\n                                    [marker]=\"marker\" fill=\"#00bdae\">\n                                </e-series>\n                                <e-series [dataSource]=\"data1\" type=\"Column\" xName=\"x\" yName=\"y\" name=\"Feb\" width=\"2\"\n                                    [marker]=\"marker\" fill=\"#e36593\">\n                                </e-series>\n                                <e-series [dataSource]=\"data2\" type=\"Column\" xName=\"x\" yName=\"y\" name=\"Mar\" width=\"2\"\n                                    [marker]=\"marker\" fill=\"#357cd2\">\n                                </e-series>\n                            </e-series-collection>\n                        </ejs-chart>\n                    </div>\n                </ng-template>\n            </e-panel>\n            <e-panel [sizeX]=\"1\" [sizeY]=\"1\" [row]=\"0\" [col]=\"1\">\n                <ng-template #header>\n                    <div><b>Pie Chart</b></div>\n                </ng-template>\n                <ng-template #content>\n                    <div id=\"pie\" style=\"height:100%; width:100%\">\n                        <ejs-accumulationchart id=\"pie\" (load)=\"piechartLoad($event)\" #pie width=\"100%\" height=\"100%\"\n                            [legendSettings]=\"legendSettings\" [tooltip]=\"tooltip\"\n                            (animationComplete)=\"animationComplete($event)\" (textRender)=\"textRender($event)\"\n                            [enableSmartLabels]=\"enablesmartlabel\" selectionMode=\"Point\">\n                            <e-accumulation-series-collection>\n                                <e-accumulation-series name=\"Earnings\" [dataSource]=\"pieData\" xName=\"x\" yName=\"y\"\n                                    [startAngle]=\"startAngle\" [endAngle]=\"endAngle\" innerRadius=\"40%\" radius=\"100%\"\n                                    [dataLabel]=\"dataLabel\" [palettes]=\"palettes\">\n                                </e-accumulation-series>\n                            </e-accumulation-series-collection>\n                        </ejs-accumulationchart>\n                    </div>\n                </ng-template>\n            </e-panel>\n            <e-panel [sizeX]=\"2\" [sizeY]=\"1\" [row]=\"1\" [col]=\"0\">\n                <ng-template #header>\n                    <div><b>Spline Chart</b></div>\n                </ng-template>\n                <ng-template #content>\n                    <div id=\"pie\" style=\"height:100%; width:100%\">\n                        <ejs-chart style=\"height:100%; width:100%; text-align: center\" #splineChart id=\"visitorsChart\"\n                            style=\"display:block;\" [chartArea]=\"chartArea\" [width]=\"widthValue\" [height]=\"heightValue\"\n                            [primaryXAxis]=\"lineprimaryXAxis\" [primaryYAxis]=\"lineprimaryYAxis\"\n                            [legendSettings]=\"linelegendSettings\" (load)=\"load($event)\">\n                            <e-series-collection>\n                                <e-series [dataSource]=\"splineData1\" type=\"SplineArea\" xName=\"x\" yName=\"y\" name=\"Jan\"\n                                    [border]=\"lineborder\" fill=\"rgb(239, 183, 202)\" opacity=\"0.5\">\n                                </e-series>\n                                <e-series [dataSource]=\"splineData2\" type=\"SplineArea\" xName=\"x\" yName=\"y\" name=\"Feb\"\n                                    [border]=\"lineborder\" fill=\"rgb(0, 189, 174)\" opacity=\"0.5\">\n                                </e-series>\n                            </e-series-collection>\n                        </ejs-chart>\n                    </div>\n                </ng-template>\n            </e-panel>\n        </e-panels>\n    </ejs-dashboardlayout>\n</div>\n\n<!-- Dialog box to add dynamic components as a panel content -->\n<ejs-dialog #template id=\"modalDialog\" [isModal]=\"isModal\" [width]=\"width\" [header]=\"dialogHeader\"\n    [animationSettings]=\"animationSettings\" [visible]=\"isVisible\" [showCloseIcon]=\"showCloseIcon\">\n    <ng-template #content>\n        <div id=\"dialogcontent\">\n            <div>\n                <div id=\"bartemplate\">\n                    <p class=\"dialog-text\">Barchart (1x1)</p>\n                </div>\n                <div id=\"pietemplate\">\n                    <p class=\"dialog-text\">Piechart (1x1)</p>\n                </div>\n                <div id=\"splinetemplate\">\n                    <p class=\"dialog-text\">Splinechart (2x1)</p>\n                </div>\n            </div>\n        </div>\n    </ng-template>\n</ejs-dialog>\n\n\n","app.component.css":"#dialogBtn {\n    display: none;\n}\n\n.e-chart {\n    height: inherit !important;\n    width: inherit !important;\n}\n\n.templateContent {\n    height: calc(100% - 35px);\n    width: 100%;\n}\n\n.full-size {\n    height: 100%;\n    width: 100%;\n}\n\n#spline-chartcontainer_Series_0_Point_2_Symbol {\n    -webkit-animation: opac 1s ease-out infinite;\n    animation: opac 1s ease-out infinite;\n}\n\n#spline-chartcontainer_Series_2_Point_0_Symbol {\n    -webkit-animation: opac 1s ease-out infinite;\n    animation: opac 1s ease-in-out infinite;\n}\n\n@keyframes opac {\n    0% {\n        stroke-opacity: 1;\n        stroke-width: 0px;\n    }\n\n    100% {\n        stroke-opacity: 0;\n        stroke-width: 10px;\n    }\n}\n\n.e-btn,\n.e-css.e-btn {\n    display: block;\n}\n\n.dialog-text {\n    height: 35px;\n    border: 1px solid #80808029;\n    vertical-align: middle;\n    line-height: 35px;\n    border-radius: 4px;\n    padding-left: 12px;\n    margin-bottom: 5%;\n    cursor: pointer;\n}\n\n.e-dlg-content #dialogcontent {\n    display: block;\n}\n\n#dialogcontent {\n    display: none;\n}\n\n@media (max-width: 650px) {\n    #togglebtn {\n        width: 90px !important;\n    }\n}\n\n.add-widget-button {\n    padding: 10px;\n    text-align: center;\n    margin-bottom: 10px;\n    cursor: pointer;\n    font-size: 15px;\n}\n\n.e-dashboardlayout.e-control .e-panel:hover span {\n    display: block;\n}\n\n.e-dashboardlayout.e-control .e-panel .e-panel-container .e-panel-header {\n    padding: 10px;\n    border-bottom: 2px solid #e6e9ed !important;\n    height: 35px;\n    padding: 0 15px 0 15px;\n    line-height: 35px;\n}\n\n.material .sb-demo-section .container-fluid,\n.fabric .sb-demo-section .container-fluid,\n.bootstrap4 .sb-demo-section .container-fluid,\n.bootstrap .sb-demo-section .container-fluid {\n    background: #e5e5e5;\n}\n\n.tailwind .sb-demo-section .container-fluid {\n    background: #f9fafb;\n}\n\n.e-panel-content {\n    height: calc(100% - 37px) !important;\n    overflow: hidden;\n    width: 100%;\n}\n\n.e-dashboardlayout.e-control .e-panel,\n.e-dashboardlayout.e-control .e-panel:hover,\n.e-dashboardlayout.e-control .e-panel:active {\n    border: 1px solid #bbb;\n}\n\n.e-dialog .e-dlg-header-content {\n    border-bottom: none;\n    padding: 18px 18px 18px 20px;\n}\n\n.edit::before {\n    content: '\\e501';\n    font-family: 'e-sb-icons';\n    /* color: #e3165b; */\n    margin-left: -7px;\n    vertical-align: middle;\n}\n\n.save::before {\n    content: '\\e500';\n    font-family: 'e-sb-icons';\n    /* color: #e3165b; */\n    margin-left: -7px;\n    vertical-align: middle;\n}\n\n/* custom code start*/\n@font-face {\n    font-family: 'e-sb-icons';\n    src: url(data:application/x-font-ttf;charset=utf-8;base64,AAEAAAAKAIAAAwAgT1MvMjttR/MAAAEoAAAAVmNtYXDlEOVaAAABjAAAADhnbHlmAM1kuQAAAcwAAAD8aGVhZBRipc8AAADQAAAANmhoZWEIUQQEAAAArAAAACRobXR4DAAAAAAAAYAAAAAMbG9jYQA6AH4AAAHEAAAACG1heHABEQA4AAABCAAAACBuYW1lWD3y/QAAAsgAAAIlcG9zdNvk7cwAAATwAAAANQABAAAEAAAAAFwEAAAAAAAD9AABAAAAAAAAAAAAAAAAAAAAAwABAAAAAQAApr5cCV8PPPUACwQAAAAAANioMG8AAAAA2KgwbwAAAAAD9AP0AAAACAACAAAAAAAAAAEAAAADACwABAAAAAAAAgAAAAoACgAAAP8AAAAAAAAAAQQAAZAABQAAAokCzAAAAI8CiQLMAAAB6wAyAQgAAAIABQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGZFZABA5QDlAQQAAAAAXAQAAAAAAAABAAAAAAAABAAAAAQAAAAEAAAAAAAAAgAAAAMAAAAUAAMAAQAAABQABAAkAAAABAAEAAEAAOUB//8AAOUA//8AAAABAAQAAAABAAIAAAAAADoAfgAEAAAAAAP0A/MAAwALABkAIwAAAREhEQEVMzUzFSE1IxEhETMVMxEjESERIxEjERUhESM1IzUhAx79xAEeR0j+m0gB9I9HR/02SEcD6EdI/KcBcf7iAR4CPI+P19f+4gEeSPzuAWb+mgNa/KZHA1lIRwAAAAMAAAAAA/QD9AADAAgAKwAACQEnCQEDJQEnNwcXPwc1Lw8PBgLH/ko2Abb9uT4BGQJC2m0/2z8HBgUFAwMCAQIEBQcICQoLDA0NDw8PEA0NDQwLCwsCkf5KNgG2/l7+5z4CQ9puP9s/CgsLCwwNDQ0QDw8PDQ0MCwoJCAcFBAIBAQEDAwUFBgAAABIA3gABAAAAAAAAAAEAAAABAAAAAAABAAcAAQABAAAAAAACAAcACAABAAAAAAADAAcADwABAAAAAAAEAAcAFgABAAAAAAAFAAsAHQABAAAAAAAGAAcAKAABAAAAAAAKACwALwABAAAAAAALABIAWwADAAEECQAAAAIAbQADAAEECQABAA4AbwADAAEECQACAA4AfQADAAEECQADAA4AiwADAAEECQAEAA4AmQADAAEECQAFABYApwADAAEECQAGAA4AvQADAAEECQAKAFgAywADAAEECQALACQBIyBlai1pY29uUmVndWxhcmVqLWljb25lai1pY29uVmVyc2lvbiAxLjBlai1pY29uRm9udCBnZW5lcmF0ZWQgdXNpbmcgU3luY2Z1c2lvbiBNZXRybyBTdHVkaW93d3cuc3luY2Z1c2lvbi5jb20AIABlAGoALQBpAGMAbwBuAFIAZQBnAHUAbABhAHIAZQBqAC0AaQBjAG8AbgBlAGoALQBpAGMAbwBuAFYAZQByAHMAaQBvAG4AIAAxAC4AMABlAGoALQBpAGMAbwBuAEYAbwBuAHQAIABnAGUAbgBlAHIAYQB0AGUAZAAgAHUAcwBpAG4AZwAgAFMAeQBuAGMAZgB1AHMAaQBvAG4AIABNAGUAdAByAG8AIABTAHQAdQBkAGkAbwB3AHcAdwAuAHMAeQBuAGMAZgB1AHMAaQBvAG4ALgBjAG8AbQAAAAACAAAAAAAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMBAgEDAQQABHNhdmUEZWRpdAAAAAAA) format('truetype');\n    font-weight: normal;\n    font-style: normal;\n}\n\n[class^='sf-icon-'],\n[class*=' sf-icon-'] {\n    font-family: 'e-sb-icons' !important;\n    speak: none;\n    font-size: 55px;\n    font-style: normal;\n    font-weight: normal;\n    font-variant: normal;\n    text-transform: none;\n    line-height: 1;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}\n\n.fabric #togglebtn,\n.fabric-dark #togglebtn,\n.highcontrast #togglebtn {\n    padding: 0 13px;\n}\n\n.bootstrap5-dark .dialog-text,\n.highcontrast .dialog-text,\n.tailwind-dark .dialog-text,\n.fabric-dark .dialog-text,\n.bootstrap-dark .dialog-text {\n    border: 1px solid #ffffff;\n}\n\n.e-bigger.fluent #togglebtn.e-btn .e-btn-icon.e-icon-left,\n.e-bigger.material3-dark #togglebtn.e-btn .e-btn-icon.e-icon-left,\n.e-bigger.material3 #togglebtn.e-btn .e-btn-icon.e-icon-left,\n.e-bigger.material3-dark #togglebtn.e-btn .e-btn-icon.e-icon-left {\n    margin-left: -0.5em;\n    width: 1em;\n}\n\n.e-bigger.bootstrap5 #togglebtn.e-btn .e-btn-icon.e-icon-left,\n.e-bigger.bootstrap5-dark #togglebtn.e-btn .e-btn-icon.e-icon-left,\n.e-bigger.material #togglebtn.e-btn .e-btn-icon.e-icon-left,\n.e-bigger.material-dark #togglebtn.e-btn .e-btn-icon.e-icon-left,\n.material3 #togglebtn.e-btn .e-btn-icon.e-icon-left,\n.material3-dark #togglebtn.e-btn .e-btn-icon.e-icon-left,\n.e-bigger.fabric #togglebtn.e-btn .e-btn-icon.e-icon-left,\n.e-bigger.fabric-dark #togglebtn.e-btn .e-btn-icon.e-icon-left,\n.e-bigger.bootstrap4 #togglebtn.e-btn .e-btn-icon.e-icon-left,\n.e-bigger.bootstrap #togglebtn.e-btn .e-btn-icon.e-icon-left,\n.e-bigger.bootstrap-dark #togglebtn.e-btn .e-btn-icon.e-icon-left,\n.e-bigger.highcontrast #togglebtn.e-btn .e-btn-icon.e-icon-left {\n    margin-left: 0em;\n    width: 1em;\n}\n\n.tailwind #togglebtn.e-btn .e-btn-icon.e-icon-left,\n.e-bigger.tailwind #togglebtn.e-btn .e-btn-icon.e-icon-left,\n.e-bigger.tailwind-dark #togglebtn.e-btn .e-btn-icon.e-icon-left {\n    margin-left: -0.3em;\n    width: 1em;\n}\n\n.e-bigger.bootstrap4 #togglebtn.e-btn .e-btn-icon.e-icon-left {\n    margin-left: -0.2em;\n    width: 1.3em;\n}\n\n#pie,\n#colChart,\n#pieChart {\n    width: 100%;\n    height: 100%;\n}\n\n@media (max-width: 650px) {\n\n    #pieChart,\n    #colChart,\n    #pie {\n        width: 100% !important;\n        height: 100% !important;\n    }\n}\n\n.piecontent .content {\n    display: inline-block;\n    padding: 4px;\n    width: 31%;\n    font-size: 13px;\n    text-align: center;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-layouts\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-layouts\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-angular-popups\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-maps\":\"*\",\"@syncfusion/ej2-angular-maps\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}