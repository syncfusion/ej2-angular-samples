{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, Inject, ViewChild, HostListener, ElementRef } from '@angular/core';\nimport { Browser } from '@syncfusion/ej2-base';\nimport { ButtonComponent, RadioButtonComponent, ChangeEventArgs as CheckBoxChange, RadioButtonModule, ButtonModule } from '@syncfusion/ej2-angular-buttons';\nimport { DropDownListComponent, ChangeEventArgs, FieldSettingsModel, DropDownListModule } from '@syncfusion/ej2-angular-dropdowns';\nimport { ToastComponent, ToastCloseArgs, ToastPositionModel, ToastModule } from '@syncfusion/ej2-angular-notifications';\n\n\n\n/**\n *  Sample for Positioning options in Toast\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ ToastModule, RadioButtonModule, DropDownListModule, ButtonModule, ]\n})\n\nexport class AppComponent {\n\n    // Get the object for components used in sample\n    @ViewChild('toastpos')\n    private toastObj: ToastComponent;\n\n    @ViewChild('position')\n    private dropDownObj: DropDownListComponent;\n\n    @ViewChild('dropdownRadio')\n    private dropRadioObj: RadioButtonComponent;\n\n    @ViewChild('customRadio')\n    private customRadioObj: RadioButtonComponent;\n\n    @ViewChild('radio1')\n    private radio1: RadioButtonComponent;\n\n    @ViewChild('radio2')\n    private radio2: RadioButtonComponent;\n\n    @ViewChild('showToast')\n    private showbtn: ButtonComponent;\n\n    @ViewChild('hideTosat')\n    private hidebtn: ButtonComponent;\n\n    @ViewChild('customChoose')\n    private customChoose: ElementRef;\n\n    public toastPosition: ToastPositionModel = { X: 'Right', Y: 'Bottom' };\n    public target: HTMLElement = document.body;\n    private initialWid: string = '';\n    public true: boolean = true;\n    private customFlag: boolean = false;\n    public dropFields: FieldSettingsModel = { text: 'Text', value: 'Id' };\n    public value: string = 'bottomright';\n\n    // Pre-defined positioning values for drop down list\n    public dropData: { [key: string]: Object }[] = [\n        { Id: 'topleft', Text: 'Top Left' },\n        { Id: 'topright', Text: 'Top Right' },\n        { Id: 'topcenter', Text: 'Top Center' },\n        { Id: 'topfullwidth', Text: 'Top Full Width' },\n        { Id: 'bottomleft', Text: 'Bottom Left' },\n        { Id: 'bottomright', Text: 'Bottom Right' },\n        { Id: 'bottomcenter', Text: 'Bottom Center' },\n        { Id: 'bottomfullwidth', Text: 'Bottom Full Width' },\n    ];\n\n    constructor() {\n        \n    }\n\n    public checkboxChange(e: ChangeEventArgs): void {\n        if (this.radio1.checked) {\n            this.toastObj.hide('All');\n            this.toastObj.target = '#toast_pos_target';\n            this.toastShow(1000);\n        }\n    }\n\n    public toastShow(timeOutDelay: number): void {\n        setTimeout(function () {\n            this.toastObj.show();\n        }.bind(this), timeOutDelay);\n    }\n\n    public checkboxChange1(e: CheckBoxChange): void {\n        if (this.radio2.checked) {\n            this.toastObj.hide('All');\n            this.toastObj.target = document.body;\n            this.toastShow(1000);\n        }\n    }\n\n    public checkboxChange2(e: CheckBoxChange): void {\n        if (this.dropRadioObj.checked) {\n            this.toastObj.hide('All');\n            this.dropDownObj.element.parentElement.style.display = 'table-cell';\n            this.customChoose.nativeElement.style.display = 'none';\n            this.setToastPosValue(this.dropDownObj.value.toString()); this.customFlag = false; this.toastShow(1000);\n        }\n    }\n\n    public checkboxChange3(e: CheckBoxChange): void {\n        if (this.customRadioObj.checked) {\n            this.toastObj.hide('All');\n            this.dropDownObj.element.parentElement.style.display = 'none';\n            this.customChoose.nativeElement.style.display = 'table-cell';\n            this.setcustomPosValue(); this.customFlag = true; this.toastShow(1000);\n        }\n    }\n\n    public valueChange(e: ChangeEventArgs): void {\n        this.toastObj.hide('All'); this.setToastPosValue(e.value.toString()); this.toastShow(1000);\n    }\n\n    // To set custom position values\n    public setcustomPosValue(): void {\n        this.toastObj.width = this.initialWid;\n        this.toastObj.position.X = parseInt((document.getElementById('xPos') as HTMLInputElement).value, 10);\n        this.toastObj.position.Y = parseInt((document.getElementById('yPos') as HTMLInputElement).value, 10);\n    }\n\n    public showBtnClick(): void {\n        if (this.customFlag) {\n            this.setcustomPosValue();\n        }\n        this.toastObj.show();\n    }\n\n    // Pre defined postions available based on target\n    public setToastPosValue(value: string): void {\n        this.toastObj.width = this.initialWid;\n        switch (value) {\n            case 'topleft':\n                this.toastObj.position.X = 'Left'; this.toastObj.position.Y = 'Top'; break;\n            case 'topright':\n                this.toastObj.position.X = 'Right'; this.toastObj.position.Y = 'Top'; break;\n            case 'topcenter':\n                this.toastObj.position.X = 'Center'; this.toastObj.position.Y = 'Top'; break;\n            case 'topfullwidth':\n                this.toastObj.width = '100%'; this.toastObj.position.X = 'Center'; this.toastObj.position.Y = 'Top'; break;\n            case 'bottomleft':\n                this.toastObj.position.X = 'Left'; this.toastObj.position.Y = 'Bottom'; break;\n            case 'bottomright':\n                this.toastObj.position.X = 'Right'; this.toastObj.position.Y = 'Bottom'; break;\n            case 'bottomcenter':\n                this.toastObj.position.X = 'Center'; this.toastObj.position.Y = 'Bottom'; break;\n            case 'bottomfullwidth':\n                this.toastObj.width = '100%'; this.toastObj.position.X = 'Center'; this.toastObj.position.Y = 'Bottom'; break;\n        }\n    }\n\n    public hideBtnClick(): void {\n        this.toastObj.hide('All');\n    }\n\n    public created(): void {\n        setTimeout(function () {\n            this.toastShow(200);\n            this.initialWid = this.toastObj.width.toString();\n        }.bind(this), 200);\n    }\n\n    @HostListener('document:click', ['$event'])\n    documentClick = (e: MouseEvent): void => {\n        if (e.target !== this.showbtn.element && this.toastObj.target === document.body) {\n            this.toastObj.hide('All');\n        }\n    }\n\n    public onClose(e: ToastCloseArgs): void {\n        if (e.toastContainer.childElementCount === 0) {\n            this.hidebtn.element.style.display = 'none';\n        }\n    }\n\n    public onBeforeOpen(): void {\n        this.hidebtn.element.style.display = 'inline-block';\n    }\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"col-lg-12 control-section\" id=\"toast_pos_target\">\n    <div class=\"sample_container toast-pos-section\">\n        <ejs-toast #toastpos id='toastpos' [position]=\"toastPosition\" [target]=\"target\" (created)=\"created()\"\n            (close)=\"onClose($event)\" (beforeOpen)=\"onBeforeOpen()\">\n            <ng-template #content>\n                <div>You have a friend request yet to accept.</div>\n            </ng-template>\n            <ng-template #title>\n                <div>Matt sent you a friend request</div>\n            </ng-template>\n        </ejs-toast>\n        <div id=\"toast_pos_property\">\n            <table style=\"width:100%\">\n                <tbody>\n                    <tr>\n                        <td>\n                            <div style=\"padding:25px 0 0 0\">\n                                <ejs-radiobutton #dropdownRadio id='dropdownRadio' checked='true' label='Position'\n                                    name='toastPos' value=\"Position\" (change)=\"checkboxChange2($event)\">\n                                </ejs-radiobutton>\n                            </div>\n                        </td>\n                        <td>\n                            <div style=\"padding:25px 0 0 0\">\n                                <ejs-radiobutton #customRadio id='customRadio' label='Custom' name='toastPos'\n                                    value='Custom' (change)=\"checkboxChange3($event)\"></ejs-radiobutton>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            <div id=\"dropdown\" style=\"padding-top:25px\">\n                <ejs-dropdownlist #position id=\"position\" [dataSource]=\"dropData\" [fields]=\"dropFields\"\n                    placeholder=\"Select a position\" (change)=\"valueChange($event)\" [value]=\"value\" index=\"5\"\n                    popupHeight='200px'></ejs-dropdownlist>\n            </div>\n            <table style=\"width: 100%\">\n                <tbody>\n                    <tr>\n                        <td id=\"customChoose\" #customChoose style=\"display: none\">\n                            <form id=\"formId\" class=\"form-horizontal\">\n                                <div class=\"e-row\">\n                                    <div class=\"e-float-input\">\n                                        <input class=\"e-input\" id=\"xPos\" name=\"Digits\" value=\"50\" required />\n                                        <span class=\"e-float-line\"></span>\n                                        <label class=\"e-float-text\">X Position</label>\n                                    </div>\n                                </div>\n                                <div class=\"e-row\">\n                                    <div class=\"e-float-input\">\n                                        <input class=\"e-input\" id=\"yPos\" name=\"Digits\" value=\"50\" required />\n                                        <span class=\"e-float-line\"></span>\n                                        <label class=\"e-float-text\">Y Position</label>\n                                    </div>\n                                </div>\n                            </form>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <div style=\"padding:25px 0 0 0\">\n                                <ejs-radiobutton #radio1 id='radio1' label='Target' name='toast' value='Target'\n                                    (change)='checkboxChange($event)'></ejs-radiobutton>\n                            </div>\n                        </td>\n                        <td>\n                            <div style=\"padding:25px 0 0 0\">\n                                <ejs-radiobutton #radio2 id='radio2' checked='true' label='Global' name='toast'\n                                    value='Global' (change)=\"checkboxChange1($event)\"></ejs-radiobutton>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            <div id=\"toast_btn\" style=\"padding-top: 25px\">\n                <button ejs-button class=\"e-btn e-control\" id='show_Toast' #showToast style=\"margin-right:15px\"\n                    (click)=\"showBtnClick()\">Show Toasts</button>\n                <button  ejs-button class=\"e-btn e-control\" id='hideTosat' #hideTosat (click)=\"hideBtnClick()\">Hide All</button>\n            </div>\n        </div>\n    </div>\n</div>","app.component.css":"    /* custom code start*/\n   .toast-pos-section #toast_pos_property {\n       height: 500px;\n       border: none;\n       margin: auto;\n   }\n   /* custom code end*/\n   \n   #toast_pos_property td {\n       width: 50%;\n   }\n   \n   .e-toast-icon.e-laura.e-icons {\n       border-radius: 50%;\n       background-image: url(https://ej2.syncfusion.com/angular/demos/assets/toast/resource/laura.png');\n       background-repeat: no-repeat;\n       background-size: cover;\n       height: 50px !important;\n       width: 68px !important;\n       background-size: 50px 50px;\n       margin: 0;\n   }\n   \n   @media (min-width: 740px) {\n       #toast_pos_property {\n           width: 450px;\n       }\n   }\n\n   .bootstrap5 .e-toast-icon.e-laura.e-icons,\n   .bootstrap5-dark .e-toast-icon.e-laura.e-icons,\n   .bootstrap5.3 .e-toast-icon.e-laura.e-icons,\n   .bootstrap5.3-dark .e-toast-icon.e-laura.e-icons {\n       margin-top: 13px;\n       margin-right: 14px;\n   }\n\n   .bootstrap5 #toastpos.e-toast-container .e-toast .e-toast-icon,\n   .bootstrap5-dark #toastpos.e-toast-container .e-toast .e-toast-icon,\n   .bootstrap5.3 #toastpos.e-toast-container .e-toast .e-toast-icon,\n   .bootstrap5.3-dark #toastpos.e-toast-container .e-toast .e-toast-icon {\n       position: relative;\n   }\n\n   .bootstrap5 #toastpos.e-toast-container .e-toast .e-toast-message,\n   .bootstrap5-dark #toastpos.e-toast-container .e-toast .e-toast-message,\n   .bootstrap5.3 #toastpos.e-toast-container .e-toast .e-toast-message,\n   .bootstrap5.3-dark #toastpos.e-toast-container .e-toast .e-toast-message {\n       padding-left: 10px;\n   }\n\n   .bootstrap5 #toastpos.e-toast-container .e-toast.e-toast-header-icon .e-toast-message .e-toast-title:first-child,\n   .bootstrap5-dark #toastpos.e-toast-container .e-toast.e-toast-header-icon .e-toast-message .e-toast-title:first-child,\n   .bootstrap5.3 #toastpos.e-toast-container .e-toast.e-toast-header-icon .e-toast-message .e-toast-title:first-child,\n   .bootstrap5.3-dark #toastpos.e-toast-container .e-toast.e-toast-header-icon .e-toast-message .e-toast-title:first-child {\n       padding-left: 12px;\n   }","dependencies.json":"{\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-angular-notifications\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}