{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"/**\n * Rich Text Editor Image Sample\n */\nimport { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { ToolbarService, LinkService, ImageService, QuickToolbarService, RichTextEditorModule, PasteCleanupService, VideoService, AudioService, TableService} from '@syncfusion/ej2-angular-richtexteditor';\nimport { HtmlEditorService, NodeSelection, RichTextEditorComponent } from '@syncfusion/ej2-angular-richtexteditor';\nimport { DropDownListComponent, FieldSettingsModel, DropDownListModule } from '@syncfusion/ej2-angular-dropdowns';\nimport { ToolbarModule } from '@syncfusion/ej2-angular-navigations';\nimport { CheckBoxComponent, CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [ToolbarService, LinkService, ImageService, HtmlEditorService, QuickToolbarService, PasteCleanupService, VideoService, AudioService, TableService],\n    standalone: true,\n    imports: [ RichTextEditorModule, CheckBoxModule, DropDownListModule, ]\n})\nexport class AppComponent {\n\n    @ViewChild('imageRTE')\n    private rteObj: RichTextEditorComponent;\n    @ViewChild('readonly')\n    public readonlyObj: CheckBoxComponent;\n    @ViewChild('formatOption')\n    public formatObj: DropDownListComponent;\n\n\n    toolbarSettings: ToolbarModule = {\n        image: [\n            'Replace', 'Align', 'Caption', 'Remove', 'InsertLink', 'OpenImageLink', '-',\n            'EditImageLink', 'RemoveImageLink', 'Display', 'AltText', 'Dimension',\n            {\n                tooltipText: 'Rotate Left',\n                template: '<button class=\"e-tbar-btn e-btn\" id=\"roatateLeft\"><span class=\"e-btn-icon e-icons e-rotate-left\"></span>'\n            },\n            {\n                tooltipText: 'Rotate Right',\n                template: '<button class=\"e-tbar-btn e-btn\" id=\"roatateRight\"><span class=\"e-btn-icon e-icons e-rotate-right\"></span>'\n            }\n        ]\n    };\n  \n    public formatData: { [key: string]: Object }[] = [\n      { Id: 'Blob', Format: 'Blob' },\n      { Id: 'Base64', Format: 'Base64' },\n    ];\n    public fields: FieldSettingsModel = { text: 'Id', value: 'Format' };\n    public height: string = '200px';\n    public value: string = 'Blob';\n    \n    public onToolbarClick(e: any): void {\n        const nodeObj: NodeSelection = new NodeSelection();\n        const range: Range = nodeObj.getRange(this.rteObj.contentModule.getDocument());\n        const imgEle: HTMLElement = nodeObj.getNodeCollection(range)[0] as HTMLElement;\n        if (!isNullOrUndefined(e.item)) {\n          if (e.item.tooltipText === 'Rotate Right') {\n                const transform: number = (imgEle.style.transform === '') ? 0 :\n              parseInt(imgEle.style.transform.split('(')[1].split(')')[0], 10);\n            imgEle.style.transform = 'rotate(' + (transform + 90) + 'deg)';\n            this.rteObj.formatter.saveData();\n            this.rteObj.formatter.enableUndo(this.rteObj);\n          } else if (e.item.tooltipText === 'Rotate Left') {\n                const transform: number = (imgEle.style.transform === '') ? 0 :\n              Math.abs(parseInt(imgEle.style.transform.split('(')[1].split(')')[0], 10));\n            imgEle.style.transform = 'rotate(-' + (transform + 90) + 'deg)';\n            this.rteObj.formatter.saveData();\n            this.rteObj.formatter.enableUndo(this.rteObj);\n          }\n        }\n    }\n    public onChangeRead(): void {\n      this.rteObj.enableAutoUrl = this.readonlyObj.checked;\n    }\n    public formatChange(): void {\n      if (this.formatObj.value === 'Base64') {\n        this.rteObj.insertImageSettings.saveFormat = 'Base64';\n      } else {\n        this.rteObj.insertImageSettings.saveFormat = 'Blob';\n      }\n    }\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n\n<div class=\"col-lg-8 control-section sb-property-border\">\n    <div class=\"sample-container\">\n        <div class=\"default-section\">\n            <ejs-richtexteditor #imageRTE id='imageRTE' [(quickToolbarSettings)]='toolbarSettings' (toolbarClick)='onToolbarClick($event)'>\n                <ng-template #valueTemplate>\n                    <p>Rich Text Editor allows inserting images from online sources as well as the local computers where you want to insert the image in your content.</p>\n                    <p><b>Get started Quick Toolbar to click on the image</b></p>\n                    <p>It is possible to add custom style on the selected image inside the Rich Text Editor through the quick toolbar.</p>\n                    <img id=\"rteImageID\" style=\"width:300px; height:300px;transform: rotate(0deg);\" alt=\"Sky\" src=\"https://cdn.syncfusion.com/ej2/richtexteditor-resources/RTE-Portrait.png\">\n                </ng-template>\n            </ejs-richtexteditor>\n        </div>\n    </div>\n</div>\n<div class=\"col-lg-4 property-section\">\n    <div id=\"property\" title=\"Properties\">\n        <div class=\"property-panel-header\">Properties</div>\n        <div class=\"property-panel-content\">\n            <table id=\"property\" title=\"Properties\">\n                <tbody>\n                    <tr>\n                        <td>\n                            <div>Enable AutoUrl</div>\n                        </td>\n                        <td>\n                            <div>\n                                <ejs-checkbox #readonly [checked]=\"false\" (change)=\"onChangeRead()\" ></ejs-checkbox>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <div>Save Format</div>\n                        </td>\n                        <td>\n                            <div>\n\n                                <ejs-dropdownlist id='formatOption' #formatOption [dataSource]='formatData' (change)='formatChange()' [value]='value' [fields]='fields' [popupHeight]='height'></ejs-dropdownlist>\n\n\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>","app.component.css":".e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before {\n    content: \"\\e341\";\n}\n\n.e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before {\n    content: \"\\e354\";\n}\n\n.bootstrap4 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before {\n    content: \"\\e752\";\n}\n\n.bootstrap4 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before {\n    content: \"\\e778\";\n}\n\n.bootstrap5 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,\n.bootstrap5\\.3 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,\n.bootstrap5\\.3-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,\n.bootstrap5-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,\n.fluent .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,\n.fluent-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,\n.fluent2 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,\n.fluent2-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,\n.material3 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,\n.material3-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,\n.tailwind .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,\n.tailwind-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,\n.tailwind3 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,\n.tailwind3-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,\n.fluent2-highcontrast .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before {\n    content: \"\\e713\";\n}\n\n.bootstrap5 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,\n.bootstrap5\\.3 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,\n.bootstrap5\\.3-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,\n.bootstrap5-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,\n.fluent .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,\n.fluent-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,\n.fluent2 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,\n.fluent2-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,\n.material3 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,\n.material3-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,\n.tailwind .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,\n.tailwind-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,\n.tailwind3 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,\n.tailwind3-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,\n.fluent2-highcontrast .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before {\n    content: \"\\e755\";\n}\n\n.property-panel-content td {\n    width: 50%;\n}\n\n.property-panel-content td div {\n    padding: 10px;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-richtexteditor\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-richtexteditor\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-layouts\":\"*\",\"@syncfusion/ej2-angular-layouts\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-angular-popups\":\"*\",\"@syncfusion/ej2-image-editor\":\"*\",\"@syncfusion/ej2-angular-image-editor\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}