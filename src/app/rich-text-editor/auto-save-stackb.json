{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"/**\n * Rich Text Editor Auto save Sample\n */\nimport { Component, ViewEncapsulation, ViewChild, ElementRef } from '@angular/core';\nimport { ToolbarService, RichTextEditorComponent, LinkService, ImageService, HtmlEditorService, RichTextEditorModule, QuickToolbarService, PasteCleanupService, VideoService, AudioService, TableService } from '@syncfusion/ej2-angular-richtexteditor';\nimport { ToolbarModule } from '@syncfusion/ej2-angular-navigations';\n\n\nimport { SwitchModule } from '@syncfusion/ej2-angular-buttons';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [ToolbarService, LinkService, ImageService, HtmlEditorService, QuickToolbarService, PasteCleanupService, VideoService, AudioService, TableService],\n    standalone: true,\n    imports: [RichTextEditorModule, SwitchModule,  ]\n})\n\nexport class AppComponent {\n\n    @ViewChild('autosaveRTE')\n    public rteObj: RichTextEditorComponent;\n\n    public tools: ToolbarModule = {\n      items: ['Bold', 'Italic', 'Underline', '|', 'Formats', 'Alignments', 'Blockquote',\n            'OrderedList', 'UnorderedList', '|', 'CreateLink', 'Image', '|', 'SourceCode', 'Undo', 'Redo']\n    };\npublic updateStatus() {\n    document.getElementById('saving').style.display = 'block';\n    document.getElementById('saved').style.display = 'none';\n    setTimeout(() => {\n      if (!isNullOrUndefined(document.getElementById('saving')) && !isNullOrUndefined(document.getElementById('saved'))) {\n        document.getElementById('saving').style.display = 'none';\n        document.getElementById('saved').style.display = 'block';\n      }\n    }, 500);\n  }\n\n  public onChange(e: any) {\n    var defaultRTE = this.rteObj;\n    if (e.checked) {\n      defaultRTE.saveInterval = 5000;\n    } else {\n      defaultRTE.saveInterval = 0;\n      setTimeout(() => {\n        document.getElementById('saving').style.display = 'none';\n        document.getElementById('saved').style.display = 'none';\n      }, 500);\n    }\n  }\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"col-lg-8 control-section sb-property-border\">\n    <div class=\"control-wrapper\">\n        <div class=\"sample-container\">\n            <div class=\"default-section\">\n                <ejs-richtexteditor id='autosaveRTE' #autosaveRTE [toolbarSettings]='tools' [saveInterval]=\"5000\" placeholder='Start to type a content to save' [enablePersistence]=\"true\" (change)='updateStatus()'>\n                </ejs-richtexteditor>\n                <div id='statusEle' class='current-status'>\n                    <div id='saving' style=\"display: none\">\n                        <div class=\"e-icons e-icon-refresh\"> </div>\n                        <p class='status-text'> Saving changes</p>\n                    </div>\n                    <div id='saved' style=\"display: none\">\n                        <span class=\"e-icons e-icon-tick\"> </span>\n                        <p class='status-text'>Changes saved</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"col-lg-4 property-section\">\n    <div class=\"property-panel-section\">\n        <div class=\"property-panel-header\">Properties</div>\n        <div class=\"property-panel-content\">\n            <label for=\"checked\" style=\"padding: 10px 70px 10px 0\">Auto Save </label>\n            <ejs-switch id=\"checked\" #checked (change)='onChange($event)' [checked]=\"true\" ></ejs-switch>\n        </div>\n    </div>\n</div>\n<link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">","app.component.css":".current-status {\n    float: right;\n    padding: 11px;\n    margin-right: 22px;\n    font-size: 12px;\n    display: inline-block;\n}\n\n.e-icons.e-icon-refresh::before {\n    content: \"\\e606\";\n}\n\n.btn-text {\n    display: inline;\n    padding: 2px 35px 2px 64px;\n}\n\n.e-icons.e-icon-tick::before {\n    content: \"\\e614\";\n}\n\n.status-text {\n    padding: 4px;\n}\n\n.e-icon-refresh {\n    width: 10px;\n    display: inline-block;\n    animation: spin 2s linear infinite;\n}\n\n@keyframes spin {\n    0% {\n        transform: rotate(0deg);\n    }\n    100% {\n        transform: rotate(360deg);\n    }\n}\n\n.bootstrap4 .e-icons.e-icon-refresh::before {\n    content: \"\\e710\";\n}\n\n.bootstrap4 .e-icons.e-icon-tick::before {\n    content: \"\\e718\";\n}\n\n.tailwind .e-icons.e-icon-refresh::before,\n.tailwind-dark .e-icons.e-icon-refresh::before,\n.tailwind3 .e-icons.e-icon-refresh::before,\n.tailwind3-dark .e-icons.e-icon-refresh::before {\n    content: \"\\e711\";\n}\n\n.tailwind .e-icons.e-icon-tick::before,\n.tailwind-dark .e-icons.e-icon-tick::before,\n.tailwind3 .e-icons.e-icon-tick::before,\n.tailwind3-dark .e-icons.e-icon-tick::before {\n    content: \"\\e75d\";\n}\n\n.bootstrap5 .e-icons.e-icon-refresh::before,\n.bootstrap5\\.3 .e-icons.e-icon-refresh::before,\n.bootstrap5\\.3-dark .e-icons.e-icon-refresh::before,\n.bootstrap5-dark .e-icons.e-icon-refresh::before,\n.fluent .e-icons.e-icon-refresh::before,\n.fluent-dark .e-icons.e-icon-refresh::before,\n.fluent2 .e-icons.e-icon-refresh::before,\n.fluent2-dark .e-icons.e-icon-refresh::before,\n.material3 .e-icons.e-icon-refresh::before,\n.material3-dark .e-icons.e-icon-refresh::before {\n    content: \"\\e706\";\n}\n\n.bootstrap5 .e-icons.e-icon-tick::before,\n.bootstrap5\\.3 .e-icons.e-icon-tick::before,\n.bootstrap5\\.3-dark .e-icons.e-icon-tick::before,\n.bootstrap5-dark .e-icons.e-icon-tick::before,\n.fluent .e-icons.e-icon-tick::before,\n.fluent-dark .e-icons.e-icon-tick::before,\n.fluent2 .e-icons.e-icon-tick::before,\n.fluent2-dark .e-icons.e-icon-tick::before,\n.material3 .e-icons.e-icon-tick::before,\n.material3-dark .e-icons.e-icon-tick::before {\n    content: \"\\e774\";\n}\n\n.status-text {\n    font-size: 14px;\n    display: inline-block;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-richtexteditor\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-richtexteditor\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-layouts\":\"*\",\"@syncfusion/ej2-angular-layouts\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-angular-popups\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-image-editor\":\"*\",\"@syncfusion/ej2-angular-image-editor\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}