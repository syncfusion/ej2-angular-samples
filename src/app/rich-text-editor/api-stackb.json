{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"/**\n * Rich Text Editor API functionality Sample\n */\nimport { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { CheckBoxComponent, CheckBoxModule, ButtonModule } from '@syncfusion/ej2-angular-buttons';\nimport { NumericTextBoxComponent, NumericTextBoxModule } from '@syncfusion/ej2-angular-inputs';\nimport { RichTextEditorComponent, ToolbarService, LinkService, ImageService, RichTextEditorModule, PasteCleanupService, VideoService, AudioService, TableService } from '@syncfusion/ej2-angular-richtexteditor';\nimport { HtmlEditorService, CountService, QuickToolbarService } from '@syncfusion/ej2-angular-richtexteditor';\nimport { DropDownListComponent, FieldSettingsModel } from '@syncfusion/ej2-angular-dropdowns';\n\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [ToolbarService, LinkService, ImageService, HtmlEditorService, CountService, QuickToolbarService, PasteCleanupService, VideoService, AudioService, TableService],\n    standalone: true,\n    imports: [ RichTextEditorModule, NumericTextBoxModule, CheckBoxModule, ButtonModule, ]\n})\nexport class AppComponent {\n\n    @ViewChild('apiRTE')\n    public rteObj: RichTextEditorComponent;\n\n    @ViewChild('readonly')\n    public readonlyObj: CheckBoxComponent;\n\n    @ViewChild('enable')\n    public enableObj: CheckBoxComponent;\n\n    @ViewChild('enablehtml')\n    public enablehtmlObj: CheckBoxComponent;\n\n    @ViewChild('numeric')\n    public numericObj: NumericTextBoxComponent;\n\n    public maxLength: number = 1000;\n    public numericValue: number = 1000;\n    public numericmin: number = 555;\n    public numericmax: number = 2000;\n    public numericplaceholder: string = \"Maximum Length\";\n    public numericformat: string = 'n0';\n\n    public onValChange(): void {\n        this.rteObj.maxLength = this.numericObj.value;\n    }\n\n    public onChangeRead(): void {\n        this.rteObj.readonly = this.readonlyObj.checked;\n    }\n\n    public onChangeEnable(): void {\n        this.rteObj.enabled = this.enableObj.checked;\n    }\n\n    public onChangeHtml(): void {\n        this.rteObj.enableHtmlEncode = this.enablehtmlObj.checked;\n    }\n\n    public getVal(): void {\n        alert(this.rteObj.value);\n    }\n\n    public getSelect(): void {\n        alert(this.rteObj.getSelection());\n    }\n\n    public selectAll(): void {\n        this.rteObj.selectAll();\n    }\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.16/codemirror.min.css\"> </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n\n<div class=\"col-lg-8 control-section sb-property-border\">\n    <div class=\"control-wrapper\">\n        <div class=\"sample-container\">\n            <div class=\"default-section\">\n                <ejs-richtexteditor id='apiRTE' #apiRTE [showCharCount]='true' [maxLength]='maxLength'>\n                    <ng-template #valueTemplate>\n                        <p>Rich Text Editor is a WYSIWYG editing control which will reduce the effort for users while\n                            trying to express their formatting word content as HTML or Markdown format.</p>\n                        <p><b>APIâ€™s:</b></p>\n                        <ul>\n                            <li>\n                                <p>maxLength - allows restricting the maximum length to be entered.</p>\n                            </li>\n                            <li>\n                                <p>readOnly - allows to change it as a non-editable state.</p>\n                            </li>\n                            <li>\n                                <p>enabled - enable or disable the RTE component.</p>\n                            </li>\n                            <li>\n                                <p>enableHtmlEncode - Get the encoded string value through value property and source\n                                    code panel</p>\n                            </li>\n                            <li>\n                                <p>getValue - get the value of RTE.</p>\n                            </li>\n                            <li>\n                                <p>getSelection - get the selected text of RTE.</p>\n                            </li>\n                            <li>\n                                <p>selectAll - select all content in RTE.</p>\n                            </li>\n                        </ul>\n                    </ng-template>\n                </ejs-richtexteditor>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"col-lg-4 property-section\">\n    <div class=\"property-panel-section\">\n        <div class=\"property-panel-header\">Properties</div>\n        <div class=\"property-panel-content\">\n            <table id=\"property\" title=\"Properties\">\n                <tbody>\n                    <tr>\n                        <td>\n                            <div>Maximum Length </div>\n                        </td>\n                        <td>\n                            <div>\n                                <ejs-numerictextbox #numeric id=\"maxlength\" [value]='numericValue' [min]='numericmin'\n                                    [max]='numericmax' [format]='numericformat' (change)=\"onValChange()\">\n                                </ejs-numerictextbox>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <div>ReadOnly </div>\n                        </td>\n                        <td>\n                            <div>\n                                <ejs-checkbox #readonly [checked]=\"false\" (change)=\"onChangeRead()\" ></ejs-checkbox>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <div>Enabled </div>\n                        </td>\n                        <td>\n                            <div>\n                                <ejs-checkbox #enable [checked]=\"true\" (change)=\"onChangeEnable()\" ></ejs-checkbox>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <div>Enable Html Encode </div>\n                        </td>\n                        <td>\n                            <div>\n                                <ejs-checkbox #enablehtml [checked]=\"false\" (change)=\"onChangeHtml()\" ></ejs-checkbox>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td></td>\n                        <td>\n                            <div>\n                                <button id=\"getVal\" ejs-button (click)=\"getVal()\">Get Value</button>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td></td>\n                        <td>\n                            <div>\n                                <button id=\"selectHtml\" ejs-button (click)=\"getSelect()\">Get Selection</button>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td></td>\n                        <td>\n                            <div>\n                                <button id=\"selectall\" ejs-button (click)=\"selectAll()\">Select All </button>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n","app.component.css":".e-rte-custom-tbar-section #special_char,\n    .e-rte-custom-tbar-section .char_block {\n        display: inline-block;\n    }\n    .e-rte-custom-tbar-section .char_block.e-active {\n        /* box-shadow: inset 3px 3px 7px 0px; */\n        outline: 1.5px solid;\n    }\n\n    .e-rte-custom-tbar-section .char_block {\n        width: 30px;\n        height: 30px;\n        line-height: 30px;\n        margin: 0 5px 5px 0;\n        text-align: center;\n        vertical-align: middle;\n        border: 1px solid #DDDDDD;\n        font-size: 20px;\n        cursor: pointer;\n        user-select: none;\n    }\n\n    #custom_tbar,\n    #custom_tbar div{\n        cursor: pointer;\n    }\n\n  .e-rte-quick-popup .e-rte-quick-toolbar .e-roatate-left::before {\n        content: \"\\e76e\";\n    }\n\n    .e-rte-quick-popup .e-rte-quick-toolbar .e-roatate-right::before {\n        content: \"\\e726\";\n    }\n\n    .e-richtexteditor textarea.e-content {\n      float: left;\n    }\n    .e-richtexteditor .e-rte-content {\n      overflow: hidden;\n    }\n    .e-rte-content .e-content.e-pre-source{\n      width: 100%;\n    }\n\n    .property-panel-content td{\n        width: 50%;\n    }\n    .property-panel-content td div {\n        padding-left: 10px;\n        padding-top: 10px;\n    }\n\n    .e-icon-btn.e-active .e-md-preview::before {\n        content: '\\e350';\n    }\n\n\t.e-icon-btn .e-md-preview.e-icons::before {\n\t\tcontent: '\\e345';\n\t}\n\n    .bootstrap4 .e-icon-btn.e-active .e-md-preview::before {\n        content: '\\e790';\n    }\n\n    .bootstrap4 .e-icon-btn .e-md-preview::before {\n        content: '\\e787';\n    }\n    \n    .fluent .e-icon-btn.e-active .e-md-preview::before,\n    .fluent-dark .e-icon-btn.e-active .e-md-preview::before,\n    .fluent2 .e-icon-btn.e-active .e-md-preview::before,\n    .fluent2-dark .e-icon-btn.e-active .e-md-preview::before,\n    .tailwind .e-icon-btn.e-active .e-md-preview::before,\n    .tailwind-dark .e-icon-btn.e-active .e-md-preview::before,\n    .tailwind3 .e-icon-btn.e-active .e-md-preview::before,\n    .tailwind3-dark .e-icon-btn.e-active .e-md-preview::before,\n    .bootstrap5 .e-icon-btn.e-active .e-md-preview::before,\n    .bootstrap5\\.3 .e-icon-btn.e-active .e-md-preview::before,\n    .bootstrap5\\.3-dark .e-icon-btn.e-active .e-md-preview::before,\n    .bootstrap5-dark .e-icon-btn.e-active .e-md-preview::before,\n    .material3 .e-icon-btn.e-active .e-md-preview::before,\n    .material3-dark .e-icon-btn.e-active .e-md-preview::before {\n        content: '\\e80e';\n    }\n\n    .tailwind .e-icon-btn .e-md-preview::before,\n    .tailwind-dark .e-icon-btn .e-md-preview::before,\n    .tailwind3 .e-icon-btn .e-md-preview::before,\n    .tailwind3-dark .e-icon-btn .e-md-preview::before,\n    .bootstrap5 .e-icon-btn .e-md-preview::before,\n    .bootstrap5\\.3 .e-icon-btn .e-md-preview::before,\n    .bootstrap5\\.3-dark .e-icon-btn .e-md-preview::before,\n    .bootstrap5-dark .e-icon-btn .e-md-preview::before,\n    .fluent .e-icon-btn .e-md-preview::before,\n    .fluent-dark .e-icon-btn .e-md-preview::before,\n    .fluent2 .e-icon-btn .e-md-preview::before,\n    .fluent2-dark .e-icon-btn .e-md-preview::before,\n    .material3 .e-icon-btn .e-md-preview::before,\n    .material3-dark .e-icon-btn .e-md-preview::before   {\n        content: '\\e7de';\n    }\n\n    #rteDialog.e-dialog .e-dlg-content {\n        padding: 0px 0px 5px 16px;\n    }\n    #custom_tbar .e-tbar-btn-text {\n        font-size: 16px;\n    }\n    .e-bigger #custom_tbar .e-tbar-btn-text {\n        font-size: 18px;\n    }\n    @media (min-width: 320px) and (max-width: 480px) {\n        .fabric.e-bigger #rteDialog {\n            min-width: 281px;\n        }\n\t\t\n\t\t#rteSpecial_char {\n        padding: 15px 0 15px 10px;\n\t\t}\n\t\t\n        .fabric #rteDialog {\n            min-width: 241px;\n        }\n\n        .bootstrap.e-bigger #rteDialog,\n        .bootstrap #rteDialog {\n            min-width: 223px;\n        }\n\n        .highcontrast.e-bigger #rteDialog {\n            min-width: 283px;\n        }\n        .highcontrast #rteDialog {\n            min-width: 243px;\n        }\n        .material #rteDialog {\n            min-width: 224px;\n        }\n        .material.e-bigger #rteDialog {\n            min-width: 236px;\n        }\n    }\n\n    .material .e-rte-custom-tbar-section .char_block.e-active {\n        outline: 1px solid #e3165b;\n        border-color: #e3165b;\n    }\n\n    .material-dark .e-rte-custom-tbar-section .char_block.e-active {\n        outline: 1px solid #56a4fd;\n        border-color: #56a4fd;\n    }\n\n    .fabric .e-rte-custom-tbar-section .char_block.e-active,\n    .fabric-dark .e-rte-custom-tbar-section .char_block.e-active {\n        outline: 1px solid #0078d6;\n        border-color: #0078d6;\n    }\n\n    .bootstrap4 .e-rte-custom-tbar-section .char_block.e-active {\n        outline: 1px solid #007bff;\n        border-color: #007bff;\n    }\n\n    .bootstrap .e-rte-custom-tbar-section .char_block.e-active,\n    .bootstrap-dark .e-rte-custom-tbar-section .char_block.e-active {\n        outline: 1px solid #317ab9;\n        border-color: #317ab9;\n    }\n\n    .fluent .e-rte-custom-tbar-section .char_block.e-active,\n    .fluent-dark .e-rte-custom-tbar-section .char_block.e-active {\n        outline: 1px solid #0078DE;\n        border-color: #0078DE;\n    }\n    \n    .fluent2 .e-rte-custom-tbar-section .char_block.e-active,\n    .fluent2-dark .e-rte-custom-tbar-section .char_block.e-active {\n        outline: 1px solid #0f6cbd;\n        border-color: #0f6cbd;\n    }\n\n    .highcontrast .e-rte-custom-tbar-section .char_block.e-active {\n        outline: 1px solid #ffd939;\n        border-color: #ffd939;\n    }\n\n    .material3 .e-rte-custom-tbar-section .char_block.e-active,\n    .material3-dark .e-rte-custom-tbar-section .char_block.e-active {\n        outline: 1px solid #D0BCFF;\n        border-color: #D0BCFF;\n    }\n    \n    .tailwind .e-rte-custom-tbar-section .char_block.e-active,\n    .tailwind3 .e-rte-custom-tbar-section .char_block.e-active {\n        outline: 1px solid #3730a3;\n        border-color: #3730a3;\n    }\n\n    .tailwind-dark .e-rte-custom-tbar-section .char_block.e-active,\n    .tailwind3-dark .e-rte-custom-tbar-section .char_block.e-active {\n        outline: 1px solid #22d3ee;\n        border-color: #22d3ee;\n    }\n\n    .bootstrap5 .e-rte-custom-tbar-section .char_block.e-active,\n    .bootstrap5-dark .e-rte-custom-tbar-section .char_block.e-active {\n        outline: 1px solid #0D6EFD;\n        border-color: #0D6EFD;\n    }\n\t\n\t#rteSection {\n        height: 500px;\n    }\n","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-richtexteditor\":\"*\",\"@syncfusion/ej2-angular-richtexteditor\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-layouts\":\"*\",\"@syncfusion/ej2-angular-layouts\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-angular-popups\":\"*\",\"@syncfusion/ej2-image-editor\":\"*\",\"@syncfusion/ej2-angular-image-editor\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}