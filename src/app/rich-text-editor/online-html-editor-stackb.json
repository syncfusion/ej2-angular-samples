{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"/**\n * Rich Text Editor - Online HTML Editor Sample\n */\nimport { Component, ViewChild, ViewEncapsulation, OnInit, Inject } from '@angular/core';\nimport { createElement, KeyboardEventArgs, Browser } from '@syncfusion/ej2-base';\nimport { ToolbarModule } from '@syncfusion/ej2-angular-navigations';\nimport { ToolbarService, LinkService, ImageService, TableService, HtmlEditorService, RichTextEditorModule, QuickToolbarService, PasteCleanupService, CountService, VideoService, AudioService, FormatPainterService, EmojiPickerService } from '@syncfusion/ej2-angular-richtexteditor';\nimport { RichTextEditorComponent, ToolbarType } from '@syncfusion/ej2-angular-richtexteditor';\nimport { SplitterComponent, SplitterModule } from '@syncfusion/ej2-angular-layouts';\nimport CodeMirror from 'codemirror';\n\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/css/css.js';\nimport 'codemirror/mode/htmlmixed/htmlmixed.js';\n\n@Component({\n    selector: 'app-root',\n    encapsulation: ViewEncapsulation.None,\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    providers: [ToolbarService, LinkService, ImageService, HtmlEditorService, TableService, QuickToolbarService, PasteCleanupService, CountService, VideoService, AudioService, FormatPainterService, EmojiPickerService],\n    standalone: true,\n    imports: [ SplitterModule, RichTextEditorModule]\n})\nexport class AppComponent {\n    @ViewChild('defaultRTE', { static: false })\n    public rteObj: RichTextEditorComponent;\n    @ViewChild('splitterInstance') splitterObj: SplitterComponent;\n    public myCodeMirror: any;\n    public srcArea: HTMLElement;\n    public textArea: HTMLElement;\n\n    public tools: ToolbarModule = {\n        type: ToolbarType.Expand,\n        enableFloating :false,\n        items: ['Bold', 'Italic', 'Underline', 'StrikeThrough',\n            'FontName', 'FontSize', 'FontColor', 'BackgroundColor',\n            'Formats', 'Alignments', 'Blockquote', 'OrderedList', 'UnorderedList',\n            'Outdent', 'Indent',\n            'CreateLink', 'Image', 'Video', 'Audio', 'CreateTable', '|', 'FormatPainter', 'ClearFormat',\n            '|', 'EmojiPicker', 'SourceCode', '|', 'Undo', 'Redo'\n        ]\n    };\n\n    constructor() {\n        \n    }\n\n    public updateHtmlValue(): void {\n        this.rteObj.value = this.myCodeMirror.getValue();\n        this.rteObj.dataBind();\n    }\n\n    public onResizing(): void {\n        this.rteObj.refreshUI();\n    }\n\n    public renderCodeMirror(mirrorView: HTMLElement, content: string): void {\n        this.myCodeMirror = CodeMirror(mirrorView, {\n            value: content,\n            lineNumbers: true,\n            mode: 'text/html',\n            lineWrapping: true,\n        });\n    }\n\n    public onCreate(): void {\n        setTimeout(() => {\n            this.rteObj.refreshUI();\n            this.updateValue();\n            this.textArea = this.rteObj.contentModule.getEditPanel() as HTMLElement;\n            this.srcArea = document.querySelector('.source-code');\n            if (this.srcArea) {\n                this.srcArea.addEventListener('keyup', (e: KeyboardEventArgs) => {\n                  this.updateHtmlValue();\n                });\n            }\n        }, 400);\n    }\n\n    public onChange(): void {\n        this.updateValue();\n    }\n\n    public updateValue(): void {\n        let mirrorView: HTMLElement = document.querySelector('#src-view');\n        if (!mirrorView) {\n          mirrorView = createElement('div', {\n            className: 'e-content'\n          });\n          mirrorView.id = 'src-view';\n          let srcCodeElement: HTMLElement = document.querySelector('.source-code');\n          if (srcCodeElement) {\n            srcCodeElement.appendChild(mirrorView);\n          }\n          mirrorView.innerHTML = '';\n          mirrorView.style.display = 'block';\n        }\n        let srcViewEle: HTMLElement = document.querySelector('#src-view');\n        let codemirrorEle: HTMLElement = document.querySelector('.CodeMirror-wrap');\n        if (codemirrorEle) {\n          codemirrorEle.remove();\n        }\n        if(this.rteObj.value){\n        this.renderCodeMirror(srcViewEle, this.rteObj.value);\n        }\n    }\n    public updateOrientation(): void {\n        if (Browser.isDevice) {\n            this.splitterObj.orientation = 'Vertical';\n            (document.body.querySelector('.heading') as HTMLElement).style.width = 'auto';\n        }\n    }\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.16/codemirror.min.css\"> </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n\n<div class=\"control-section\">\n    <div class=\"sample-container online-editor\">\n        <div class=\"default-section\">\n            <div class=\"sample-view\">\n                \n                <ejs-splitter id=\"splitter-rte-online-html-editor\" #splitterInstance height='450px' width='100%' (created)='updateOrientation()' (resizing)='onResizing()'>\n                    <e-panes>\n                        <e-pane size='50%' [resizable]='true' cssClass='pane1' min='40%' >\n                            <ng-template #content>\n                                <div class=\"content\">\n                                    <ejs-richtexteditor id=\"defaultRTE\" #defaultRTE height='447px' [toolbarSettings]='tools' saveInterval='1' [showCharCount]='true' maxLength='5000'\n                                        (created)='onCreate()' (change)='onChange()' (actionComplete)='updateValue()'>\n                                        <ng-template #valueTemplate>\n                                            <h3>Welcome to the HTML real-time live editor!</h3>\n                                            <p>Create and edit the valid HTML code simply! You don't worry about the HTML syntax to format your text content. \n                                            The WYSIWYG editor (left side view) provided the toolbar to make format text and insert images, tables, and more options.</p>\n                                            <h4>Don't worry about syntax</h4>\n                                            <p>The content editing works bi-directional, you can write the HTML code on the right-side view (code view), and changes will reflect in the WYSIWYG editor.</p>\n                                        </ng-template>\n                                    </ejs-richtexteditor>\n                                </div>\n                            </ng-template>\n                        </e-pane>\n                        <e-pane cssClass='pane2' min='40%'>\n                            <ng-template #content>\n                                <div class=\"heading right\">\n                                    <h6 class=\"title\"><b>HTML SOURCE</b></h6>\n                                    <div class=\"splitter-default-content source-code pane2\" contenteditable=\"true\"></div>\n                                </div>\n                            </ng-template>\n                        </e-pane>\n                    </e-panes>\n                </ejs-splitter>\n            </div>\n        </div>\n    </div>\n</div>","app.component.css":".online-editor #defaultRTE {\n  overflow: hidden;\n  border: none;\n}\n.online-editor .CodeMirror.cm-s-default.CodeMirror-wrap {\n    height: 405px;\n  }\n.online-editor .heading {\n  float: left;\n  width: 100%;\n  position: relative;\n  box-sizing: border-box;\n  padding: 0px;\n  padding-left:0px;\n  padding-right:0px;\n}\n\n.online-editor .title {\n  color: #333333;\n  letter-spacing: 1px;\n  padding-left: 10px;\n  text-align: center;\n  margin: 15px 0;\n}\n.online-editor .title-head {\n  text-align: center\n}\n\n.online-editor .e-control.e-splitter .e-split-bar.e-split-bar-horizontal.e-last-bar {\n  margin: 0;\n}\n.online-editor .sb-content-section {\n border-bottom: none;\n border-right: none;  \n}\n\n.online-editor .sample-head {\n  height: 48px;\n  background: #ffffff;\n  box-shadow: 0 8px 11px -6px rgba(0, 0, 0, 0.12);\n  z-index: 1001;\n  opacity: 100;\n  display: none;\n}\n\n.online-editor .head-content {\n  padding: 15px 0 0 35px;\n  font-weight: 499;\n  line-height: 18px;\n  font-size: 15px;\n  color: #000000;\n  font-family: sans-serif;\n}\n\n.online-editor table {\n  width: 100%;\n}\n\n.online-editor table,\n.online-editor th,\n.online-editor td {\n  border: 1px solid black;\n  border-collapse: collapse;\n}\n\n.online-editor .content{\n  border: 1px solid #dddddd\n}\n\n.ej2-new .container-fluid {\n  padding-right: 0px; \n  padding-left: 0px;\n}\n.e-splitter.e-splitter-horizontal, .e-splitter.e-splitter-vertical {\nborder-left: none;\n}\n.ej2-new  .control-section {\n  padding-top: 0px;\n  padding-bottom: 0px;\n}\n.online-editor .e-tab .e-tab-header:not(.e-vertical)::before {\n  border-bottom: none;\n  border-right: 1px solid #dee2e6;\n}\n.online-editor .e-richtexteditor.e-rte-tb-expand .e-rte-content, .e-richtexteditor.e-rte-tb-expand .e-source-content\n.sb-content-section .e-lib .e-tab .e-control .e-template .e-keyboard .e-nested .sb-content-header  {\n  border-bottom: none;\n}\n.online-editor .e-toolbar.e-control[class*='e-toolbar']\n{\n  border-bottom: none;\n}\n.online-editor .CodeMirror-scroll\n{\n  border-top: 1px solid #e8e8e8 !important;\n}\n.online-editor .heading .right .e-pane .e-pane-horizontal .e-scrollable\n{\n  padding:0px;\n}\n.sb-content-section .sb-content-tab-header {\n  border-right: 1px solid #D7D7D7;\n}\n.online-editor .e-richtexteditor.e-rte-tb-expand {\n   border: none;\n}\n.fabric-dark .CodeMirror-gutters, .fabric-dark .CodeMirror {\n  background-color: #201F1F;\n  color: #fff;\n}\n.fluent-dark .CodeMirror-gutters, .fluent-dark .CodeMirror,\n.fluent2-dark .CodeMirror-gutters, .fluent2-dark .CodeMirror, .fluent2-highcontrast .CodeMirror {\n  background-color: #1B1A19;\n  color: #fff;\n}\n.material3-dark .CodeMirror-gutters, .material3-dark .CodeMirror {\n  background-color: #1C1B1F;\n  color: #fff;\n}\n.bootstrap-dark .CodeMirror-gutters, .bootstrap-dark .CodeMirror {\n  background-color: #1A1A1A;\n  color: #fff;\n}\n.bootstrap5-dark .CodeMirror-gutters, .bootstrap5-dark .CodeMirror,\n.bootstrap5\\.3-dark .CodeMirror-gutters, .bootstrap5\\.3-dark .CodeMirror {\n  background-color: #212529;\n  color: #fff;\n}\n.material-dark .CodeMirror-gutters, .material-dark .CodeMirror {\n  background-color: #303030;\n  color: #fff;\n}\n.tailwind-dark .CodeMirror-gutters, .tailwind-dark .CodeMirror,\n.tailwind3-dark .CodeMirror-gutters, .tailwind3-dark .CodeMirror {\n  background-color: #1F2937;\n  color: #fff;\n}\n.highcontrast .CodeMirror-gutters, .highcontrast .CodeMirror,\n.fluent2-highcontrast .CodeMirror-gutters, .fluent2-highcontrast .CodeMirror {\n  background-color: #000000;\n  color: #fff;\n}\n\n.fabric-dark .title, .bootstrap5-dark .title,.bootstrap5\\.3-dark .title, .bootstrap-dark .title, .fluent-dark .title, .fluent2-dark .title, .material3-dark .title\n.material-dark .title, .tailwind-dark .title, .tailwind3-dark .title, .highcontrast .title, .fluent2-highcontrast .title {\n  color: #fff;\n}\n","dependencies.json":"{\"@syncfusion/ej2-icons\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-richtexteditor\":\"*\",\"@syncfusion/ej2-angular-richtexteditor\":\"*\",\"@syncfusion/ej2-layouts\":\"*\",\"@syncfusion/ej2-angular-layouts\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-angular-popups\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-image-editor\":\"*\",\"@syncfusion/ej2-angular-image-editor\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}