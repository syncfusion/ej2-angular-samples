{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"/**\n * Rich Text Editor Iframe Sample\n */\nimport { Component, ViewChild } from '@angular/core';\nimport { addClass, removeClass, Browser } from '@syncfusion/ej2-base';\nimport { ToolbarService, LinkService, ImageService, HtmlEditorService, RichTextEditorModule, QuickToolbarService, PasteCleanupService, VideoService, AudioService, EmojiPickerService, TableService, CodeBlockService, ImportExportService } from '@syncfusion/ej2-angular-richtexteditor';\nimport { ExportWordModel, ExportPdfModel, ImportWordModel, QuickToolbarSettingsModel } from '@syncfusion/ej2-angular-richtexteditor';\nimport { RichTextEditorComponent, IFrameSettingsModel, FileManagerService } from '@syncfusion/ej2-angular-richtexteditor';\nimport { FileManagerSettingsModel } from '@syncfusion/ej2-angular-richtexteditor';\nimport { ToolbarModule } from '@syncfusion/ej2-angular-navigations';\n\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    providers: [ToolbarService, LinkService, ImageService, HtmlEditorService, FileManagerService, QuickToolbarService, PasteCleanupService, VideoService, AudioService, EmojiPickerService, TableService, CodeBlockService, ImportExportService],\n    standalone: true,\n    imports: [ RichTextEditorModule, ]\n})\nexport class AppComponent {\n\n    @ViewChild('iframeRTE')\n    private iframeRTE: RichTextEditorComponent;\n\n    private hostUrl: string = 'https://ej2-aspcore-service.azurewebsites.net/';\n\n    public tools: ToolbarModule = {\n        items: ['Undo', 'Redo', '|', 'ImportWord', 'ExportWord', 'ExportPdf', '|',\n            'Bold', 'Italic', 'Underline', 'StrikeThrough', 'InlineCode', '|', 'CreateLink', 'Image', 'CreateTable', 'CodeBlock',\n            'HorizontalLine', 'Blockquote', '|', 'BulletFormatList', 'NumberFormatList', 'Checklist', '|', 'Formats', 'Alignments', '|', 'Outdent', 'Indent', '|',\n            'FontColor', 'BackgroundColor', 'FontName', 'FontSize', '|', 'LowerCase', 'UpperCase', '|', 'SuperScript', 'SubScript', '|',\n            'EmojiPicker', 'FileManager', 'Video', 'Audio', '|', 'FormatPainter', 'ClearFormat',\n            '|', 'Print', 'FullScreen', '|', 'SourceCode']\n    };\n\n    public fileManagerSettings: FileManagerSettingsModel = {\n        enable: true,\n        path: '/Pictures/Food',\n        ajaxSettings: {\n            url: this.hostUrl + 'api/FileManager/FileOperations',\n            getImageUrl: this.hostUrl + 'api/FileManager/GetImage',\n            uploadUrl: this.hostUrl + 'api/FileManager/Upload',\n            downloadUrl: this.hostUrl + 'api/FileManager/Download'\n        }\n    };\n\n    public exportWord: ExportWordModel = {\n        serviceUrl: 'https://services.syncfusion.com/angular/production/api/RichTextEditor/ExportToDocx',\n        fileName: 'RichTextEditor.docx',\n        stylesheet: `\n        .e-rte-content {\n            font-size: 1em;\n            font-weight: 400;\n            margin: 0;\n        }`\n    };\n\n    public importWord: ImportWordModel = {\n        serviceUrl: 'https://services.syncfusion.com/angular/production/api/RichTextEditor/ImportFromWord',\n    };\n\n    public exportPdf: ExportPdfModel = {\n        serviceUrl: 'https://services.syncfusion.com/angular/production/api/RichTextEditor/ExportToPdf',\n        fileName: 'RichTextEditor.pdf',\n        stylesheet: `\n        .e-rte-content{\n            font-size: 1em;\n            font-weight: 400;\n            margin: 0;\n        }\n    `\n    };\n\n    public quickToolbarSettings: QuickToolbarSettingsModel = {\n        table: ['Tableheader', 'TableRemove', '|', 'TableRows', 'TableColumns', 'TableCell', '|', 'TableEditProperties', 'Styles', 'BackgroundColor', 'Alignments', 'TableCellVerticalAlign'],\n        text: ['Formats', '|', 'Bold', 'Italic', 'Fontcolor', 'BackgroundColor', '|', 'CreateLink', 'Image', 'CreateTable', 'Blockquote', '|' , 'Unorderedlist', 'Orderedlist', 'Indent', 'Outdent'],\n        showOnRightClick: true,\n    };\n\n    public iframe: IFrameSettingsModel = { enable: true };\n    public height: number = 500;\n    public enableTabKey: boolean = true;\n\n    public handleFullScreen(e: any) {\n        const sbCntEle: HTMLElement = document.querySelector('.sb-content.e-view');\n        const sbHdrEle: HTMLElement = document.querySelector('.sb-header.e-view');\n        const leftBar: HTMLElement = document.querySelector('#left-sidebar');\n        if (e.targetItem === 'Maximize') {\n            if (Browser.isDevice && Browser.isIos) {\n                addClass([sbCntEle, sbHdrEle], ['hide-header']);\n            }\n            addClass([leftBar], ['e-close']);\n            removeClass([leftBar], ['e-open']);\n        } else if (e.targetItem === 'Minimize') {\n            if (Browser.isDevice && Browser.isIos) {\n                removeClass([sbCntEle, sbHdrEle], ['hide-header']);\n            }\n            removeClass([leftBar], ['e-close']);\n            if (!Browser.isDevice) {\n                addClass([leftBar], ['e-open']);\n            }\n        }\n    }\n\n    public actionCompleteHandler(e: any) {\n        setTimeout(() => { this.iframeRTE.toolbarModule.refreshToolbarOverflow(); }, 400);\n    }\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.16/codemirror.min.css\"> </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n\n<div class=\"control-section\">\n    <div class=\"sample-container\">\n        <div class=\"default-section\">\n            <ejs-richtexteditor #iframeRTE id='iframeRTE' [toolbarSettings]='tools' [iframeSettings]='iframe' [enableTabKey]='enableTabKey'\n                [quickToolbarSettings]='quickToolbarSettings' [height]='height' [fileManagerSettings]='fileManagerSettings' [exportWord]=\"exportWord\" [exportPdf]=\"exportPdf\" [importWord]=\"importWord\" (actionBegin)='handleFullScreen($event)'\n                (actionComplete)='actionCompleteHandler($event)'>\n                <ng-template #valueTemplate>\n                    <p>The Rich Text Editor component is a WYSIWYG (\"what you see is what you get\") editor that provides\n                        the best user experience to create and update the content.\n                        Users can format their content using standard toolbar commands.</p>\n                    <p><b>Key features:</b></p>\n                    <ul>\n                        <li>\n                            <p>Provides &lt;IFRAME&gt; and &lt;DIV&gt; modes</p>\n                        </li>\n                        <li>\n                            <p>Capable of handling markdown editing.</p>\n                        </li>\n                        <li>\n                            <p>Contains a modular library to load the necessary functionality on demand.</p>\n                        </li>\n                        <li>\n                            <p>Provides a fully customizable toolbar.</p>\n                        </li>\n                        <li>\n                            <p>Provides HTML view to edit the source directly for developers.</p>\n                        </li>\n                        <li>\n                            <p>Supports third-party library integration.</p>\n                        </li>\n                        <li>\n                            <p>Allows a preview of modified content before saving it.</p>\n                        </li>\n                        <li>\n                            <p>Handles images, hyperlinks, video, hyperlinks, uploads, etc.</p>\n                        </li>\n                        <li>\n                            <p>Contains undo/redo manager.</p>\n                        </li>\n                        <li>\n                            <p>Creates bulleted and numbered lists.</p>\n                        </li>\n                    </ul>\n                </ng-template>\n            </ejs-richtexteditor>\n        </div>\n    </div>\n</div>\n\n\n<style>\n    .sb-content.e-view.hide-header {\n        top: 0 !important;\n    }\n\n    .sb-header.e-view.hide-header {\n        display: none;\n    }\n</style>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-icons\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-richtexteditor\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-richtexteditor\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-layouts\":\"*\",\"@syncfusion/ej2-angular-layouts\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-angular-popups\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-image-editor\":\"*\",\"@syncfusion/ej2-angular-image-editor\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}