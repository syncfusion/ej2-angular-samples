{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewChild } from '@angular/core';\nimport {\n    ToolbarService,\n    LinkService,\n    ImageService,\n    HtmlEditorService,\n    RichTextEditorModule,\n    QuickToolbarService,\n    TableService,\n    PasteCleanupService,\n    ActionCompleteEventArgs,\n    ActionBeginEventArgs,\n    RichTextEditorComponent\n} from '@syncfusion/ej2-angular-richtexteditor';\nimport { DropDownButtonModule, MenuEventArgs } from '@syncfusion/ej2-angular-splitbuttons';\nimport { ItemModel } from '@syncfusion/ej2-splitbuttons';\n\n\nimport { MentionModule } from '@syncfusion/ej2-angular-dropdowns';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    providers: [\n        ToolbarService,\n        LinkService,\n        ImageService,\n        HtmlEditorService,\n        QuickToolbarService,\n        TableService,\n        PasteCleanupService,\n    ],\n    standalone: true,\n    imports: [ RichTextEditorModule, DropDownButtonModule, MentionModule, ],\n})\nexport class AppComponent {\n    @ViewChild('mailMergeEditor', { static: false }) public mailMergeEditor!: RichTextEditorComponent;\n    @ViewChild('mentionObj') public mentionObj: any;\n    @ViewChild('toolsRTE') public rteObj!: RichTextEditorComponent;\n\n    public rteValue: string = `<p>Dear <span contenteditable=\"false\" class=\"e-mention-chip\"><span>{{FirstName}}</span></span> <span contenteditable=\"false\" class=\"e-mention-chip\"><span>{{LastName}}</span></span>,</p>\n   <p>We are thrilled to have you with us! Your unique promotional code for this month is: <span contenteditable=\"false\" class=\"e-mention-chip\"><span>{{PromoCode}}</span></span>.</p>\n   <p>Your current subscription plan is: <span contenteditable=\"false\" class=\"e-mention-chip\"><span>{{SubscriptionPlan}}</span></span>.</p>\n   <p>Your customer ID is: <span contenteditable=\"false\" class=\"e-mention-chip\"><span>{{CustomerID}}</span></span>.</p>\n   <p>Your promotional code expires on: <span contenteditable=\"false\" class=\"e-mention-chip\"><span>{{ExpirationDate}}</span></span>.</p>\n   <p>Feel free to browse our latest offerings and updates. If you need any assistance, don't hesitate to contact us at <a href=\"mailto:{{SupportEmail}}\"><span contenteditable=\"false\" class=\"e-mention-chip\"><span>{{SupportEmail}}</span></span></a> or call us at <span contenteditable=\"false\" class=\"e-mention-chip\"><span>{{SupportPhoneNumber}}</span></span>.</p>\n   <p>Best regards,<br>The <span contenteditable=\"false\" class=\"e-mention-chip\"><span>{{CompanyName}}</span></span> Team</p>`;\n\n    public items: ItemModel[] = [\n        { text: 'First Name' },\n        { text: 'Last Name' },\n        { text: 'Support Email' },\n        { text: 'Company Name' },\n        { text: 'Promo Code' },\n        { text: 'Support Phone Number' },\n        { text: 'Customer ID' },\n        { text: 'Expiration Date' },\n        { text: 'Subscription Plan' },\n    ];\n\n   public dropdownContent : string = `<span style=\"display:inline-flex;\"><span class=\"e-rte-dropdown-btn-text\">Insert Field</span></span>`;\n   \n   public textToValueMap: { [key: string]: string } = {\n        'First Name': 'FirstName',\n        'Last Name': 'LastName',\n        'Support Email': 'SupportEmail',\n        'Company Name': 'CompanyName',\n        'Promo Code': 'PromoCode',\n        'Support Phone Number': 'SupportPhoneNumber',\n        'Customer ID': 'CustomerID',\n        'Expiration Date': 'ExpirationDate',\n        'Subscription Plan': 'SubscriptionPlan'\n    };\n\n    public fieldsData: { [key: string]: string } = { text: 'text' };\n    public mentionChar: string = '{{';\n    public mergeData: any = [\n        { text: 'First Name', value: 'FirstName' },\n        { text: 'Last Name', value: 'LastName' },\n        { text: 'Support Email', value: 'SupportEmail' },\n        { text: 'Company Name', value: 'CompanyName' },\n        { text: 'Promo Code', value: 'PromoCode' },\n        { text: 'Support Phone Number', value: 'SupportPhoneNumber' },\n        { text: 'Customer ID', value: 'CustomerID' },\n        { text: 'Expiration Date', value: 'ExpirationDate' },\n        { text: 'Subscription Plan', value: 'SubscriptionPlan' },\n    ];\n\n    public tools: object = {\n        items: [\n            'Bold', 'Italic', 'Underline', '|',\n            'Formats', 'Alignments', 'OrderedList', 'UnorderedList', '|',\n            'CreateLink', 'Image', 'CreateTable', '|',\n            { tooltipText: 'Merge Data', template: '#merge_data' },\n            { tooltipText: 'Insert Field', template: '#insertField' },\n            'SourceCode', '|', 'Undo', 'Redo'\n        ],\n    };\n\n    onActionBegin(args: ActionBeginEventArgs) {\n        if (\n            args.requestType === 'EnterAction' &&\n            this.mentionObj.element.classList.contains('e-popup-open')\n        ) {\n            args.cancel = true;\n        }\n    }\n\n    OnActionComplete(e: ActionCompleteEventArgs): void {\n        if (e.requestType === 'SourceCode') {\n            this.mailMergeEditor.getToolbar().querySelector('#merge_data').parentElement.classList.add('e-overlay');\n            this.mailMergeEditor.getToolbar().querySelector('#insertField').parentElement.classList.add('e-overlay');\n        } else if (e.requestType === 'Preview') {\n            this.mailMergeEditor.getToolbar().querySelector('#merge_data').parentElement.classList.remove('e-overlay');\n            this.mailMergeEditor.getToolbar().querySelector('#insertField').parentElement.classList.remove('e-overlay');\n        }\n    }\n\n    onItemSelect(args: MenuEventArgs): void {\n        if (args.item.text != null) {\n            const value = this.textToValueMap[args.item.text];\n            const trimmedValue = value.trim();\n            this.mailMergeEditor.formatter.editorManager.nodeSelection.restore();\n            this.mailMergeEditor.executeCommand(\n                'insertHTML',\n                `<span contenteditable=\"false\" class=\"e-mention-chip\"><span>{{${trimmedValue}}}</span></span>&nbsp;`,\n                { undo: true }\n            );\n        }\n    }\n\n    public displayTemplate(data: any): string {\n        return `{{${data.value}}}`;\n    }\n\n    public placeholderData: any = {\n        FirstName: 'John',\n        LastName: 'Doe',\n        PromoCode: 'ABC123',\n        SubscriptionPlan: 'Premium',\n        CustomerID: '123456',\n        ExpirationDate: '2024-12-31',\n        SupportEmail: 'support@example.com',\n        SupportPhoneNumber: '+1-800-555-5555',\n        CompanyName: 'Example Inc.',\n    };\n\n    onClickHandler(): void {\n        if (this.mailMergeEditor) {\n            let editorContent = this.mailMergeEditor.value;\n            let mergedContent = this.replacePlaceholders(editorContent, this.placeholderData);\n            if ((this.mailMergeEditor as any).formatter.getUndoRedoStack().length === 0) {\n                (this.mailMergeEditor as any).formatter.saveData();\n            }\n            this.mailMergeEditor.value = mergedContent;\n            this.mailMergeEditor.dataBind();\n            (this.mailMergeEditor as any).formatter.saveData();\n        } else {\n            console.log('MailMergeEditor is not initialized.');\n        }\n    }\n\n    replacePlaceholders(template: string, data: { [key: string]: string }): string {\n        return template.replace(/{{\\s*(\\w+)\\s*}}/g, (match, key) => {\n            const value = data[key.trim()];\n            const result = value !== undefined ? value : match;\n            return result;\n        });\n    }\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section\">\n    <ejs-richtexteditor id=\"mailMergeEditor\" #mailMergeEditor [value]=\"rteValue\" [toolbarSettings]=\"tools\"\n        (actionBegin)=\"onActionBegin($event)\" (actionComplete)=\"OnActionComplete($event)\" [saveInterval]=\"1\">\n    </ejs-richtexteditor>\n    <button class=\"e-control e-lib e-btn e-formats-tbar-btn e-rte-elements e-tbar-btn\" tabindex=\"-1\"\n        id=\"merge_data\" style=\"width:100%\" (click)=\"onClickHandler()\">\n        <span style=\"display:inline-flex\"><span class=\"e-tbar-btn-text\">Merge Data</span></span>\n    </button>\n    <button\n        class=\"e-rte-dropdown-btn e-control e-dropdown-btn e-lib e-btn e-rte-dropdown-popup e-rte-dropdown-items e-formats-tbar-btn e-rte-elements e-tbar-btn\"\n        id=\"insertField\" ejs-dropdownbutton [items]=\"items\"\n        [content]=\"dropdownContent\" (select)=\"onItemSelect($event)\"></button>\n    <ejs-mention #mentionObj [dataSource]=\"mergeData\" target=\"#mailMergeEditor\" [mentionChar]=\"mentionChar\"\n        [fields]='fieldsData' [suggestionCount]=\"8\" [allowSpaces]=\"true\" popupWidth='250px' popupHeight='200px'>\n        <ng-template #displayTemplate let-data>\n            <span> {{ \"{{\"+ data.value + \"}}\" }} </span>\n        </ng-template>\n    </ejs-mention>\n</div>\n","app.component.css":".tailwind3 #merge_data,\n.tailwind3-dark #merge_data {\n    font-weight:400;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-richtexteditor\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-richtexteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-angular-splitbuttons\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-layouts\":\"*\",\"@syncfusion/ej2-angular-layouts\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-angular-popups\":\"*\",\"@syncfusion/ej2-image-editor\":\"*\",\"@syncfusion/ej2-angular-image-editor\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}