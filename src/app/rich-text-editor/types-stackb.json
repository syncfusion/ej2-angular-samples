{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"/**\n * Rich Text Editor Toolbar Types Sample\n */\nimport { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { addClass, removeClass, Browser } from '@syncfusion/ej2-base';\nimport { ToolbarService, ToolbarType, LinkService, ImageService, RichTextEditorModule, PasteCleanupService, VideoService, AudioService, FormatPainterService, EmojiPickerService, TableService } from '@syncfusion/ej2-angular-richtexteditor';\nimport { DropDownListComponent, FieldSettingsModel, DropDownListModule } from '@syncfusion/ej2-angular-dropdowns';\nimport { CheckBoxComponent, CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\nimport { RichTextEditorComponent, HtmlEditorService, QuickToolbarService } from '@syncfusion/ej2-angular-richtexteditor';\nimport { ToolbarModule } from '@syncfusion/ej2-angular-navigations';\n\n\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [ToolbarService, LinkService, ImageService, HtmlEditorService, QuickToolbarService, PasteCleanupService, VideoService, AudioService, FormatPainterService, EmojiPickerService, TableService],\n    standalone: true,\n    imports: [ RichTextEditorModule, DropDownListModule, CheckBoxModule, ]\n})\nexport class AppComponent {\n    @ViewChild('type') ddlObj: DropDownListComponent;\n    @ViewChild('float') rteFloatObj: CheckBoxComponent;\n    @ViewChild('typeRTE') rteObj: RichTextEditorComponent;\n    public tools: ToolbarModule = {\n        items: ['Bold', 'Italic', 'Underline', 'StrikeThrough', 'SuperScript', 'SubScript', '|',\n            'FontName', 'FontSize', 'FontColor', 'BackgroundColor', '|',\n            'LowerCase', 'UpperCase', '|',\n            'Formats', 'Alignments', 'Blockquote', '|', 'NumberFormatList', 'BulletFormatList', '|',\n            'Outdent', 'Indent', '|', 'CreateLink', 'Image', 'Video', 'Audio', 'CreateTable', '|', 'FormatPainter', 'ClearFormat',\n            '|', 'EmojiPicker', 'Print', '|',\n            'SourceCode', 'FullScreen', '|', 'Undo', 'Redo']\n    };\n    // Mapping DropDownList dataSource property\n    public dataSource: { [key: string]: Object }[] = [{ text: 'Expand', value: 1 }, { text: 'MultiRow', value: 2 },{ text: 'Scrollable', value: 3 },{ text: 'Popup', value: 4 }];\n    public fltType: string = 'Auto';\n    public placeholder: string = 'Types';\n    // Mapping DropDownList fields property\n    public typeFields: FieldSettingsModel = { text: 'text', value: 'value' };\n    public typeValue: number = 1;\n    // Change event funtion for DropDownList component\n    public typeChange(): void {\n        switch (this.ddlObj.value as number) {\n            case 1:\n                this.rteObj.toolbarSettings.type = ToolbarType.Expand;\n                this.rteObj.toolbarSettings.enableFloating = this.rteFloatObj.checked;\n                break;\n            case 2:\n                this.rteObj.toolbarSettings.type = ToolbarType.MultiRow;\n                this.rteObj.toolbarSettings.enableFloating = this.rteFloatObj.checked;\n                break;\n            case 3:\n                this.rteObj.toolbarSettings.type = ToolbarType.Scrollable;\n                this.rteObj.toolbarSettings.enableFloating = this.rteFloatObj.checked;\n                break;\n            case 4:\n                this.rteObj.toolbarSettings.type = ToolbarType.Popup;\n                this.rteObj.toolbarSettings.enableFloating = this.rteFloatObj.checked;\n                break;\n        }\n    }\n    public onChangeFloat(): void {\n        this.rteObj.toolbarSettings.enableFloating = this.rteFloatObj.checked;\n    }\n    public handleFullScreen(e: any): void {\n        const sbCntEle: HTMLElement = document.querySelector('.sb-content.e-view');\n        const sbHdrEle: HTMLElement = document.querySelector('.sb-header.e-view');\n        const leftBar: HTMLElement = document.querySelector('#left-sidebar');\n        if (e.targetItem === 'Maximize') {\n            if (Browser.isDevice && Browser.isIos) {\n                addClass([sbCntEle, sbHdrEle], ['hide-header']);\n            }\n            addClass([leftBar], ['e-close']);\n            removeClass([leftBar], ['e-open']);\n        } else if (e.targetItem === 'Minimize') {\n            if (Browser.isDevice && Browser.isIos) {\n                removeClass([sbCntEle, sbHdrEle], ['hide-header']);\n            }\n            removeClass([leftBar], ['e-close']);\n            if (!Browser.isDevice) {\n                addClass([leftBar], ['e-open']);\n            }\n        }\n    }\n    public actionCompleteHandler(): void {\n        setTimeout(() => { this.rteObj.toolbarModule.refreshToolbarOverflow(); }, 400);\n    }\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.16/codemirror.min.css\"> </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n\n<div class=\"col-lg-8 control-section sb-property-border\">\n    <div class=\"control-wrapper\">\n        <div class=\"sample-container\">\n            <div class=\"default-section\">\n                <ejs-richtexteditor id='typeRTE' #typeRTE [toolbarSettings]='tools'\n                    (actionBegin)='handleFullScreen($event)' (actionComplete)='actionCompleteHandler()'>\n                    <ng-template #valueTemplate>\n                        <p>The Rich Text Editor is a WYSIWYG (\"what you see is what you get\") editor useful to create and\n                            edit content and return the valid HTML markup or markdown of the content</p>\n\n                        <p><b>Toolbar</b></p>\n\n                        <ol>\n                            <li>\n                                <p>The Toolbar contains commands to align the text, insert a link, insert an image, insert list, undo/redo operations, HTML view, etc </p>\n                            </li>\n                            <li>\n                                <p>The Toolbar is fully customizable </p>\n                            </li>\n                        </ol>\n\n                        <p><b>Links</b></p>\n                        <ol>\n                            <li>\n                                <p>You can insert a hyperlink with its corresponding dialog </p>\n                            </li>\n                            <li>\n                                <p>Attach a hyperlink to the displayed text. </p>\n                            </li>\n                            <li>\n                                <p>Customize the quick toolbar based on the hyperlink </p>\n                            </li>\n                        </ol>\n\n                        <p><b>Validation</b></p>\n                        <ul>\n                            <li>\n                                <p>The editor’s content can be validated on form submission by applying validation rules\n                                    and validation message</p>\n                            </li>\n                        </ul>\n\n                        <p><b>Locale.</b></p>\n                        <ul>\n                            <li>\n                                <p>The editor provides an option to localize its static strings to adapt the editor to a\n                                    local language.</p>\n                            </li>\n                        </ul>\n\n                        <p><b>Image.</b></p>\n                        <ol>\n                            <li>\n                                <p>Allows you to insert images from an online source as well as the local computer </p>\n                            </li>\n                            <li>\n                                <p>You can upload an image </p>\n                            </li>\n                            <li>\n                                <p>Provides an option to customize the quick toolbar for an image </p>\n                            </li>\n                        </ol>\n                    </ng-template>\n                </ejs-richtexteditor>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"col-lg-4 property-section\">\n    <div class=\"property-panel-section\" style=\"margin-left: 70px\">\n        <div class=\"property-panel-header\">Properties</div>\n        <div class=\"property-panel-content\">\n            <div id=\"property\" title=\"Properties\" class=\"property-panel-table\">\n                <table id=\"property\" title=\"Properties\">\n                    <tr>\n                        <td style=\"padding-bottom: 10px;padding-top: 10px;\">\n                            <div style=\"width: 160px\">\n                                <ejs-dropdownlist id='types' height='720px' width='90%' #type [dataSource]='dataSource'\n                                    (change)='typeChange()' [(value)]='typeValue' [fields]='typeFields'\n                                    [floatLabelType]='fltType' [placeholder]='placeholder'>\n                                </ejs-dropdownlist>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"padding-bottom: 10px;padding-top: 10px;\">\n                            <div>\n                                <ejs-checkbox #float label=\"Enable Floating\" [checked]=\"true\"\n                                    (change)=\"onChangeFloat()\"></ejs-checkbox>\n                            </div>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n","app.component.css":"#property.property-panel-table div {\n\tpadding-left: 0;\n}\n\n.sb-content.e-view.hide-header {\n    top: 0 !important;\n}\n\n.sb-header.e-view.hide-header {\n    display: none;\n}","dependencies.json":"{\"@syncfusion/ej2-icons\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-richtexteditor\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-richtexteditor\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-layouts\":\"*\",\"@syncfusion/ej2-angular-layouts\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-angular-popups\":\"*\",\"@syncfusion/ej2-image-editor\":\"*\",\"@syncfusion/ej2-angular-image-editor\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}