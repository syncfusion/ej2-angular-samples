{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"/**\n * DropDownList Template Driven Sample\n */\nimport { Component, ViewEncapsulation } from '@angular/core';\n\nimport { ButtonModule } from '@syncfusion/ej2-angular-buttons';\nimport { NgIf } from '@angular/common';\nimport { DropDownListModule } from '@syncfusion/ej2-angular-dropdowns';\nimport { FormsModule } from '@angular/forms';\n\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ FormsModule, DropDownListModule, NgIf, ButtonModule, ]\n})\nexport class AppComponent {\n    public autoSkillsetData: string[] = [\n        'ASP.NET', 'ActionScript', 'Basic',\n        'C++' , 'C#' , 'dBase' , 'Delphi' ,\n        'ESPOL' , 'F#' , 'FoxPro' , 'Java',\n        'J#' , 'Lisp' , 'Logo' , 'PHP'\n    ];\n    public autoDrivenPlaceholder: String = 'Select book';\n\n    public autoskillname: string =  null;\n\n    public autosname: string = '';\n\n    public autosmail: string =  '';\n    onfocus(element: FocusEvent) : void {\n        let target: HTMLInputElement = element.target as HTMLInputElement;\n        let parentNode: HTMLElement = target.parentNode as HTMLElement;\n        if (parentNode.classList.contains('e-input-in-wrap')) {\n            parentNode = (parentNode.parentNode as HTMLElement);\n        }\n        parentNode.classList.add('e-input-focus');\n        parentNode.querySelector('.e-float-text').classList.add('e-label-top');\n        parentNode.querySelector('.e-float-text').classList.remove('e-label-bottom');\n    }\n    onblur(element: FocusEvent) : void {\n        let target: HTMLInputElement = element.target as HTMLInputElement;\n        let parentNode: HTMLElement = target.parentNode as HTMLElement;\n        if (parentNode.classList.contains('e-input-in-wrap')) {\n            (parentNode.parentNode as HTMLElement).classList.remove('e-input-focus');\n        }\n        parentNode.classList.remove('e-input-focus');\n        if (target.value === null || target.value === '') {\n            parentNode.querySelector('.e-float-text').classList.remove('e-label-top');\n            parentNode.querySelector('.e-float-text').classList.add('e-label-bottom');\n        }else {\n            parentNode.querySelector('.e-float-text').classList.add('e-label-top');\n            parentNode.querySelector('.e-float-text').classList.remove('e-label-bottom');\n        }\n    }\n    onreset(element: MouseEvent) : void {\n        let parentNode: NodeListOf<HTMLElement> = document.getElementsByClassName('box-form')[0].querySelectorAll('.e-float-text');\n        for (let i: number = 0; i < parentNode.length; i++) {\n            parentNode[i].classList.remove('e-label-top');\n            parentNode[i].classList.add('e-label-bottom');\n        }\n    }\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n\n<div class=\"control-section\">\n        <div class=\"col-lg-8  content-wrapper\">\n            <div id='content' class='box-form' style=\"margin: 0 auto; width:250px; padding:25px\">\n                    <form #form=\"ngForm\">\n                            <div class=\"form-group\">\n                                <ejs-dropdownlist name=\"skillname\" required #book='ngModel' [(ngModel)]= 'autoskillname'\n                                 [dataSource]='autoSkillsetData' [placeholder]='autoDrivenPlaceholder' floatLabelType='Auto'>\n                                 </ejs-dropdownlist>\n                                 <div *ngIf=\"book.invalid && (book.touched)\"\n                                 class=\"alert alert-danger\">\n                                    <div *ngIf=\"book.errors.required\">\n                                        Book Name is required.\n                                    </div>\n                                </div>\n\n                            </div>\n                            <div class=\"form-group\" style=\"padding-top:10px;\">\n                              <div class=\"e-float-input\">\n                                <input type=\"text\" required #sname='ngModel' aria-label=\"name\" autocomplete=\"off\" (focus)=\"onfocus($event)\" (blur)=\"onblur($event)\" [(ngModel)]=\"autosname\" name=\"sname\" maxlength=\"10\"/>\n                                <span class=\"e-float-line\"></span>\n                                <label class=\"e-float-text e-label-bottom\">Name:</label>\n                              </div>\n                              <div *ngIf=\"sname.invalid && (sname.dirty || sname.touched)\"\n                              class=\"alert alert-danger\">\n                                 <div *ngIf=\"sname.errors.required\">\n                                     Name is required.\n                                 </div>\n                             </div>\n                            </div>\n                            <div class=\"form-group\" style=\"padding-top:10px;\">\n                              <div class=\"e-float-input\">\n                                <input type=\"text\" required email #smail='ngModel' aria-label=\"email\" autocomplete=\"off\" (focus)=\"onfocus($event)\" (blur)=\"onblur($event)\" [(ngModel)]=\"autosmail\" name=\"smail\" maxlength=\"15\" />\n                                <span class=\"e-float-line\"></span>\n                                <label class=\"e-float-text e-label-bottom\">Email:</label>\n                              </div>\n                              <div *ngIf=\"smail.invalid && (smail.dirty || smail.touched)\"\n                              class=\"alert alert-danger\">\n                                 <div *ngIf=\"smail.errors.required\">\n                                     Email is required.\n                                 </div>\n                                 <div *ngIf=\"smail.errors.email\">  \n                                        Enter a valid email address\n                                </div>\n                             </div>\n                            </div>\n                            <div class=\"form-group\" style=\"padding:10px;\">\n                                <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6\">\n                                    <button ejs-button [disabled]=\"!form.valid\">Submit</button>\n                              </div>\n                              <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6\">\n                                <button ejs-button (click)=\"onreset($event)\" type=\"reset\" [disabled]=\"!(book.valid || sname.valid || smail.valid)\">Reset</button>\n                              </div>\n                            </div>\n                          </form>\n            </div>\n        </div>\n        <div class=\"col-lg-4 property-section\">\n            <div class=\"property-panel-section\">\n                <div class=\"property-panel-header\">Properties</div>\n                <div class=\"property-panel-content\" style=\"padding: 10px;\">\n                    <table id=\"property\" title=\"Properties\" class=\"box-table\" style=\"width: 100%;\">\n                        <tr>\n                            <td style=\"width:50%\">Selected Book: </td>\n                            <td class=\"formtext\">{{ autoskillname }}</td>\n                        </tr>\n                        <tr>\n                            <td style=\"width:50%\">Buyer Name: </td>\n                            <td class=\"formtext\">{{ autosname }}</td>\n                        </tr>\n                        <tr>\n                                <td style=\"width:50%\">Buyer Mail ID: </td>\n                                <td class=\"formtext\">{{ autosmail }}</td>\n                            </tr>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n","app.component.css":".box-form {\n    webkit-box-shadow: 0 2px 2px 0 rgba(0,0,0,0.14), 0 3px 1px -2px rgba(0,0,0,0.12), 0 1px 5px 0 rgba(0,0,0,0.2);\n    box-shadow: 0 2px 2px 0 rgba(0,0,0,0.14), 0 3px 1px -2px rgba(0,0,0,0.12), 0 1px 5px 0 rgba(0,0,0,0.2);\n}\ntable.box-table td {\n    padding-top: 10px;\n}\n.highcontrast .box-form {\n    webkit-box-shadow: 0 2px 2px 0 rgb(255, 217, 57), 0 3px 1px -2px rgb(255, 217, 57), 0 1px 5px 0 rgb(255, 217, 57);\n    box-shadow: 0 2px 2px 0 rgb(255, 217, 57), 0 3px 1px -2px rgb(255, 217, 57), 0 1px 5px 0 rgb(255, 217, 57);\n}\ntable.box-table td.formtext {\n    color:#8a2be2;\n}\n.highcontrast table.box-table td.formtext {\n    color:#f8fc08;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}