{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"/**\n * AutoComplete Default functionality Sample\n */\nimport { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { DropDownListComponent, VirtualScroll, DropDownListModule } from '@syncfusion/ej2-angular-dropdowns';\nimport { Query, DataManager, UrlAdaptor } from '@syncfusion/ej2-data';\n\n\n\nDropDownListComponent.Inject(VirtualScroll);\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ DropDownListModule, ]\n})\nexport class AppComponent {\n    \n    public listObj: DropDownListComponent;\n    // defined the array of data\n    public records: { [key: string]: Object }[] = [];\n    constructor() {\n        for (let i = 1; i <= 150; i++) {\n            let item: { [key: string]: Object } = {};\n            item.id = 'id' + i;\n            item.text = `Item ${i}`;\n        \n            // Generate a random number between 1 and 4 to determine the group\n            const randomGroup = Math.floor(Math.random() * 4) + 1;\n            switch (randomGroup) {\n                case 1:\n                    item.group = 'Group A';\n                    break;\n                case 2:\n                    item.group = 'Group B';\n                    break;\n                case 3:\n                    item.group = 'Group C';\n                    break;\n                case 4:\n                    item.group = 'Group D';\n                    break;\n                default:\n                    break;\n            }\n            this.records.push(item);\n        }\n    }\n    // bind the DataManager instance to dataSource property\n    public customerData: DataManager = new DataManager({\n        url: 'https://services.syncfusion.com/js/production/api/VirtualDropdownData',\n        adaptor: new UrlAdaptor,\n        crossDomain: true\n    });\n    // maps the appropriate column to fields property\n    public fields: { [key: string]: string } = { text: 'text', value: 'id' };\n    public customerField: { [key: string]: string } = { text: 'OrderID', value: 'OrderID' };\n    public groupField: { [key: string]: string } = { groupBy: 'group', text: 'text', value: 'id' };\n    public waterMark: string = 'e.g. Item 1';\n    public customerWaterMark: string = 'OrderId';\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n\n<div class=\"control-section\">\n    <div class=\"content-wrapper\">\n        <div id='local' class='col-lg-6' style=\"margin: 0 auto;padding-top: 25px;\">\n            <div class='drop-down-list-content'>\n                <label class=\"h4\">Local Data</label>\n                <ejs-dropdownlist id='local-data' #sample1 [dataSource]='records' [placeholder]='waterMark' [fields]='fields' [allowFiltering]='false' [enableVirtualization]='true' popupHeight='200px'></ejs-dropdownlist>\n            </div>\n        </div>\n        <div id='remote' class='col-lg-6' style=\"margin: 0 auto;padding-top: 25px;\">\n            <div class='drop-down-list-content'>\n                <label class=\"h4\">Remote Data</label>\n                <ejs-dropdownlist id='remote-data' #sample2 [dataSource]='customerData' [placeholder]='customerWaterMark' [fields]='customerField' [allowFiltering]='true' [enableVirtualization]='true' popupHeight='200px'></ejs-dropdownlist>\n            </div>\n        </div>\n        <div id='group' class='col-lg-6' style=\"margin: 0 auto;padding-top: 25px;\">\n            <div class='drop-down-list-content'>\n                <label class=\"h4\">Grouping</label>\n                <ejs-dropdownlist id='group-data' #sample3 [dataSource]='records' [placeholder]='waterMark' [fields]='groupField' [allowFiltering]='true' [enableVirtualization]='true' popupHeight='200px'></ejs-dropdownlist>\n            </div>\n        </div>\n    </div>\n</div>\n\n<style>\n    .drop-down-list-content {\n        margin: 0 auto; \n        width: 250px;\n    }\n    .drop-down-list-content .h4 {\n        font-size: 16px;\n        margin: 0 0 10px;\n        font-weight: bold;\n    }\n</style>","app.component.css":".property-panel-content {\n    padding: 0 10px 10px 0;\n}\n\n.content {\n    width: 43%;\n    margin: 0 auto;\n    min-width: 185px;\n    padding: 25px 0px;\n}\n\n.control-label {\n    padding: 24px 0px 0px 0px;\n    font-size: 12px;\n    opacity: 0.54;\n}\n\n.control-section,\n.content-wrapper {\n    min-height: 350px;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}