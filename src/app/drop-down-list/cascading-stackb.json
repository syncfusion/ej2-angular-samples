{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"/**\n * DropDownList Cascading Sample\n */\nimport { Component, ViewChild } from '@angular/core';\nimport { Query } from '@syncfusion/ej2-data';\nimport { DropDownListComponent, DropDownListModule } from '@syncfusion/ej2-angular-dropdowns';\n\n\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    standalone: true,\n    imports: [ DropDownListModule, ]\n})\n\nexport class AppComponent {\n    // define the country DropDownList data\n    public country: { [key: string]: Object }[] = [\n        { CountryName: 'Australia', CountryId: '2' },\n        { CountryName: 'United States', CountryId: '1' }\n    ];\n    // define the state DropDownList data\n    public state: { [key: string]: Object }[] = [\n        { StateName: 'New York', CountryId: '1', StateId: '101' },\n        { StateName: 'Queensland', CountryId: '2', StateId: '104' },\n        { StateName: 'Tasmania ', CountryId: '2', StateId: '105' },\n        { StateName: 'Victoria', CountryId: '2', StateId: '106' },\n        { StateName: 'Virginia ', CountryId: '1', StateId: '102' },\n        { StateName: 'Washington', CountryId: '1', StateId: '103' }\n    ];\n    // define the city DropDownList data\n    public cities: { [key: string]: Object }[] = [\n        { CityName: 'Aberdeen', StateId: '103', CityId: 207 },\n        { CityName: 'Alexandria', StateId: '102', CityId: 204 },\n        { CityName: 'Albany', StateId: '101', CityId: 201 },\n        { CityName: 'Beacon ', StateId: '101', CityId: 202 },\n        { CityName: 'Brisbane ', StateId: '104', CityId: 211 },\n        { CityName: 'Cairns', StateId: '104', CityId: 212 },\n        { CityName: 'Colville ', StateId: '103', CityId: 208 },\n        { CityName: 'Devonport', StateId: '105', CityId: 215 },\n        { CityName: 'Emporia', StateId: '102', CityId: 206 },\n        { CityName: 'Geelong', StateId: '106', CityId: 218 },\n        { CityName: 'Hampton ', StateId: '102', CityId: 205 },\n        { CityName: 'Healesville ', StateId: '106', CityId: 217 },\n        { CityName: 'Hobart', StateId: '105', CityId: 213 },\n        { CityName: 'Launceston ', StateId: '105', CityId: 214 },\n        { CityName: 'Lockport', StateId: '101', CityId: 203 },\n        { CityName: 'Melbourne', StateId: '106', CityId: 216 },\n        { CityName: 'Pasco', StateId: '103', CityId: 209 },\n        { CityName: 'Townsville', StateId: '104', CityId: 210 }\n    ];\n    // maps the country columns to fields property\n    public countryFields: Object = { value: 'CountryId', text: 'CountryName' };\n    // maps the state columns to fields property\n    public stateFields: Object = { value: 'StateId', text: 'StateName' };\n    // maps the city columns to fields property\n    public cityFields: Object = { text: 'CityName', value: 'CityId' };\n    // set the placeholder to DropDownList input element\n    public countryWaterMark: string = 'Select a country';\n    public stateWaterMark: string = 'Select a state';\n    public cityWaterMark: string = 'Select a city';\n    @ViewChild('countryList')\n    // country DropDownList instance\n    public countryObj: DropDownListComponent;\n    @ViewChild('stateList')\n    // state DropDownList instance\n    public stateObj: DropDownListComponent;\n    @ViewChild('cityList')\n    // city DropDownList instance\n    public cityObj: DropDownListComponent;\n    public onChange1(): void {\n        this.stateObj.enabled = true;\n        // query the data source based on country DropDownList selected value\n        let tempQuery: Query = new Query().where('CountryId', 'equal', this.countryObj.value as any);\n        this.stateObj.query = tempQuery;\n        // clear the existing selection.\n        this.stateObj.text = null;\n        // bind the property changes to state DropDownList\n        this.stateObj.dataBind();\n        // clear the existing selection.\n        this.cityObj.text = null;\n        this.cityObj.enabled = false;\n        // bind the property changes to city DropDownList\n        this.cityObj.dataBind();\n    }\n    public onChange2(): void {\n        this.cityObj.enabled = true;\n        // query the data source based on state DropDownList selected value\n        let tempQuery1: Query = new Query().where('StateId', 'equal', this.stateObj.value as any);\n        this.cityObj.query = tempQuery1;\n        // clear the existing selection.\n        this.cityObj.text = null;\n        // bind the property changes to city DropDownList\n        this.cityObj.dataBind();\n    }\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n\n<div class=\"control-section\">\n    <div class='control-wrapper' style='width: 250px; margin: 0 auto'>\n        <div style='padding-top: 35px;'>\n            <ejs-dropdownlist #countryList id='country' [dataSource]='country' [fields]='countryFields' (change)='onChange1()' popupHeight='auto' [placeholder]='countryWaterMark'></ejs-dropdownlist>\n        </div>\n        <div style='padding-top: 35px;'>\n            <ejs-dropdownlist #stateList id='state' [dataSource]='state' [fields]='stateFields' (change)='onChange2()' [placeholder]='stateWaterMark' popupHeight='auto'\n                [enabled]='false'></ejs-dropdownlist>\n        </div>\n        <div style='padding-top: 35px;'>\n            <ejs-dropdownlist #cityList id='city' [dataSource]='cities' [fields]='cityFields' [placeholder]='cityWaterMark' [enabled]='false' popupHeight='auto'></ejs-dropdownlist>\n        </div>\n    </div>\n</div>\n","app.component.css":".control-section {\n    max-width: 350px;\n    margin: 0 auto;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}