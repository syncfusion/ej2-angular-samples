{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"/**\n * Selection and highglight sample\n */\nimport { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { TreeMap, TreeMapHighlight, TreeMapSelection, HighLightMode, SelectionMode, TreeMapModule } from '@syncfusion/ej2-angular-treemap';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { ILoadEventArgs, TreeMapTheme } from '@syncfusion/ej2-angular-treemap';\nimport { EmitType } from '@syncfusion/ej2-base';\nimport { CheckBox, ChangeEventArgs as CheckBoxChangeEvents } from '@syncfusion/ej2-buttons';\n\n\nTreeMap.Inject(TreeMapHighlight, TreeMapSelection);\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [TreeMapModule,  ]\n})\nexport class AppComponent {\n   @ViewChild('treemap')\n   public treemap: TreeMap;\n   // custom code start\n   public load = (args: ILoadEventArgs) => {\n    let theme: string = location.hash.split('/')[1];\n    theme = theme ? theme : 'Material';\n    args.treemap.theme = <TreeMapTheme>(theme.charAt(0).toUpperCase() +\n    theme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n}\n// custom code end\ntitleSettings: object = {\n    text: 'Import and Export details of US'\n};\nselectionSettings: object = {\n    enable: true,\n    fill: '#58a0d3',\n    border: { width: 0.3, color: 'black' },\n    opacity: '1'\n};\nhighlightSettings: object = {\n    enable: true,\n    fill: '#71b0dd',\n    border: { width: 0.3, color: 'black' },\n    opacity: '1'\n};\n    leafItemSettings: object = {\n        labelPath: 'type',\n        fill: '#8ebfe2',\n        labelPosition: 'Center',\n        gap: 10\n    };\n    dataSource: object[] =  [\n        { dataType: 'Import', type: 'Animal products', product: '2010', sales: 20839332874 },\n        { dataType: 'Import', type: 'Animal products',   product: '2011', sales: 23098635589 },\n        { dataType: 'Import', type: 'Chemical products', product: '2010', sales: 141637951510 },\n        { dataType: 'Import', type: 'Chemical products', product: '2011', sales: 161550338209 },\n        { dataType: 'Import', type: 'Base metals',  product: '2010', sales: 86079439944 },\n        { dataType: 'Import', type: 'Base metals', product: '2011', sales: 103821671535 },\n        { dataType: 'Import', type: 'Textile articles',  product: '2010', sales: 97126140830 },\n        { dataType: 'Import', type: 'Textile articles', product: '2011', sales: 104980750811 },\n        { dataType: 'Export', type: 'Animal products',   product: '2010', sales:  15845503378 },\n        { dataType: 'Export', type: 'Animal products',   product: '2011', sales:  20650111620 },\n        { dataType: 'Export', type: 'Chemical products', product: '2010', sales: 136100054087 },\n        { dataType: 'Export', type: 'Chemical products', product: '2011', sales: 146341672411 },\n        { dataType: 'Export', type: 'Base metals', product: '2010', sales: 59060592813 },\n        { dataType: 'Export', type: 'Base metals', product: '2011', sales: 71785882641 },\n        { dataType: 'Export', type: 'Textile articles', product: '2010', sales: 20982380561 },\n        { dataType: 'Export', type: 'Textile articles', product: '2011', sales: 26016143783 }\n];\n    weightValuePath: string = 'sales';\n    headerStyle: object = {\n        size: '16px'\n    };\n    ngAfterViewInit() {\n        let highlightChange: EmitType<CheckBoxChangeEvents>;\n        let highlightCheckBox: CheckBox = new CheckBox(\n        {\n            change: highlightChange, checked: true\n        },\n        '#highlightEnable');\n        let selectionChange: EmitType<CheckBoxChangeEvents>;\n        let selectionCheckBox: CheckBox = new CheckBox(\n        {\n            change: selectionChange, checked: true\n        },\n        '#SelectionEnable');\n        highlightCheckBox.change = highlightChange = (e: CheckBoxChangeEvents) => {\n            this.treemap.highlightSettings.enable = e.checked;\n            this.treemap.refresh();\n        };\n        selectionCheckBox.change = selectionChange = (e: CheckBoxChangeEvents) => {\n            this.treemap.selectionSettings.enable = e.checked;\n            this.treemap.refresh();\n        };\n        let highlightMode: DropDownList = new DropDownList({\n        index: 0,\n        placeholder: 'Select highlight type',\n        width: '105%',\n        change: () => {\n            this.treemap.highlightSettings.mode = <HighLightMode>highlightMode.value;\n            this.treemap.refresh();\n        }\n    });\n        highlightMode.appendTo('#highlightMode');\n        let selectionMode: DropDownList = new DropDownList({\n        index: 0,\n        placeholder: 'Selection selection type',\n        width: '105%',\n        change: () => {\n            this.treemap.selectionSettings.mode = <SelectionMode>selectionMode.value;\n            this.treemap.refresh();\n        }\n    });\n        selectionMode.appendTo('#selectionMode');\n}\nconstructor() {\n    //code\n};\n\n    };","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<main>\n  <div class=\"control-section\">\n    <div class=\"col-lg-9\">\n      <ejs-treemap\n        id=\"container\"\n        #treemap\n        style=\"display: block\"\n        [dataSource]=\"dataSource\"\n        [highlightSettings]=\"highlightSettings\"\n        [weightValuePath]=\"weightValuePath\"\n        [titleSettings]=\"titleSettings\"\n        [leafItemSettings]=\"leafItemSettings\"\n        [selectionSettings]=\"selectionSettings\"\n        (load)=\"load($event)\"\n      >\n        <e-levels>\n          <e-level\n            groupPath=\"dataType\"\n            fill=\"#c5e2f7\"\n            headerAlignment=\"Center\"\n            groupGap=\"5\"\n            [headerStyle]=\"headerStyle\"\n          >\n          </e-level>\n          <e-level\n            groupPath=\"product\"\n            fill=\"#a4d1f2\"\n            headerAlignment=\"Center\"\n            groupGap=\"2\"\n          >\n          </e-level>\n        </e-levels>\n      </ejs-treemap>\n      <div style=\"float: right; margin-right: 10px\">\n        Source:\n        <a\n          href=\" https://www.indexmundi.com/trade/imports/?country=jp\"\n          target=\"_blank\"\n          >www.indexmundi.com</a\n        >\n      </div>\n    </div>\n    <div class=\"col-lg-3 property-section\">\n      <div class=\"property-panel-section\">\n        <div class=\"property-panel-header\">Properties</div>\n        <div class=\"property-panel-content\">\n          <table\n            id=\"property\"\n            title=\"Properties\"\n            style=\"width: 100%\"\n            role=\"none\"\n          >\n            <tbody>\n              <tr style=\"height: 50px\">\n                <td style=\"width: 60%\">\n                  <div class=\"property-text\"><b>Highlight</b></div>\n                </td>\n              </tr>\n              <tr style=\"height: 50px\">\n                <td style=\"width: 60%\">\n                  <div class=\"property-text\">Enable</div>\n                </td>\n                <td style=\"width: 40%\">\n                  <div class=\"selectionCheckBox\" style=\"padding-top: 10px\">\n                    <input\n                      class=\"check\"\n                      type=\"checkbox\"\n                      id=\"highlightEnable\"\n                      checked=\"\"\n                    />\n                  </div>\n                </td>\n              </tr>\n              <tr style=\"height: 50px\">\n                <td style=\"width: 60%\">\n                  <div class=\"property-text\">Mode</div>\n                </td>\n                <td style=\"width: 40%\">\n                  <div>\n                    <select\n                      name=\"selectIndex\"\n                      autocomplete=\"off\"\n                      id=\"highlightMode\"\n                      style=\"width: 60%\"\n                    >\n                      <option value=\"Item\" selected=\"\">Item</option>\n                      <option value=\"Child\">Child</option>\n                      <option value=\"Parent\">Parent</option>\n                      <option value=\"All\">All</option>\n                    </select>\n                  </div>\n                </td>\n              </tr>\n              <tr style=\"height: 50px\">\n                <td style=\"width: 60%\">\n                  <div class=\"property-text\"><b>Selection</b></div>\n                </td>\n              </tr>\n              <tr style=\"height: 50px\">\n                <td style=\"width: 60%\">\n                  <div class=\"property-text\">Enable</div>\n                </td>\n                <td style=\"width: 40%\">\n                  <div class=\"selectionCheckBox\" style=\"padding-top: 10px\">\n                    <input\n                      class=\"check\"\n                      type=\"checkbox\"\n                      id=\"SelectionEnable\"\n                      checked=\"\"\n                    />\n                  </div>\n                </td>\n              </tr>\n              <tr style=\"height: 50px\">\n                <td style=\"width: 60%\">\n                  <div class=\"property-text\">Mode</div>\n                </td>\n                <td style=\"width: 40%\">\n                  <div>\n                    <select\n                      name=\"selectIndex\"\n                      autocomplete=\"off\"\n                      id=\"selectionMode\"\n                      style=\"width: 60%\"\n                    >\n                      <option value=\"Item\" selected=\"\">Item</option>\n                      <option value=\"Child\">Child</option>\n                      <option value=\"Parent\">Parent</option>\n                      <option value=\"All\">All</option>\n                    </select>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n<style>\n    .e-view.fluent2-dark #property .selectionCheckBox, .e-view.fluent2-highcontrast #property .selectionCheckBox {\n        margin-left: -10px;\n    }\n    .e-view.fluent2 #property .selectionCheckBox {\n        margin-left: -4px;\n    }\n</style>\n  <section id=\"action-description\" aria-label=\"Description of TreeMap sample\">\n    <p>\n      This sample depicts the details of Imports made by Japan. Selection and\n      highlight has been enabled in this sample.\n    </p>\n  </section>\n  <section\n    id=\"description\"\n    aria-label=\"Description of the TreeMap features demonstrated in this sample\"\n  >\n    <p>\n      In this example, you can see the modes available for performing highlight\n      and selection in treemap. It can be either enabled or disabled.\n    </p>\n    <br />\n    <p style=\"font-weight: 500\">Injecting Module</p>\n    <p>\n      Treemap component features are segregated into individual feature-wise\n      modules. To use highlight and selection, inject the\n      <code>Selection</code> module using the\n      <code>Treemap.Inject(TreeMapSelection)</code>inject the\n      <code>Highlight</code> module using the\n      <code>Treemap.Inject(TreeMapHighlight)</code> method.\n    </p>\n  </section>\n\n  <!-- custom code start -->\n  <style>\n    label {\n      height: 32px !important;\n    }\n    .property-text {\n      font-family: 'Roboto', 'Segoe UI', 'GeezaPro', 'DejaVu Serif',\n        'sans-serif' !important;\n      font-size: 13px !important;\n      font-weight: 400 !important;\n    }\n  </style>\n  <!-- custom code end -->\n</main>\n","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-treemap\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-treemap\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}