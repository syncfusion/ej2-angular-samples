{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","pie-chart.ts":"/**\n * Metals Data \n */\n//tslint:disable\nexport let Continent_Data: Object[] = [\n    { Continent: 'Afica', Gender: 'Male', Population: 518636010, Id: \"AficaMale\", PieHeight: '100px', PieWidth: '100px' },\n    { Continent: 'Afica', Gender: 'Female', Population: 519058499, Id: \"AficaFemale\", PieHeight: '100px', PieWidth: '100px' },\n    { Continent: 'Asia', Gender: 'Male', Population: 2131947122, Id: \"AsiaMale\", PieHeight: '180px', PieWidth: '180px' },\n    { Continent: 'Asia', Gender: 'Female', Population: 2043385632, Id: \"AsiaFemale\", PieHeight: '180px', PieWidth: '180px' },\n    { Continent: 'Europe', Gender: 'Male', Population: 353542772, Id: \"EuropeMale\", PieHeight: '100px', PieWidth: '100px' },\n    { Continent: 'Europe', Gender: 'Female', Population: 380686199, Id: \"EuropeFemale\", PieHeight: '100px', PieWidth: '100px' },\n    { Continent: 'North America', Gender: 'Male', Population: 171213918, Id: \"NorthAmericaMale\", PieHeight: '70px', PieWidth: '70px' },\n    { Continent: 'North America', Gender: 'Female', Population: 176175064, Id: \"NorthAmericaFemale\", PieHeight: '70px', PieWidth: '70px' },\n    { Continent: 'Oceania', Gender: 'Male', Population: 176995465, Id: \"OceniaMale\", PieHeight: '70px', PieWidth: '70px' },\n    { Continent: 'Oceania', Gender: 'Female', Population: 174631245, Id: \"OceniaFemale\", PieHeight: '70px', PieWidth: '70px' },\n    { Continent: 'South America', Gender: 'Male', Population: 197745352, Id: \"SouthAmericaMale\", PieHeight: '70px', PieWidth: '70px' },\n    { Continent: 'South America', Gender: 'Female', Population: 190045352, Id: \"SouthAmericaFemale\", PieHeight: '70px', PieWidth: '70px' },\n]\nexport let Percentage_Population: Object[] = [\n    { Continent: 'Afica', Data1: 40.3, Data2: 56.3, Data3: 3.4 },\n\n    { Continent: 'Asia', Data1: 25.1, Data2: 67.8, Data3: 7.1 },\n\n    { Continent: 'Europe', Data1: 15.3, Data2: 68.3, Data3: 16.4 },\n\n    { Continent: 'North America', Data1: 19.6, Data2: 67, Data3: 13.4 },\n\n    { Continent: 'Oceania', Data1: 22.8, Data2: 65.9, Data3: 11.4 },\n\n    { Continent: 'South America', Data1: 26.8, Data2: 66.1, Data3: 7.1 },\n\n]\nexport let PercentageOfPopulation: Object[] = [\n\n    { Continent: 'Afica Male', Data1: 40.8, Data2: 56.2, Data3: 3.0 },\n    { Continent: 'Afica Female', Data1: 39.9, Data2: 56.4, Data3: 3.7 },\n    { Continent: 'Asia Male', Data1: 25.8, Data2: 67.7, Data3: 6.5 },\n    { Continent: 'Asia Female', Data1: 24.4, Data2: 67.8, Data3: 7.8 },\n    { Continent: 'Europe Male', Data1: 16.3, Data2: 70.2, Data3: 13.5 },\n    { Continent: 'Europe Female', Data1: 14.4, Data2: 66.5, Data3: 19.1 },\n    { Continent: 'North America Male', Data1: 20.4, Data2: 67.9, Data3: 11.8 },\n    { Continent: 'North America Female', Data1: 19.0, Data2: 66.1, Data3: 15 },\n    { Continent: 'Oceania Male', Data1: 23.2, Data2: 66.4, Data3: 10.5 },\n    { Continent: 'Oceania Female', Data1: 22.4, Data2: 65.3, Data3: 12.3 },\n    { Continent: 'South America Male', Data1: 27.7, Data2: 66.2, Data3: 6.2 },\n    { Continent: 'South America Female', Data1: 26.0, Data2: 66, Data3: 8 },\n\n]\n\n","app.component.ts":"/**\n * Pie sample\n */\nimport { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { TreeMap, ILoadedEventArgs, TreeMapTooltip, IResizeEventArgs, TreeMapModule } from '@syncfusion/ej2-angular-treemap';\nimport { Continent_Data } from './pie-chart';\nimport { AccumulationChart, PieSeries, DataLabel, AccumulationTooltip } from '@syncfusion/ej2-charts';\nimport { ILoadEventArgs, TreeMapTheme, ITreeMapTooltipRenderEventArgs } from '@syncfusion/ej2-angular-treemap';\n\n\nAccumulationChart.Inject(AccumulationChart, PieSeries, DataLabel, AccumulationTooltip);\nTreeMap.Inject(TreeMapTooltip);\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [TreeMapModule,  ]\n})\n\nexport class AppComponent {\n    @ViewChild('treemap')\n    public treemap: TreeMap;\n    // custom code start\n    public load = (args: ILoadEventArgs) => {\n        let theme: string = location.hash.split('/')[1];\n        theme = theme ? theme : 'Material';\n        args.treemap.theme = <TreeMapTheme>(theme.charAt(0).toUpperCase() +\n        theme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n    }\n    // custom code end\n    public count: number = 0;\n    public chartCollection: AccumulationChart[] = [];\n    public loaded(args: ILoadedEventArgs): void {\n        let template: Element = document.getElementById(args.treemap.element.id + '_Label_Template_Group');\n        if (template) {\n            for (let i: number = 0; i < template.childElementCount; i++) {\n                this.AccumulationChartRender((<Element>template.childNodes[i].childNodes[0]).id, i);\n            }\n        }\n    }\n    resize = (args: IResizeEventArgs) => {\n        for (let i: number = 0; i < this.chartCollection.length; i++) {\n            this.chartCollection[i].destroy();\n        }\n    }\ntooltipRendering = (args: ITreeMapTooltipRenderEventArgs) => {\n        //tslint:disable-next-line\n        if (args.item['groupIndex'] !== 1 ) {\n            args.cancel = true;\n        }\n    }\n    // custom code start\n    /*tslint:disable: no-string-literal */\n    // custom code end\n    public AccumulationChartRender(id: string, i: number): void {\n        let chartData: any = this.getData(i);\n        let dataSource: object = chartData['data'];\n        let name: string = chartData['name'];\n        let chart: AccumulationChart =  new AccumulationChart({\n            // Initialize the chart series\n            series: [\n                {\n                    explode: true,\n                    explodeIndex: 0,\n                    explodeOffset: '20%',\n                    name: name,\n                    palettes: ['#1E1E1E', '#00BDAE', '#FFFFFF'],\n                    dataSource: dataSource,\n                    dataLabel: {\n                        visible: false\n                    },\n                    type: 'Pie',\n                    xName: 'x',\n                    yName: 'y'\n                }\n            ],\n            legendSettings: {visible: false},\n            background: 'transparent',\n            tooltip: {\n                enable: true,\n                format: '${point.x} : ${point.y}%'\n            },\n        });\n        chart.appendTo('#' + id);\n        this.chartCollection.push(chart);\n    }\n\n    public getData(count: number): object {\n        let dataSource: object[];\n        let dataName: string;\n        if (count === 0) {\n            dataSource = [\n                { 'x': '0-15 years', y: 40.8 }, { 'x': '15-64 years', y: 56.2 },\n                { 'x': 'Above 64 years', y: 3.0 }\n            ];\n            dataName = 'Asia';\n        } else if (count === 1) {\n            dataSource = [\n                { 'x': '0-15 years', y: 15.5 }, { 'x': '15-64 years', y: 12.9 },\n                { 'x': 'Above 64 years', y: 41.4 }\n            ];\n            dataName = 'Asia';\n        } else if (count === 2) {\n            dataSource = [\n                { 'x': '0-15 years', y: 25.1 }, { 'x': '15-64 years', y: 67.8 },\n                { 'x': 'Above 64 years', y: 7.1 }\n            ];\n            dataName = 'Afica';\n        } else if (count === 3) {\n            dataSource = [\n                { 'x': '0-15 years', y: 15.3 }, { 'x': '15-64 years', y: 68.4 },\n                { 'x': 'Above 64 years', y: 16.3 }\n            ];\n            dataName = 'Afica';\n        } else if (count === 4) {\n            dataSource = [\n                { 'x': '0-15 years', y: 22.8 }, { 'x': '15-64 years', y: 65.9 },\n                { 'x': 'Above 64 years', y: 11.4 }\n            ];\n            dataName = 'Europe';\n        } else if (count === 5) {\n            dataSource = [\n                { 'x': '0-15 years', y: 26.8 }, { 'x': '15-64 years', y: 66.1 },\n                { 'x': 'Above 64 years', y: 7.1 }\n            ];\n            dataName = 'Europe';\n        } else if (count === 6) {\n            dataSource = [\n                { 'x': '0-15 years', y: 26.8 }, { 'x': '15-64 years', y: 66.1 },\n                { 'x': 'Above 64 years', y: 7.1 }\n            ];\n            dataName = 'South America';\n        } else if (count === 7) {\n            dataSource = [\n                { 'x': '0-15 years', y: 26.8 }, { 'x': '15-64 years', y: 66.1 },\n                { 'x': 'Above 64 years', y: 7.1 }\n            ];\n            dataName = 'South America';\n        } else if (count === 8) {\n            dataSource = [\n                { 'x': '0-15 years', y: 26.8 }, { 'x': '15-64 years', y: 66.1 },\n                { 'x': 'Above 64 years', y: 7.1 }\n            ];\n            dataName = 'Oceania';\n        } else if (count === 9) {\n            dataSource = [\n                { 'x': '0-15 years', y: 26.8 }, { 'x': '15-64 years', y: 66.1 },\n                { 'x': 'Above 64 years', y: 7.1 }\n            ];\n            dataName = 'Oceania';\n        } else if (count === 10) {\n            dataSource = [\n                { 'x': '0-15 years', y: 26.8 }, { 'x': '15-64 years', y: 66.1 },\n                { 'x': 'Above 64 years', y: 7.1 }\n            ];\n            dataName = 'North America';\n        } else if (count === 11) {\n            dataSource = [\n                { 'x': '0-15 years', y: 26.8 }, { 'x': '15-64 years', y: 66.1 },\n                { 'x': 'Above 64 years', y: 7.1 }\n            ];\n            dataName = 'North America';\n        }\n        count++;\n        return new Object({ name: dataName, data: dataSource });\n    }\n    tooltipSettings: object = {\n        visible: true,\n        format: ' ${Gender} : ${Population}'\n    };\n    titleSettings: object = {\n        text: 'Population of the continents based on gender and age group - 2011',\n        textStyle: { size: '15px' }\n    };\n    dataSource: object[] = Continent_Data;\n    weightValuePath: string = 'Population';\n    leafItemSettings: object = {\n        labelPath: 'Gender',\n        fill: '#A1317D',\n        showLabels: false,\n        border: { color: 'black', width: 0.5 },\n        labelFormat: '${Gender} : ${Population}',\n        templatePosition: 'Center',\n        labelTemplate: '<div style=\"height:{{:PieHeight}};width:{{:PieWidth}};\" id ={{:Id}}></div>',\n    };\n    levels: object[] = [\n        {\n            groupPath: 'Continent', fill: '#7E2361', border: { color: 'black', width: 1, },\n            headerAlignment: 'Center', groupGap: 0, headerStyle: { size: '14px' }\n        }\n    ];\n};","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<main>\n    <div class=\"control-section\">\n        <div align='center'>\n            <ejs-treemap id='container' #treemap style=\"display:block;\" [titleSettings] = 'titleSettings'[dataSource] ='dataSource'\n            [weightValuePath] ='weightValuePath' [tooltipSettings] = 'tooltipSettings' [leafItemSettings] = 'leafItemSettings' \n         [levels] = 'levels' format= 'n' useGroupingSeparator = 'true' (resize)=\"resize($event)\" (loaded)=\"loaded($event)\" (load)='load($event)' (tooltipRendering)='tooltipRendering($event)'>\n            </ejs-treemap>\n        </div>\n        <div style=\"float: right; margin-right: 10px;\">Source:\n            <a href=\" http://en.worldstat.info/Asia/\" target=\"_blank\">en.worldstat.info</a>\n        </div>\n        \n    </div>\n    <section id=\"action-description\" aria-label=\"Description of TreeMap sample\">\n        <p>\n            This sample visualizes the population of various continents in 2011 based on the gender and age group.\n        </p>\n    </section>\n    <section id=\"description\" aria-label=\"Description of the TreeMap features demonstrated in this sample\">\n        <p>\n            In this example, you can see how to render a pie chart as a template for leaf items in treemap. Any custom HTML element can be rendered as label template.\n        </p>\n        <p>\n            Tooltip is enabled in this example. To see the tooltip in action, hover the mouse over an item or tap an item in touch enabled devices.\n        </p>   \n    \n    </section>\n    \n</main>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-treemap\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-treemap\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-excel-export\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-pdf-export\":\"*\",\"@syncfusion/ej2-svg-base\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-charts\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}