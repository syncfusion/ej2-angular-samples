{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","econmics.ts":"/**\n * \n */\n//tslint:disable\nexport let econmics: Object[] =[\n    {State:\"United States\", GDP:17946, percentage:11.08, Rank:1},\t \n    {State:\"China\", GDP:10866, percentage: 28.42, Rank:2},\t \n    {State:\"Japan\", GDP:4123, percentage:-30.78, Rank:3},\t \n    {State:\"Germany\", GDP:3355, percentage:-5.19, Rank:4},\t \n    {State:\"United Kingdom\", GDP:2848, percentage:8.28, Rank:5},\t \n    {State:\"France\", GDP:2421, percentage:-9.69, Rank:6},\t \n    {State:\"India\", GDP:2073, percentage:13.65, Rank:7},\t \n    {State:\"Italy\", GDP:1814, percentage:-12.45, Rank:8},\t \n    {State:\"Brazil\", GDP:1774, percentage:-27.88, Rank:9},\t \n    {State:\"Canada\", GDP:1550, percentage:-15.02, Rank:10}\t \n     ]\t","app.component.ts":"/**\n * layout sample.\n */\nimport { Component, ViewEncapsulation, ViewChild, Inject } from '@angular/core';\nimport { TreeMap, TreeMapTooltip, LayoutMode, TreeMapTheme, ILoadEventArgs, RenderingMode, TreeMapModule } from '@syncfusion/ej2-angular-treemap';\nimport { econmics } from './econmics';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\n\n\nTreeMap.Inject(TreeMapTooltip);\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [TreeMapModule,  ]\n})\nexport class AppComponent {\n    @ViewChild('treemap')\n    public treemap: TreeMap;\n    // custom code start\n    public load = (args: ILoadEventArgs) => {\n        let theme: string = location.hash.split('/')[1];\n        theme = theme ? theme : 'Material';\n        args.treemap.theme = <TreeMapTheme>(theme.charAt(0).toUpperCase() +\n        theme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n    }\n    // custom code end\n        public titleSettings: object = {\n            text: 'Top 10 countries by GDP Nominal - 2015',\n            textStyle: {size: '15px'}\n        };\n        dataSource: object[] = econmics;\n        weightValuePath: string = 'GDP';\n        public tooltipSettings: object = {\n            visible: true,\n            format: '${State}<br>Rank : ${Rank}'\n\n        };\n        rangeColorValuePath: string = 'GDP';\n        public leafItemSettings: object = {\n            labelPath: 'State',\n            labelFormat: '${State}<br>$${GDP} Trillion<br>(${percentage} %)',\n            labelStyle: {\n                color: '#000000'\n            },\n            border: {\n                color: '#000000',\n                width: 0.5\n            },\n            colorMapping: [\n                {\n                    from: 1550,\n                    to: 17946,\n                    color: '#9cbb59',\n                    minOpacity: 0.7,\n                    maxOpacity: 1,\n                }\n            ]\n        };\n        ngAfterViewInit(): void {\n            let layout: DropDownList = new DropDownList({\n                index: 0, placeholder: 'Select layout type', width: '110%',\n                change: () => {\n                    this.treemap.layoutType = <LayoutMode>layout.value;\n                    this.treemap.refresh();\n                }\n            });\n            layout.appendTo('#layoutMode');\n            let direction: DropDownList = new DropDownList({\n                index: 0, placeholder: 'Select render direction', width: '110%',\n                change: () => {\n                    this.treemap.renderDirection  = <RenderingMode>direction.value;\n                    this.treemap.refresh();\n                }\n            });\n            direction.appendTo('#highlightMode');\n        }\n        constructor() {\n            \n        };\n    };","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<main>\n    <div class=\"control-section\">\n        <div class=\"col-lg-9\">\n        <ejs-treemap id='container' #treemap style=\"display:block;\" [titleSettings] = 'titleSettings' [dataSource] ='dataSource' [weightValuePath] ='weightValuePath' [leafItemSettings] ='leafItemSettings'\n        [tooltipSettings] = 'tooltipSettings' renderDirection= 'TopLeftBottomRight' [rangeColorValuePath] = 'rangeColorValuePath' (load)='load($event)'  >\n        </ejs-treemap>\n        <div style=\"float: right; margin-right: 10px;\">Source:\n                <a href=\" https://www.reinisfischer.com/top-10-largest-economies-world-gdp-nominal-2015\" target=\"_blank\">www.reinisfischer.com</a>\n            </div>\n    </div>   \n\n    <div class=\"col-lg-3 property-section\">\n        <div class=\"property-panel-section\">\n            <div class=\"property-panel-header\">Properties</div>\n            <div class=\"property-panel-content\">\n                <table class=\"property-panel-table\" role=\"none\" title=\"Properties\" style=\"width: 100%; margin-left: -10px\">\n                    <colgroup>\n                        <col span=\"1\" style=\"width: 50%;\">\n                        <col span=\"1\" style=\"width: 50%;\">\n                    </colgroup>\n                    <tr style=\"height: 50px\">\n                        <td>\n                            <div>Layout Type\n                            </div>\n                        </td>\n                        <td>\n                            <div>\n                                <select name=\"selectIndex\" autocomplete=\"off\" id=\"layoutMode\" style=\"width:60%;\">\n                                    <option value=\"Squarified\" selected>Squarified</option>\n                                    <option value=\"SliceAndDiceHorizontal\">Horizontal</option>\n                                    <option value=\"SliceAndDiceVertical\">Vertical</option>\n                                    <option value=\"SliceAndDiceAuto\">Auto</option>\n                                </select>\n                            </div>\n                        </td>\n                    </tr>\n                    </table>\n                    <table class=\"property-panel-table\" role=\"none\" title=\"Properties\" style=\"width: 100%; margin-left: -10px\">\n                        <colgroup>\n                            <col span=\"1\" style=\"width: 50%;\">\n                            <col span=\"1\" style=\"width: 50%;\">\n                        </colgroup>\n                    <tr style=\"height: 50px\">\n                        <td>\n                            <div>Render Direction\n                            </div>\n                        </td>\n                        <td>\n                            <div>\n                                <select name=\"selectIndex\" autocomplete=\"off\" id=\"highlightMode\" style=\"width:60%;\">\n                                    <option value=\"TopLeftBottomRight\" selected>TopLeftBottomRight</option>\n                                    <option value=\"TopRightBottomLeft\">TopRightBottomLeft</option>\n                                    <option value=\"BottomLeftTopRight\">BottomLeftTopRight</option>\n                                    <option value=\"BottomRightTopLeft\">BottomRightTopLeft</option>\n                                </select>\n                            </div>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n<section id=\"action-description\" aria-label=\"Description of TreeMap sample\">\n    <p>\n        This sample illustrates the details of GDP Nominal of top 10 countries in the year 2015. Layout of the treemap can be changed by using the <code>Layout Type</code> in properties panel.\n    </p>\n</section>\n<section id=\"description\" aria-label=\"Description of the TreeMap features demonstrated in this sample\">\n    <p>\n         In this example, you can change the layout of the treemap and we have applied desaturation color mapping, to denote weightage of the items by varying the fill color. Also we have formatted the labels text and placed it in multiple lines.\n    </p>\n    <p>\n        Tooltip is enabled in this example. To see the tooltip in action, hover the mouse over an item or tap an item in touch enabled devices.\n    </p>\n</section>\n<!-- custom code start -->\n<style>\n.control-section {\n    min-height: 450px;\n}\n</style>\n<!-- custom code end -->\n</main>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-treemap\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-treemap\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-dropdowns\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}