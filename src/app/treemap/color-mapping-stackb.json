{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","color.ts":"//tslint:disable\nexport let color: Object[] =[\n    {Name: \"Greenland\", Area: 2130800, Population: 56483, Location: \"North America\" },\n    {Name: \"New Guinea\", Area:785753, Population: 1306940, Location: \"Oceania\"},\n    {Name: \"Borneo\", Area:743330, Population: 19804064, Location:\"Asia\" },\n    {Name: \"Madagascar\", Area: 587713, Population: 22005222, Location: \"Africa\"},\n    {Name: \"Baffin Island\", Area:507451, Population:10745, Location: \"North America\" },\n    {Name: \"Sumatra\", Area: 443066, Population:50000000, Location: \"Asia\"},\n    {Name: \"Honshu\", Area:225800, Population: 103000000, Location: \"Asia\"},\n    {Name: \"Victoria Island\", Area:217291, Population: 1875, Location: \"North America\"},\n    {Name: \"Great Britain\", Area:209331, Population:60800000, Location:\"Europe\" },\n    {Name: \"Ellesmere Island\", Area: 183965, Population: 146, Location: \"North America\"}\n]\n","app.component.ts":"/**\n * color-mapping\n */\n// custom code start\n//tslint:disable\n// custom code end\nimport { Component, ViewEncapsulation, Inject, ViewChild } from '@angular/core';\nimport { TreeMap, TreeMapTooltip, LayoutMode, TreeMapAjax, ILoadEventArgs, TreeMapTheme, TreeMapModule } from '@syncfusion/ej2-angular-treemap';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { CheckBox, ChangeEventArgs as CheckBoxChangeEvents } from '@syncfusion/ej2-buttons';\nimport { EmitType } from '@syncfusion/ej2-base';\nimport{ color } from './color'\nTreeMap.Inject(TreeMapTooltip);\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [TreeMapModule]\n})\nexport class AppComponent {\n    @ViewChild('treemap')\n    public treemap: TreeMap;\n    // custom code start\n    public load = (args: ILoadEventArgs) => {\n        let theme: string = location.hash.split('/')[1];\n        theme = theme ? theme : 'Material';\n        args.treemap.theme = <TreeMapTheme>(theme.charAt(0).toUpperCase() +\n        theme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n        // let dropdownValue: HTMLInputElement = document.getElementById('colorMapping') as HTMLInputElement;\n        // let opacityCheck: HTMLInputElement = document.getElementById('opacity') as HTMLInputElement;\n        // if(dropdownValue.value === 'DesaturationColorMapping'){\n        //     document.getElementById('hideOne').style.visibility = 'visible';\n        //     if(opacityCheck.checked){\n        //         document.getElementById('hideTwo').style.visibility = 'visible';\n        //         document.getElementById('hideThree').style.visibility = 'visible';\n        //     } else{\n        //         document.getElementById('hideTwo').style.visibility = 'hidden';\n        //         document.getElementById('hideThree').style.visibility = 'hidden';\n        //     }\n        // } else{\n        //     document.getElementById('hideOne').style.visibility = 'hidden';                \n        //     document.getElementById('hideTwo').style.visibility = 'hidden';\n        //     document.getElementById('hideThree').style.visibility = 'hidden';\n        // }\n    }\n    // custom code end\n        public titleSettings: object = {\n            text: 'Top 10 largest islands in the World',\n            textStyle: { size: '15px' }\n        };\n        dataSource: any = color;\n        weightValuePath: string = 'Area';\n        public tooltipSettings: object = {\n            visible: true,\n            format: 'Name: ${Name}<br>Area: ${Area} per square kms<br>Continent: ${Location}',\n            opacity: 0.8\n        };\n        public legendSettings: object = {\n            visible: true,\n            position: 'Bottom',\n            mode: 'Interactive',\n            height: '10',\n            title: {\n                text: 'Area'\n            },\n        };\n        rangeColorValuePath: string = 'Area';\n        public leafItemSettings: object = {\n            labelPath: 'Name',\n            border: { color: 'white', width: 0.5 },\n            colorMapping: [\n                { from: 100000, to: 250000, label: '0.1M - 0.25M', color: '#547C84' },\n                { from: 250000, to: 550000, label: '0.25M - 0.55M', color: '#37AFAB' },\n                { from: 550000, to: 750000, label: '0.55M - 0.75M', color: '#A4D6AD' },\n                { from: 750000, to: 2250000, label: '0.75M - 2M', color: '#DEEBAE' },\n                { to: null, from: null,  color: 'null' },\n                { to: null, from: null,  color: 'null' },\n            ]\n        };\n        ngAfterViewInit(): void {\n            let opacity: EmitType<CheckBoxChangeEvents>;\n            let highlightCheckBox: CheckBox = new CheckBox(\n            {\n                change: opacity, checked: false\n            },\n            '#opacity');\n        document.getElementById('minopacity').onpointermove = document.getElementById('minopacity').ontouchmove =\n        document.getElementById('minopacity').onchange = () => {\n            if (highlightCheckBox.checked) {\n            let slider: HTMLInputElement = document.getElementById('minopacity') as HTMLInputElement;\n            let minOpacity: number = parseFloat(slider.value);\n            this.treemap.leafItemSettings.colorMapping[0].minOpacity = minOpacity;\n            this.treemap.leafItemSettings.colorMapping[1].minOpacity = minOpacity;\n            this.treemap.refresh();\n            }\n    };\n    document.getElementById('maxopacity').onpointermove = document.getElementById('maxopacity').ontouchmove =\n    document.getElementById('maxopacity').onchange = () => {\n        if (highlightCheckBox.checked) {\n        let slider: HTMLInputElement = document.getElementById('maxopacity') as HTMLInputElement;\n        let maxOpacity: number = parseFloat(slider.value);\n        this.treemap.leafItemSettings.colorMapping[0].maxOpacity = maxOpacity;\n        this.treemap.leafItemSettings.colorMapping[1].maxOpacity = maxOpacity;\n        this.treemap.refresh();\n        }\n    };\n    highlightCheckBox.change = opacity = (e: CheckBoxChangeEvents) => {\n        let minOpacity: HTMLInputElement = document.getElementById('minopacity') as HTMLInputElement;\n        let maxOpacity: HTMLInputElement = document.getElementById('maxopacity') as HTMLInputElement;\n        if (e.checked) {\n            document.getElementById('text2').style.display = 'block';\n            document.getElementById('input2').style.display = 'block';\n            document.getElementById('text3').style.display = 'block';\n            document.getElementById('input3').style.display = 'block';\n            this.treemap.leafItemSettings.colorMapping[0].minOpacity = parseFloat(minOpacity.value);\n            this.treemap.leafItemSettings.colorMapping[0].maxOpacity = parseFloat(maxOpacity.value);\n            this.treemap.leafItemSettings.colorMapping[1].minOpacity = parseFloat(minOpacity.value);\n            this.treemap.leafItemSettings.colorMapping[1].maxOpacity = parseFloat(maxOpacity.value);            \n        } else {\n            document.getElementById('text2').style.display = 'none';\n            document.getElementById('input2').style.display = 'none';\n            document.getElementById('text3').style.display = 'none';\n            document.getElementById('input3').style.display = 'none';\n            this.treemap.leafItemSettings.colorMapping[0].minOpacity = null;\n            this.treemap.leafItemSettings.colorMapping[0].maxOpacity = null;\n            this.treemap.leafItemSettings.colorMapping[1].minOpacity = null;\n            this.treemap.leafItemSettings.colorMapping[1].maxOpacity = null;            \n        }\n        this.treemap.refresh();\n    };\n    let sampleValue: DropDownList = new DropDownList({\n        index: 0,\n        placeholder: 'Range ColorMaping',\n        width: '110%',\n        change: () => {\n            let element: string = sampleValue.value.toString();\n            if (element === 'RangeColorMapping') { \n                document.getElementById('text1').style.display = 'none';\n                document.getElementById('input1').style.display = 'none';\n                document.getElementById('text2').style.display = 'none';\n                document.getElementById('input2').style.display = 'none';\n                document.getElementById('text3').style.display = 'none';\n                document.getElementById('input3').style.display = 'none';               \n                this.treemap.rangeColorValuePath = 'Area';\n                this.treemap.leafItemSettings.colorMapping[1].minOpacity = null;\n                this.treemap.leafItemSettings.colorMapping[1].maxOpacity = null;\n                this.treemap.leafItemSettings.colorMapping[2].minOpacity = null;\n                this.treemap.leafItemSettings.colorMapping[2].maxOpacity = null;\n                this.treemap.leafItemSettings.colorMapping[3].minOpacity = null;\n                this.treemap.leafItemSettings.colorMapping[3].maxOpacity = null;\n                this.treemap.leafItemSettings.colorMapping[4].minOpacity = null;\n                this.treemap.leafItemSettings.colorMapping[4].maxOpacity = null;\n                this.treemap.leafItemSettings.colorMapping[5].minOpacity = null;\n                this.treemap.leafItemSettings.colorMapping[5].maxOpacity = null;\n                this.treemap.leafItemSettings.colorMapping[0].from = 100000;\n                this.treemap.leafItemSettings.colorMapping[0].to = 250000;\n                this.treemap.leafItemSettings.colorMapping[0].value = null;\n                this.treemap.leafItemSettings.colorMapping[0].minOpacity = null;\n                this.treemap.leafItemSettings.colorMapping[0].maxOpacity = null;\n                this.treemap.leafItemSettings.colorMapping[1].value = null;\n                this.treemap.leafItemSettings.colorMapping[2].value = null;\n                this.treemap.leafItemSettings.colorMapping[0].label = '0.1M - 0.25M';\n                this.treemap.leafItemSettings.colorMapping[0].color = '#547C84';\n                this.treemap.leafItemSettings.colorMapping[1].from = 250000;\n                this.treemap.leafItemSettings.colorMapping[1].to = 500000;\n                this.treemap.leafItemSettings.colorMapping[1].label = '0.25M - 0.50M';\n                this.treemap.leafItemSettings.colorMapping[1].color = '#37AFAB';\n                this.treemap.leafItemSettings.colorMapping[2].from = 500000;\n                this.treemap.leafItemSettings.colorMapping[2].to = 750000;\n                this.treemap.leafItemSettings.colorMapping[2].label = '0.5M - 0.75M';\n                this.treemap.leafItemSettings.colorMapping[2].color = '#A4D6AD';\n                this.treemap.leafItemSettings.colorMapping[2].value = null;\n                this.treemap.leafItemSettings.colorMapping[3].from = 750000;\n                this.treemap.leafItemSettings.colorMapping[3].to = 2200000;\n                this.treemap.leafItemSettings.colorMapping[3].label = '0.75M - 2M';\n                this.treemap.leafItemSettings.colorMapping[3].color = '#DEEBAE';\n                this.treemap.leafItemSettings.colorMapping[4].from = null;\n                this.treemap.leafItemSettings.colorMapping[3].value = null;\n                this.treemap.leafItemSettings.colorMapping[4].to = null;\n                this.treemap.leafItemSettings.colorMapping[4].label = null;\n                this.treemap.leafItemSettings.colorMapping[4].value = null;\n                this.treemap.leafItemSettings.colorMapping[4].color = null;\n                this.treemap.leafItemSettings.colorMapping[5].to = null;\n                this.treemap.leafItemSettings.colorMapping[5].label = null;\n                this.treemap.leafItemSettings.colorMapping[5].value = null;\n                this.treemap.leafItemSettings.colorMapping[5].color = null;\n                this.treemap.leafItemSettings.colorMapping[5].from = null;\n                this.treemap.legendSettings.title.text = 'Area';\n                this.treemap.refresh();\n            } else if (element === 'EqualColorMapping') {\n                document.getElementById('text1').style.display = 'none';\n                document.getElementById('input1').style.display = 'none';\n                document.getElementById('text2').style.display = 'none';\n                document.getElementById('input2').style.display = 'none';\n                document.getElementById('text3').style.display = 'none';\n                document.getElementById('input3').style.display = 'none';            \n                this.treemap.rangeColorValuePath = null;\n                this.treemap.leafItemSettings.colorMapping[0].from = null;\n                this.treemap.leafItemSettings.colorMapping[0].to = null;\n                this.treemap.leafItemSettings.colorMapping[0].label = null;\n                this.treemap.leafItemSettings.colorMapping[1].label = null;\n                this.treemap.leafItemSettings.colorMapping[2].label = null;\n                this.treemap.leafItemSettings.colorMapping[3].label = null;\n                this.treemap.leafItemSettings.colorMapping[4].label = null;\n                this.treemap.leafItemSettings.colorMapping[0].value = 'North America';\n                this.treemap.leafItemSettings.colorMapping[0].color = '#DEEBAE';\n                this.treemap.leafItemSettings.colorMapping[1].from = null;\n                this.treemap.leafItemSettings.colorMapping[1].to = null;\n                this.treemap.leafItemSettings.colorMapping[1].value = 'Oceania';\n                this.treemap.leafItemSettings.colorMapping[1].color = '#A4D6AD';\n                this.treemap.leafItemSettings.colorMapping[2].from = null;\n                this.treemap.leafItemSettings.colorMapping[2].to = null;\n                this.treemap.leafItemSettings.colorMapping[2].value = 'Asia';\n                this.treemap.leafItemSettings.colorMapping[2].color = '#37AFAB';\n                this.treemap.leafItemSettings.colorMapping[3].from = null;\n                this.treemap.leafItemSettings.colorMapping[3].to = null;\n                this.treemap.leafItemSettings.colorMapping[3].value = 'Africa';\n                this.treemap.leafItemSettings.colorMapping[3].color = '#547C84';\n                this.treemap.leafItemSettings.colorMapping[4].from = null;\n                this.treemap.leafItemSettings.colorMapping[4].to = null;\n                this.treemap.leafItemSettings.colorMapping[4].value = 'Europe';\n                this.treemap.leafItemSettings.colorMapping[4].color = '#CEBF93';\n                this.treemap.leafItemSettings.colorMapping[0].minOpacity = null;\n                this.treemap.leafItemSettings.colorMapping[0].maxOpacity = null;\n                this.treemap.leafItemSettings.colorMapping[1].minOpacity = null;\n                this.treemap.leafItemSettings.colorMapping[1].maxOpacity = null;\n                this.treemap.leafItemSettings.colorMapping[2].minOpacity = null;\n                this.treemap.leafItemSettings.colorMapping[2].maxOpacity = null;\n                this.treemap.leafItemSettings.colorMapping[3].minOpacity = null;\n                this.treemap.leafItemSettings.colorMapping[3].maxOpacity = null;\n                this.treemap.leafItemSettings.colorMapping[4].minOpacity = null;\n                this.treemap.leafItemSettings.colorMapping[4].maxOpacity = null;\n                this.treemap.equalColorValuePath = 'Location';\n                this.treemap.legendSettings.title.text = 'Continent';\n                this.treemap.refresh();\n            }else if (element === 'DesaturationColorMapping') {\n                document.getElementById('text1').style.display = 'block';\n                document.getElementById('input1').style.display = 'block';               \n                this.treemap.rangeColorValuePath = 'Area';\n                this.treemap.equalColorValuePath = null;\n                let minOpacity: HTMLInputElement = document.getElementById('minopacity') as HTMLInputElement;\n                let maxOpacity: HTMLInputElement = document.getElementById('maxopacity') as HTMLInputElement;\n                this.treemap.leafItemSettings.colorMapping[2].from = null;\n                this.treemap.leafItemSettings.colorMapping[2].to = null;\n                this.treemap.leafItemSettings.colorMapping[1].from = null;\n                this.treemap.leafItemSettings.colorMapping[1].to = null;\n                this.treemap.leafItemSettings.colorMapping[1].label = null;\n                this.treemap.leafItemSettings.colorMapping[3].from = null;\n                this.treemap.leafItemSettings.colorMapping[3].to = null;\n                this.treemap.leafItemSettings.colorMapping[0].from = 100000;\n                this.treemap.leafItemSettings.colorMapping[0].to = 2230800;\n                this.treemap.leafItemSettings.colorMapping[0].label = '0.1M - 2M';\n                this.treemap.leafItemSettings.colorMapping[0].value = null;\n                this.treemap.leafItemSettings.colorMapping[1].value = null;\n                this.treemap.leafItemSettings.colorMapping[2].value = null;\n                this.treemap.leafItemSettings.colorMapping[3].value = null;\n                this.treemap.leafItemSettings.colorMapping[2].color = null;\n                this.treemap.leafItemSettings.colorMapping[1].color = null;\n                this.treemap.leafItemSettings.colorMapping[3].color = null;\n                this.treemap.leafItemSettings.colorMapping[0].color = ['#F0D6AD', '#19547B'];\n                if (highlightCheckBox.checked) {\n                    document.getElementById('text2').style.display = 'block';\n                    document.getElementById('input2').style.display = 'block';\n                    document.getElementById('text3').style.display = 'block';\n                    document.getElementById('input3').style.display = 'block';\n                    this.treemap.leafItemSettings.colorMapping[0].minOpacity = parseFloat(minOpacity.value);\n                    this.treemap.leafItemSettings.colorMapping[0].maxOpacity = parseFloat(maxOpacity.value);\n                } else {\n                    this.treemap.leafItemSettings.colorMapping[0].minOpacity = null;\n                    this.treemap.leafItemSettings.colorMapping[0].maxOpacity = null;\n                }\n                this.treemap.legendSettings.title.text = 'Area';\n                this.treemap.refresh();\n            }\n        }\n    });\n    sampleValue.appendTo('#colorMapping');\n            }\n            constructor() {\n                \n            }\n    };","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<main>\n    <style>\n        #hideOne, #hideTwo, #hideThree{\n             visibility: hidden;\n         }\n         .e-view.fluent2-dark #property .opacityCheckBox, .e-view.fluent2-highcontrast #property .opacityCheckBox {\n            margin-left: -8px;\n         }\n         .e-view.fluent2 #property .opacityCheckBox {\n            margin-left: -4px;\n         }\n     </style>\n     <div class=\"control-section\">\n         <div class=\"col-lg-9\">\n         <ejs-treemap id='container' #treemap style=\"display:block;\" [titleSettings] = 'titleSettings' [dataSource] ='dataSource' [weightValuePath] ='weightValuePath' [leafItemSettings] ='leafItemSettings'\n         [tooltipSettings] = 'tooltipSettings' format='n' useGroupingSeparator=\"true\" [legendSettings] = 'legendSettings' [rangeColorValuePath] = 'rangeColorValuePath' (load)='load($event)'  >\n         </ejs-treemap>\n         \n     </div>\n     <div class=\"col-lg-3 property-section\">\n             <div class=\"property-panel-section\">\n                     <div class=\"property-panel-header\">Properties</div>\n                     <div class=\"property-panel-content\">\n         <table id=\"property\" title=\"Properties\" style=\"width: 100%\" role=\"none\" >\n             <colgroup>\n                 <col span=\"1\" style=\"width: 50%;\">\n                 <col span=\"1\" style=\"width: 50%;\">\n             </colgroup>\n                 <tr style=\"height: 50px\">\n                     <td>\n                         <div class=\"property-text\">Type</div>\n                     </td>\n                     <td>\n                         <select name=\"selectIndex\" autocomplete=\"off\" id=\"colorMapping\" style=\"width:60%;\">\n                             <option value=\"RangeColorMapping\" selected>Range </option>\n                             <option value=\"EqualColorMapping\">Equal </option>\n                             <option value=\"DesaturationColorMapping\">Desaturation</option>\n                         </select>\n                     </td>\n                 </tr>\n                 </table>\n                 <table id=\"property\" title=\"Properties\" style=\"width: 100%\" role=\"none\">\n                     <colgroup>\n                         <col span=\"1\" style=\"width: 50%;\">\n                         <col span=\"1\" style=\"width: 50%;\">\n                     </colgroup>\n                     <tr style=\"height: 50px\">\n                     <td>\n                         <div class=\"property-text\" id=\"text1\" style=\"display: none; width: 60%\"> Change Opacity</div>\n                     </td>\n                     <td>\n                         <div id=\"input1\" class=\"opacityCheckBox\" style=\"display: none\">\n                             <input type=\"checkbox\" id=\"opacity\"/>\n                         </div>\n                     </td>\n                 </tr>\n                 </table>\n                 <table title=\"Properties\" style=\"width: 100%\" role=\"none\">\n                     <colgroup>\n                         <col span=\"1\" style=\"width: 50%;\">\n                         <col span=\"1\" style=\"width: 50%;\">\n                     </colgroup>\n                     <tr style=\"height: 50px;\">\n                     <td>\n                         <div class=\"property-text\" id=\"text2\" style=\" display: none\">Min Opacity</div>\n                     </td>\n                     <td>\n                         <div id=\"input2\" style=\"display: none\">\n                         <input type=\"range\" id=\"minopacity\" step=\"0.1\" value=\"0.5\" min=\"0\" max=\"1\" style=\"width:110%;\"  />\n                     </div>\n                     </td>\n                 </tr>\n                 </table>\n                 <table title=\"Properties\" style=\"width: 100%\" role=\"none\">\n                     <colgroup>\n                         <col span=\"1\" style=\"width: 50%;\">\n                         <col span=\"1\" style=\"width: 50%;\">\n                     </colgroup>\n                     <tr style=\"height: 50px;\">\n                     <td>\n                         <div class=\"property-text\" id=\"text3\" style=\" display: none\">Max Opacity</div>\n                     </td>\n                     <td>\n                         <div id=\"input3\" style=\"display: none\">\n                         <input type=\"range\" id=\"maxopacity\" step=\"0.1\" value=\"1\" min=\"0\" max=\"1\" style=\"width:110%;\"  />\n                         </div>\n                     </td>\n                 </tr>\n         </table>\n     </div>\n     </div>\n     </div>\n     </div>\n     \n         \n</main>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-treemap\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-treemap\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}