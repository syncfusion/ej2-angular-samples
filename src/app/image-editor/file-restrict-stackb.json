{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { getComponent } from '@syncfusion/ej2-base';\nimport { ImageEditorComponent, ImageEditorModule } from '@syncfusion/ej2-angular-image-editor';\nimport { MultiSelectModule, MultiSelectComponent, CheckBoxSelectionService } from '@syncfusion/ej2-angular-dropdowns';\nimport { NumericTextBoxModule } from '@syncfusion/ej2-angular-inputs';\n\n\nimport { DropDownButtonModule } from '@syncfusion/ej2-angular-splitbuttons';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    providers: [CheckBoxSelectionService],\n    standalone: true,\n    imports: [ ImageEditorModule, DropDownButtonModule, MultiSelectModule, NumericTextBoxModule, ]\n})\nexport class AppComponent {\n  public fileExtensionsList = [\n    { Name: 'JPEG', Value: '.jpeg' },\n    { Name: 'JPG', Value: '.jpg' },\n    { Name: 'PNG', Value: '.png' },\n    { Name: 'SVG', Value: '.svg' },\n    { Name: 'WebP', Value: '.webp' }\n  ];\n  public defaultUnit = 'KB';\n  public fields = { text: 'Name', value: 'Value' };\n  public allowedExtensions: any = ['.jpeg', '.jpg', '.png', '.svg', '.webp'];\n  public minFileSize = 1;\n  public maxFileSize = 100;\n  public uploadSettings = {\n    minFileSize: this.convertToBytes(this.minFileSize),\n    maxFileSize: this.convertToBytes(this.maxFileSize),\n    allowedExtensions: this.allowedExtensions.join(', ')\n  };\n  public units = [\n    { text: 'MB' },\n    { text: 'KB' }\n  ];\n\n  onCreated() {\n    this.updateUploadSettings();\n  }\n\n  convertToBytes(value: number): number {\n    return value * (this.defaultUnit === 'MB' ? 1024 * 1024 : 1024);\n  }\n\n  updateMinFileSize(event: any): void {\n    if (event.value >= 0) {\n      this.minFileSize = event.value;\n      this.updateUploadSettings();\n    }\n  }\n\n  updateMaxFileSize(event: any): void {\n    if (event.value >= this.minFileSize) {\n      this.maxFileSize = event.value;\n      this.updateUploadSettings();\n    }\n  }\n\n  updateAllowedExtensions(event: any): void {\n    if (event.value.length === 0) {\n      this.allowedExtensions = \".jpeg, .jpg, .png, .svg, .webp\";\n    } else {\n      this.allowedExtensions = event.value;\n    }\n    this.updateUploadSettings();\n  }\n\n  updateUploadSettings(): void {\n    this.uploadSettings = {\n      minFileSize: this.convertToBytes(this.minFileSize),\n      maxFileSize: this.convertToBytes(this.maxFileSize),\n      allowedExtensions: this.allowedExtensions.join(', '),\n    };\n    const imageEditor = getComponent(document.getElementById('image-editor'), 'image-editor') as ImageEditorComponent;\n    if (imageEditor) {\n      imageEditor.uploadSettings = this.uploadSettings;\n      imageEditor.dataBind();\n    }\n  }\n\n  onSelect(args: any): void {\n    this.defaultUnit = args.item.text;\n    this.updateUploadSettings();\n  }\n\n  beforeItemRender(args: any): void {\n    if (args.item.text === this.defaultUnit) {\n      args.element.classList.add('e-selected');\n    }\n  }\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"col-lg-12 control-section\">\n    <div style=\"text-align: center;\">\n        <div class=\"e-img-editor-dropdown-container\">\n            <label>Size As</label><br />\n            <button ejs-dropdownbutton id=\"dropdownbtn\" [content]=\"defaultUnit\" [items]=\"units\" (select)=\"onSelect($event)\" (beforeItemRender)=\"beforeItemRender($event)\">\n            </button>\n        </div>\n        <div class=\"e-img-editor-numeric-textbox-container\">\n            <label for=\"minFileSize\">Minimum Size</label>\n            <br />\n            <ejs-numerictextbox id=\"minFileSize\" [value]=\"minFileSize\" [min]=\"1\" style=\"width: 180px\"\n                (change)=\"updateMinFileSize($event)\"></ejs-numerictextbox>\n        </div>\n        <div class=\"e-img-editor-numeric-textbox-container\">\n            <label for=\"maxFileSize\">Maximum Size</label>\n            <br />\n            <ejs-numerictextbox id=\"maxFileSize\" [value]=\"maxFileSize\" [min]=\"1\"\n                style=\"width: 180px\" (change)=\"updateMaxFileSize($event)\"></ejs-numerictextbox>\n        </div>\n        <div class=\"e-img-editor-dropdown-container\">\n            <label for=\"allowedExtensions\">Allowed Extensions</label><br />\n            <ejs-multiselect id=\"allowedExtensions\" [dataSource]=\"fileExtensionsList\" [fields]=\"fields\"\n                [value]=\"allowedExtensions\" mode=\"CheckBox\" [showSelectAll]=\"true\" style=\"width: 180px\"\n                (change)=\"updateAllowedExtensions($event)\"></ejs-multiselect>\n        </div>\n    </div>\n    <div class=\"e-img-editor-sample\">\n        <ejs-imageeditor id=\"image-editor\" [uploadSettings]=\"uploadSettings\" (created)=\"onCreated\"></ejs-imageeditor>\n    </div>\n</div>\n","app.component.css":".e-img-editor-numeric-textbox-container, \n.e-img-editor-dropdown-container {\n    display: inline-block;\n    margin-right: 30px;\n    text-align: left;\n}\n\n.e-img-editor-sample {\n    height: 80vh;\n    width: 100%;\n    margin-top: 18px;\n}\n@media only screen and (max-width: 700px) {\n  .e-img-editor-sample {\n    height: 75vh;\n    width: 100%;\n  }\n}\n.control-wrapper {\n\theight: 100%;\n}\n.e-image-editor {\n  margin: 0 auto;\n}\n\n.e-img-editor-dropdown-container #dropdownbtn {\n  font-weight: 400;\n}","dependencies.json":"{\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-image-editor\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-image-editor\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-angular-splitbuttons\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-angular-popups\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}