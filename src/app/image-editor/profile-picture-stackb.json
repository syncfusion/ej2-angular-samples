{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"/**\r\n * Profile picture Sample\r\n */\r\n import { Component, ViewChild, ViewEncapsulation } from '@angular/core';\r\n import { ImageEditorComponent, ImageEditorModule } from '@syncfusion/ej2-angular-image-editor';\r\n import { createElement } from '@syncfusion/ej2-base';\r\n import { DialogComponent, ButtonPropsModel, PositionDataModel, DialogModule } from '@syncfusion/ej2-angular-popups';\r\n import { AnimationSettingsModel } from '@syncfusion/ej2-splitbuttons';\n\n\r\n\r\n @Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ DialogModule, ImageEditorModule, ]\n})\r\n \r\n export class AppComponent {\r\n    @ViewChild('Dialog')\r\n    public DialogInstance: DialogComponent;\r\n    @ViewChild('ImageEditor')\r\n    public ImageEditorInstance: ImageEditorComponent;\r\n\r\n    public toolbarItems: string[] = [];\r\n    public header: string = 'Edit Profile Image';\r\n    public showCloseIcon: Boolean = true;\r\n    public closeOnEscape: Boolean = true;\r\n    public width: string = '340px';\r\n    public height: string = '420px';\r\n    public visible: boolean = false;\r\n    public animationSettings: AnimationSettingsModel = { effect: 'None' };\r\n    public target: string = '.control-section';\r\n    public position: PositionDataModel = { X: 'center', Y: 100 };\r\n    public imgSrc: string = '';\r\n    public created = (): void => {\r\n        if (this.ImageEditorInstance.theme && window.location.href.split('#')[1]) {\r\n            this.ImageEditorInstance.theme = window.location.href.split('#')[1].split('/')[1];\r\n        }\r\n    }\r\n\r\n    public imageLoaded = (): void => {\r\n        if (this.imgSrc === '') {\r\n            let canvas: HTMLCanvasElement = document.querySelector('#img-canvas');\r\n            let image: HTMLImageElement = document.querySelector('#demo-img');\r\n            let ctx: CanvasRenderingContext2D = canvas.getContext('2d');\r\n            canvas.width = image.width < image.height ? image.width : image.height; \r\n            canvas.height = canvas.width;\r\n            ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n            document.querySelector('.e-profile').classList.remove('e-hide');\r\n        }\r\n    }\r\n    \r\n    public dialogOpen = (): void => {\r\n        const img: HTMLImageElement = document.querySelector('#demo-img');\r\n        this.ImageEditorInstance.open(img.src);\r\n    }\r\n\r\n    public dialogClose = (): void => {\r\n        const img: HTMLImageElement = document.querySelector('#demo-img');\r\n        this.ImageEditorInstance.open(img.src);\r\n    }\r\n    \r\n    // canvas click event\r\n    public onOpenDialog = function(event: any): void {\r\n        this.DialogInstance.show();\r\n    };\r\n\r\n    public imageChanged = (args: any): void=> {\r\n        const URL = window.URL; const url = URL.createObjectURL((args.target as any).files[0]);  \r\n        this.ImageEditorInstance.open(url.toString());\r\n        (document.getElementById('img-upload') as HTMLInputElement).value = null;\r\n        this.imgSrc = url.toString();\r\n    }\r\n\r\n    public fileOpened = (): void=> {\r\n        this.ImageEditorInstance.select('circle');\r\n    }\r\n\r\n    public dlgOpenButtonClick = (): void => {\r\n        document.getElementById('img-upload').click();\r\n    }\r\n\r\n    public dlgResetBtnClick = (): void => {\r\n        this.ImageEditorInstance.reset();\r\n    }\r\n\r\n    public dlgRotateBtnClick = (): void => {\r\n        this.ImageEditorInstance.rotate(-90);\r\n    }\r\n\r\n    public dlgDoneBtnClick = (): void => {\r\n        this.ImageEditorInstance.crop();\r\n        const croppedData: ImageData = this.ImageEditorInstance.getImageData();\r\n        const canvas: HTMLCanvasElement = document.querySelector('#img-canvas');\r\n        const ctx: CanvasRenderingContext2D = canvas.getContext('2d');\r\n        const parentDiv: HTMLElement = document.querySelector('.e-profile');\r\n        const tempCanvas: HTMLCanvasElement = parentDiv.appendChild(createElement('canvas') as HTMLCanvasElement);\r\n        const tempContext: CanvasRenderingContext2D = tempCanvas.getContext('2d');\r\n        tempCanvas.width = croppedData.width; tempCanvas.height = croppedData.height;\r\n        tempContext.putImageData(croppedData, 0, 0);\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        ctx.drawImage(tempCanvas, 0, 0, canvas.width, canvas.height);\r\n        tempCanvas.remove();\r\n        parentDiv.style.borderRadius = '100%'; canvas.style.backgroundColor = '#fff';\r\n        this.DialogInstance.hide();\r\n        if (this.imgSrc !== '') {\r\n\t\t        const img: HTMLImageElement = document.querySelector('#demo-img');\r\n            img.src = this.imgSrc;\r\n\t\t    }\r\n    }\r\n\r\n    public dlgButtons: ButtonPropsModel[] = \r\n    [\r\n        { click: this.dlgOpenButtonClick.bind(this), buttonModel: { content: 'Open', isPrimary: false, cssClass: 'e-custom-img-btn e-img-custom-open' } },\r\n        { click: this.dlgResetBtnClick.bind(this), buttonModel: { content: 'Reset', isPrimary: false, cssClass: 'e-custom-img-btn e-img-custom-reset' } },\r\n        { click: this.dlgRotateBtnClick.bind(this), buttonModel: { content: 'Rotate', isPrimary: false, cssClass: 'e-custom-img-btn e-img-custom-rotate' } },\r\n        { click: this.dlgDoneBtnClick.bind(this), buttonModel: { content: 'Apply', isPrimary: true, cssClass: 'e-custom-img-btn e-img-custom-apply'} }\r\n    ];\r\n\r\n    public canvasClicked = (): void => {\r\n        this.DialogInstance.show();\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        let imageHide = document.getElementsByClassName('sb-desktop-wrapper')[0];\r\n        if (imageHide) {\r\n            (document.getElementsByClassName('sb-desktop-wrapper')[0] as HTMLElement).onclick = (args: any) : void => {\r\n                if (args.target.className.indexOf('col-lg-12 control-section') > -1 || args.target.className.indexOf('sb-content') > -1) {\r\n                    this.DialogInstance.hide();\r\n                }\r\n            }\r\n          }\r\n        }\r\n        \r\n}\r\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n  \r\n  \r\n  <div class=\"col-lg-12 control-section e-img-editor-sample\">\r\n    <div class=\"e-profile e-hide\">\r\n      <div class=\"e-custom-wrapper\">\r\n        <canvas id=\"img-canvas\" style=\"max-width: 200px; max-height: 200px;\"></canvas>\r\n        <img alt=\"img\" id=\"demo-img\" crossorigin=\"anonymous\" src=\"https://ej2.syncfusion.com/angular/demos/assets/image-editor/images/profile.png\"\r\n        style=\"display: none;\" (load)=\"imageLoaded()\"/>\r\n        <input type=\"file\" id=\"img-upload\" (change)=\"imageChanged($event)\" style=\"display:none\" accept=\"image/*\"/>\r\n        <span id=\"custom-edit\" class=\"e-custom-edit\" (click)=\"canvasClicked()\">\r\n            <span class=\"e-custom-icon sb-icons\"></span>\r\n        </span>\r\n      </div>    \r\n    </div>\r\n    <div class=\"e-img-editor-sample\" id=\"profile-dialog\">\r\n        <ejs-dialog [position]=\"position\" #Dialog [buttons]='dlgButtons' [visible]='visible' [header]='header' [showCloseIcon]='showCloseIcon' [target]='target' [width]='width' [height]='height' (open)=\"dialogOpen()\" (close)=\"dialogClose()\">\r\n        <ng-template #content>\r\n            <ejs-imageeditor #ImageEditor [toolbar]='toolbarItems' (created)=\"created()\" (fileOpened)=\"fileOpened()\"> </ejs-imageeditor>\r\n        </ng-template>\r\n    </ejs-dialog>\r\n    </div>\r\n  </div>\r\n  \r\n  \r\n","app.component.css":"ejs-imageeditor {\r\n    display: block;\r\n}\r\n\r\n.e-img-editor-sample,\r\n.e-img-editor-sample .control-wrapper {\r\n\tposition: relative;\r\n}\r\n\r\n.e-profile {\r\n\twidth: 200px;\r\n\theight: 200px;\r\n\tposition: absolute;\r\n\tleft: 50%;\r\n\t-webkit-transform: translate(-50%, 30%);\r\n\ttransform: translate(-50%, 30%);\r\n\tborder-radius: 50%;\r\n}\r\n\r\n.e-custom-wrapper {\r\n\tposition: relative;\r\n}\r\n\r\n.e-custom-edit {\r\n\tposition: absolute;\r\n\twidth: 36px;\r\n\theight: 36px;\r\n\tborder-radius: 50%;\r\n\tbackground-color: blue;\r\n\ttop: calc(100% - 54px);\r\n\tleft: calc(100% - 47px);\r\n}\r\n\r\n.e-custom-icon::before {\r\n\tcontent: '\\e911';\r\n\tfont-size: 28px;\r\n\tcolor: white;\r\n\tleft: 5px;\r\n\ttop: 4px;\r\n  line-height: initial;\r\n\tposition: absolute;\r\n}\r\n\r\n#custom-edit:hover {\r\n\tcursor: pointer;\r\n}\r\n\r\ncanvas#img-canvas {\r\n\tborder-radius: 50%;\r\n\tborder: 4px solid darkgrey;\r\n}\r\n\r\n.e-profile .e-custom-img {\r\n    display: none;\r\n}\r\n\r\n#profile-dialog .e-dlg-content div {\r\n    height: 100%;\r\n    width: 100%;\r\n}\r\n\r\n.e-img-custom-open {\r\n\tfloat: left;\r\n\tmargin-left: 0 !important;\r\n}\r\n\r\n.e-img-custom-reset {\r\n\tfloat: left;\r\n}\r\n\r\n.tailwind .e-custom-icon::before,\r\n.tailwind-dark .e-custom-icon::before {\r\n\ttop: 6px;\r\n}\r\n\r\n.e-bigger #profile-dialog .e-dlg-header {\r\n    font-size: 18px !important;\r\n}\r\n\r\n\r\n.highcontrast .e-custom-img-btn,\r\n.fabric .e-custom-img-btn,\r\n.fabric-dark .e-custom-img-btn {\r\n\tpadding: 2px 10px !important;\r\n}\r\n\r\n.e-bigger .e-custom-img-btn {\r\n\tfont-size: 14px !important;\r\n\tpadding: 6px 10px !important;\r\n}\r\n\r\n.e-bigger.highcontrast .e-custom-img-btn,\r\n.e-bigger.fabric .e-custom-img-btn,\r\n.e-bigger.fabric-dark .e-custom-img-btn,\r\n.e-bigger.material .e-custom-img-btn,\r\n.e-bigger.material-dark .e-custom-img-btn {\r\n\tpadding: 3px 10px !important;\r\n}\r\n.e-bigger.bootstrap .e-custom-img-btn,\r\n.e-bigger.bootstrap-dark .e-custom-img-btn {\r\n\tpadding: 1px 10px !important;\r\n}\r\n\r\n.e-img-editor-sample .e-hide {\r\n\tdisplay: none;\r\n}\r\n\r\n.e-custom-img-btn,\r\n.material3 .e-custom-img-btn,\r\n.material3-dark .e-custom-img-btn,\r\n.e-bigger.material3 .e-custom-img-btn,\r\n.e-bigger.material3-dark .e-custom-img-btn\r\n{ \r\n  margin-left: 3px !important;\r\n}\r\n\r\n.control-section {\r\n\tmin-height: 450px;\r\n}\r\n","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-image-editor\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-image-editor\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-angular-popups\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}