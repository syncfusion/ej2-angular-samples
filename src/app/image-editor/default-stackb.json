{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"/**\r\n * Default Sample\r\n */\r\nimport { Component } from '@angular/core';\r\nimport { Browser, getComponent } from '@syncfusion/ej2-base';\r\nimport { ImageEditorComponent, ImageEditorModule } from '@syncfusion/ej2-angular-image-editor';\n\n\r\n\r\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    standalone: true,\n    imports: [ ImageEditorModule, ]\n})\r\n\r\nexport class AppComponent {\r\n    public created = (): void => {\r\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\r\n        const imageEditor: any = getComponent(document.getElementById('image-editor'), 'image-editor');\r\n        if (Browser.isDevice) {\r\n            imageEditor.open('./assets/image-editor/images/flower.png');\r\n        } else {\r\n            imageEditor.open('./assets/image-editor/images/default.png');\r\n        }\r\n        if (imageEditor.theme && window.location.href.split('#')[1]) {\r\n            imageEditor.theme = window.location.href.split('#')[1].split('/')[1];\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        if (document.getElementById('right-pane')) {\r\n            document.getElementById('right-pane').addEventListener('scroll', this.onScroll.bind(this));\r\n        }     \r\n    }\r\n    // Handler used to reposition the tooltip on page scroll\r\n    onScroll(): void {\r\n        if (document.getElementById('image-editor_sliderWrapper')) {\r\n            let slider: any = getComponent(document.getElementById('image-editor_sliderWrapper'), 'slider');\r\n            slider.refreshTooltip(slider.tooltipTarget);\r\n        }\r\n    }\r\n}\r\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n\r\n\r\n<div class=\"col-lg-12 control-section\">\r\n  <div class=\"e-img-editor-sample\">\r\n    <ejs-imageeditor id=\"image-editor\" (created)=\"created()\">\r\n    </ejs-imageeditor>\r\n  </div>\r\n</div>\r\n\r\n","app.component.css":"ejs-imageeditor {\r\n    display: block;\r\n}\r\n\r\n.e-image-editor {\r\n\tmargin: 0 auto;\r\n}\r\n\r\n\r\n.e-img-editor-sample {\r\n\theight: 80vh;\r\n\twidth: 100%;\r\n}\r\n\r\n.control-wrapper {\r\n\theight: 100%;\r\n}\r\n\r\n@media only screen and (max-width: 700px) {\r\n\t.e-img-editor-sample {\r\n\t\theight: 75vh;\r\n\t\twidth: 100%;\r\n\t}\r\n}","dependencies.json":"{\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-image-editor\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-image-editor\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-angular-popups\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}