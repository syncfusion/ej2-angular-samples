{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { DiagramComponent, DiagramConstraints, DiagramModule } from '@syncfusion/ej2-angular-diagrams';\nimport {\n  NodeModel,\n  ConnectorModel,\n  SnapConstraints,\n  NodeConstraints,\n  DiagramTools,\n  SnapSettingsModel\n} from '@syncfusion/ej2-angular-diagrams';\n\n\nimport { CommonModule, NgIf } from '@angular/common';\n\n/**\n * Tournament Results Diagram - UEFA Champions League 2023-24\n */\n\n// Tournament match data interface\ninterface TournamentMatch {\n  id: string;\n  team1: string;\n  score1: number;\n  team2: string;\n  score2: number;\n  shootoutTeam1?: string;\n  shootoutTeam2?: string;\n  winner: string;\n  matchType: string;\n  year?: string;\n}\n\n@Component({\n  selector: 'app-root',\n  imports:[ DiagramModule,  NgIf,CommonModule],\n  standalone: true,\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.css'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AppComponent {\n  @ViewChild('diagram') public diagram!: DiagramComponent;\n\n  public isLoading: boolean = true;\n  public constraints: DiagramConstraints = DiagramConstraints.Default &~ DiagramConstraints.UndoRedo;\n\n  public tools = DiagramTools.ZoomPan;\n  public snapSettings: SnapSettingsModel = {\n    constraints: SnapConstraints.None\n  };\n\n  public nodes: NodeModel[] = [];\n  public connectors: ConnectorModel[] = [];\n\n  // UEFA Champions League 2023-24 Tournament Data\n  private tournamentData: TournamentMatch[] = [\n    // Round of 16 matches\n    { id: 'round16_1', team1: 'BAYERN MUNCHEN', score1: 3, team2: 'LAZIO', score2: 1, winner: 'BAYERN MUNCHEN', matchType: 'round16' },\n    { id: 'round16_2', team1: 'ARSENAL', score1: 1, shootoutTeam1: '4', team2: 'PORTO', score2: 1, shootoutTeam2: '2', winner: 'ARSENAL', matchType: 'round16' },\n    { id: 'round16_3', team1: 'COPENHAGEN', score1: 2, team2: 'MANCHESTER CITY', score2: 6, winner: 'MANCHESTER CITY', matchType: 'round16' },\n    { id: 'round16_4', team1: 'LEIPZIG', score1: 1, team2: 'REAL MADRID', score2: 2, winner: 'REAL MADRID', matchType: 'round16' },\n    { id: 'round16_5', team1: 'BORUSSIA DORTMUND', score1: 3, team2: 'PSV EINDHOVEN', score2: 1, winner: 'BORUSSIA DORTMUND', matchType: 'round16' },\n    { id: 'round16_6', team1: 'ATLETICO MADRID', score1: 2, shootoutTeam1: '3', team2: 'INTER MILAN', score2: 2, shootoutTeam2: '2', winner: 'ATLETICO MADRID', matchType: 'round16' },\n    { id: 'round16_7', team1: 'REAL SOCIEDAD', score1: 1, team2: 'PARIS SAINT-GERMAIN', score2: 4, winner: 'PARIS SAINT-GERMAIN', matchType: 'round16' },\n    { id: 'round16_8', team1: 'BARCELONA', score1: 4, team2: 'NAPOLI', score2: 2, winner: 'BARCELONA', matchType: 'round16' },\n    \n    // Quarterfinal matches\n    { id: 'quarter1', team1: 'BAYERN MUNCHEN', score1: 3, team2: 'ARSENAL', score2: 2, winner: 'BAYERN MUNCHEN', matchType: 'quarterfinal' },\n    { id: 'quarter2', team1: 'MANCHESTER CITY', score1: 4, shootoutTeam1: '3', team2: 'REAL MADRID', score2: 4, shootoutTeam2: '4', winner: 'REAL MADRID', matchType: 'quarterfinal' },\n    { id: 'quarter3', team1: 'BORUSSIA DORTMUND', score1: 5, team2: 'ATLETICO MADRID', score2: 4, winner: 'BORUSSIA DORTMUND', matchType: 'quarterfinal' },\n    { id: 'quarter4', team1: 'BARCELONA', score1: 4, team2: 'PARIS SAINT-GERMAIN', score2: 6, winner: 'PARIS SAINT-GERMAIN', matchType: 'quarterfinal' },\n    \n    // Semifinal matches\n    { id: 'semi1', team1: 'BAYERN MUNCHEN', score1: 3, team2: 'REAL MADRID', score2: 4, winner: 'REAL MADRID', matchType: 'semifinal' },\n    { id: 'semi2', team1: 'PARIS SAINT-GERMAIN', score1: 0, team2: 'BORUSSIA DORTMUND', score2: 2, winner: 'BORUSSIA DORTMUND', matchType: 'semifinal' },\n    \n    // Final match\n    { id: 'final', team1: 'REAL MADRID', score1: 2, team2: 'BORUSSIA DORTMUND', score2: 0, winner: 'REAL MADRID', matchType: 'final' },\n    \n    // Champion\n    { id: 'champion', team1: 'REAL MADRID', team2: 'BORUSSIA DORTMUND', score1: 2, score2: 0, winner: 'REAL MADRID', year: '2023-24', matchType: 'champion' }\n  ];\n\n  constructor() { }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.isLoading = false;\n      \n      // Initialize diagram AFTER loading finishes\n      this.initializeTournamentBracket();\n\n    }, 1700);\n  }\n\n  // Find tournament data by ID with fallback\n  private findData(id: string): TournamentMatch {\n    const found = this.tournamentData.find((item: TournamentMatch) => item.id === id);\n    if (found) return found;\n    \n    return { \n      id: id, \n      team1: 'TBD', \n      team2: 'TBD', \n      score1: 0, \n      score2: 0, \n      winner: '', \n      matchType: id.includes('round16') ? 'round16' : \n                 id.includes('quarter') ? 'quarterfinal' : \n                 id.includes('semi') ? 'semifinal' : \n                 id.includes('final') ? 'final' : 'round16'\n    };\n  }\n\n  // Generate HTML template for tournament nodes\n  private getNodeTemplate(data: TournamentMatch): string {\n    if (data.matchType === 'champion') {\n      return `<div class=\"tournament-node champion-node\" data-id=\"${data.id}\">\n                <div class=\"champion-container\">\n                  <div class=\"champion-badge\"><div class=\"champion-trophy\">üèÜ</div></div>\n                  <div class=\"champion-title\">CHAMPION</div>\n                  <div class=\"champion-info\" style=\"opacity: 0;\">\n                    <div class=\"champion-team\">${data.winner || 'TBD'}</div>\n                    <div class=\"champion-year\">${data.year || '2024'}</div>\n                  </div>\n                </div>\n              </div>`;\n    }\n    \n    const team1Class = data.winner === data.team1 ? 'winner' : '';\n    const team2Class = data.winner === data.team2 ? 'winner' : '';\n    \n    const roundDisplayName = data.matchType === 'round16' ? 'ROUND OF 16' : \n                        data.matchType === 'quarterfinal' ? 'QUARTER-FINAL' :\n                        data.matchType === 'semifinal' ? 'SEMI-FINAL' :\n                        data.matchType === 'final' ? 'FINAL' : 'MATCH';\n    \n    return `<div class=\"tournament-node ${data.matchType}-node\" data-id=\"${data.id}\">\n              <div class=\"flip-card\">\n                <div class=\"flip-card-inner\">\n                  <div class=\"flip-card-front\">\n                    <div style=\"height: 100%; display: flex; align-items: center; justify-content: center; background: linear-gradient(135deg, rgba(0, 51, 102, 0.9) 0%, rgba(0, 68, 136, 0.9) 100%);\">\n                      <div style=\"text-align: center; color: #cbe5feff; font-weight: 600; font-size: 16px; letter-spacing: 2px; text-shadow: 0 2px 4px rgba(0, 14, 87, 0.7);\">${roundDisplayName}</div>\n                    </div>\n                  </div>\n                  <div class=\"flip-card-back\">\n                    <div class=\"team-section team-top ${team1Class}\">\n                      <span class=\"team-name\">${data.team1 || 'TBD'}</span>\n                      <span class=\"team-score score-right\">${data.score1 !== undefined ? data.score1 : ''}</span>\n                    </div>\n                    <div class=\"team-section team-bottom ${team2Class}\">\n                      <span class=\"team-name\">${data.team2 || 'TBD'}</span>\n                      <span class=\"team-score score-right\">${data.score2 !== undefined ? data.score2 : ''}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>`;\n  }\n\n  // Create detailed tooltip content for match information\n  private createTooltipContent(data: TournamentMatch): HTMLDivElement {\n    const tooltipDiv = document.createElement('div');\n    tooltipDiv.classList.add('football-results-tooltip-content');\n    tooltipDiv.style.cssText = \n      'background: linear-gradient(135deg, #001122 0%, #003366 100%);' +\n      'border-radius: 12px; padding: 16px; color: white;' +\n      'font-family: \"Verdana\", sans-serif; min-width: 300px; max-width: 380px;' +\n      'box-shadow: 0 10px 30px rgba(0,0,0,0.5); position: relative; z-index: 1000;';\n    \n    const matchTypeDisplay = data.matchType === 'round16' ? 'ROUND OF 16' : \n                           data.matchType === 'quarterfinal' ? 'QUARTER-FINAL' :\n                           data.matchType === 'semifinal' ? 'SEMI-FINAL' :\n                           data.matchType === 'final' ? 'FINAL' :\n                           data.matchType === 'champion' ? 'CHAMPION' : data.matchType.toUpperCase();\n    \n    const hasShootout = data.shootoutTeam1 && data.shootoutTeam2;\n    const shootoutDisplay = hasShootout ? \n      `<div style=\"font-size: 11px; color: #87CEEB; margin-top: 8px; text-align: center;\">\n         <span style=\"color: #FFD700;\">Penalty Shootout:</span> ${data.shootoutTeam1} - ${data.shootoutTeam2}\n       </div>` : '';\n    \n    const team1WinnerStyle = data.winner === data.team1 ? 'color: #FFD700; font-weight: bold;' : '';\n    const team2WinnerStyle = data.winner === data.team2 ? 'color: #FFD700; font-weight: bold;' : '';\n    \n    tooltipDiv.innerHTML = \n      `<div style=\"text-align: center;\">\n         <div style=\"font-size: 11px; font-weight: bold; color: #FFD700; margin-bottom: 6px; letter-spacing: 1px;\">UEFA CHAMPIONS LEAGUE</div>\n         <div style=\"font-size: 10px; color: #87CEEB; margin-bottom: 12px; font-weight: 600;\">${matchTypeDisplay}</div>\n         <div style=\"background: rgba(255,255,255,0.1); border-radius: 8px; padding: 12px; margin-bottom: 10px;\">\n           <div style=\"display: flex; justify-content: space-between; align-items: center; margin-bottom: 8px;\">\n             <div style=\"flex: 1; text-align: left;\"><div style=\"font-size: 14px; font-weight: bold; ${team1WinnerStyle}\">${data.team1}</div></div>\n             <div style=\"font-size: 20px; font-weight: bold; color: #fff; margin: 0 15px;\">${data.score1}</div>\n           </div>\n           <div style=\"text-align: center; margin: 8px 0;\">\n             <div style=\"height: 1px; background: linear-gradient(90deg, transparent, #FFD700, transparent);\"></div>\n             <div style=\"font-size: 10px; color: #87CEEB; margin: 4px 0;\">VS</div>\n             <div style=\"height: 1px; background: linear-gradient(90deg, transparent, #FFD700, transparent);\"></div>\n           </div>\n           <div style=\"display: flex; justify-content: space-between; align-items: center;\">\n             <div style=\"flex: 1; text-align: left;\"><div style=\"font-size: 14px; font-weight: bold; ${team2WinnerStyle}\">${data.team2}</div></div>\n             <div style=\"font-size: 20px; font-weight: bold; color: #fff; margin: 0 15px;\">${data.score2}</div>\n           </div>\n           ${shootoutDisplay}\n         </div>\n         <div style=\"background: linear-gradient(135deg, #FFD700 0%, #FFA500 100%); color: #001122; padding: 8px 12px; border-radius: 6px; font-weight: bold; font-size: 12px;\">\n           WINNER: ${data.winner}\n         </div>\n       </div>`;\n    \n    return tooltipDiv;\n  }\n\n  // Initialize tournament bracket with all nodes and connectors\n  private initializeTournamentBracket(): void {\n    const angleTiltAmountForRound16ToQuarter: number = 60;\n    const angleTiltAmountForQuarterToSemi: number = 130;\n\n    const championNodeSize = {w: 280, h: 200};\n    const tournamentNodeSize = {w: 180, h: 100}; \n\n    const offsetXIncreaseAmount: number = 280;\n    const leftRound16NodesOffsetX: number = offsetXIncreaseAmount;\n    const leftQuarterFinalNodesOffsetX: number = leftRound16NodesOffsetX + offsetXIncreaseAmount;\n    const leftSemiFinalNodesOffsetX: number = leftQuarterFinalNodesOffsetX + offsetXIncreaseAmount;\n    const finalNodeOffsetX: number = leftSemiFinalNodesOffsetX + offsetXIncreaseAmount;\n    const rightSemiFinalNodesOffsetX: number = finalNodeOffsetX + offsetXIncreaseAmount;\n    const rightQuarterFinalNodesOffsetX: number = rightSemiFinalNodesOffsetX + offsetXIncreaseAmount;\n    const rightRound16NodesOffsetX: number = rightQuarterFinalNodesOffsetX + offsetXIncreaseAmount;\n\n    const offsetYIncreaseAmount: number = 190;\n    const round16TopOffsetY: number = offsetYIncreaseAmount;\n    const round16UpperMiddleOffsetY: number = round16TopOffsetY + offsetYIncreaseAmount;\n    const round16LowerMiddleOffsetY: number = round16UpperMiddleOffsetY + offsetYIncreaseAmount;\n    const round16BottomOffsetY: number = round16LowerMiddleOffsetY + offsetYIncreaseAmount;\n    \n    const quarterFinalTopOffsetY: number = (round16TopOffsetY + round16UpperMiddleOffsetY) / 2;\n    const quarterFinalBottomOffsetY: number = (round16LowerMiddleOffsetY + round16BottomOffsetY) / 2;\n    \n    const semiFinalOffsetY: number = (quarterFinalTopOffsetY + quarterFinalBottomOffsetY) / 2;\n    const finalNodeOffsetY: number = semiFinalOffsetY;\n    const championNodeOffsetY: number = finalNodeOffsetY - 350;\n    \n    // Define all tournament nodes\n    this.nodes = [\n      // Champion node\n      { \n        id: 'champion', \n        offsetX: finalNodeOffsetX, \n        offsetY: championNodeOffsetY, \n        width: championNodeSize.w, \n        height: championNodeSize.h, \n        shape: { type: 'HTML', content: this.getNodeTemplate(this.findData('champion')) },\n        style: { fill: 'transparent', strokeColor: 'transparent' }\n      },\n      // Final node\n      { \n        id: 'final', \n        offsetX: finalNodeOffsetX, \n        offsetY: finalNodeOffsetY, \n        width: tournamentNodeSize.w, \n        height: tournamentNodeSize.h, \n        shape: { type: 'HTML', content: this.getNodeTemplate(this.findData('final')) },\n        constraints: NodeConstraints.Default | NodeConstraints.Tooltip,\n        tooltip: { content: this.createTooltipContent(this.findData('final')), position: 'TopCenter', relativeMode: 'Object' },\n        style: { fill: 'transparent', strokeColor: 'transparent' }\n      },\n      // Semifinal nodes\n      { \n        id: 'semi1', \n        offsetX: leftSemiFinalNodesOffsetX, \n        offsetY: semiFinalOffsetY, \n        width: tournamentNodeSize.w, \n        height: tournamentNodeSize.h, \n        shape: { type: 'HTML', content: this.getNodeTemplate(this.findData('semi1')) },\n        constraints: NodeConstraints.Default | NodeConstraints.Tooltip,\n        tooltip: { content: this.createTooltipContent(this.findData('semi1')), position: 'TopCenter', relativeMode: 'Object' },\n        style: { fill: 'transparent', strokeColor: 'transparent' }\n      },\n      { \n        id: 'semi2', \n        offsetX: rightSemiFinalNodesOffsetX, \n        offsetY: semiFinalOffsetY, \n        width: tournamentNodeSize.w, \n        height: tournamentNodeSize.h, \n        shape: { type: 'HTML', content: this.getNodeTemplate(this.findData('semi2')) },\n        constraints: NodeConstraints.Default | NodeConstraints.Tooltip,\n        tooltip: { content: this.createTooltipContent(this.findData('semi2')), position: 'TopCenter', relativeMode: 'Object' },\n        style: { fill: 'transparent', strokeColor: 'transparent' }\n      },\n      // Quarterfinal nodes\n      { \n        id: 'quarter1', \n        offsetX: leftQuarterFinalNodesOffsetX, \n        offsetY: quarterFinalTopOffsetY, \n        width: tournamentNodeSize.w, \n        height: tournamentNodeSize.h, \n        shape: { type: 'HTML', content: this.getNodeTemplate(this.findData('quarter1')) },\n        constraints: NodeConstraints.Default | NodeConstraints.Tooltip,\n        tooltip: { content: this.createTooltipContent(this.findData('quarter1')), position: 'RightCenter', relativeMode: 'Object' },\n        style: { fill: 'transparent', strokeColor: 'transparent' }\n      },\n      { \n        id: 'quarter2', \n        offsetX: leftQuarterFinalNodesOffsetX, \n        offsetY: quarterFinalBottomOffsetY, \n        width: tournamentNodeSize.w, \n        height: tournamentNodeSize.h, \n        shape: { type: 'HTML', content: this.getNodeTemplate(this.findData('quarter2')) },\n        constraints: NodeConstraints.Default | NodeConstraints.Tooltip,\n        tooltip: { content: this.createTooltipContent(this.findData('quarter2')), position: 'RightCenter', relativeMode: 'Object' },\n        style: { fill: 'transparent', strokeColor: 'transparent' }\n      },\n      { \n        id: 'quarter3', \n        offsetX: rightQuarterFinalNodesOffsetX, \n        offsetY: quarterFinalTopOffsetY, \n        width: tournamentNodeSize.w, \n        height: tournamentNodeSize.h, \n        shape: { type: 'HTML', content: this.getNodeTemplate(this.findData('quarter3')) },\n        constraints: NodeConstraints.Default | NodeConstraints.Tooltip,\n        tooltip: { content: this.createTooltipContent(this.findData('quarter3')), position: 'LeftCenter', relativeMode: 'Object' },\n        style: { fill: 'transparent', strokeColor: 'transparent' }\n      },\n      { \n        id: 'quarter4', \n        offsetX: rightQuarterFinalNodesOffsetX, \n        offsetY: quarterFinalBottomOffsetY, \n        width: tournamentNodeSize.w, \n        height: tournamentNodeSize.h, \n        shape: { type: 'HTML', content: this.getNodeTemplate(this.findData('quarter4')) },\n        constraints: NodeConstraints.Default | NodeConstraints.Tooltip,\n        tooltip: { content: this.createTooltipContent(this.findData('quarter4')), position: 'LeftCenter', relativeMode: 'Object' },\n        style: { fill: 'transparent', strokeColor: 'transparent' }\n      },\n      // Round of 16 nodes (left side)\n      { \n        id: 'round16_1', \n        offsetX: leftRound16NodesOffsetX, \n        offsetY: round16TopOffsetY, \n        width: tournamentNodeSize.w, \n        height: tournamentNodeSize.h, \n        shape: { type: 'HTML', content: this.getNodeTemplate(this.findData('round16_1')) },\n        constraints: NodeConstraints.Default | NodeConstraints.Tooltip,\n        tooltip: { content: this.createTooltipContent(this.findData('round16_1')), position: 'RightCenter', relativeMode: 'Object' },\n        style: { fill: 'transparent', strokeColor: 'transparent' }\n      },\n      { \n        id: 'round16_2', \n        offsetX: leftRound16NodesOffsetX, \n        offsetY: round16UpperMiddleOffsetY, \n        width: tournamentNodeSize.w, \n        height: tournamentNodeSize.h, \n        shape: { type: 'HTML', content: this.getNodeTemplate(this.findData('round16_2')) },\n        constraints: NodeConstraints.Default | NodeConstraints.Tooltip,\n        tooltip: { content: this.createTooltipContent(this.findData('round16_2')), position: 'RightCenter', relativeMode: 'Object' },\n        style: { fill: 'transparent', strokeColor: 'transparent' }\n      },\n      { \n        id: 'round16_3', \n        offsetX: leftRound16NodesOffsetX, \n        offsetY: round16LowerMiddleOffsetY, \n        width: tournamentNodeSize.w, \n        height: tournamentNodeSize.h, \n        shape: { type: 'HTML', content: this.getNodeTemplate(this.findData('round16_3')) },\n        constraints: NodeConstraints.Default | NodeConstraints.Tooltip,\n        tooltip: { content: this.createTooltipContent(this.findData('round16_3')), position: 'RightCenter', relativeMode: 'Object' },\n        style: { fill: 'transparent', strokeColor: 'transparent' }\n      },\n      { \n        id: 'round16_4', \n        offsetX: leftRound16NodesOffsetX, \n        offsetY: round16BottomOffsetY, \n        width: tournamentNodeSize.w, \n        height: tournamentNodeSize.h, \n        shape: { type: 'HTML', content: this.getNodeTemplate(this.findData('round16_4')) },\n        constraints: NodeConstraints.Default | NodeConstraints.Tooltip,\n        tooltip: { content: this.createTooltipContent(this.findData('round16_4')), position: 'RightCenter', relativeMode: 'Object' },\n        style: { fill: 'transparent', strokeColor: 'transparent' }\n      },\n      // Round of 16 nodes (right side)\n      { \n        id: 'round16_5', \n        offsetX: rightRound16NodesOffsetX, \n        offsetY: round16TopOffsetY, \n        width: tournamentNodeSize.w, \n        height: tournamentNodeSize.h, \n        shape: { type: 'HTML', content: this.getNodeTemplate(this.findData('round16_5')) },\n        constraints: NodeConstraints.Default | NodeConstraints.Tooltip,\n        tooltip: { content: this.createTooltipContent(this.findData('round16_5')), position: 'LeftCenter', relativeMode: 'Object' },\n        style: { fill: 'transparent', strokeColor: 'transparent' }\n      },\n      { \n        id: 'round16_6', \n        offsetX: rightRound16NodesOffsetX, \n        offsetY: round16UpperMiddleOffsetY, \n        width: tournamentNodeSize.w, \n        height: tournamentNodeSize.h, \n        shape: { type: 'HTML', content: this.getNodeTemplate(this.findData('round16_6')) },\n        constraints: NodeConstraints.Default | NodeConstraints.Tooltip,\n        tooltip: { content: this.createTooltipContent(this.findData('round16_6')), position: 'LeftCenter', relativeMode: 'Object' },\n        style: { fill: 'transparent', strokeColor: 'transparent' }\n      },\n      { \n        id: 'round16_7', \n        offsetX: rightRound16NodesOffsetX, \n        offsetY: round16LowerMiddleOffsetY, \n        width: tournamentNodeSize.w, \n        height: tournamentNodeSize.h, \n        shape: { type: 'HTML', content: this.getNodeTemplate(this.findData('round16_7')) },\n        constraints: NodeConstraints.Default | NodeConstraints.Tooltip,\n        tooltip: { content: this.createTooltipContent(this.findData('round16_7')), position: 'LeftCenter', relativeMode: 'Object' },\n        style: { fill: 'transparent', strokeColor: 'transparent' }\n      },\n      { \n        id: 'round16_8', \n        offsetX: rightRound16NodesOffsetX, \n        offsetY: round16BottomOffsetY, \n        width: tournamentNodeSize.w, \n        height: tournamentNodeSize.h, \n        shape: { type: 'HTML', content: this.getNodeTemplate(this.findData('round16_8')) },\n        constraints: NodeConstraints.Default | NodeConstraints.Tooltip,\n        tooltip: { content: this.createTooltipContent(this.findData('round16_8')), position: 'LeftCenter', relativeMode: 'Object' },\n        style: { fill: 'transparent', strokeColor: 'transparent' }\n      }\n    ];\n\n    // Define all connectors\n    this.connectors = [\n      // Champion connection\n      { \n        id: 'champ1', \n        sourceID: 'final', \n        targetID: 'champion',\n        style: { strokeColor: 'rgba(0, 102, 204, 0.2)', strokeWidth: 2 },\n        targetDecorator: { shape: 'None' },\n        sourceDecorator: { shape: 'None' }\n      },\n      // Final connections\n      { \n        id: 'final1', \n        sourceID: 'semi1', \n        targetID: 'final',\n        style: { strokeColor: 'rgba(0, 102, 204, 0.2)', strokeWidth: 2 },\n        targetDecorator: { shape: 'None' },\n        sourceDecorator: { shape: 'None' }\n      },\n      { \n        id: 'final2', \n        sourceID: 'semi2', \n        targetID: 'final',\n        style: { strokeColor: 'rgba(0, 102, 204, 0.2)', strokeWidth: 2 },\n        targetDecorator: { shape: 'None' },\n        sourceDecorator: { shape: 'None' }\n      },\n      // Semifinal connections\n      { \n        id: 'semi1_1', \n        segments: [{ point: { x: leftSemiFinalNodesOffsetX - angleTiltAmountForQuarterToSemi, y: quarterFinalTopOffsetY } }], \n        sourceID: 'quarter1', \n        targetID: 'semi1',\n        style: { strokeColor: 'rgba(0, 102, 204, 0.2)', strokeWidth: 2 },\n        targetDecorator: { shape: 'None' },\n        sourceDecorator: { shape: 'None' }\n      },\n      { \n        id: 'semi1_2', \n        segments: [{ point: { x: leftSemiFinalNodesOffsetX - angleTiltAmountForQuarterToSemi, y: quarterFinalBottomOffsetY } }], \n        sourceID: 'quarter2', \n        targetID: 'semi1',\n        style: { strokeColor: 'rgba(0, 102, 204, 0.2)', strokeWidth: 2 },\n        targetDecorator: { shape: 'None' },\n        sourceDecorator: { shape: 'None' }\n      },\n      { \n        id: 'semi2_1', \n        segments: [{ point: { x: rightSemiFinalNodesOffsetX + angleTiltAmountForQuarterToSemi, y: quarterFinalTopOffsetY } }], \n        sourceID: 'quarter3', \n        targetID: 'semi2',\n        style: { strokeColor: 'rgba(0, 102, 204, 0.2)', strokeWidth: 2 },\n        targetDecorator: { shape: 'None' },\n        sourceDecorator: { shape: 'None' }\n      },\n      { \n        id: 'semi2_2', \n        segments: [{ point: { x: rightSemiFinalNodesOffsetX + angleTiltAmountForQuarterToSemi, y: quarterFinalBottomOffsetY } }], \n        sourceID: 'quarter4', \n        targetID: 'semi2',\n        style: { strokeColor: 'rgba(0, 102, 204, 0.2)', strokeWidth: 2 },\n        targetDecorator: { shape: 'None' },\n        sourceDecorator: { shape: 'None' }\n      },\n      // Quarterfinal connections\n      { \n        id: 'quarter1_1', \n        segments: [{ point: { x: leftQuarterFinalNodesOffsetX - angleTiltAmountForRound16ToQuarter, y: round16TopOffsetY } }], \n        sourceID: 'round16_1', \n        targetID: 'quarter1',\n        style: { strokeColor: 'rgba(0, 102, 204, 0.2)', strokeWidth: 2 },\n        targetDecorator: { shape: 'None' },\n        sourceDecorator: { shape: 'None' }\n      },\n      { \n        id: 'quarter1_2', \n        segments: [{ point: { x: leftQuarterFinalNodesOffsetX - angleTiltAmountForRound16ToQuarter, y: round16UpperMiddleOffsetY } }], \n        sourceID: 'round16_2', \n        targetID: 'quarter1',\n        style: { strokeColor: 'rgba(0, 102, 204, 0.2)', strokeWidth: 2 },\n        targetDecorator: { shape: 'None' },\n        sourceDecorator: { shape: 'None' }\n      },\n      { \n        id: 'quarter2_1', \n        segments: [{ point: { x: leftQuarterFinalNodesOffsetX - angleTiltAmountForRound16ToQuarter, y: round16LowerMiddleOffsetY } }], \n        sourceID: 'round16_3', \n        targetID: 'quarter2',\n        style: { strokeColor: 'rgba(0, 102, 204, 0.2)', strokeWidth: 2 },\n        targetDecorator: { shape: 'None' },\n        sourceDecorator: { shape: 'None' }\n      },\n      { \n        id: 'quarter2_2', \n        segments: [{ point: { x: leftQuarterFinalNodesOffsetX - angleTiltAmountForRound16ToQuarter, y: round16BottomOffsetY } }], \n        sourceID: 'round16_4', \n        targetID: 'quarter2',\n        style: { strokeColor: 'rgba(0, 102, 204, 0.2)', strokeWidth: 2 },\n        targetDecorator: { shape: 'None' },\n        sourceDecorator: { shape: 'None' }\n      },\n      { \n        id: 'quarter3_1', \n        segments: [{ point: { x: rightQuarterFinalNodesOffsetX + angleTiltAmountForRound16ToQuarter, y: round16TopOffsetY } }], \n        sourceID: 'round16_5', \n        targetID: 'quarter3',\n        style: { strokeColor: 'rgba(0, 102, 204, 0.2)', strokeWidth: 2 },\n        targetDecorator: { shape: 'None' },\n        sourceDecorator: { shape: 'None' }\n      },\n      { \n        id: 'quarter3_2', \n        segments: [{ point: { x: rightQuarterFinalNodesOffsetX + angleTiltAmountForRound16ToQuarter, y: round16UpperMiddleOffsetY } }], \n        sourceID: 'round16_6', \n        targetID: 'quarter3',\n        style: { strokeColor: 'rgba(0, 102, 204, 0.2)', strokeWidth: 2 },\n        targetDecorator: { shape: 'None' },\n        sourceDecorator: { shape: 'None' }\n      },\n      { \n        id: 'quarter4_1', \n        segments: [{ point: { x: rightQuarterFinalNodesOffsetX + angleTiltAmountForRound16ToQuarter, y: round16LowerMiddleOffsetY } }], \n        sourceID: 'round16_7', \n        targetID: 'quarter4',\n        style: { strokeColor: 'rgba(0, 102, 204, 0.2)', strokeWidth: 2 },\n        targetDecorator: { shape: 'None' },\n        sourceDecorator: { shape: 'None' }\n      },\n      { \n        id: 'quarter4_2', \n        segments: [{ point: { x: rightQuarterFinalNodesOffsetX + angleTiltAmountForRound16ToQuarter, y: round16BottomOffsetY } }], \n        sourceID: 'round16_8', \n        targetID: 'quarter4',\n        style: { strokeColor: 'rgba(0, 102, 204, 0.2)', strokeWidth: 2 },\n        targetDecorator: { shape: 'None' },\n        sourceDecorator: { shape: 'None' }\n      }\n    ];\n  }\n\n  // Default properties for connectors\n  public connectorDefaults(connector: any): void {\n    connector.type = 'Straight';\n    connector.sourcePadding = 10;\n    connector.targetPadding = 10;\n  }\n\n  public diagramLoad(): void {\n    if (this.diagram) {\n      setTimeout(() => {\n        this.diagram.fitToPage({\n          canZoomIn: true,\n          margin: { left: 0, right: 20, top: 0, bottom: 90 }\n        });\n      });\n    }\n  }\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section tournament-result-container\">\n    <div class=\"sample-section\">\n        <ejs-diagram #diagram\n            *ngIf=\"!isLoading\"\n            id=\"footballResultDiagram\" \n            width=\"100%\" \n            height=\"100%\" \n            [nodes]=\"nodes\" \n            [connectors]=\"connectors\"\n            [tool]=\"tools\"\n            [snapSettings]=\"snapSettings\"\n            [getConnectorDefaults]=\"connectorDefaults.bind(this)\"\n            (load)=\"diagramLoad()\"\n            [constraints]=\"constraints\">\n        </ejs-diagram>\n        <div class=\"loading\" *ngIf=\"isLoading\">\n            <span>Loading Tournament Results...</span>\n        </div>\n    </div>\n</div>\n","app.component.css":".tournament-result-container {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    height: 100vh;\n    overflow: hidden;\n    font-family: 'Verdana', sans-serif;\n    background: linear-gradient(135deg, #001122 0%, #003366 25%, #004488 50%, #003366 75%, #001122 100%);\n    position: relative;\n}\n\n/* UEFA Champions League themed animated background */\n.tournament-result-container::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: \n        radial-gradient(circle at 20% 80%, rgba(0, 51, 102, 0.6) 0%, transparent 50%),\n        radial-gradient(circle at 80% 20%, rgba(255, 255, 255, 0.1) 0%, transparent 50%),\n        radial-gradient(circle at 40% 40%, rgba(0, 68, 136, 0.4) 0%, transparent 50%);\n    pointer-events: none;\n}\n\n/* UEFA Stars Pattern */\n.tournament-result-container::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: \n        radial-gradient(2px 2px at 20px 30px, rgba(255,255,255,0.3), transparent),\n        radial-gradient(2px 2px at 40px 70px, rgba(255,255,255,0.2), transparent),\n        radial-gradient(1px 1px at 90px 40px, rgba(255,255,255,0.4), transparent),\n        radial-gradient(1px 1px at 130px 80px, rgba(255,255,255,0.3), transparent);\n    background-repeat: repeat;\n    background-size: 150px 100px;\n    animation: starTwinkle 8s ease-in-out infinite;\n    pointer-events: none;\n}\n\n@keyframes starTwinkle {\n    0%, 100% { opacity: 0.3; }\n    50% { opacity: 0.8; }\n}\n\n.tournament-result-container .sample-section {\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    position: relative;\n    z-index: 1;\n}\n\n.tournament-result-container #footballResultDiagram {\n    flex: 1;\n    width: 100%;\n    background: transparent;\n}\n\n.tournament-result-container #footballResultDiagramcontent{\n    overflow: hidden !important;\n    animation: zoomOutEffect 3s ease-out;\n}\n\n@keyframes zoomOutEffect {\n    0% { \n        transform: scale(1.3);\n        opacity: 0.8;\n    }\n    100% { \n        transform: scale(1);\n        opacity: 1;\n    }\n}\n\n/* Enhanced Tournament node styles with UEFA theme */\n.tournament-result-container .tournament-node {\n    cursor: pointer;\n    width: 100%;\n    height: 100%;\n    border-radius: 12px;\n    overflow: hidden;\n    position: relative;\n    min-width: 110px;\n    min-height: 55px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    box-shadow: \n        0 8px 25px rgba(0, 0, 0, 0.4),\n        0 0 20px rgba(255, 255, 255, 0.1);\n    border: 2px solid rgba(255, 255, 255, 0.2);\n}\n\n.tournament-result-container .tournament-node:hover {\n    transform: translateY(-8px) scale(1.08);\n    box-shadow: \n        0 25px 50px rgba(0, 0, 0, 0.6),\n        0 0 40px rgba(0, 102, 204, 0.5),\n        inset 0 1px 0 rgba(255, 255, 255, 0.3);\n    transition: all .4s cubic-bezier(0.4, 0, 0.2, 1);\n    border-color: rgba(0, 102, 204, 0.8);\n}\n\n/* Enhanced flip card animation */\n.tournament-result-container .flip-card {\n    width: 100%;\n    height: 100%;\n    position: relative;\n    perspective: 1200px;\n}\n\n.tournament-result-container .flip-card-inner {\n    width: 100%;\n    height: 100%;\n    transition: transform 0.9s cubic-bezier(0.4,0,0.2,1);\n    transform-style: preserve-3d;\n    position: relative;\n    transform: rotateY(0deg); /* Start showing front */\n    animation: delayedFlip 0.6s cubic-bezier(0.4,0,0.2,1) both; /* Reduced from 0.9s */\n}\n\n.tournament-result-container .flip-card-inner .flip-card-front,\n.tournament-result-container .flip-card-inner .flip-card-back {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0; \n    left: 0;\n    backface-visibility: hidden;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    overflow: hidden;\n}\n\n.tournament-result-container .flip-card-inner .flip-card-front {\n    z-index: 2;\n    background: linear-gradient(135deg, rgba(0, 51, 102, 0.9) 0%, rgba(0, 68, 136, 0.9) 100%);\n}\n\n.tournament-result-container .flip-card-inner .flip-card-back {\n    transform: rotateY(180deg);\n    z-index: 1;\n    background: linear-gradient(135deg, rgba(0, 51, 102, 0.95) 0%, rgba(0, 68, 136, 0.95) 100%);\n}\n\n/* UEFA Champions League themed team sections */\n.tournament-result-container .team-section {\n    height: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    font-weight: 700;\n    font-size: 14px;\n    color: white;\n    padding: 0 15px;\n    text-shadow: 0 2px 6px rgba(0, 0, 0, 0.7);\n    position: relative;\n    border: none;\n    background: linear-gradient(90deg, rgba(255,255,255,0.1) 0%, transparent 100%);\n}\n\n.tournament-result-container .team-section .team-name {\n    flex: 1 1 auto;\n    text-align: left;\n    font-weight: 800;\n    letter-spacing: 0.8px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    padding-right: 40px;\n    text-transform: uppercase;\n}\n\n.tournament-result-container .team-section .team-score.score-right {\n    position: absolute;\n    right: 15px;\n    font-size: 16px;\n    font-weight: 900;\n    color: #fff !important;\n    text-shadow: 0 2px 4px rgba(0,0,0,0.5);\n    min-width: 25px;\n    text-align: right;\n    z-index: 2;\n    background: rgba(0, 0, 0, 0.3);\n    padding: 2px 6px;\n    border-radius: 4px;\n}\n\n/* Enhanced Winner highlighting with UEFA colors */\n.tournament-result-container .team-section.winner {\n    background: linear-gradient(135deg, #FFD700 0%, #FFA500 50%, #FF8C00 100%) !important;\n    color: #1a1a1a !important;\n    box-shadow: \n        0 0 20px rgba(255, 215, 0, 0.6),\n        inset 0 2px 0 rgba(255, 255, 255, 0.4),\n        inset 0 -1px 0 rgba(0, 0, 0, 0.2);\n    font-weight: 900;\n    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);\n    animation: winnerGlow 2s ease-in-out infinite alternate;\n}\n\n.tournament-result-container .team-section.winner .team-name,\n.tournament-result-container .team-section.winner .team-score {\n    text-shadow: 0 1px 2px rgba(67, 55, 0, 0.5);\n    font-weight: 900;\n}\n\n@keyframes winnerGlow {\n    0% { box-shadow: 0 0 20px rgba(255, 215, 0, 0.6), inset 0 2px 0 rgba(255, 255, 255, 0.4); }\n    100% { box-shadow: 0 0 30px rgba(255, 215, 0, 0.9), inset 0 2px 0 rgba(255, 255, 255, 0.6); }\n}\n\n/* UEFA themed gradient colors for different rounds */\n.tournament-result-container .round16-node .team-section.team-top {\n    background: linear-gradient(135deg, #003366 0%, #0066cc 100%);\n}\n.tournament-result-container .round16-node .team-section.team-bottom {\n    background: linear-gradient(135deg, #004488 0%, #0077dd 100%);\n}\n\n.tournament-result-container .quarterfinal-node .team-section.team-top {\n    background: linear-gradient(135deg, #001a33 0%, #004080 100%);\n}\n.tournament-result-container .quarterfinal-node .team-section.team-bottom {\n    background: linear-gradient(135deg, #002244 0%, #0055aa 100%);\n}\n\n.tournament-result-container .semifinal-node .team-section.team-top {\n    background: linear-gradient(135deg, #000d1a 0%, #003366 100%);\n}\n.tournament-result-container .semifinal-node .team-section.team-bottom {\n    background: linear-gradient(135deg, #001122 0%, #004488 100%);\n}\n\n.tournament-result-container .final-node .team-section.team-top {\n    background: linear-gradient(135deg, #000611 0%, #002244 100%);\n}\n.tournament-result-container .final-node .team-section.team-bottom {\n    background: linear-gradient(135deg, #000a1a 0%, #003366 100%);\n}\n\n/* Enhanced Champion Node with UEFA styling */\n.tournament-result-container .champion-node {\n    background: linear-gradient(135deg, #001122 0%, #003366 50%, #0066cc 100%);\n    border: 4px solid #FFD700;\n    border-radius: 20px;\n    position: relative;\n    overflow: visible;\n    animation: championGlow 3s ease-in-out infinite;\n    box-shadow: \n        0 20px 50px rgba(0, 102, 204, 0.5),\n        0 0 40px rgba(255, 215, 0, 0.4),\n        inset 0 2px 0 rgba(255, 255, 255, 0.3);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.tournament-result-container .champion-container {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    padding: 25px 20px;\n}\n\n.tournament-result-container .champion-badge {\n    background: linear-gradient(135deg, #FFD700 0%, #FFA500 50%, #FF8C00 100%);\n    border-radius: 50%;\n    width: 60px;\n    height: 60px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 12px;\n    box-shadow: \n        0 10px 25px rgba(0, 0, 0, 0.3),\n        inset 0 2px 0 rgba(255, 255, 255, 0.6),\n        0 0 20px rgba(255, 215, 0, 0.5);\n    flex-shrink: 0;\n    border: 3px solid #fff;\n}\n\n.tournament-result-container .champion-trophy {\n    font-size: 38px;\n    animation: trophyBounce 2s ease-in-out infinite;\n    transform-origin: center bottom;\n}\n\n@keyframes trophyBounce {\n    0%, 20%, 50%, 80%, 100% {\n        transform: translateY(0) scale(1);\n    }\n    40% {\n        transform: translateY(-10px) scale(1.1);\n    }\n    60% {\n        transform: translateY(-5px) scale(1.05);\n    }\n}\n\n.tournament-result-container .champion-title {\n    font-family: 'Verdana', sans-serif;\n    font-size: 18px;\n    font-weight: 900;\n    color: #FFD700;\n    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.8);\n    margin-bottom: 10px;\n    letter-spacing: 3px;\n    line-height: 1.2;\n    text-transform: uppercase;\n}\n\n.tournament-result-container .champion-team {\n    font-family: 'Verdana', sans-serif;\n    font-size: 20px;\n    font-weight: 900;\n    color: #ffffff;\n    text-shadow: 0 2px 6px rgba(0, 0, 0, 0.8);\n    letter-spacing: 1.5px;\n    line-height: 1.1;\n    margin-bottom: 6px;\n    text-transform: uppercase;\n}\n\n.tournament-result-container .champion-year {\n    font-size: 12px;\n    color: rgba(255, 255, 255, 0.9);\n    font-weight: 700;\n    letter-spacing: 2px;\n    text-shadow: 0 1px 3px rgba(0, 0, 0, 0.6);\n}\n\n.tournament-result-container .team-score.score-right {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n/* Enhanced Champion Animations */\n@keyframes championGlow {\n    0%, 100% { \n        box-shadow: \n            0 20px 50px rgba(0, 102, 204, 0.5),\n            0 0 40px rgba(255, 215, 0, 0.4),\n            inset 0 2px 0 rgba(255, 255, 255, 0.3);\n        border-color: #FFD700;\n    }\n    50% { \n        box-shadow: \n            0 25px 60px rgba(0, 102, 204, 0.7),\n            0 0 60px rgba(255, 215, 0, 0.7),\n            inset 0 2px 0 rgba(255, 255, 255, 0.5);\n        border-color: #FFA500;\n    }\n}\n\n/* Progressive flip animation delays */\n.tournament-result-container .round16-node .flip-card-inner:nth-of-type(1) { animation-delay: 0.3s; }\n.tournament-result-container .round16-node .flip-card-inner:nth-of-type(2) { animation-delay: 0.4s; }\n.tournament-result-container .round16-node .flip-card-inner:nth-of-type(3) { animation-delay: 0.5s; }\n.tournament-result-container .round16-node .flip-card-inner:nth-of-type(4) { animation-delay: 0.6s; }\n.tournament-result-container .round16-node .flip-card-inner:nth-of-type(5) { animation-delay: 0.7s; }\n.tournament-result-container .round16-node .flip-card-inner:nth-of-type(6) { animation-delay: 0.8s; }\n.tournament-result-container .round16-node .flip-card-inner:nth-of-type(7) { animation-delay: 0.9s; }\n.tournament-result-container .round16-node .flip-card-inner:nth-of-type(8) { animation-delay: 1.0s; }\n\n.tournament-result-container .quarterfinal-node .flip-card-inner:nth-of-type(1) { animation-delay: 1.3s; }\n.tournament-result-container .quarterfinal-node .flip-card-inner:nth-of-type(2) { animation-delay: 1.4s; }\n.tournament-result-container .quarterfinal-node .flip-card-inner:nth-of-type(3) { animation-delay: 1.5s; }\n.tournament-result-container .quarterfinal-node .flip-card-inner:nth-of-type(4) { animation-delay: 1.6s; }\n\n.tournament-result-container .semifinal-node .flip-card-inner:nth-of-type(1) { animation-delay: 1.9s; }\n.tournament-result-container .semifinal-node .flip-card-inner:nth-of-type(2) { animation-delay: 2.0s; }\n\n.tournament-result-container .final-node .flip-card-inner { animation-delay: 2.6s; }\n\n.tournament-result-container .champion-node .champion-info {\n    animation: championReveal 0.8s ease-in-out 2.8s both; /* Reduced from 5.2s */\n}\n\n@keyframes championReveal {\n    0% { opacity: 0; transform: scale(0.8); }\n    100% { opacity: 1; transform: scale(1); }\n}\n\n@keyframes delayedFlip {\n    0% { transform: rotateY(0deg); }\n    100% { transform: rotateY(180deg); }\n}\n\n.tournament-result-container .loading {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    color: #FFD700;\n    font-size: 22px;\n    letter-spacing: 2px;\n    font-family: 'Verdana', sans-serif;\n    text-align: center;\n    text-shadow: 0 3px 6px rgba(0,0,0,0.7);\n    font-weight: 700;\n    text-transform: uppercase;\n}\n\n/* Enhanced node decorations */\n.tournament-result-container .tournament-node::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 2px;\n    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);\n    z-index: 1;\n}\n\n/* Tooltip Styles */\n/* Hide tooltip background */\n.e-tooltip-wrap.e-popup.e-diagram-tooltip:has(.football-results-tooltip-content) {\n    background-color: transparent !important;\n    border:  none !important;\n    box-shadow: none !important;\n}\n\n.e-tooltip-wrap:has(.football-results-tooltip-content) .e-tip-content {\n    padding: 0px !important;\n}\n\n.e-tooltip-wrap:has(.football-results-tooltip-content) .e-arrow-tip-inner.e-tip-right,\n.e-tooltip-wrap:has(.football-results-tooltip-content) .e-arrow-tip-inner.e-tip-left,\n.e-tooltip-wrap:has(.football-results-tooltip-content) .e-arrow-tip-inner.e-tip-bottom,\n.e-tooltip-wrap:has(.football-results-tooltip-content) .e-arrow-tip-inner.e-tip-top {\n    color: #001122 !important;\n}\n\n/* Outer arrow tips for different positions - only for football tooltips */\n.e-tooltip-wrap:has(.football-results-tooltip-content) .e-arrow-tip-outer.e-tip-top {\n    border-bottom-color: #001122 !important;\n}\n\n.e-tooltip-wrap:has(.football-results-tooltip-content) .e-arrow-tip-outer.e-tip-bottom {\n    border-top-color: #001122 !important;\n}\n\n.e-tooltip-wrap:has(.football-results-tooltip-content) .e-arrow-tip-outer.e-tip-left {\n    border-right-color: #001122 !important;\n}\n\n.e-tooltip-wrap:has(.football-results-tooltip-content) .e-arrow-tip-outer.e-tip-right {\n    border-left-color: #001122 !important;\n}\n\n/* Define the stroke color change animation */\n@keyframes pathStrokeActivate {\n    0% {\n        stroke: #0066cc; /* Original color */\n    }\n    100% {\n        stroke: #d2e8ff; /* Target color */\n    }\n}\n\n/* Round of 16 to Quarter-final paths */\n#quarter1_1_path { animation: pathStrokeActivate 0.2s ease-in-out 0.8s both; stroke-width: 3; }\n#quarter1_2_path { animation: pathStrokeActivate 0.2s ease-in-out 0.9s both; stroke-width: 3; }\n#quarter2_1_path { animation: pathStrokeActivate 0.2s ease-in-out 1.0s both; stroke-width: 3; }\n#quarter2_2_path { animation: pathStrokeActivate 0.2s ease-in-out 1.1s both; stroke-width: 3; }\n#quarter3_1_path { animation: pathStrokeActivate 0.2s ease-in-out 1.2s both; stroke-width: 3; }\n#quarter3_2_path { animation: pathStrokeActivate 0.2s ease-in-out 1.3s both; stroke-width: 3; }\n#quarter4_1_path { animation: pathStrokeActivate 0.2s ease-in-out 1.4s both; stroke-width: 3; }\n#quarter4_2_path { animation: pathStrokeActivate 0.2s ease-in-out 1.5s both; stroke-width: 3; }\n/* Quarter-final to Semi-final paths */\n#semi1_1_path { animation: pathStrokeActivate 0.2s ease-in-out 1.8s both; stroke-width: 3; }\n#semi1_2_path { animation: pathStrokeActivate 0.2s ease-in-out 1.9s both; stroke-width: 3; }\n#semi2_1_path { animation: pathStrokeActivate 0.2s ease-in-out 2.0s both; stroke-width: 3; }\n#semi2_2_path { animation: pathStrokeActivate 0.2s ease-in-out 2.1s both; stroke-width: 3; }\n/* Semi-final to Final */\n#final1_path    { animation: pathStrokeActivate 0.2s ease-in-out 2.4s both; stroke-width: 3; }\n#final2_path    { animation: pathStrokeActivate 0.2s ease-in-out 2.5s both; stroke-width: 3; }\n/* Final to Champion */\n#champ1_path    { animation: pathStrokeActivate 0.2s ease-in-out 3.1s both; stroke-width: 3; }\n        \n/* Responsive design */\n@media (max-width: 1200px) {\n    .tournament-result-container .tournament-node { border-radius: 12px; }\n    .tournament-result-container .team-section { font-size: 10px; padding: 0 12px; }\n    .tournament-result-container .champion-title { font-size: 13px; }\n    .tournament-result-container .champion-team { font-size: 16px; }\n    .tournament-result-container .champion-badge { width: 50px; height: 50px; }\n    .tournament-result-container .champion-trophy { font-size: 24px; }\n}\n\n@media (max-width: 768px) {\n    .tournament-result-container .team-section { font-size: 9px; padding: 0 10px; }\n    .tournament-result-container .team-section .team-score.score-right { font-size: 14px; right: 10px; }\n    .tournament-result-container .champion-title { font-size: 12px; }\n    .tournament-result-container .champion-team { font-size: 15px; }\n    .tournament-result-container .champion-badge { width: 45px; height: 45px; }\n    .tournament-result-container .champion-trophy { font-size: 22px; }\n}","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-diagrams\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-diagrams\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-angular-splitbuttons\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"@syncfusion/ej2-angular-circulargauge\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-angular-calendars\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-angular-lists\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-grids\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-angular-popups\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}