{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewChild, ViewEncapsulation, OnInit } from '@angular/core';\nimport {\n  DiagramComponent,\n  DiagramModule\n} from '@syncfusion/ej2-angular-diagrams';\nimport {\n  Diagram,\n  NodeModel,\n  ShapeAnnotationModel,\n  BasicShapeModel,\n  SnapConstraints,\n  NodeConstraints,\n  DiagramTools,\n  PointModel,\n  randomId,\n  MouseEventArgs,\n  SelectorConstraints,\n  ConnectorModel,\n  ConnectorConstraints,\n  SnapSettingsModel,\n  DiagramConstraints\n} from '@syncfusion/ej2-diagrams';\n\n\n\n\n// Interface for element data\ninterface Element {\n  atomicNumber?: number;\n  atomicMass?: number;\n  symbol: string;\n  name: string;\n  period: number;\n  group: number;\n  category: string;\n  block?: string;\n}\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ DiagramModule, ]\n})\nexport class AppComponent {\n  @ViewChild('diagram')\n  public diagram: DiagramComponent;\n  public constraints: DiagramConstraints = DiagramConstraints.Default &~ DiagramConstraints.UndoRedo;\n\n  public nodes: NodeModel[] = [];\n  public connectors: ConnectorModel[] = [];\n  public snapSettings: SnapSettingsModel = { constraints: SnapConstraints.None };\n  public tool = DiagramTools.SingleSelect;\n  public selectedItems = { constraints: SelectorConstraints.None };\n\n  // Element categories and their corresponding colors\n  private categoryColors: { [key: string]: string } = {\n    'alkali-metals': '#006AC7',\n    'alkaline-earth-metals': '#08970E',\n    'transition-metals': '#F08000',\n    'other-metals': '#B75A09',\n    'metalloids': '#95B506',\n    'non-metals': '#DE2362',\n    'halogens': '#DE2723',\n    'noble-gases': '#0B98A9',\n    'lanthanides': '#5C1FA8',\n    'actinides': '#8C04A1',\n  };\n\n  // Configuration constants\n  private readonly CELL_WIDTH: number = 60;\n  private readonly CELL_HEIGHT: number = 60;\n  private readonly CELL_SPACING: number = 10;\n  private readonly START_X: number = 50;\n  private readonly START_Y: number = 50;\n\n  // Periodic table data\n  private periodicTableData: Element[] = [\n    // Period 1\n    { atomicNumber: 1, symbol: 'H', name: 'Hydrogen', period: 1, group: 1, category: 'non-metals', atomicMass: 1.008 },\n    { atomicNumber: 2, symbol: 'He', name: 'Helium', period: 1, group: 18, category: 'noble-gases', atomicMass: 4.0026 },\n\n    // Period 2\n    { atomicNumber: 3, symbol: 'Li', name: 'Lithium', period: 2, group: 1, category: 'alkali-metals', atomicMass: 6.94 },\n    { atomicNumber: 4, symbol: 'Be', name: 'Beryllium', period: 2, group: 2, category: 'alkaline-earth-metals', atomicMass: 9.0122 },\n    { atomicNumber: 5, symbol: 'B', name: 'Boron', period: 2, group: 13, category: 'metalloids', atomicMass: 10.81 },\n    { atomicNumber: 6, symbol: 'C', name: 'Carbon', period: 2, group: 14, category: 'non-metals', atomicMass: 12.011 },\n    { atomicNumber: 7, symbol: 'N', name: 'Nitrogen', period: 2, group: 15, category: 'non-metals', atomicMass: 14.007 },\n    { atomicNumber: 8, symbol: 'O', name: 'Oxygen', period: 2, group: 16, category: 'non-metals', atomicMass: 15.999 },\n    { atomicNumber: 9, symbol: 'F', name: 'Fluorine', period: 2, group: 17, category: 'halogens', atomicMass: 18.998 },\n    { atomicNumber: 10, symbol: 'Ne', name: 'Neon', period: 2, group: 18, category: 'noble-gases', atomicMass: 20.18 },\n\n    // Period 3\n    { atomicNumber: 11, symbol: 'Na', name: 'Sodium', period: 3, group: 1, category: 'alkali-metals', atomicMass: 22.99 },\n    { atomicNumber: 12, symbol: 'Mg', name: 'Magnesium', period: 3, group: 2, category: 'alkaline-earth-metals', atomicMass: 24.305 },\n    { atomicNumber: 13, symbol: 'Al', name: 'Aluminum', period: 3, group: 13, category: 'other-metals', atomicMass: 26.982 },\n    { atomicNumber: 14, symbol: 'Si', name: 'Silicon', period: 3, group: 14, category: 'metalloids', atomicMass: 28.085 },\n    { atomicNumber: 15, symbol: 'P', name: 'Phosphorus', period: 3, group: 15, category: 'non-metals', atomicMass: 30.974 },\n    { atomicNumber: 16, symbol: 'S', name: 'Sulfur', period: 3, group: 16, category: 'non-metals', atomicMass: 32.06 },\n    { atomicNumber: 17, symbol: 'Cl', name: 'Chlorine', period: 3, group: 17, category: 'halogens', atomicMass: 35.45 },\n    { atomicNumber: 18, symbol: 'Ar', name: 'Argon', period: 3, group: 18, category: 'noble-gases', atomicMass: 39.948 },\n\n    // Period 4\n    { atomicNumber: 19, symbol: 'K', name: 'Potassium', period: 4, group: 1, category: 'alkali-metals', atomicMass: 39.098 },\n    { atomicNumber: 20, symbol: 'Ca', name: 'Calcium', period: 4, group: 2, category: 'alkaline-earth-metals', atomicMass: 40.078 },\n    { atomicNumber: 21, symbol: 'Sc', name: 'Scandium', period: 4, group: 3, category: 'transition-metals', atomicMass: 44.956 },\n    { atomicNumber: 22, symbol: 'Ti', name: 'Titanium', period: 4, group: 4, category: 'transition-metals', atomicMass: 47.867 },\n    { atomicNumber: 23, symbol: 'V', name: 'Vanadium', period: 4, group: 5, category: 'transition-metals', atomicMass: 50.942 },\n    { atomicNumber: 24, symbol: 'Cr', name: 'Chromium', period: 4, group: 6, category: 'transition-metals', atomicMass: 51.996 },\n    { atomicNumber: 25, symbol: 'Mn', name: 'Manganese', period: 4, group: 7, category: 'transition-metals', atomicMass: 54.938 },\n    { atomicNumber: 26, symbol: 'Fe', name: 'Iron', period: 4, group: 8, category: 'transition-metals', atomicMass: 55.845 },\n    { atomicNumber: 27, symbol: 'Co', name: 'Cobalt', period: 4, group: 9, category: 'transition-metals', atomicMass: 58.933 },\n    { atomicNumber: 28, symbol: 'Ni', name: 'Nickel', period: 4, group: 10, category: 'transition-metals', atomicMass: 58.693 },\n    { atomicNumber: 29, symbol: 'Cu', name: 'Copper', period: 4, group: 11, category: 'transition-metals', atomicMass: 63.546 },\n    { atomicNumber: 30, symbol: 'Zn', name: 'Zinc', period: 4, group: 12, category: 'transition-metals', atomicMass: 65.38 },\n    { atomicNumber: 31, symbol: 'Ga', name: 'Gallium', period: 4, group: 13, category: 'other-metals', atomicMass: 69.723 },\n    { atomicNumber: 32, symbol: 'Ge', name: 'Germanium', period: 4, group: 14, category: 'metalloids', atomicMass: 72.63 },\n    { atomicNumber: 33, symbol: 'As', name: 'Arsenic', period: 4, group: 15, category: 'metalloids', atomicMass: 74.922 },\n    { atomicNumber: 34, symbol: 'Se', name: 'Selenium', period: 4, group: 16, category: 'non-metals', atomicMass: 78.971 },\n    { atomicNumber: 35, symbol: 'Br', name: 'Bromine', period: 4, group: 17, category: 'halogens', atomicMass: 79.904 },\n    { atomicNumber: 36, symbol: 'Kr', name: 'Krypton', period: 4, group: 18, category: 'noble-gases', atomicMass: 83.798 },\n\n    // Period 5\n    { atomicNumber: 37, symbol: 'Rb', name: 'Rubidium', period: 5, group: 1, category: 'alkali-metals', atomicMass: 85.468 },\n    { atomicNumber: 38, symbol: 'Sr', name: 'Strontium', period: 5, group: 2, category: 'alkaline-earth-metals', atomicMass: 87.62 },\n    { atomicNumber: 39, symbol: 'Y', name: 'Yttrium', period: 5, group: 3, category: 'transition-metals', atomicMass: 88.906 },\n    { atomicNumber: 40, symbol: 'Zr', name: 'Zirconium', period: 5, group: 4, category: 'transition-metals', atomicMass: 91.224 },\n    { atomicNumber: 41, symbol: 'Nb', name: 'Niobium', period: 5, group: 5, category: 'transition-metals', atomicMass: 92.906 },\n    { atomicNumber: 42, symbol: 'Mo', name: 'Molybdenum', period: 5, group: 6, category: 'transition-metals', atomicMass: 95.95 },\n    { atomicNumber: 43, symbol: 'Tc', name: 'Technetium', period: 5, group: 7, category: 'transition-metals', atomicMass: 98.0 },\n    { atomicNumber: 44, symbol: 'Ru', name: 'Ruthenium', period: 5, group: 8, category: 'transition-metals', atomicMass: 101.07 },\n    { atomicNumber: 45, symbol: 'Rh', name: 'Rhodium', period: 5, group: 9, category: 'transition-metals', atomicMass: 102.91 },\n    { atomicNumber: 46, symbol: 'Pd', name: 'Palladium', period: 5, group: 10, category: 'transition-metals', atomicMass: 106.42 },\n    { atomicNumber: 47, symbol: 'Ag', name: 'Silver', period: 5, group: 11, category: 'transition-metals', atomicMass: 107.87 },\n    { atomicNumber: 48, symbol: 'Cd', name: 'Cadmium', period: 5, group: 12, category: 'transition-metals', atomicMass: 112.41 },\n    { atomicNumber: 49, symbol: 'In', name: 'Indium', period: 5, group: 13, category: 'other-metals', atomicMass: 114.82 },\n    { atomicNumber: 50, symbol: 'Sn', name: 'Tin', period: 5, group: 14, category: 'other-metals', atomicMass: 118.71 },\n    { atomicNumber: 51, symbol: 'Sb', name: 'Antimony', period: 5, group: 15, category: 'metalloids', atomicMass: 121.76 },\n    { atomicNumber: 52, symbol: 'Te', name: 'Tellurium', period: 5, group: 16, category: 'metalloids', atomicMass: 127.6 },\n    { atomicNumber: 53, symbol: 'I', name: 'Iodine', period: 5, group: 17, category: 'halogens', atomicMass: 126.9 },\n    { atomicNumber: 54, symbol: 'Xe', name: 'Xenon', period: 5, group: 18, category: 'noble-gases', atomicMass: 131.29 },\n\n    // Period 6\n    { atomicNumber: 55, symbol: 'Cs', name: 'Cesium', period: 6, group: 1, category: 'alkali-metals', atomicMass: 132.91 },\n    { atomicNumber: 56, symbol: 'Ba', name: 'Barium', period: 6, group: 2, category: 'alkaline-earth-metals', atomicMass: 137.33 },\n    { symbol: '57-71', name: 'Lanthanides', period: 6, group: 3, category: 'lanthanides' },\n    { atomicNumber: 72, symbol: 'Hf', name: 'Hafnium', period: 6, group: 4, category: 'transition-metals', atomicMass: 178.49 },\n    { atomicNumber: 73, symbol: 'Ta', name: 'Tantalum', period: 6, group: 5, category: 'transition-metals', atomicMass: 180.95 },\n    { atomicNumber: 74, symbol: 'W', name: 'Tungsten', period: 6, group: 6, category: 'transition-metals', atomicMass: 183.84 },\n    { atomicNumber: 75, symbol: 'Re', name: 'Rhenium', period: 6, group: 7, category: 'transition-metals', atomicMass: 186.21 },\n    { atomicNumber: 76, symbol: 'Os', name: 'Osmium', period: 6, group: 8, category: 'transition-metals', atomicMass: 190.23 },\n    { atomicNumber: 77, symbol: 'Ir', name: 'Iridium', period: 6, group: 9, category: 'transition-metals', atomicMass: 192.22 },\n    { atomicNumber: 78, symbol: 'Pt', name: 'Platinum', period: 6, group: 10, category: 'transition-metals', atomicMass: 195.08 },\n    { atomicNumber: 79, symbol: 'Au', name: 'Gold', period: 6, group: 11, category: 'transition-metals', atomicMass: 196.97 },\n    { atomicNumber: 80, symbol: 'Hg', name: 'Mercury', period: 6, group: 12, category: 'transition-metals', atomicMass: 200.59 },\n    { atomicNumber: 81, symbol: 'Tl', name: 'Thallium', period: 6, group: 13, category: 'other-metals', atomicMass: 204.38 },\n    { atomicNumber: 82, symbol: 'Pb', name: 'Lead', period: 6, group: 14, category: 'other-metals', atomicMass: 207.2 },\n    { atomicNumber: 83, symbol: 'Bi', name: 'Bismuth', period: 6, group: 15, category: 'other-metals', atomicMass: 208.98 },\n    { atomicNumber: 84, symbol: 'Po', name: 'Polonium', period: 6, group: 16, category: 'metalloids', atomicMass: 209.0 },\n    { atomicNumber: 85, symbol: 'At', name: 'Astatine', period: 6, group: 17, category: 'halogens', atomicMass: 210.0 },\n    { atomicNumber: 86, symbol: 'Rn', name: 'Radon', period: 6, group: 18, category: 'noble-gases', atomicMass: 222.0 },\n\n    // Period 7\n    { atomicNumber: 87, symbol: 'Fr', name: 'Francium', period: 7, group: 1, category: 'alkali-metals', atomicMass: 223.0 },\n    { atomicNumber: 88, symbol: 'Ra', name: 'Radium', period: 7, group: 2, category: 'alkaline-earth-metals', atomicMass: 226.0 },\n    { symbol: '89-103', name: 'Actinides', period: 7, group: 3, category: 'actinides' },\n    { atomicNumber: 104, symbol: 'Rf', name: 'Rutherfordium', period: 7, group: 4, category: 'transition-metals', atomicMass: 267.0 },\n    { atomicNumber: 105, symbol: 'Db', name: 'Dubnium', period: 7, group: 5, category: 'transition-metals', atomicMass: 270.0 },\n    { atomicNumber: 106, symbol: 'Sg', name: 'Seaborgium', period: 7, group: 6, category: 'transition-metals', atomicMass: 271.0 },\n    { atomicNumber: 107, symbol: 'Bh', name: 'Bohrium', period: 7, group: 7, category: 'transition-metals', atomicMass: 270.0 },\n    { atomicNumber: 108, symbol: 'Hs', name: 'Hassium', period: 7, group: 8, category: 'transition-metals', atomicMass: 277.0 },\n    { atomicNumber: 109, symbol: 'Mt', name: 'Meitnerium', period: 7, group: 9, category: 'transition-metals', atomicMass: 276.0 },\n    { atomicNumber: 110, symbol: 'Ds', name: 'Darmstadtium', period: 7, group: 10, category: 'transition-metals', atomicMass: 281.0 },\n    { atomicNumber: 111, symbol: 'Rg', name: 'Roentgenium', period: 7, group: 11, category: 'transition-metals', atomicMass: 282.0 },\n    { atomicNumber: 112, symbol: 'Cn', name: 'Copernicium', period: 7, group: 12, category: 'transition-metals', atomicMass: 285.0 },\n    { atomicNumber: 113, symbol: 'Nh', name: 'Nihonium', period: 7, group: 13, category: 'other-metals', atomicMass: 286.0 },\n    { atomicNumber: 114, symbol: 'Fl', name: 'Flerovium', period: 7, group: 14, category: 'other-metals', atomicMass: 289.0 },\n    { atomicNumber: 115, symbol: 'Mc', name: 'Moscovium', period: 7, group: 15, category: 'other-metals', atomicMass: 290.0 },\n    { atomicNumber: 116, symbol: 'Lv', name: 'Livermorium', period: 7, group: 16, category: 'other-metals', atomicMass: 293.0 },\n    { atomicNumber: 117, symbol: 'Ts', name: 'Tennessine', period: 7, group: 17, category: 'halogens', atomicMass: 294.0 },\n    { atomicNumber: 118, symbol: 'Og', name: 'Oganesson', period: 7, group: 18, category: 'noble-gases', atomicMass: 294.0 },\n\n    // Lanthanides (Period 6, separate row)\n    { atomicNumber: 57, symbol: 'La', name: 'Lanthanum', period: 6, group: 3, category: 'lanthanides', atomicMass: 138.91, block: 'f' },\n    { atomicNumber: 58, symbol: 'Ce', name: 'Cerium', period: 6, group: 4, category: 'lanthanides', atomicMass: 140.12, block: 'f' },\n    { atomicNumber: 59, symbol: 'Pr', name: 'Praseodymium', period: 6, group: 5, category: 'lanthanides', atomicMass: 140.91, block: 'f' },\n    { atomicNumber: 60, symbol: 'Nd', name: 'Neodymium', period: 6, group: 6, category: 'lanthanides', atomicMass: 144.24, block: 'f' },\n    { atomicNumber: 61, symbol: 'Pm', name: 'Promethium', period: 6, group: 7, category: 'lanthanides', atomicMass: 145.0, block: 'f' },\n    { atomicNumber: 62, symbol: 'Sm', name: 'Samarium', period: 6, group: 8, category: 'lanthanides', atomicMass: 150.36, block: 'f' },\n    { atomicNumber: 63, symbol: 'Eu', name: 'Europium', period: 6, group: 9, category: 'lanthanides', atomicMass: 151.96, block: 'f' },\n    { atomicNumber: 64, symbol: 'Gd', name: 'Gadolinium', period: 6, group: 10, category: 'lanthanides', atomicMass: 157.25, block: 'f' },\n    { atomicNumber: 65, symbol: 'Tb', name: 'Terbium', period: 6, group: 11, category: 'lanthanides', atomicMass: 158.93, block: 'f' },\n    { atomicNumber: 66, symbol: 'Dy', name: 'Dysprosium', period: 6, group: 12, category: 'lanthanides', atomicMass: 162.5, block: 'f' },\n    { atomicNumber: 67, symbol: 'Ho', name: 'Holmium', period: 6, group: 13, category: 'lanthanides', atomicMass: 164.93, block: 'f' },\n    { atomicNumber: 68, symbol: 'Er', name: 'Erbium', period: 6, group: 14, category: 'lanthanides', atomicMass: 167.26, block: 'f' },\n    { atomicNumber: 69, symbol: 'Tm', name: 'Thulium', period: 6, group: 15, category: 'lanthanides', atomicMass: 168.93, block: 'f' },\n    { atomicNumber: 70, symbol: 'Yb', name: 'Ytterbium', period: 6, group: 16, category: 'lanthanides', atomicMass: 173.05, block: 'f' },\n    { atomicNumber: 71, symbol: 'Lu', name: 'Lutetium', period: 6, group: 17, category: 'lanthanides', atomicMass: 174.97, block: 'f' },\n\n    // Actinides (Period 7, separate row)\n    { atomicNumber: 89, symbol: 'Ac', name: 'Actinium', period: 7, group: 3, category: 'actinides', atomicMass: 227.0, block: 'f' },\n    { atomicNumber: 90, symbol: 'Th', name: 'Thorium', period: 7, group: 4, category: 'actinides', atomicMass: 232.04, block: 'f' },\n    { atomicNumber: 91, symbol: 'Pa', name: 'Protactinium', period: 7, group: 5, category: 'actinides', atomicMass: 231.04, block: 'f' },\n    { atomicNumber: 92, symbol: 'U', name: 'Uranium', period: 7, group: 6, category: 'actinides', atomicMass: 238.03, block: 'f' },\n    { atomicNumber: 93, symbol: 'Np', name: 'Neptunium', period: 7, group: 7, category: 'actinides', atomicMass: 237.0, block: 'f' },\n    { atomicNumber: 94, symbol: 'Pu', name: 'Plutonium', period: 7, group: 8, category: 'actinides', atomicMass: 244.0, block: 'f' },\n    { atomicNumber: 95, symbol: 'Am', name: 'Americium', period: 7, group: 9, category: 'actinides', atomicMass: 243.0, block: 'f' },\n    { atomicNumber: 96, symbol: 'Cm', name: 'Curium', period: 7, group: 10, category: 'actinides', atomicMass: 247.0, block: 'f' },\n    { atomicNumber: 97, symbol: 'Bk', name: 'Berkelium', period: 7, group: 11, category: 'actinides', atomicMass: 247.0, block: 'f' },\n    { atomicNumber: 98, symbol: 'Cf', name: 'Californium', period: 7, group: 12, category: 'actinides', atomicMass: 251.0, block: 'f' },\n    { atomicNumber: 99, symbol: 'Es', name: 'Einsteinium', period: 7, group: 13, category: 'actinides', atomicMass: 252.0, block: 'f' },\n    { atomicNumber: 100, symbol: 'Fm', name: 'Fermium', period: 7, group: 14, category: 'actinides', atomicMass: 257.0, block: 'f' },\n    { atomicNumber: 101, symbol: 'Md', name: 'Mendelevium', period: 7, group: 15, category: 'actinides', atomicMass: 258.0, block: 'f' },\n    { atomicNumber: 102, symbol: 'No', name: 'Nobelium', period: 7, group: 16, category: 'actinides', atomicMass: 259.0, block: 'f' },\n    { atomicNumber: 103, symbol: 'Lr', name: 'Lawrencium', period: 7, group: 17, category: 'actinides', atomicMass: 262.0, block: 'f' }\n  ];\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.initPeriodicTable();\n  }\n\n  // Function to calculate position based on period and group\n  private calculatePosition(period: number, group: number, fblock: boolean): PointModel {\n    let x: number = this.START_X + (group - 1) * (this.CELL_WIDTH + this.CELL_SPACING);\n    let y: number = this.START_Y + (period - 1) * (this.CELL_HEIGHT + this.CELL_SPACING);\n    if (fblock) {\n      y += (2 * (this.CELL_HEIGHT + this.CELL_SPACING)) + this.CELL_HEIGHT / 2;\n    }\n    return { x: x, y: y };\n  }\n\n  // Function to create an element node\n  private createElementNode(element: Element): NodeModel {\n    const position: PointModel = this.calculatePosition(element.period, element.group, element.block === 'f');\n    const color: string = this.categoryColors[element.category];\n    const id: string = element.atomicNumber ? element.atomicNumber.toString() : randomId();\n    \n    const annotations: ShapeAnnotationModel[] = [\n      // Atomic number annotation (top-left)\n      {\n        content: element.atomicNumber ? element.atomicNumber.toString() : '',\n        offset: { x: 0.15, y: 0.2 },\n        style: {\n          fontSize: 11,\n          fontFamily: 'Roboto',\n          color: '#FFFFFF',\n        }\n      },\n      // Element symbol annotation (center)\n      {\n        content: element.symbol,\n        offset: { x: 0.5, y: 0.5 },\n        style: {\n          fontSize: 16,\n          fontFamily: 'Roboto',\n          color: '#FFFFFF',\n          bold: true\n        }\n      },\n      // Element name annotation (bottom)\n      {\n        content: element.name,\n        offset: { x: 0.5, y: 0.85 },\n        style: {\n          fontSize: 11,\n          fontFamily: 'Roboto',\n          color: '#FFFFFF',\n          textOverflow: 'Ellipsis',\n          textWrapping: 'NoWrap',\n        }\n      },\n      // Atomic mass annotation (top-right)\n      {\n        content: element.atomicMass ? element.atomicMass.toString() : '',\n        offset: { x: 0.75, y: 0.2 },\n        style: {\n          fontSize: 11,\n          fontFamily: 'Roboto',\n          color: '#FFFFFF',\n        },\n        visibility: false\n      }\n    ];\n\n    const node: NodeModel = {\n      id: `element_${id}`,\n      offsetX: position.x! + this.CELL_WIDTH / 2,\n      offsetY: position.y! + this.CELL_HEIGHT / 2,\n      width: this.CELL_WIDTH,\n      height: this.CELL_HEIGHT,\n      shape: {\n        type: 'Basic',\n        shape: 'Rectangle',\n        cornerRadius: 5\n      } as BasicShapeModel,\n      annotations: annotations,\n      constraints: (NodeConstraints.Default | NodeConstraints.ReadOnly) & ~NodeConstraints.Select,\n      style: { fill: color },\n      addInfo: element\n    };\n\n    return node;\n  }\n\n  // Function to create legend nodes\n  private createLegendNodes(): NodeModel[] {\n    const legendData: { category: string, label: string; }[] = [\n      { category: 'alkali-metals', label: 'Alkali metals' },\n      { category: 'alkaline-earth-metals', label: 'Alkaline earth metals' },\n      { category: 'transition-metals', label: 'Transition metals' },\n      { category: 'other-metals', label: 'Other metals' },\n      { category: 'metalloids', label: 'Metalloids' },\n      { category: 'non-metals', label: 'Non-metals' },\n      { category: 'halogens', label: 'Halogens' },\n      { category: 'noble-gases', label: 'Noble gases' },\n      { category: 'lanthanides', label: 'Lanthanides' },\n      { category: 'actinides', label: 'Actinides' },\n    ];\n\n    const legendNodes: NodeModel[] = [];\n    const tableWidth = 19 * (this.CELL_WIDTH + this.CELL_SPACING);\n    const tableCenterX = this.START_X + tableWidth / 2;\n    const legendItemWidth = 170;\n    const legendItemHeight = 20;\n    const legendSpacing = 10;\n    const legendRowItems = 5;\n    const totalLegendWidth = legendRowItems * legendItemWidth + (legendRowItems - 1) * legendSpacing;\n    const legendStartY: number = this.START_Y + 10 * (this.CELL_HEIGHT + this.CELL_SPACING) + 20;\n    const legendStartX = tableCenterX - totalLegendWidth / 2;\n\n    legendData.forEach((item, index) => {\n      const row: number = Math.floor(index / 5);\n      const col: number = index % 5;\n      const x: number = legendStartX + col * (legendItemWidth + legendSpacing);\n      const y: number = legendStartY + row * (legendItemHeight + legendSpacing);\n\n      // Color indicator\n      const colorNode: NodeModel = {\n        id: `legend_color_${index}`,\n        offsetX: x + 10,\n        offsetY: y + legendItemHeight / 2,\n        width: 20,\n        height: 20,\n        constraints: NodeConstraints.None,\n        shape: {\n          type: 'Basic',\n          shape: 'Ellipse'\n        } as BasicShapeModel,\n        style: {\n          fill: this.categoryColors[item.category],\n          strokeColor: '#444444',\n          strokeWidth: 1\n        }\n      };\n\n      // Label\n      const labelNode: NodeModel = {\n        id: `legend_label_${index}`,\n        offsetX: x + 90,\n        offsetY: y + legendItemHeight / 2,\n        width: 140,\n        height: legendItemHeight,\n        constraints: NodeConstraints.None,\n        shape: {\n          type: 'Text',\n          content: item.label,\n        },\n        style: {\n          fill: 'transparent',\n          fontSize: 14,\n          fontFamily: 'Roboto',\n          color: '#212121'\n        }\n      };\n\n      legendNodes.push(colorNode, labelNode);\n    });\n\n    return legendNodes;\n  }\n\n  // Function to create group & period numbers\n  private createRowsColumns(): NodeModel[] {\n    const nodes: NodeModel[] = [];\n    \n    const period: NodeModel = {\n      id: 'PERIOD',\n      offsetX: this.START_X - (this.CELL_WIDTH + this.CELL_SPACING) / 2 - 10,\n      offsetY: this.START_Y + (this.CELL_HEIGHT + this.CELL_SPACING) / 2 - 30,\n      rotateAngle: 270,\n      constraints: NodeConstraints.None,\n      shape: {\n        type: 'Text',\n        content: 'PERIOD'\n      },\n      style: {\n        fill: 'transparent',\n        fontFamily: 'Roboto',\n        bold: true\n      },\n    };\n    nodes.push(period);\n    \n    const group: NodeModel = {\n      id: 'GROUP',\n      offsetX: this.START_X,\n      offsetY: this.START_Y - (this.CELL_HEIGHT + this.CELL_SPACING) / 2 - 30,\n      constraints: NodeConstraints.None,\n      shape: {\n        type: 'Text',\n        content: 'GROUP'\n      },\n      style: {\n        fill: 'transparent',\n        fontFamily: 'Roboto',\n        bold: true\n      },\n    };\n    nodes.push(group);\n\n    for (let period: number = 0; period < 7; period++) {\n      const node: NodeModel = {\n        id: 'PERIOD_' + period,\n        offsetX: this.START_X - (this.CELL_WIDTH + this.CELL_SPACING) / 3,\n        offsetY: (this.START_Y + period * (this.CELL_HEIGHT + this.CELL_SPACING)) + this.CELL_HEIGHT / 2,\n        width: this.CELL_WIDTH / 3,\n        height: this.CELL_HEIGHT,\n        shape: {\n          type: 'Text',\n          content: (period + 1).toString()\n        },\n        style: {\n          fontSize: 14,\n          color: '#424242',\n          fill: period % 2 ? '#fbfcff' : '#dfe6f3',\n          fontFamily: 'Roboto',\n        },\n        borderWidth: 1,\n        borderColor: '#d0d7e2',\n        constraints: NodeConstraints.Select | NodeConstraints.PointerEvents | NodeConstraints.ReadOnly,\n        addInfo: { label: 'PERIOD', cellValue: period + 1 }\n      };\n      nodes.push(node);\n    }\n    \n    for (let group: number = 0; group < 18; group++) {\n      const node: NodeModel = {\n        id: 'GROUP_' + group,\n        offsetX: this.START_X + group * (this.CELL_WIDTH + this.CELL_SPACING) + this.CELL_WIDTH / 2,\n        offsetY: this.START_Y - (this.CELL_HEIGHT + this.CELL_SPACING) / 2 - 10,\n        width: this.CELL_WIDTH,\n        height: this.CELL_HEIGHT / 3,\n        shape: {\n          type: 'Text',\n          content: (group + 1).toString()\n        },\n        style: {\n          fontSize: 14,\n          color: '#424242',\n          fill: group % 2 ? '#fbfcff' : '#dfe6f3',\n          fontFamily: 'Roboto',\n        },\n        borderWidth: 1,\n        borderColor: '#d0d7e2',\n        constraints: NodeConstraints.Select | NodeConstraints.PointerEvents| NodeConstraints.ReadOnly,\n        addInfo: { label: 'GROUP', cellValue: group + 1 }\n      };\n      nodes.push(node);\n    }\n    return nodes;\n  }\n\n  // function to create block label nodes\n  private createBlock(): NodeModel[] {\n    const nodes: NodeModel[] = [\n      {\n        id: 'p_block',\n        offsetX: this.START_X + 15 * (this.CELL_WIDTH + this.CELL_SPACING) - 5,\n        offsetY: this.START_Y - 19,\n        width: 70, height: 15,\n        constraints: NodeConstraints.None,\n        shape: {\n          type: 'Text',\n          content: 'P Block'\n        },\n        style: {\n          fill: 'transparent',\n          color: '#555555',\n          bold: true,\n          fontSize: 16\n        },\n        ports: [\n          {\n            id: 'port1',\n            offset: { x: 0, y: 0.5 }\n          },\n          {\n            id: 'port2',\n            offset: { x: 1, y: 0.5 }\n          }\n        ]\n      },\n      {\n        id: 's_block',\n        offsetX: this.START_X + (this.CELL_WIDTH + this.CELL_SPACING) - 5,\n        offsetY: this.START_Y - 19,\n        width: 70, height: 15,\n        constraints: NodeConstraints.None,\n        shape: {\n          type: 'Text',\n          content: 'S Block'\n        },\n        style: {\n          fill: 'transparent',\n          bold: true,\n          fontSize: 16,\n          color: '#555555'\n        },\n        ports: [\n          {\n            id: 'port1',\n            offset: { x: 0, y: 0.5 }\n          },\n          {\n            id: 'port2',\n            offset: { x: 1, y: 0.5 }\n          }\n        ]\n      },\n      {\n        id: 'd_block',\n        offsetX: this.START_X + 7 * (this.CELL_WIDTH + this.CELL_SPACING) - 5,\n        offsetY: this.START_Y + 3 * (this.CELL_HEIGHT + this.CELL_SPACING) - 19,\n        width: 70, height: 15,\n        constraints: NodeConstraints.None,\n        shape: {\n          type: 'Text',\n          content: 'D Block',\n        },\n        style: {\n          fill: 'transparent',\n          color: '#555555',\n          bold: true,\n          fontSize: 16\n        },\n        ports: [\n          {\n            id: 'port1',\n            offset: { x: 0, y: 0.5 }\n          },\n          {\n            id: 'port2',\n            offset: { x: 1, y: 0.5 }\n          }\n        ]\n      },\n      {\n        id: 'f_block',\n        offsetX: this.START_X + 2 * (this.CELL_WIDTH + this.CELL_SPACING) - 25,\n        offsetY: this.START_Y + 8.5 * (this.CELL_HEIGHT + this.CELL_SPACING) - 10,\n        width: 70, height: 15,\n        rotateAngle: 270,\n        constraints: NodeConstraints.None,\n        shape: {\n          type: 'Text',\n          content: 'F Block'\n        },\n        style: {\n          fill: 'transparent',\n          color: '#555555',\n          bold: true,\n          fontSize: 16\n        },\n        ports: [\n          {\n            id: 'port1',\n            offset: { x: 0, y: 0.5 }\n          },\n          {\n            id: 'port2',\n            offset: { x: 1, y: 0.5 }\n          }\n        ]\n      },\n    ];\n    \n    this.connectors = [\n      {\n        sourceID: 'p_block', sourcePortID: 'port1',\n        targetPoint: {\n          x: this.START_X + 12 * (this.CELL_WIDTH + this.CELL_SPACING),\n          y: this.START_Y - 9\n        },\n        segments: [{ length: 170, direction: 'Left', type:\"Orthogonal\" },],\n      },\n      {\n        sourceID: 'p_block', sourcePortID: 'port2',\n        targetPoint: {\n          x: this.START_X + 17 * (this.CELL_WIDTH + this.CELL_SPACING) + this.CELL_WIDTH,\n          y: this.START_Y - 9\n        },\n        segments: [{ length: 170, direction: 'Right', type:\"Orthogonal\" },],\n      },\n      {\n        sourceID: 's_block', sourcePortID: 'port1',\n        targetPoint: {\n          x: this.START_X,\n          y: this.START_Y - 9\n        },\n        segments: [{ length: 30, direction: 'Left', type:\"Orthogonal\" },],\n      },\n      {\n        sourceID: 's_block', sourcePortID: 'port2',\n        targetPoint: {\n          x: this.START_X + 1 * (this.CELL_WIDTH + this.CELL_SPACING) + this.CELL_WIDTH,\n          y: this.START_Y - 9\n        },\n        segments: [{ length: 30, direction: 'Right', type:\"Orthogonal\" },],\n      },\n      {\n        sourceID: 'd_block', sourcePortID: 'port1',\n        targetPoint: {\n          x: this.START_X + 2 * (this.CELL_WIDTH + this.CELL_SPACING),\n          y: this.START_Y + 3 * (this.CELL_HEIGHT + this.CELL_SPACING) - 9\n        },\n        segments: [{ length: 310, direction: 'Left', type:\"Orthogonal\" },],\n      },\n      {\n        sourceID: 'd_block', sourcePortID: 'port2',\n        targetPoint: {\n          x: this.START_X + 11 * (this.CELL_WIDTH + this.CELL_SPACING) + this.CELL_WIDTH,\n          y: this.START_Y + 3 * (this.CELL_HEIGHT + this.CELL_SPACING) - 9\n        },\n        segments: [{ length: 310, direction: 'Right', type:\"Orthogonal\" },],\n      },\n      {\n        sourceID: 'f_block', sourcePortID: 'port1',\n        targetPoint: {\n          x: this.START_X + 2 * (this.CELL_WIDTH + this.CELL_SPACING) - 10,\n          y: 700\n        },\n        segments: [{ length: 30, direction: 'Bottom', type:\"Orthogonal\" },],\n      },\n      {\n        sourceID: 'f_block', sourcePortID: 'port2',\n        targetPoint: {\n          x: this.START_X + 2 * (this.CELL_WIDTH + this.CELL_SPACING) - 10,\n          y: 570\n        },\n        segments: [{ length: 30, direction: 'Top', type:\"Orthogonal\" },],\n      }\n    ];\n    \n    return nodes;\n  }\n\n  // Main function to initialize the periodic table diagram\n  private initPeriodicTable(): void {\n    this.nodes = [];\n\n    // Create element nodes\n    this.periodicTableData.forEach(element => {\n      this.nodes.push(this.createElementNode(element));\n    });\n\n    // Add legend nodes\n    this.nodes.push(...this.createLegendNodes());\n\n    // Add row and column numbers\n    this.nodes.push(...this.createRowsColumns());\n\n    // Add block labels\n    this.nodes.push(...this.createBlock());\n\n    // Add title\n    const titleNode: NodeModel = {\n      id: 'title',\n      offsetX: this.START_X + 9 * (this.CELL_WIDTH + this.CELL_SPACING),\n      offsetY: this.START_Y - 100,\n      constraints: NodeConstraints.None,\n      shape: {\n        type: 'Text',\n        content: 'Periodic Table of Elements',\n      },\n      style: {\n        fontSize: 24,\n        color: '#212121',\n        fontFamily: 'Roboto',\n        bold: true,\n      }\n    };\n    this.nodes.push(titleNode);\n  }\n\n  // Configure default values of connector\n  public connectorDefaults = (connector: any) => {\n    connector.constraints = ConnectorConstraints.None;\n    connector.type = 'Orthogonal';\n    connector.style = { strokeColor: '#555555' };\n    connector.targetDecorator = { shape: 'None' };\n  };\n\n  // Handle Interaction with elements\n  public mouseEnter(args: MouseEventArgs): void {\n    const element: NodeModel = args.actualObject as NodeModel;\n    if (element.shape?.type != 'Text') {\n      if (element.annotations!.length > 0) {\n        // Toggle atomic mass number visibility\n        element.annotations![element.annotations?.length! - 1].visibility = true;\n        // scale up the node\n        this.diagram.scale(element, 1.25, 1.25, { x: 0.5, y: 0.5 });\n        this.diagram.dataBind();\n      }\n    }\n  }\n\n  public mouseLeave(args: MouseEventArgs): void {\n    const element: NodeModel = (args as any).element as NodeModel;\n    if (element.shape?.type != 'Text') {\n      if (element.annotations!.length > 0) {\n        // Toggle atomic mass number visibility\n        element.annotations![element.annotations?.length! - 1].visibility = false;\n        // scale down the node\n        this.diagram.scale(element, 1 / 1.25, 1 / 1.25, { x: 0.5, y: 0.5 });\n        this.diagram.dataBind();\n      }\n    }\n  }\n\n  // Handle Interaction with Group/Period labels\n  public selectionChange(args: any): void {\n    if (args.state === 'Changed') {\n      const selectednode: NodeModel = args.newValue[0];\n      if ((selectednode?.addInfo as any)?.label) {\n        const label = (selectednode.addInfo as any).label;\n        const cellValue = (selectednode.addInfo as any).cellValue;\n        // Highlight Selected Group/Period Elements\n        this.diagram.nodes.forEach((node: NodeModel) => {\n          const element = node.addInfo as any;\n          if (element?.name) {\n            node.style.opacity =\n              ((label === 'PERIOD' && element.period === cellValue) ||\n                (label === 'GROUP' && element.group === cellValue && element.category !== 'lanthanides' && element.category !== 'actinides'))\n                ? 1 : 0.3;\n          }\n        });\n      }\n      else {\n        this.diagram.nodes.forEach(node => node.style.opacity = 1);\n      }\n    }\n  }\n\n  public created(args: any): void {\n    this.diagram.fitToPage();\n  }\n\n  public load(): void {\n    this.diagram.fitToPage();\n  }\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section periodic-table\" style=\"width: 100%\">\n    <ejs-diagram \n        #diagram \n        id=\"diagram\" \n        width=\"100%\" \n        height=\"700px\"\n        [nodes]=\"nodes\"\n        [connectors]=\"connectors\"\n        [snapSettings]=\"snapSettings\"\n        [tool]=\"tool\"\n        [getConnectorDefaults]=\"connectorDefaults\"\n        [selectedItems]=\"selectedItems\"\n        (mouseEnter)=\"mouseEnter($event)\"\n        (mouseLeave)=\"mouseLeave($event)\"\n        (selectionChange)=\"selectionChange($event)\"\n        (created)=\"created($event)\"\n        (load)=\"load()\"\n        [constraints]=\"constraints\">\n    </ejs-diagram>\n</div>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-diagrams\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-diagrams\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-angular-splitbuttons\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"@syncfusion/ej2-angular-circulargauge\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-angular-calendars\":\"*\",\"@syncfusion/ej2-angular-lists\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-grids\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-angular-popups\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}