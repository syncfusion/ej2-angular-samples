{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"/**\n * Sample for Hierarchical layout\n */\n\n import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\n import { DiagramComponent, DiagramModule } from '@syncfusion/ej2-angular-diagrams';\n import {\n   Diagram,\n   NodeModel,\n   ConnectorModel,\n   DataBinding,\n   HierarchicalTree,\n   SnapConstraints,\n   SnapSettingsModel,\n DiagramTools,\n } from '@syncfusion/ej2-diagrams';\n import { DataManager, Query } from '@syncfusion/ej2-data';\n\n\n Diagram.Inject(DataBinding, HierarchicalTree);\n \n export interface EmployeeInfo {\n   Name: string;\n }\n \n @Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [\n        \n        DiagramModule,\n        \n    ],\n})\n export class AppComponent {\n   @ViewChild('diagram')\n   public diagram: DiagramComponent;\n   //Initializes data source.\n   public data: object[] = [\n     { id: 1, Label: 'Production Manager', color:'#1c5b9b' },\n     { id: 2, Label: 'Control Room', parentId: 1, color:'#18c1be'},\n     { id: 3, Label: 'Plant Operator', parentId: 1, color:'#18c1be'},\n     { id: 4, Label: 'Foreman', parentId: 2, color:'#17a573'},\n     { id: 5, Label: 'Foreman', parentId: 3, color:'#17a573' },\n     { id: 6, Label: 'Craft Personnel', parentId: 4, color:'#73bb34' },\n     { id: 7, Label: 'Craft Personnel', parentId: 4, color:'#73bb34' },\n     { id: 8, Label: 'Craft Personnel', parentId: 5, color:'#73bb34' },\n     { id: 9, Label: 'Craft Personnel', parentId: 5, color:'#73bb34' },\n     { id: 10, Label: 'Administrative Officer', color:'#1c5b9b'},\n     { id: 11, Label: 'Security Supervisor', parentId: 10, color:'#18c1be' },\n     { id: 12, Label: 'HR Supervisor', parentId: 10, color:'#18c1be' },\n     { id: 13, Label: 'Reception Supervisor', parentId: 10, color:'#18c1be' },\n     { id: 14, Label: 'Securities', parentId: 11, color:'#17a573' },\n     { id: 15, Label: 'HR Officer', parentId: 12, color:'#17a573' },\n     { id: 16, Label: 'Receptionist', parentId: 13, color:'#17a573' },\n     { id: 17, Label: 'Maintainence Manager', color:'#1c5b9b' },\n     { id: 18, Label: 'Electrical Supervisor', parentId: 17, color:'#18c1be' },\n     { id: 19, Label: 'Mechanical Supervisor', parentId: 17, color:'#18c1be' },\n     { id: 20, Label: 'Craft Personnel', parentId: 18, color:'#17a573' },\n     { id: 21, Label: 'Craft Personnel', parentId: 19, color:'#17a573' },\n   ];\n   public tools = DiagramTools.ZoomPan;\n   public items: DataManager = new DataManager(\n     this.data as JSON[],\n     new Query().take(7)\n   );\n     //configure data source settings\n   public dataSourceSettings: Object = {\n     //sets the fields to bind\n     id: 'id',\n     parentId: 'parentId',\n     dataSource: this.items,\n     doBinding: (nodeModel: NodeModel, data: object, diagram: Diagram) => {\n       nodeModel.shape = {\n         type: 'Text',\n         content: (data as any).Label,\n       };\n     },\n   };\n \n   public snapSettings: SnapSettingsModel = {\n     constraints: SnapConstraints.None,\n   };\n  //Configure automatic layout\n   public layout: Object = {\n     type: 'HierarchicalTree',\n     verticalSpacing: 30, horizontalSpacing: 40,\n         enableAnimation: true\n   };\n \n   //Defines the default node properties\n   public nodeDefaults(obj: NodeModel): NodeModel {\n    (obj.style as any).fill = (obj.data as any).color;\n    obj.backgroundColor = (obj.data as any).color;\n   obj.width = 75;\n   obj.height =35;\n   (obj.style as any).color = 'white';\n   (obj.style as any).strokeWidth = 2;\n   (obj.shape as any).margin = { left: 5, right: 5, bottom: 5, top: 5 };\n   return obj;\n   }\n  //Define the default connector properties\n   public connectorDefaults(\n     connector: ConnectorModel,\n     diagram: Diagram\n   ): ConnectorModel {\n     connector.type = 'Orthogonal';\n     connector.style = { strokeColor: 'CornflowerBlue' };\n     connector.targetDecorator = { shape: 'Arrow', height: 10, width: 10, style: { fill: 'CornflowerBlue', strokeColor: 'white' } };\n     return connector;\n   }\n \n }\n ","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n      <div class=\"content-wrapper\" style=\"width: 100%;\">\n        <!-- Template reference variable for the diagram component instance -->\n        <ejs-diagram\n          #diagram\n          id=\"diagram\"\n          width=\"100%\"\n          height=\"499px\"\n          [getConnectorDefaults]=\"connectorDefaults\"\n          [getNodeDefaults]=\"nodeDefaults\"\n          [layout]=\"layout\"\n          [dataSourceSettings]=\"dataSourceSettings\"\n          [snapSettings]=\"snapSettings\"\n          [tool]=\"tools\"\n        >\n        </ejs-diagram>\n      </div>","app.component.css":".control-fluid {\n    padding: 0px !important;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-diagrams\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-diagrams\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-angular-splitbuttons\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"@syncfusion/ej2-angular-circulargauge\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-angular-calendars\":\"*\",\"@syncfusion/ej2-angular-lists\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-grids\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-angular-popups\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}