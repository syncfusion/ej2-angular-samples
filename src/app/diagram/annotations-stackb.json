{"dependencies.json":"{\"@syncfusion/ej2-base\": \"*\", \"@syncfusion/ej2-buttons\": \"*\", \"@syncfusion/ej2-splitbuttons\": \"*\", \"@syncfusion/ej2-calendars\": \"*\", \"@syncfusion/ej2-charts\": \"*\", \"@syncfusion/ej2-diagrams\": \"*\", \"@syncfusion/ej2-maps\": \"*\", \"@syncfusion/ej2-treemap\": \"*\", \"@syncfusion/ej2-circulargauge\": \"*\", \"@syncfusion/ej2-data\": \"*\", \"@syncfusion/ej2-dropdowns\": \"*\", \"@syncfusion/ej2-grids\": \"*\", \"@syncfusion/ej2-inputs\": \"*\", \"@syncfusion/ej2-lists\": \"*\", \"@syncfusion/ej2-navigations\": \"*\", \"@syncfusion/ej2-popups\": \"*\", \"@syncfusion/ej2-lineargauge\": \"*\", \"@syncfusion/ej2-pdf-export\": \"*\", \"@syncfusion/ej2-compression\": \"*\", \"@syncfusion/ej2-excel-export\": \"*\", \"@syncfusion/ej2-file-utils\": \"*\", \"@syncfusion/ej2-svg-base\": \"*\", \"@syncfusion/ej2-documenteditor\": \"*\", \"@syncfusion/ej2-richtexteditor\": \"*\", \"@syncfusion/ej2-notifications\": \"*\", \"@syncfusion/ej2-heatmap\": \"*\", \"@syncfusion/ej2-pivotview\": \"*\", \"@syncfusion/ej2-schedule\": \"*\", \"@syncfusion/ej2-layouts\": \"*\", \"@syncfusion/ej2-angular-base\": \"*\", \"@syncfusion/ej2-angular-buttons\": \"*\", \"@syncfusion/ej2-angular-splitbuttons\": \"*\", \"@syncfusion/ej2-angular-calendars\": \"*\", \"@syncfusion/ej2-angular-charts\": \"*\", \"@syncfusion/ej2-angular-diagrams\": \"*\", \"@syncfusion/ej2-angular-maps\": \"*\", \"@syncfusion/ej2-angular-treemap\": \"*\", \"@syncfusion/ej2-angular-circulargauge\": \"*\", \"@syncfusion/ej2-angular-dropdowns\": \"*\", \"@syncfusion/ej2-angular-grids\": \"*\", \"@syncfusion/ej2-angular-inputs\": \"*\", \"@syncfusion/ej2-angular-lists\": \"*\", \"@syncfusion/ej2-angular-navigations\": \"*\", \"@syncfusion/ej2-angular-popups\": \"*\", \"@syncfusion/ej2-angular-lineargauge\": \"*\", \"@syncfusion/ej2-angular-documenteditor\": \"*\", \"@syncfusion/ej2-angular-richtexteditor\": \"*\", \"@syncfusion/ej2-angular-notifications\": \"*\", \"@syncfusion/ej2-angular-heatmap\": \"*\", \"@syncfusion/ej2-angular-pivotview\": \"*\", \"@syncfusion/ej2-angular-schedule\": \"*\", \"@syncfusion/ej2-angular-layouts\": \"*\" , \"@angular/http\": \"*\", \"rxjs-compat\":\"*\"}","main.ts":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n","polyfills.ts":"/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol';\n// import 'core-js/es6/object';\n// import 'core-js/es6/function';\n// import 'core-js/es6/parse-int';\n// import 'core-js/es6/parse-float';\n// import 'core-js/es6/number';\n// import 'core-js/es6/math';\n// import 'core-js/es6/string';\n// import 'core-js/es6/date';\n// import 'core-js/es6/array';\n// import 'core-js/es6/regexp';\n// import 'core-js/es6/map';\n// import 'core-js/es6/weak-map';\n// import 'core-js/es6/set';\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect';\n\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\nimport 'core-js/es7/reflect';\n\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n **/\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n */\n\n // (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n // (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n // (window as any).__zone_symbol__BLACK_LISTED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n\n /*\n * in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n * with the following flag, it will bypass `zone.js` patch for IE/Edge\n */\n// (window as any).__Zone_enable_cross_context_check = true;\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n<link href=\"../styles/OpenNew.css\" rel=\"stylesheet\">\n  <link href=\"//cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\" />\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body class=\"ej2-new\"> \n\n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WLQL39J\"height=\"0\"width=\"0\"style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { ChangeEventArgs as DropDownChangeEventArgs } from '@syncfusion/ej2-dropdowns';\nimport { ChangeEventArgs, ColorPickerEventArgs } from '@syncfusion/ej2-inputs';\nimport {\n    DiagramComponent, NodeModel, ConnectorModel, ShapeAnnotationModel, VerticalAlignment, HorizontalAlignment,\n    TextStyleModel, ISelectionChangeEventArgs, ConnectorConstraints, OrthogonalSegmentModel,\n    DecoratorModel, SnapSettingsModel, SnapConstraints, Node, AnnotationConstraints\n} from '@syncfusion/ej2-angular-diagrams';\nimport { CheckBoxChangeEventArgs } from '@syncfusion/ej2-grids';\n\n/**\n * Sample for Annotation\n */\n\nlet node: NodeModel;\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n    @ViewChild('diagram')\n    public diagram: DiagramComponent;\n\n\n    public segments1: OrthogonalSegmentModel = [{ type: 'Orthogonal', direction: 'Right', length: 60 }];\n    public segments2: OrthogonalSegmentModel = [{ type: 'Orthogonal', direction: 'Bottom', length: 100 }];\n    public segments3: OrthogonalSegmentModel = [{ type: 'Orthogonal', direction: 'Left', length: 60 }];\n    public segments4: OrthogonalSegmentModel = [{ type: 'Orthogonal', direction: 'Top', length: 100 }];\n\n    public decorator: DecoratorModel = { shape: 'None' };\n\n    public fontType: { [key: string]: Object }[] = [\n        { type: 'Arial', text: 'Arial' },\n        { type: 'Aharoni', text: 'Aharoni' },\n        { type: 'Bell MT', text: 'Bell MT' },\n        { type: 'Fantasy', text: 'Fantasy' },\n        { type: 'Times New Roman', text: 'Times New Roman' },\n        { type: 'Segoe UI', text: 'Cubic Bezier' },\n        { type: '\"Verdana\") ', text: 'Cubic Bezaier' }\n    ];\n    public templateList: { [key: string]: Object }[] = [\n        { value: 'none', text: 'None' },\n        { value: 'industry', text: 'Industry Competitors' },\n        { value: 'suppliers', text: 'Suppliers' },\n        { value: 'potential', text: 'Potential Entrants' },\n        { value: 'buyers', text: 'Buyers' },\n        { value: 'substitutes', text: 'Substitutes' }\n    ];\n\n    public fields: object = { value: 'type', text: 'text' };\n    public templateFields: object = { value: 'value', text: 'text' };\n\n    public snapSettings: SnapSettingsModel = { constraints: SnapConstraints.None };\n\n    public nodeDefaults(node: NodeModel): NodeModel {\n        let obj: NodeModel = {\n            width: 150, height: 50, style: { fill: '#D5EDED', strokeColor: '#7DCFC9', strokeWidth: 1 },\n            shape: { cornerRadius: 5 }\n        };\n        return obj;\n    };\n\n    public connDefaults(obj: ConnectorModel): void {\n        obj.type = 'Orthogonal';\n        obj.constraints = ConnectorConstraints.None;\n    };\n\n    ngOnInit(): void {\n        document.getElementById('appearance').onclick = this.documentClick.bind(this);\n    }\n\n    public selectionChange(arg: ISelectionChangeEventArgs): void {\n        if (arg.state === 'Changed') {\n            // custom code start\n            let selectedElement: HTMLCollection = document.getElementsByClassName('e-selected-style');\n            if (selectedElement.length) {\n                selectedElement[0].classList.remove('e-selected-style');\n            }\n            // custom code end\n            if (arg.newValue[0]) {\n                let node: NodeModel = arg.newValue[0] as NodeModel;\n                let annotation: ShapeAnnotationModel = node.annotations[0];\n                if (annotation.offset.x === 0 && annotation.offset.y === 0) {\n                    this.updatePosition('left');\n                } else if (annotation.offset.x === 1 && annotation.offset.y === 0) {\n                    this.updatePosition('right');\n                } else if (annotation.offset.x === 1 && annotation.offset.y === 0) {\n                    this.updatePosition('right');\n                } else if (annotation.offset.x === 0 && annotation.offset.y === 1) {\n                    this.updatePosition('bottoml');\n                } else if (annotation.offset.x === 1 && annotation.offset.y === 1) {\n                    this.updatePosition('bottomr');\n                } else if (annotation.offset.x === 0.5 && annotation.offset.y === 0.5) {\n                    this.updatePosition('center');\n                } else if (annotation.offset.x === 0.5 && annotation.offset.y === 1) {\n                    this.updatePosition('bottomcenter_top');\n                }\n            }\n            this.enableOptions(arg);\n        }\n    };\n\n    public diagramCreate(args: Object): void {\n        this.diagram.select([this.diagram.nodes[0]]);\n    }\n\n    private documentClick(args: MouseEvent): void {\n        let target: HTMLElement = args.target as HTMLElement;\n        // custom code start\n        let selectedElement: HTMLCollection = document.getElementsByClassName('e-selected-style');\n        if (selectedElement.length) {\n            selectedElement[0].classList.remove('e-selected-style');\n        }\n        // custom code end\n        if (target.className === 'image-pattern-style') {\n            this.updatePosition(target.id);\n        }\n    };\n    private updatePosition(id: string): void {\n        let target: HTMLElement = document.getElementById(id);\n        for (let i: number = 0; i < this.diagram.selectedItems.nodes.length; i++) {\n            node = this.diagram.selectedItems.nodes[i];\n            //we can refactor this code using a method\n            for (let j: number = 0; j < node.annotations.length; j++) {\n                let annotation: ShapeAnnotationModel = node.annotations[j];\n                switch (target.id) {\n                    case 'topLeft':\n                        this.setAnnotationPosition(annotation, 0, 0, 'Top', 'Left');\n                        break;\n                    case 'topRight':\n                        this.setAnnotationPosition(annotation, 1, 0, 'Top', 'Right');\n                        break;\n                    case 'bottomLeft':\n                        this.setAnnotationPosition(annotation, 0, 1, 'Bottom', 'Left');\n                        break;\n                    case 'bottomRight':\n                        this.setAnnotationPosition(annotation, 1, 1, 'Bottom', 'Right');\n                        break;\n                    case 'center':\n                        this.setAnnotationPosition(annotation, 0.5, .5, 'Center', 'Center');\n                        break;\n                    case 'bottomCenter':\n                        this.setAnnotationPosition(annotation, 0.5, 1, 'Top', 'Center');\n                        break;\n                }\n                // custom code start\n                target.classList.add('e-selected-style');\n                // custom code end\n            }\n        }\n    }\n    private setAnnotationPosition(\n        //it is in dedicated line here.\n        annotation: ShapeAnnotationModel, offsetX: number, offsetY: number,\n        vAlignment: VerticalAlignment, hAlignment: HorizontalAlignment): void {\n        annotation.offset.x = offsetX;\n        annotation.offset.y = offsetY;\n        annotation.verticalAlignment = vAlignment;\n        annotation.horizontalAlignment = hAlignment;\n        if (vAlignment === 'Top' && hAlignment === 'Left') {\n            annotation.margin = { left: 3, top: 3 };\n        } else if (vAlignment === 'Top' && hAlignment === 'Right') {\n            annotation.margin = { right: 3, top: 3 };\n        } else if (vAlignment === 'Bottom' && hAlignment === 'Left') {\n            annotation.margin = { left: 3, bottom: 3 };\n        } else if (vAlignment === 'Bottom' && hAlignment === 'Right') {\n            annotation.margin = { right: 3, bottom: 3 };\n        }\n    }\n\n    private applyAnnotationStylenotationStyle(propertyName: string, propertyValue: string): void {\n        for (let i: number = 0; i < this.diagram.selectedItems.nodes.length; i++) {\n            node = this.diagram.selectedItems.nodes[i];\n            for (let j: number = 0; j < node.annotations.length; j++) {\n                let textStyle: TextStyleModel = node.annotations[j].style;\n                if (propertyName === 'fontsize') {\n                    textStyle.fontSize = Number(propertyValue);\n                } else if (propertyName === 'underline') {\n                    textStyle.textDecoration = textStyle.textDecoration === 'Underline' ? 'None' : 'Underline';\n                } else if (propertyName === 'fontfamily') {\n                    textStyle.fontFamily = propertyValue;\n                } else if (propertyName === 'bold') {\n                    textStyle.bold = !textStyle.bold;\n                } else if (propertyName === 'italic') {\n                    textStyle.italic = !textStyle.italic;\n                } else if (propertyName === 'color') {\n                    textStyle.color = propertyValue;\n                } else if (propertyName === 'template') {\n                    if (propertyValue === 'none') {\n                        node.annotations[j].template = '';\n                        node.annotations[j].width = undefined;\n                        node.annotations[j].height = undefined;\n                    } else {\n                        node.annotations[j].width = 25;\n                        node.annotations[j].height = 25;\n                        node.annotations[j].template =\n                            '<img src=\"./assets/diagram/Images/annotation/' + propertyValue + '.svg\" style=\"width:100%;height:100%\" />';\n                    }\n                } else if (propertyName === 'interaction') {\n                    node.annotations[j].constraints = node.annotations[j].constraints ^ AnnotationConstraints.Interaction;\n                }\n                this.diagram.dataBind();\n            }\n        }\n    }\n\n    public btnBoldClick(): void {\n        this.applyAnnotationStylenotationStyle('bold', '');\n    }\n\n    public btnItalicClick(): void {\n        this.applyAnnotationStylenotationStyle('italic', '');\n    }\n\n    public btnUnderlineClick(): void {\n        this.applyAnnotationStylenotationStyle('underline', '');\n    }\n\n    public onFontColorChange(args: ColorPickerEventArgs): void {\n        this.applyAnnotationStylenotationStyle('color', args.currentValue.rgba);\n    }\n\n    public onFontSizeChange(args: ChangeEventArgs): void {\n        if (args.event) {\n            this.applyAnnotationStylenotationStyle('fontsize', args.value.toString());\n        }\n    }\n\n    public onFontFamilyChange(args: DropDownChangeEventArgs): void {\n        if (args.element) {\n            this.applyAnnotationStylenotationStyle('fontfamily', args.value.toString());\n        }\n    }\n\n    public onLabelTemplateChange(args: DropDownChangeEventArgs): void {\n        this.applyAnnotationStylenotationStyle('template', args.value.toString());\n    }\n\n    // Enable the label interaction while enabling the checkbox.\n    public onLabelInteractionChange(args: CheckBoxChangeEventArgs): void {\n        this.applyAnnotationStylenotationStyle('interaction', '');\n    }\n\n    private enableOptions(arg: ISelectionChangeEventArgs): void {\n        let appearance: HTMLElement = document.getElementById('propertypanel');\n        let selectedElement: HTMLCollection = document.getElementsByClassName('e-remove-selection');\n        if (arg.newValue) {\n            if (arg.newValue[0] instanceof Node && selectedElement.length) {\n                selectedElement[0].classList.remove('e-remove-selection');\n            } else {\n                if (!appearance.classList.contains('e-remove-selection')) {\n                    appearance.classList.add('e-remove-selection');\n                }\n            }\n        }\n    }\n}","app/app.module.ts":"import { DialogAllModule } from '@syncfusion/ej2-angular-popups';\n\nimport { DiagramAllModule, SymbolPaletteAllModule, OverviewAllModule } from '@syncfusion/ej2-angular-diagrams';\n\nimport { ListViewAllModule } from '@syncfusion/ej2-angular-lists';\n\nimport { DropDownListAllModule } from '@syncfusion/ej2-angular-dropdowns';\n\nimport { MultiSelectModule } from '@syncfusion/ej2-angular-dropdowns';\n\nimport { ToolbarModule } from '@syncfusion/ej2-angular-navigations';\n\nimport { NumericTextBoxModule, ColorPickerModule, UploaderModule, TextBoxModule } from '@syncfusion/ej2-angular-inputs';\n\nimport { DropDownButtonModule } from '@syncfusion/ej2-angular-splitbuttons';\n\nimport { ButtonModule, CheckBoxModule, RadioButtonModule } from '@syncfusion/ej2-angular-buttons';\n\nimport { HttpModule } from '@angular/http';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { RouterModule } from '@angular/router';\n\nimport { CommonModule } from '@angular/common';\n\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from '../app.component';\n@NgModule({ declarations: [   AppComponent ], imports: [ DiagramAllModule, SymbolPaletteAllModule, OverviewAllModule, ButtonModule,       ColorPickerModule, CheckBoxModule, ToolbarModule, DropDownButtonModule, UploaderModule, DropDownListAllModule, ListViewAllModule,       DialogAllModule, TextBoxModule, RadioButtonModule,       MultiSelectModule, NumericTextBoxModule, BrowserModule], providers: [], bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","app.component.html":"<style>\n    .diagram-annotations .image-pattern-style {\n        background-color: white;\n        background-size: contain;\n        background-repeat: no-repeat;\n        height: 50px;\n        width: calc((100% - 18px) / 3);\n        cursor: pointer;\n        border: 1px solid #D5D5D5;\n        background-position: center;\n        float: left;\n    }\n    \n    .diagram-annotations .image-pattern-style:hover {\n        border-color: gray;\n        border-width: 2px;\n    }\n    \n    .diagram-annotations .e-remove-selection .property-section-content {\n        pointer-events: none;\n    }\n    \n    .diagram-annotations .column-style {\n        display: table;\n        height: 35px;\n        padding-right: 4px;\n        padding-left: 0px;\n        width: calc((100% - 12px) / 3);\n    }\n    \n    .diagram-annotations .row {\n        margin-left: 0px;\n        margin-right: 0px;\n    }\n    \n    .diagram-annotations .row-header {\n        font-size: 13px;\n        font-weight: 500;\n    }\n    \n    .diagram-annotations .e-checkbox-wrapper .e-label {\n        font-size: 12px;\n    }\n    \n    .diagram-annotations .e-selected-style {\n        border-color: #006CE6;\n        border-width: 2px;\n    }\n    \n    .diagram-annotations .col-xs-6 {\n        padding-left: 0px;\n        padding-right: 0px;\n        padding-top: 5px;\n    }\n    \n    .diagram-annotations .property-section .e-remove-selection {\n        cursor: not-allowed;\n    }\n    \n    @font-face {\n        font-family: 'e-ddb-icons';\n        src: url(data:application/x-font-ttf;charset=utf-8;base64,) format('truetype');\n        font-weight: normal;\n        font-style: normal;\n    }\n    \n    .e-ddb-icons {\n        font-family: 'e-ddb-icons';\n        speak: none;\n        font-size: 55px;\n        font-style: normal;\n        font-weight: normal;\n        font-variant: normal;\n        text-transform: none;\n        line-height: 1;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n    }\n    \n    .diagram-annotations .e-bold::before {\n        content: \"\\e712\";\n    }\n    \n    .diagram-annotations .e-italic::before {\n        content: \"\\e717\";\n    }\n    \n    .diagram-annotations .e-underline::before {\n        content: \"\\e716\";\n    }\n    \n    .diagram-annotations .material .e-bold::before {\n        content: \"\\e707\";\n    }\n    \n    .diagram-annotations .material .e-italic::before {\n        content: \"\\e70b\";\n    }\n    \n    .diagram-annotations .material .e-underline::before {\n        content: \"\\e702\";\n    }\n    \n    .diagram-annotations .bootstrap .e-bold::before {\n        content: \"\\e71f\";\n    }\n    \n    .diagram-annotations .bootstrap .e-italic::before {\n        content: \"\\e723\";\n    }\n    \n    .diagram-annotations .bootstrap .e-underline::before {\n        content: \"\\e71a\";\n    }\n    \n    .diagram-annotations .e-btn {\n        box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0), 0 2px 2px 0 rgba(0, 0, 0, 0), 0 1px 5px 0 rgba(0, 0, 0, 0);\n    }\n    \n    .diagram-annotations .e-bigger .e-btn.e-small.e-icon-btn {\n        padding: 0px;\n    }\n    \n    .diagram-annotations .sb-child-row {\n        padding-top: 8px;\n    }\n</style>\n\n\n<div class=\"control-section diagram-annotations\">\n    <div class=\"col-lg-8\">\n        <ejs-diagram #diagram id=\"diagram\" width=\"100%\" height=\"645px\" [getConnectorDefaults]='connDefaults' [getNodeDefaults]='nodeDefaults' (selectionChange)=\"selectionChange($event)\" (created)=\"diagramCreate($event)\" [snapSettings]='snapSettings'>\n            <e-nodes>\n                <e-node id='industry' [height]=60 [width]=150 [offsetX]=400 [offsetY]=250>\n                    <e-node-annotations>\n                        <e-node-annotation content='Industry Competitors'>\n                        </e-node-annotation>\n                    </e-node-annotations>\n                </e-node>\n                <e-node id='potential' [height]=60 [width]=150 [offsetX]=400 [offsetY]=110>\n                    <e-node-annotations>\n                        <e-node-annotation content='Potential Entrants'>\n                        </e-node-annotation>\n                    </e-node-annotations>\n                </e-node>\n                <e-node id='supplier' [height]=60 [width]=150 [offsetX]=200 [offsetY]=250>\n                    <e-node-annotations>\n                        <e-node-annotation content='Suppliers'>\n                        </e-node-annotation>\n                    </e-node-annotations>\n                </e-node>\n                <e-node id='substitutes' [height]=60 [width]=150 [offsetX]=400 [offsetY]=390>\n                    <e-node-annotations>\n                        <e-node-annotation content='Substitutes'>\n                        </e-node-annotation>\n                    </e-node-annotations>\n                </e-node>\n                <e-node id='buyers' [height]=60 [width]=150 [offsetX]=600 [offsetY]=250>\n                    <e-node-annotations>\n                        <e-node-annotation content='Buyers'>\n                        </e-node-annotation>\n                    </e-node-annotations>\n                </e-node>\n            </e-nodes>\n            <e-connectors>\n                <e-connector id='connector1' sourceID='potential' targetID='industry'>\n                </e-connector>\n                <e-connector id='connector2' sourceID='supplier' targetID='industry'>\n                </e-connector>\n                <e-connector id='connector3' sourceID='substitutes' targetID='industry'>\n                </e-connector>\n                <e-connector id='connector4' sourceID='buyers' targetID='industry'>\n                </e-connector>\n                <e-connector id='connector5' sourceID='potential' targetID='buyers' [segments]='segments1' [targetDecorator]='decorator'>\n                </e-connector>\n                <e-connector id='connector6' sourceID='buyers' targetID='substitutes' [segments]='segments2' [targetDecorator]='decorator'>\n                </e-connector>\n                <e-connector id='connector7' targetID='supplier' sourceID='substitutes' [segments]='segments3' [targetDecorator]='decorator'>\n                </e-connector>\n                <e-connector id='connector8' sourceID='supplier' targetID='potential' [segments]='segments4' [targetDecorator]='decorator'>\n                </e-connector>\n            </e-connectors>\n        </ejs-diagram>\n\n    </div>\n    <div class=\"col-lg-4 property-section\">\n        <div class=\"property-panel-header\">\n            Properties\n        </div>\n        <div id=\"propertypanel\" class=\"e-remove-selection\">\n            <div class=\"property-panel-content\">\n                <div class=\"row\" id=\"appearance\">\n                    <div class=\"row row-header\">\n                        Appearance\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"row sb-child-row\">\n                            <div class=\"image-pattern-style\" id=\"topLeft\" style=\"background-image: url(./assets/diagram/Images/annotation/Annotation_1.png); margin-right: 4px\">\n                            </div>\n                            <div class=\"image-pattern-style\" id=\"topRight\" style=\"background-image: url(./assets/diagram/Images/annotation/Annotation_2.png); margin: 0px 4px\">\n                            </div>\n                            <div class=\"image-pattern-style\" id=\"bottomLeft\" style=\"background-image: url(./assets/diagram/Images/annotation/Annotation_3.png);margin-left: 4px\">\n                            </div>\n                        </div>\n                        <div class=\"row sb-child-row\">\n                            <div class=\"image-pattern-style\" id=\"bottomRight\" style=\"background-image: url(./assets/diagram/Images/annotation/Annotation_4.png); margin-right: 4px\">\n                            </div>\n                            <div class=\"image-pattern-style\" id=\"center\" style=\"background-image: url(./assets/diagram/Images/annotation/Annotation_5.png); margin: 0px 4px\">\n                            </div>\n                            <div class=\"image-pattern-style\" id=\"bottomCenter\" style=\"background-image: url(./assets/diagram/Images/annotation/Annotation_6.png);margin-left: 4px\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\" style=\"padding-top: 10px\">\n                    <div class=\"row row-header\">\n                        Alignment\n                    </div>\n                    <div class=\"row sb-child-row\">\n                        <div class=\"col-xs-4 column-style\">\n                            <button ejs-button #bold (click)=\"btnBoldClick()\" style=\"width:100%\" iconCss=\"e-ddb-icons e-bold\"></button>\n                        </div>\n                        <div class=\"col-xs-4 column-style\">\n                            <button ejs-button #italic (click)=\"btnItalicClick()\" style=\"width:100%\" iconCss=\"e-ddb-icons e-italic\"></button>\n                        </div>\n                        <div class=\"col-xs-4 column-style\">\n                            <button ejs-button #underline (click)=\"btnUnderlineClick()\" style=\"width:100%\" iconCss=\"e-ddb-icons e-underline\"></button>\n                        </div>\n                    </div>\n                    <div class=\"row sb-child-row\">\n                        <div class=\"col-xs-4 column-style\">\n                            <input ejs-colorpicker #colorpicker id=\"fontcolor\" value='#000' type='color' (change)='onFontColorChange($event)' />\n                        </div>\n                        <div class=\"col-xs-4 column-style\">\n                            <ejs-numerictextbox #fontSize id=\"fontSize\" value=\"12\" step=\"2\" format='##.##' (change)='onFontSizeChange($event)'>\n                            </ejs-numerictextbox>\n                        </div>\n                        <div class=\"col-xs-4 column-style\">\n                            <ejs-dropdownlist id=\"fontfamily\" #fontfamily [dataSource]=\"fontType\" [fields]=\"fields\" popupWidth='150' width='100%' placeholder='select a font type' (change)=\"onFontFamilyChange($event)\">\n                            </ejs-dropdownlist>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\" style=\"padding-top: 10px\">\n                    <div class=\"row row-header\">\n                        Templates\n                    </div>\n                    <div class=\"row col-xs-8\" style=\"padding-left: 0px; padding-top: 8px\">\n                        <ejs-dropdownlist id=\"template\" #template [dataSource]=\"templateList\" [fields]=\"templateFields\" popupWidth='200' width='100%' placeholder='select a template' (change)=\"onLabelTemplateChange($event)\">\n                        </ejs-dropdownlist>\n                    </div>\n                </div>\n                <div class=\"row\" style=\"padding-top: 10px\">\n                    <div class=\"row row-header\">\n                        Behaviour\n                    </div>\n                    <div class=\"row\" style=\"padding-top: 8px\">\n                        <ejs-checkbox #labelConstraints id=\"labelConstraints\" label=\"Label interaction\" [checked]=\"false\" (change)=\"onLabelInteractionChange($event)\"></ejs-checkbox>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","app.component.css":".control-fluid {\n    padding: 0px !important;\n}"}