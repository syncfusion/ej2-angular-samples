{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { ChangeEventArgs as CheckBoxChangeEventArgs } from '@syncfusion/ej2-buttons';\nimport { DiagramComponent, NodeModel, ConnectorModel, NodeConstraints,ConnectorConstraints, BasicShapeModel, SnapSettingsModel, SnapConstraints, GradientType, GradientModel, LinearGradientModel, RadialGradientModel, DiagramModule } from '@syncfusion/ej2-angular-diagrams';\n\nimport { CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\n\n\n/**\n * Sample for Nodes Component\n */\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ DiagramModule, CheckBoxModule, ]\n})\n\nexport class AppComponent {\n  @ViewChild('diagram') public diagram: DiagramComponent;\n  // Default shape type configuration\n  public shapeType: BasicShapeModel = { type: 'Basic', shape: 'Ellipse' };\n  // Default node configuration\n  public nodeDefaults(obj: NodeModel): NodeModel {\n    obj.style = { fill: '#37909A', strokeColor: '#024249' };\n    obj.annotations[0].margin = { left: 10, right: 10 };\n    obj.annotations[0].style = { color: 'white', fill: 'none', strokeColor: 'none' };\n    return obj;\n  }\n  // Default connector configuration\n  public connectorDefaults(obj: ConnectorModel): void {\n    obj.targetDecorator.style = { fill: '#024249', strokeColor: '#024249' };\n    obj.style = { strokeColor: '#024249', strokeWidth: 2 };\n  }\n  // Snap settings configuration\n  public snapSettings: SnapSettingsModel = {\n    constraints: SnapConstraints.None\n  };\n  // Initialization logic when the component is initialized\n  ngOnInit(): void {\n    document.getElementById('appearance').onclick = this.documentClick.bind(this);\n  }\n   // Handler for aspect ratio change checkbox\n  public onChangeAspectRatio(args: CheckBoxChangeEventArgs): void {\n    for (let i: number = 0; i < this.diagram.nodes.length; i++) {\n      let node: NodeModel = this.diagram.nodes[i];\n      let isShadowEnabled: number = node.constraints & NodeConstraints.Shadow;\n      if (args.checked) {\n        node.constraints =\n          NodeConstraints.AspectRatio | NodeConstraints.Default;\n      } else {\n        node.constraints =\n          NodeConstraints.Default & ~NodeConstraints.AspectRatio;\n      }\n      if (isShadowEnabled) {\n        node.constraints |= NodeConstraints.Shadow;\n      }\n      this.diagram.dataBind();\n    }\n  }\n\n  public created(): void {\n    this.diagram.fitToPage();\n  }\n  // Handler for lock checkbox\n  public onChangeLock(args: CheckBoxChangeEventArgs): void {\n    for (let i: number = 0; i < this.diagram.nodes.length; i++) {\n      let node: NodeModel = this.diagram.nodes[i];\n      let isShadowEnabled: number = node.constraints & NodeConstraints.Shadow;\n      if (args.checked) {\n        node.constraints &= ~(NodeConstraints.Resize | NodeConstraints.Delete | NodeConstraints.Rotate | NodeConstraints.Drag);\n        node.constraints |= NodeConstraints.ReadOnly;\n      } else {\n        node.constraints |= NodeConstraints.Default & ~(NodeConstraints.ReadOnly);\n      }\n      if (isShadowEnabled) {\n        node.constraints |= NodeConstraints.Shadow;\n      }\n      this.diagram.dataBind();\n    }\n    for (let j: number = 0; j < this.diagram.connectors.length; j++) {\n      let connector: ConnectorModel = this.diagram.connectors[j];\n     \n      if (args.checked) {\n        connector.constraints &= ~(ConnectorConstraints.DragSourceEnd | ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag | ConnectorConstraints.Delete);\n        connector.constraints |= ConnectorConstraints.ReadOnly;\n    } else {\n        connector.constraints |= ConnectorConstraints.Default & ~(ConnectorConstraints.ReadOnly);\n    }\n      }\n      \n      this.diagram.dataBind();\n  }\n  // Handler for document click event\n  private documentClick(args: MouseEvent): void {\n    let node: NodeModel;\n    let target: HTMLElement = args.target as HTMLElement;\n    // custom code start\n    let selectedElement: HTMLCollectionOf<Element> = document.getElementsByClassName('e-selected-style') as HTMLCollectionOf<Element>;\n    if (selectedElement.length) {\n      selectedElement[0].classList.remove('e-selected-style');\n    }\n    // custom code end\n    if (target.className === 'image-pattern-style') {\n      for (let i: number = 0; i < this.diagram.nodes.length; i++) {\n        node = this.diagram.nodes[i];\n        switch (target.id) {\n          case 'preview0':\n            this.applyNodeStyle(node, 0, undefined, ~NodeConstraints.Shadow, undefined);\n            break;\n          case 'preview1':\n            this.applyNodeStyle(node, 2, undefined, ~NodeConstraints.Shadow, undefined);\n            break;\n          case 'preview2':\n            this.applyNodeStyle(node, 2, '5,5', ~NodeConstraints.Shadow, undefined);\n            break;\n          case 'preview3':\n            this.applyNodeStyle(node, 2, '5,5', ~NodeConstraints.Shadow, 'Radial');\n            break;\n          case 'preview4':\n            this.applyNodeStyle(node, 2, '5,5', NodeConstraints.Shadow, undefined);\n            break;\n        }\n        // custom code start\n        target.classList.add('e-selected-style');\n        // custom code end\n      }\n    }\n  }\n  // Method to apply node style based on parameters\n  private applyNodeStyle(node: NodeModel, width: number, dashArray: string, con: NodeConstraints, type: GradientType): void {\n    node.style.fill = '#37909A';\n    node.style.strokeWidth = width;\n    node.style.strokeColor = '#024249';\n    node.style.strokeDashArray = dashArray;\n  \n    if (type === undefined) {\n      node.style.gradient.type = 'None';\n    } else {\n      let gradient: GradientModel | LinearGradientModel | RadialGradientModel;\n      gradient = {\n        cx: 50, cy: 50, fx: 50, fy: 50,\n        stops: [\n          { color: '#00555b', offset: 0 },\n          { color: '#37909A', offset: 90 }\n        ],\n        type: 'Radial'\n      };\n      node.style.gradient = gradient;\n    }\n    if (con & NodeConstraints.Shadow) {\n      node.shadow = { angle: 45, distance: 15, opacity: 0.3, color: 'grey' };\n      node.constraints |= con;\n    } else{\n        node.constraints &= con;\n    }\n    this.diagram.dataBind();\n\n  }\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<style>\n    .diagram-nodes .image-pattern-style {\n        background-color: white;\n        background-size: contain;\n        background-repeat: no-repeat;\n        height: 75px;\n        width: calc((100% - 12px) / 3);\n        cursor: pointer;\n        border: 1px solid #D5D5D5;\n        background-position: center;\n        float: left;\n    }\n    \n    .diagram-nodes .row {\n        margin-left: 0px;\n        margin-right: 0px;\n    }\n    \n    .diagram-nodes .sb-child-row {\n        padding-top: 8px;\n    }\n    \n    .diagram-nodes .row-header {\n        font-size: 13px;\n        font-weight: 500;\n    }\n    \n    .diagram-nodes .e-selected-style {\n        border-color: #006CE6;\n        border-width: 2px;\n    }\n    \n</style>\n<div class=\"control-section diagram-nodes\">\n    <div class=\"col-lg-8 control-section\">\n        <div class=\"content-wrapper\">\n            <ejs-diagram #diagram id=\"diagram\" width=\"100%\" height=\"645px\" [getConnectorDefaults]='connectorDefaults' [getNodeDefaults]='nodeDefaults'  (created)=\"created()\" [snapSettings]='snapSettings'>\n                <e-nodes>\n                    <e-node id='sdlc' [height]=100 [width]=100 [shape]='shapeType' [offsetX]=300 [offsetY]=288>\n                        <e-node-annotations>\n                            <e-node-annotation content='SDLC'>\n                            </e-node-annotation>\n                        </e-node-annotations>\n                    </e-node>\n                    <e-node id='support' [height]=100 [width]=100 [shape]='shapeType' [offsetX]=150 [offsetY]=250>\n                        <e-node-annotations>\n                            <e-node-annotation content='Support'>\n                            </e-node-annotation>\n                        </e-node-annotations>\n                    </e-node>\n                    <e-node id='analysis' [height]=100 [width]=100 [shape]='shapeType' [offsetX]=300 [offsetY]=150>\n                        <e-node-annotations>\n                            <e-node-annotation content='Analysis'>\n                            </e-node-annotation>\n                        </e-node-annotations>\n                    </e-node>\n                    <e-node id='design' [height]=100 [width]=100 [shape]='shapeType' [offsetX]=450 [offsetY]=250>\n                        <e-node-annotations>\n                            <e-node-annotation content='Design'>\n                            </e-node-annotation>\n                        </e-node-annotations>\n                    </e-node>\n                    <e-node id='implement' [height]=100 [width]=100 [shape]='shapeType' [offsetX]=400 [offsetY]=400>\n                        <e-node-annotations>\n                            <e-node-annotation content='Implement'>\n                            </e-node-annotation>\n                        </e-node-annotations>\n                    </e-node>\n                    <e-node id='deploy' [height]=100 [width]=100 [shape]='shapeType' [offsetX]=200 [offsetY]=400>\n                        <e-node-annotations>\n                            <e-node-annotation content='Deploy'>\n                            </e-node-annotation>\n                        </e-node-annotations>\n                    </e-node>\n                </e-nodes>\n                <e-connectors>\n                    <e-connector id='connector1' sourceID='analysis' targetID='design'>\n                    </e-connector>\n                    <e-connector id='connector2' sourceID='design' targetID='implement'>\n                    </e-connector>\n                    <e-connector id='connector3' sourceID='implement' targetID='deploy'>\n                    </e-connector>\n                    <e-connector id='connector4' sourceID='deploy' targetID='support'>\n                    </e-connector>\n                    <e-connector id='connector5' sourceID='support' targetID='analysis'>\n                    </e-connector>\n                </e-connectors>\n            </ejs-diagram>\n        </div>\n    </div>\n    <div class=\"col-lg-4 property-section\">\n        <div class=\"property-panel-header\">\n            Properties\n        </div>\n        <div class=\"row property-panel-content\" id=\"appearance\">\n            <div class=\"row row-header sb-child-row\">\n                Appearance\n            </div>\n            <div class=\"row sb-child-row\">\n                <div class=\"image-pattern-style\" id=\"preview0\" style=\"background-image: url(./assets/diagram/Images/node/Nodes_1.png); margin-right: 3px\">\n                </div>\n                <div class=\"image-pattern-style\" id=\"preview1\" style=\"background-image: url(./assets/diagram/Images/node/Nodes_2.png); margin-right: 0px 3px\">\n                </div>\n                <div class=\"image-pattern-style\" id=\"preview2\" style=\"background-image: url(./assets/diagram/Images/node/Nodes_3.png); margin: 0px 3px\">\n                </div>\n            </div>\n            <div class=\"row sb-child-row\">\n                <div class=\"image-pattern-style\" id=\"preview3\" style=\"background-image: url(./assets/diagram/Images/node/Nodes_4.png); margin-right: 3px\">\n                </div>\n                <div class=\"image-pattern-style\" id=\"preview4\" style=\"background-image: url(./assets/diagram/Images/node/Nodes_5.png); margin: 0px 3px\">\n                </div>\n            </div>\n        </div>\n        <div class=\"row property-panel-content\" style=\"padding-top: 10px\">\n            <div class=\"row row-header sb-child-row\">\n                Behavior\n            </div>\n            <div class=\"row sb-child-row\">\n                <ejs-checkbox #diagram id=\"aspectRatio\" label=\"Aspect ratio\" [checked]=\"false\" (change)=\"onChangeAspectRatio($event)\"></ejs-checkbox>\n            </div>\n            <div class=\"row sb-child-row\">\n                <ejs-checkbox #diagram id=\"lock\" label=\"Lock\" [checked]=\"false\" (change)=\"onChangeLock($event)\"></ejs-checkbox>\n            </div>\n        </div>\n    </div>\n</div>","app.component.css":".control-fluid {\n    padding: 0px !important;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-diagrams\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-diagrams\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-angular-splitbuttons\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"@syncfusion/ej2-angular-circulargauge\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-angular-calendars\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-angular-lists\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-grids\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-angular-popups\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}