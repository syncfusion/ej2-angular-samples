{"dependencies.json":"{\"@syncfusion/ej2-base\": \"*\", \"@syncfusion/ej2-buttons\": \"*\", \"@syncfusion/ej2-splitbuttons\": \"*\", \"@syncfusion/ej2-calendars\": \"*\", \"@syncfusion/ej2-charts\": \"*\", \"@syncfusion/ej2-diagrams\": \"*\", \"@syncfusion/ej2-maps\": \"*\", \"@syncfusion/ej2-treemap\": \"*\", \"@syncfusion/ej2-circulargauge\": \"*\", \"@syncfusion/ej2-data\": \"*\", \"@syncfusion/ej2-dropdowns\": \"*\", \"@syncfusion/ej2-grids\": \"*\", \"@syncfusion/ej2-inputs\": \"*\", \"@syncfusion/ej2-lists\": \"*\", \"@syncfusion/ej2-navigations\": \"*\", \"@syncfusion/ej2-popups\": \"*\", \"@syncfusion/ej2-lineargauge\": \"*\", \"@syncfusion/ej2-pdf-export\": \"*\", \"@syncfusion/ej2-compression\": \"*\", \"@syncfusion/ej2-excel-export\": \"*\", \"@syncfusion/ej2-file-utils\": \"*\", \"@syncfusion/ej2-svg-base\": \"*\", \"@syncfusion/ej2-documenteditor\": \"*\", \"@syncfusion/ej2-richtexteditor\": \"*\", \"@syncfusion/ej2-notifications\": \"*\", \"@syncfusion/ej2-heatmap\": \"*\", \"@syncfusion/ej2-pivotview\": \"*\", \"@syncfusion/ej2-schedule\": \"*\", \"@syncfusion/ej2-layouts\": \"*\", \"@syncfusion/ej2-angular-base\": \"*\", \"@syncfusion/ej2-angular-buttons\": \"*\", \"@syncfusion/ej2-angular-splitbuttons\": \"*\", \"@syncfusion/ej2-angular-calendars\": \"*\", \"@syncfusion/ej2-angular-charts\": \"*\", \"@syncfusion/ej2-angular-diagrams\": \"*\", \"@syncfusion/ej2-angular-maps\": \"*\", \"@syncfusion/ej2-angular-treemap\": \"*\", \"@syncfusion/ej2-angular-circulargauge\": \"*\", \"@syncfusion/ej2-angular-dropdowns\": \"*\", \"@syncfusion/ej2-angular-grids\": \"*\", \"@syncfusion/ej2-angular-inputs\": \"*\", \"@syncfusion/ej2-angular-lists\": \"*\", \"@syncfusion/ej2-angular-navigations\": \"*\", \"@syncfusion/ej2-angular-popups\": \"*\", \"@syncfusion/ej2-angular-lineargauge\": \"*\", \"@syncfusion/ej2-angular-documenteditor\": \"*\", \"@syncfusion/ej2-angular-richtexteditor\": \"*\", \"@syncfusion/ej2-angular-notifications\": \"*\", \"@syncfusion/ej2-angular-heatmap\": \"*\", \"@syncfusion/ej2-angular-pivotview\": \"*\", \"@syncfusion/ej2-angular-schedule\": \"*\", \"@syncfusion/ej2-angular-layouts\": \"*\" , \"@angular/http\": \"*\", \"rxjs-compat\":\"*\", \"core-js\": \"2.6.9\"}","main.ts":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","polyfills.ts":"/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n  <link href=\"../../styles/material.css\" rel=\"stylesheet\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n</head>\n<body class=\"ej2-new\"> \n\n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WLQL39J\"height=\"0\"width=\"0\"style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { ChangeEventArgs as CheckBoxChangeEventArgs } from '@syncfusion/ej2-buttons';\nimport {\n  DiagramComponent, NodeModel, ConnectorModel, NodeConstraints, BasicShapeModel,\n  SnapSettingsModel, SnapConstraints, GradientType, GradientModel, LinearGradientModel, RadialGradientModel\n} from '@syncfusion/ej2-angular-diagrams';\n\n/**\n * Sample for Nodes Component\n */\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class AppComponent {\n  @ViewChild('diagram') public diagram: DiagramComponent;\n\n  public shapeType: BasicShapeModel = { type: 'Basic', shape: 'Ellipse' };\n\n  public nodeDefaults(obj: NodeModel): NodeModel {\n    obj.style = { fill: '#37909A', strokeColor: '#024249' };\n    obj.annotations[0].margin = { left: 10, right: 10 };\n    obj.annotations[0].style = { color: 'white', fill: 'none', strokeColor: 'none' };\n    return obj;\n  }\n\n  public connDefaults(obj: ConnectorModel): void {\n    obj.targetDecorator.style = { fill: '#024249', strokeColor: '#024249' };\n    obj.style = { strokeColor: '#024249', strokeWidth: 2 };\n  }\n\n  public snapSettings: SnapSettingsModel = {\n    constraints: SnapConstraints.None\n  };\n\n  ngOnInit(): void {\n    document.getElementById('appearance').onclick = this.documentClick.bind(this);\n  }\n\n  public onChangeAspectRatio(args: CheckBoxChangeEventArgs): void {\n    for (let i: number = 0; i < this.diagram.nodes.length; i++) {\n      let node: NodeModel = this.diagram.nodes[i];\n      let isShadowEnabled: number = node.constraints & NodeConstraints.Shadow;\n      if (args.checked) {\n        node.constraints =\n          NodeConstraints.AspectRatio | NodeConstraints.Default;\n      } else {\n        node.constraints =\n          NodeConstraints.Default & ~NodeConstraints.AspectRatio;\n      }\n      if (isShadowEnabled) {\n        node.constraints |= NodeConstraints.Shadow;\n      }\n      this.diagram.dataBind();\n    }\n  }\n\n  public created(): void {\n    this.diagram.fitToPage();\n  }\n\n  public onChangeLock(args: CheckBoxChangeEventArgs): void {\n    for (let i: number = 0; i < this.diagram.nodes.length; i++) {\n      let node: NodeModel = this.diagram.nodes[i];\n      let isShadowEnabled: number = node.constraints & NodeConstraints.Shadow;\n      if (args.checked) {\n        node.constraints =\n          NodeConstraints.PointerEvents | NodeConstraints.Select;\n      } else {\n        node.constraints = NodeConstraints.Default;\n      }\n      if (isShadowEnabled) {\n        node.constraints |= NodeConstraints.Shadow;\n      }\n      this.diagram.dataBind();\n    }\n  }\n\n  private documentClick(args: MouseEvent): void {\n    let node: NodeModel;\n    let target: HTMLElement = args.target as HTMLElement;\n    // custom code start\n    let selectedElement: HTMLCollectionOf<Element> = document.getElementsByClassName('e-selected-style') as HTMLCollectionOf<Element>;\n    if (selectedElement.length) {\n      selectedElement[0].classList.remove('e-selected-style');\n    }\n    // custom code end\n    if (target.className === 'image-pattern-style') {\n      for (let i: number = 0; i < this.diagram.nodes.length; i++) {\n        node = this.diagram.nodes[i];\n        switch (target.id) {\n          case 'preview0':\n            this.applyStyle(node, 0, undefined, ~NodeConstraints.Shadow, undefined);\n            break;\n          case 'preview1':\n            this.applyStyle(node, 2, undefined, ~NodeConstraints.Shadow, undefined);\n            break;\n          case 'preview2':\n            this.applyStyle(node, 2, '5,5', ~NodeConstraints.Shadow, undefined);\n            break;\n          case 'preview3':\n            this.applyStyle(node, 2, '5,5', ~NodeConstraints.Shadow, 'Radial');\n            break;\n          case 'preview4':\n            this.applyStyle(node, 2, '5,5', NodeConstraints.Shadow, undefined);\n            break;\n        }\n        // custom code start\n        target.classList.add('e-selected-style');\n        // custom code end\n      }\n    }\n  }\n\n  private applyStyle(node: NodeModel, width: number, dashArray: string, con: NodeConstraints, type: GradientType): void {\n    node.style.fill = '#37909A';\n    node.style.strokeWidth = width;\n    node.style.strokeColor = '#024249';\n    node.style.strokeDashArray = dashArray;\n  \n    if (type === undefined) {\n      node.style.gradient.type = 'None';\n    } else {\n      let gradient: GradientModel | LinearGradientModel | RadialGradientModel;\n      gradient = {\n        cx: 50, cy: 50, fx: 50, fy: 50,\n        stops: [\n          { color: '#00555b', offset: 0 },\n          { color: '#37909A', offset: 90 }\n        ],\n        type: 'Radial'\n      };\n      node.style.gradient = gradient;\n    }\n    if (con & NodeConstraints.Shadow) {\n      node.shadow = { angle: 45, distance: 15, opacity: 0.3, color: 'grey' };\n      node.constraints |= con;\n    } else{\n        node.constraints &= con;\n    }\n    this.diagram.dataBind();\n\n  }\n}\n","app/app.module.ts":"import { DialogAllModule } from '@syncfusion/ej2-angular-popups';\n\nimport { AccumulationChartModule } from '@syncfusion/ej2-angular-charts';\n\nimport { AccumulationAnnotationService, AccumulationDataLabelService, AccumulationLegendService, AccumulationTooltipService, ChartAllModule } from '@syncfusion/ej2-angular-charts';\n\nimport { DiagramAllModule, SymbolPaletteAllModule, OverviewAllModule } from '@syncfusion/ej2-angular-diagrams';\n\nimport { GridAllModule } from '@syncfusion/ej2-angular-grids';\n\nimport { ListViewAllModule } from '@syncfusion/ej2-angular-lists';\n\nimport { DateRangePickerModule } from '@syncfusion/ej2-angular-calendars';\n\nimport { CircularGaugeModule } from '@syncfusion/ej2-angular-circulargauge';\n\nimport { DropDownListAllModule } from '@syncfusion/ej2-angular-dropdowns';\n\nimport { MultiSelectModule } from '@syncfusion/ej2-angular-dropdowns';\n\nimport { ToolbarModule } from '@syncfusion/ej2-angular-navigations';\n\nimport { NumericTextBoxModule, ColorPickerModule, UploaderModule, TextBoxModule } from '@syncfusion/ej2-angular-inputs';\n\nimport { DropDownButtonModule } from '@syncfusion/ej2-angular-splitbuttons';\n\nimport { ButtonModule, CheckBoxModule, RadioButtonModule } from '@syncfusion/ej2-angular-buttons';\n\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from '../app.component';\n\n@NgModule({ declarations: [ AppComponent ], imports: [ DiagramAllModule, ChartAllModule, GridAllModule, SymbolPaletteAllModule, OverviewAllModule, ButtonModule,       ColorPickerModule,  DateRangePickerModule, CheckBoxModule, AccumulationChartModule, BrowserModule,ToolbarModule, DropDownButtonModule, UploaderModule, CircularGaugeModule, DropDownListAllModule, ListViewAllModule,       DialogAllModule, TextBoxModule, RadioButtonModule,       MultiSelectModule, NumericTextBoxModule, BrowserModule], providers: [], bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","app.component.html":"<style>\n    .diagram-nodes .image-pattern-style {\n        background-color: white;\n        background-size: contain;\n        background-repeat: no-repeat;\n        height: 75px;\n        width: calc((100% - 12px) / 3);\n        cursor: pointer;\n        border: 1px solid #D5D5D5;\n        background-position: center;\n        float: left;\n    }\n    \n    .diagram-nodes .row {\n        margin-left: 0px;\n        margin-right: 0px;\n    }\n    \n    .diagram-nodes .sb-child-row {\n        padding-top: 8px;\n    }\n    \n    .diagram-nodes .row-header {\n        font-size: 13px;\n        font-weight: 500;\n    }\n    \n    .diagram-nodes .e-selected-style {\n        border-color: #006CE6;\n        border-width: 2px;\n    }\n    \n    .diagram-nodes .e-checkbox-wrapper .e-label {\n        font-size: 12px;\n    }\n</style>\n<div class=\"control-section diagram-nodes\">\n    <div class=\"col-lg-8 control-section\">\n        <div class=\"content-wrapper\">\n            <ejs-diagram #diagram id=\"diagram\" width=\"100%\" height=\"645px\" [getConnectorDefaults]='connDefaults' [getNodeDefaults]='nodeDefaults'  (created)=\"created()\" [snapSettings]='snapSettings'>\n                <e-nodes>\n                    <e-node id='sdlc' [height]=100 [width]=100 [shape]='shapeType' [offsetX]=300 [offsetY]=288>\n                        <e-node-annotations>\n                            <e-node-annotation content='SDLC'>\n                            </e-node-annotation>\n                        </e-node-annotations>\n                    </e-node>\n                    <e-node id='support' [height]=100 [width]=100 [shape]='shapeType' [offsetX]=150 [offsetY]=250>\n                        <e-node-annotations>\n                            <e-node-annotation content='Support'>\n                            </e-node-annotation>\n                        </e-node-annotations>\n                    </e-node>\n                    <e-node id='analysis' [height]=100 [width]=100 [shape]='shapeType' [offsetX]=300 [offsetY]=150>\n                        <e-node-annotations>\n                            <e-node-annotation content='Analysis'>\n                            </e-node-annotation>\n                        </e-node-annotations>\n                    </e-node>\n                    <e-node id='design' [height]=100 [width]=100 [shape]='shapeType' [offsetX]=450 [offsetY]=250>\n                        <e-node-annotations>\n                            <e-node-annotation content='Design'>\n                            </e-node-annotation>\n                        </e-node-annotations>\n                    </e-node>\n                    <e-node id='implement' [height]=100 [width]=100 [shape]='shapeType' [offsetX]=400 [offsetY]=400>\n                        <e-node-annotations>\n                            <e-node-annotation content='Implement'>\n                            </e-node-annotation>\n                        </e-node-annotations>\n                    </e-node>\n                    <e-node id='deploy' [height]=100 [width]=100 [shape]='shapeType' [offsetX]=200 [offsetY]=400>\n                        <e-node-annotations>\n                            <e-node-annotation content='Deploy'>\n                            </e-node-annotation>\n                        </e-node-annotations>\n                    </e-node>\n                </e-nodes>\n                <e-connectors>\n                    <e-connector id='connector1' sourceID='analysis' targetID='design'>\n                    </e-connector>\n                    <e-connector id='connector2' sourceID='design' targetID='implement'>\n                    </e-connector>\n                    <e-connector id='connector3' sourceID='implement' targetID='deploy'>\n                    </e-connector>\n                    <e-connector id='connector4' sourceID='deploy' targetID='support'>\n                    </e-connector>\n                    <e-connector id='connector5' sourceID='support' targetID='analysis'>\n                    </e-connector>\n                </e-connectors>\n            </ejs-diagram>\n        </div>\n    </div>\n    <div class=\"col-lg-4 property-section\">\n        <div class=\"property-panel-header\">\n            Properties\n        </div>\n        <div class=\"row property-panel-content\" id=\"appearance\">\n            <div class=\"row row-header sb-child-row\">\n                Appearance\n            </div>\n            <div class=\"row sb-child-row\">\n                <div class=\"image-pattern-style\" id=\"preview0\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/Images/node/Nodes_1.png); margin-right: 3px\">\n                </div>\n                <div class=\"image-pattern-style\" id=\"preview1\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/Images/node/Nodes_2.png); margin-right: 0px 3px\">\n                </div>\n                <div class=\"image-pattern-style\" id=\"preview2\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/Images/node/Nodes_3.png); margin: 0px 3px\">\n                </div>\n            </div>\n            <div class=\"row sb-child-row\">\n                <div class=\"image-pattern-style\" id=\"preview3\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/Images/node/Nodes_4.png); margin-right: 3px\">\n                </div>\n                <div class=\"image-pattern-style\" id=\"preview4\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/Images/node/Nodes_5.png); margin: 0px 3px\">\n                </div>\n            </div>\n        </div>\n        <div class=\"row property-panel-content\" style=\"padding-top: 10px\">\n            <div class=\"row row-header sb-child-row\">\n                Behavior\n            </div>\n            <div class=\"row sb-child-row\">\n                <ejs-checkbox #diagram id=\"aspectRatio\" label=\"Aspect ratio\" [checked]=\"false\" (change)=\"onChangeAspectRatio($event)\"></ejs-checkbox>\n            </div>\n            <div class=\"row sb-child-row\">\n                <ejs-checkbox #diagram id=\"lock\" label=\"Lock\" [checked]=\"false\" (change)=\"onChangeLock($event)\"></ejs-checkbox>\n            </div>\n        </div>\n    </div>\n</div>","app.component.css":".control-fluid {\n    padding: 0px !important;\n}"}