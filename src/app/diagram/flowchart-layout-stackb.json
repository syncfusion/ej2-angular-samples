{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild, Inject } from '@angular/core';\nimport { DiagramComponent, DiagramModule, DiagramTools } from '@syncfusion/ej2-angular-diagrams';\nimport {\n    Diagram, NodeModel, ConnectorModel, FlowShapeModel, LayoutModel,\n    RulerSettingsModel, FlowchartLayout, DataBinding,\n    ScrollSettingsModel\n} from '@syncfusion/ej2-diagrams';\n\nimport { CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\n\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { ChangeEventArgs, DropDownListModule } from '@syncfusion/ej2-angular-dropdowns';\nimport { NumericTextBoxModule } from '@syncfusion/ej2-angular-inputs';\nDiagram.Inject(FlowchartLayout, DataBinding);\n\n/**\n * Default FlowShape sample\n */\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ DiagramModule, CheckBoxModule, NumericTextBoxModule,DropDownListModule]\n})\nexport class AppComponent {\n    @ViewChild('diagram')\n    //Diagram Properties\n    public diagram: DiagramComponent;\n    constructor() {\n\n    }\n    public rulerSettings: RulerSettingsModel = { showRulers: true };\n    public scrollSettings: ScrollSettingsModel = { scrollLimit: 'Infinity', padding: { bottom: 50, right: 50 }, };\n    //Initializes the data source for the layout\n    public flowchartData = [\n        { id: \"A\", name: \"Start\", shape: \"Terminator\", color: \"#90EE90\", parentId: null as any, stroke: \"#333\", strokeWidth: 1 },\n        { id: \"B\", name: \"Open the browser and go to Amazon site\", shape: \"Rectangle\", color: \"#1759B7\", parentId: [\"A\"], arrowType: \"single-line-arrow\", stroke: \"#333\", strokeWidth: 1 },\n        { id: \"C\", name: \"Already a customer?\", shape: \"Decision\", color: \"#2F95D8\", parentId: [\"B\"], arrowType: \"single-line-arrow\", stroke: \"#333\", strokeWidth: 1 },\n        { id: \"D\", name: \"Create an account\", shape: \"Rectangle\", color: \"#70AF16\", parentId: [\"C\"], label: [\"No\"], arrowType: \"single-line-arrow\", stroke: \"#333\", strokeWidth: 1 },\n        { id: \"E\", name: \"Enter login information\", shape: \"Rectangle\", color: \"#70AF16\", parentId: [\"C\"], label: [\"Yes\"], arrowType: \"single-line-arrow\", stroke: \"#333\", strokeWidth: 1 },\n        { id: \"F\", name: \"Search for the book in the search bar\", shape: \"Predefined Process\", color: \"#1759B7\", parentId: [\"E\", \"D\"], arrowType: \"single-line-arrow\", label: [\"\", \"\"], stroke: \"#333\", strokeWidth: 1 },\n        { id: \"G\", name: \"Select the preferred book\", shape: \"Rectangle\", color: \"#1759B7\", parentId: [\"F\"], arrowType: \"single-line-arrow\", stroke: \"#333\", strokeWidth: 1 },\n        { id: \"H\", name: \"Is the book new or used?\", shape: \"Rectangle\", color: \"#2F95D8\", parentId: [\"G\"], arrowType: \"single-line-arrow\", stroke: \"#333\", strokeWidth: 1 },\n        { id: \"I\", name: \"Select the new book\", shape: \"Rectangle\", color: \"#70AF16\", parentId: [\"H\"], label: [\"Yes\"], arrowType: \"single-line-arrow\", stroke: \"#333\", strokeWidth: 1 },\n        { id: \"J\", name: \"Select the used book\", shape: \"Rectangle\", color: \"#70AF16\", parentId: [\"H\"], label: [\"No\"], arrowType: \"single-line-arrow\", stroke: \"#333\", strokeWidth: 1 },\n        { id: \"K\", name: \"Add to Cart & Proceed to Checkout\", shape: \"Rectangle\", color: \"#1759B7\", parentId: [\"I\", \"J\"], arrowType: \"single-line-arrow\", label: [\"\", \"\"], stroke: \"#333\", strokeWidth: 1 },\n        { id: \"L\", name: \"Enter shipping and payment details\", shape: \"Rectangle\", color: \"#1759B7\", parentId: [\"K\", \"M\"], arrowType: \"single-line-arrow\", label: [\"\", \"\"], stroke: \"#333\", strokeWidth: 1 },\n        { id: \"M\", name: \"Is the information correct?\", shape: \"Decision\", color: \"#2F95D8\", parentId: [\"L\"], arrowType: \"single-line-arrow\", stroke: \"#333\", strokeWidth: 1 },\n        { id: \"N\", name: \"Review and place the order\", shape: \"Rectangle\", color: \"#1759B7\", parentId: [\"M\"], label: [\"True\"], arrowType: \"single-line-arrow\", stroke: \"#333\", strokeWidth: 1 },\n        { id: \"O\", name: \"End\", shape: \"Terminator\", color: \"#8E44CC\", parentId: [\"N\"], arrowType: \"single-line-arrow\", stroke: \"#333\", strokeWidth: 1 }\n    ];\n\n    public layout: LayoutModel = {\n        type: 'Flowchart',\n        orientation: 'TopToBottom',\n        flowchartLayoutSettings: {\n            yesBranchDirection: 'LeftInFlow',\n            noBranchDirection: 'RightInFlow',\n            yesBranchValues: ['Yes', 'True'],\n            noBranchValues: ['No', 'False']\n        },\n        verticalSpacing: 50,\n        horizontalSpacing: 50\n    };\n    public tool = DiagramTools.ZoomPan;\n    public dataSourceSettings: object = {\n        id: 'id',\n        parentId: 'parentId',\n        dataSource: new DataManager(this.flowchartData),\n    };\n\n    //Defines the default node properties\n    public getNodeDefaults(node: NodeModel): NodeModel {\n        node.width = 150;\n        node.height = 50;\n        if ((node.shape as FlowShapeModel).shape === 'Decision') {\n            node.width = 120;\n            node.height = 100;\n        }\n        return node;\n    };\n\n    //Defines the default connector properties\n    public getConnectorDefaults(connector: ConnectorModel): ConnectorModel {\n        connector.type = 'Orthogonal';\n        if(connector.annotations && connector.annotations.length > 0) {\n            connector.annotations[0].style.fill = 'white';\n            connector.annotations[0].style.color = 'black';\n        }\n        return connector;\n    };\n    // Property panel functionalities\n\n    public branchDataSource = [\n        { text: 'Left in flow', value: 'LeftInFlow' }, { text: 'Right in flow', value: 'RightInFlow' }, { text: 'Same as flow', value: 'SameAsFlow' }\n    ];\n\n    public orientationDataSource = [\n        { text: 'Top to bottom', value: 'TopToBottom' }, { text: 'Left to right', value: 'LeftToRight' }\n    ];\n\n    public yesBranchChange(args: ChangeEventArgs): void {\n        let value: string = args.value as string;\n        this.diagram.layout.flowchartLayoutSettings.yesBranchDirection = value === 'Same as flow' ? 'SameAsFlow' : value === 'Right in flow' ? 'RightInFlow' : 'LeftInFlow';\n        this.diagram.dataBind();\n    };\n\n    public noBranchChange(args: ChangeEventArgs): void {\n        let value: string = args.value as string;\n        this.diagram.layout.flowchartLayoutSettings.noBranchDirection = value === 'Same as flow' ? 'SameAsFlow' : value === 'Right in flow' ? 'RightInFlow' : 'LeftInFlow';\n        this.diagram.dataBind();\n    };\n\n    public orientationChange(args: ChangeEventArgs): void {\n        let value: string = args.value as string;\n        this.diagram.layout.orientation = value === 'Top to bottom' ? 'TopToBottom' : 'LeftToRight';\n        this.diagram.dataBind();\n    };\n\n    public horizontalSpacingChange(args: ChangeEventArgs): void {\n        this.diagram.layout.horizontalSpacing = Number(args.value);\n        this.diagram.dataBind();\n    };\n\n    public verticalSpacingChange(args: ChangeEventArgs): void {\n        this.diagram.layout.verticalSpacing = Number(args.value);\n        this.diagram.dataBind();\n    };\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<style>\n    /* Container for diagram and property panel */\n    .diagramFlowchart .control-section  {\n        width: 75%;\n        float: left; /* Keep the diagram section on the left */\n        border-right: 1px solid #D5D5D5;\n    }\n    .diagramFlowchart .property-panel-header {\n        font-size: larger;\n    }\n    /* Diagram content style */\n    .diagramFlowchart .content-wrapper {\n        width: 100%;\n        background: white;\n        border: 1px solid #D5D5D5;\n    }\n\n    /* Property panel style */\n    .diagramFlowchart .property-section {\n        width: 24%; /* Adjusted to fill the remaining space */\n        float: right; /* Ensure the property panel is on the right */\n        padding: 10px;\n        background: white;\n    }\n\n    /* Align labels and inputs within the property panel */\n    .diagramFlowchart .row {\n        margin-left: 0;\n        margin-right: 0;\n        padding-top: 8px;\n    }\n\n    .diagramFlowchart .property-panel-content .row {\n        display: flex;\n        align-items: center;\n        margin-bottom: 8px;\n    }\n\n    .diagramFlowchart .property-panel-content label {\n        flex: 1;\n        font-weight: normal;\n    }\n\n    .diagramFlowchart .property-panel-content input {\n        flex: 2;\n        padding: 5px;\n        border: 1px solid #ccc;\n        border-radius: 4px;\n    }\n    .diagramFlowchart .flow-diagram-container{\n        border: 1px solid #D5D5D5;\n    }\n    .diagramFlowchart .input-element {\n        margin-left: 10px;\n        width: 45%;\n    }\n</style>\n\n<div class=\"diagramFlowchart\">\n\n<div class=\"control-section\">\n<div class=\"content-wrapper\" style=\"width:100%;background: white\">\n    <ejs-diagram #diagram id=\"diagram\" [getConnectorDefaults]='getConnectorDefaults'\n            [getNodeDefaults]='getNodeDefaults' [layout]=layout width=\"100%\" height=\"680px\"\n            [dataSourceSettings]=\"dataSourceSettings\" [rulerSettings]=\"rulerSettings\" [scrollSettings]=\"scrollSettings\"\n            [tool]=\"tool\">\n    </ejs-diagram>\n</div>\n</div>\n<div class=\"property-section\">\n    <div class=\"property-panel-header\">\n       Properties\n    </div>\n    <div class=\"row property-panel-content\">\n        <div class=\"row\">\n            <label>Orientation</label>\n            <div class=\"input-element\">\n            <ejs-dropdownlist #orientation id=\"orientation\" [dataSource]=\"orientationDataSource\" value=\"Top to bottom\" (change)=\"orientationChange($event)\"></ejs-dropdownlist>\n            </div>\n        </div>\n        <div class=\"row\">\n            <label>Yes branch direction</label>\n            <div class=\"input-element\">\n            <ejs-dropdownlist #yesBranchDirection id=\"yesBranchDirection\" [dataSource]=\"branchDataSource\" value=\"Left in flow\" (change)=\"yesBranchChange($event)\"></ejs-dropdownlist>\n              </div>\n        </div>\n        <div class=\"row\">\n            <label>No branch direction</label>\n            <div class=\"input-element\">\n            <ejs-dropdownlist #noBranchDirection id=\"noBranchDirection\" [dataSource]=\"branchDataSource\" value=\"Right in flow\" (change)=\"noBranchChange($event)\"></ejs-dropdownlist>\n              </div>\n        </div>\n        <div class=\"row\">\n            <label>Horizontal spacing</label>\n            <div class=\"input-element\">\n            <ejs-numerictextbox #horizontalSpacing id=\"horizontalSpacing\" value=\"50\" step=\"1\" min=\"20\" max=\"120\" format='###.##' style=\"width: 100%;\" (change)='horizontalSpacingChange($event)'>\n            </ejs-numerictextbox>\n            </div>\n        </div>\n        <div class=\"row\">\n            <label>Vertical spacing</label>\n            <div class=\"input-element\">\n            <ejs-numerictextbox #verticalSpacing id=\"verticalSpacing\" value=\"50\" step=\"1\" min=\"30\" max=\"120\" format='###.##' style=\"width: 100%;\" (change)='verticalSpacingChange($event)'>\n            </ejs-numerictextbox>\n            </div>\n        </div>\n    </div>\n</div>\n</div>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-diagrams\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-diagrams\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-angular-splitbuttons\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"@syncfusion/ej2-angular-circulargauge\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-angular-calendars\":\"*\",\"@syncfusion/ej2-angular-lists\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-grids\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-angular-popups\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}