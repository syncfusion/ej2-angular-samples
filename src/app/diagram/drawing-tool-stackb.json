{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport {\n    NodeModel, ConnectorModel, DiagramTools, SnapSettingsModel, GridlinesModel, RulerSettingsModel\n} from '@syncfusion/ej2-diagrams';\nimport { DiagramComponent, DiagramModule } from '@syncfusion/ej2-angular-diagrams';\n\nimport { CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\n\n\n/**\n * Sample for DrawingTool\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ DiagramModule, CheckBoxModule, ]\n})\n\nexport class AppComponent {\n    @ViewChild('diagram')\n    public diagram: DiagramComponent;\n    public rulerSettings: RulerSettingsModel = { showRulers: true, dynamicGrid: true }\n    public continuousDraw: boolean = true;\n    private interval: number[] = [1, 9, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25,9.75, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75];\n    private horizontalGridlines: GridlinesModel = { lineColor: '#e0e0e0', lineIntervals: this.interval };\n    private verticalGridlines: GridlinesModel = { lineColor: '#e0e0e0', lineIntervals: this.interval };\n    public snapSettings: SnapSettingsModel = {snapObjectDistance: 5, horizontalGridlines: this.horizontalGridlines, verticalGridlines: this.verticalGridlines};\n\n    ngOnInit(): void {\n    // Attach click event handler\n        document.getElementById('appearance').onclick = this.documentClick.bind(this);\n    }\n\n    // custom code start\n    public getNativeContent(): string {\n        let str: string = '<svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"350.000000pt\" ' +\n            'height=\"229.000000pt\" viewBox=\"0 0 350.000000 229.000000\" ' +\n            'preserveAspectRatio=\"xMidYMid meet\"> <metadata>' +\n            ' Created by potrace 1.11, written by Peter Selinger 2001-2013' +\n            ' </metadata> <g transform=\"translate(0.000000,229.000000) scale(0.100000,-0.100000)\"' +\n            ' fill=\"#de6ca9\" stroke=\"none\"><path d=\"M0 1145 l0 -1145 1750 0 1750 0 0 1145 0 1145' +\n            ' -1750 0 -1750 0 0 -1145z m1434 186 c19 -8 26 -18 26 -37 0 -24 -3 -26' +\n            ' -27 -19 -16 3 -58 9 -94 12 -63 5 -67 4 -88 -23 -23 -29 -21 -60 6 -81 8' +\n            ' -6 47 -19 86 -29 55 -13 80 -25 106 -51 31 -31 33 -37 29 -88 -8 -94 -69' +\n            ' -133 -193 -122 -90 7 -115 20 -115 58 0 26 3 30 18 24 91 -38 168 -41 204' +\n            ' -8 23 21 23 75 1 96 -10 8 -49 23 -88 33 -88 22 -135 63 -135 118 0 92 67 140' +\n            ' 181 131 31 -2 68 -9 83 -14z m854 -6 c38 -15 42 -21 42 -51 l0 -33 -47 25' +\n            ' c-41 22 -58 25 -115 22 -58 -3 -72 -8 -97 -32 -79 -75 -59 -259 32 -297 35' +\n            ' -15 106 -18 150 -6 26 7 27 10 27 67 l0 60 -50 0 c-47 0 -50 2 -50 25 0 25' +\n            ' 1 25 80 25 l81 0 -3 -97 -3 -98 -40 -20 c-22 -10 -65 -21 -95 -23 -153 -11' +\n            ' -242 74 -243 230 0 145 93 235 233 224 30 -2 74 -12 98 -21z m-638 -169 l67' +\n            ' -178 40 103 c22 57 53 139 69 182 28 75 29 77 62 77 19 0 32 -4 30 -9 -1 -5' +\n            ' -39 -104 -83 -220 l-80 -211 -37 0 c-35 0 -37 2 -56 53 -11 28 -48 124 -81 ' +\n            '211 -34 87 -61 163 -61 168 0 5 14 8 32 6 31 -3 32 -5 98 -182z\" />' +\n            '</g> </svg>';\n        return str;\n    }\n    // custom code end\n\n    public documentClick(args: MouseEvent): void {\n        const target: HTMLElement = args.target as HTMLElement;\n        const selectedElement: Element = document.querySelector('.e-selected-style');\n\n        // Remove 'e-selected-style' class if target is not 'checked' or has no id\n        if (selectedElement && target.id !== '' && target.id !== 'checked') {\n            selectedElement.classList.remove('e-selected-style');\n        }\n\n        const drawingObject = this.getDrawingObject(target.id);\n        if (drawingObject) {\n            this.diagram.drawingObject = drawingObject;\n            target.classList.add('e-selected-style');\n        }\n\n        this.diagram.tool = this.continuousDraw ? DiagramTools.ContinuousDraw : DiagramTools.DrawOnce;\n        this.diagram.dataBind();\n    }\n    //  method for  shape IDs to drawing objects\n    private getDrawingObject(id: string): NodeModel | ConnectorModel | null {\n        switch (id) {\n            case 'shape1': return { shape: { type: 'Basic', shape: 'Rectangle' } };\n            case 'shape2': return { shape: { type: 'Basic', shape: 'Ellipse' } };\n            case 'shape3': return { shape: { type: 'Basic', shape: 'Hexagon' } };\n            case 'shape4': return { shape: { type: 'Basic', shape: 'Pentagon' } };\n            case 'shape5': return { shape: { type: 'Basic', shape: 'Triangle' } };\n            case 'straight': return { type: 'Straight' };\n            case 'ortho': return { type: 'Orthogonal' };\n            case 'cubic': return { type: 'Bezier' };\n            case 'freehand': return { type: 'Freehand' };\n            case 'path': return { shape: { type: 'Path', data: 'M540.3643,137.9336L546.7973,159.7016L570.3633,159.7296L550.7723,171.9366L558.9053,194.9966L540.3643,179.4996L521.8223,194.9966L529.9553,171.9366L510.3633,159.7296L533.9313,159.7016L540.3643,137.9336z' } };\n            case 'image': return { shape: { type: 'Image', source: '//ej2.syncfusion.com/demos/src/diagram/employees/image16.png' } };\n            case 'svg': return { shape: { type: 'Native', content: this.getNativeContent() } };\n            case 'text': return { shape: { type: 'Text' } };\n            default: return null;\n        }\n    }\n\n    public diagramCreate(args: Object): void {\n    // Initialize diagram with default drawing object and tool\n        this.diagram.drawingObject = { shape: { type: 'Basic', shape: 'Rectangle' } };\n        this.diagram.tool = DiagramTools.ContinuousDraw;\n\n    }\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<style>\n    /*To show drawing shapes type*/\n    .diagram-drawing-tool .image-pattern-style {\n        background-color: white;\n        background-size: contain;\n        background-repeat: no-repeat;\n        height: 45px;\n        width: calc((100% - 12px) / 3);\n        cursor: pointer;\n        border: 1px solid #D5D5D5;\n        background-position: center;\n        float: left;\n    }\n    \n    .diagram-drawing-tool .row {\n        margin-left: 0px;\n        margin-right: 0px;\n    }\n    \n    .diagram-drawing-tool .sb-child-row {\n        padding-top: 8px;\n    }\n    \n    .diagram-drawing-tool .row-header {\n        font-size: 12px;\n        font-weight: 500;\n    }\n    \n    .diagram-drawing-tool .property-panel-header {\n        padding-top: 15px;\n        padding-bottom: 5px\n    }\n    \n    .diagram-drawing-tool .e-selected-style {\n        border-color: #006CE6;\n        border-width: 2px;\n    }\n    \n    .diagram-drawing-tool .control-section {\n        padding-top: 0px;\n        padding-bottom: 0px;\n        padding-right: 0px;\n    }\n    \n    .diagram-drawing-tool .container-fluid {\n        padding-left: 0px;\n    }\n    \n    .diagram-drawing-tool .col-xs-6 {\n        padding-left: 0px;\n        padding-right: 0px;\n    }\n</style>\n<div class=\"control-section diagram-drawing-tool\">\n    <div class=\"col-lg-8 control-section\">\n        <div class=\"content-wrapper\">\n            <ejs-diagram #diagram id=\"diagram\" width=\"100%\" height=\"540px\" [rulerSettings]='rulerSettings' (created)='diagramCreate($event)' [snapSettings]='snapSettings'>\n            </ejs-diagram>\n        </div>\n    </div>\n    <div class=\"col-lg-3 property-section\">\n        <div class=\"property-panel-header\">\n            Properties\n        </div>\n        <div class=\"row property-panel-content\" id=\"appearance\">\n            <div class=\"row row-header sb-child-row\">\n                Shapes\n            </div>\n            <div class=\"row sb-child-row\">\n                <div title=\"Retangle\" class=\"image-pattern-style e-selected-style\" id=\"shape1\" style=\"background-image: url(./assets/diagram/Images/drawingTool/basicshape/DrawingTool_1.png); margin-right: 3px\">\n                </div>\n                <div title=\"Ellipse\" class=\"image-pattern-style\" id=\"shape2\" style=\"background-image: url(./assets/diagram/Images/drawingTool/basicshape/DrawingTool_2.png);  margin-right: 3px\">\n                </div>\n                <div title=\"Hexagon\" class=\"image-pattern-style\" id=\"shape3\" style=\"background-image: url(./assets/diagram/Images/drawingTool/basicshape/DrawingTool_3.png); margin-right: 3px\">\n                </div>\n            </div>\n            <div class=\"row sb-child-row\">\n                <div title=\"Pentagon\" class=\"image-pattern-style\" id=\"shape4\" style=\"background-image: url(./assets/diagram/Images/drawingTool/basicshape/DrawingTool_4.png); margin-right: 3px\">\n                </div>\n                <div title=\"Triangle\" class=\"image-pattern-style\" id=\"shape5\" style=\"background-image: url(./assets/diagram/Images/drawingTool/basicshape/DrawingTool_5.png);  margin-right: 3px\">\n                </div>\n                <div title=\"Path\" class=\"image-pattern-style\" id=\"path\" style=\"background-image: url(./assets/diagram/Images/drawingTool/DrawingTool_6.png); margin-right: 3px\">\n                </div>\n            </div>\n            <div class=\"row sb-child-row\">\n                <div title=\"Image\" class=\"image-pattern-style\" id=\"image\" style=\"background-image: url(./assets/diagram/Images/drawingTool/DrawingTool_7.png); margin-right: 3px\">\n                </div>\n                <div title=\"SVG\" class=\"image-pattern-style\" id=\"svg\" style=\"background-image: url(./assets/diagram/Images/drawingTool/DrawingTool_8.png); margin-right: 3px\">\n                </div>\n                <div title=\"Text\" class=\"image-pattern-style\" id=\"text\" style=\"background-image: url(./assets/diagram/Images/drawingTool/DrawingTool_9.png); margin-right: 3px\">\n                </div>\n            </div>\n            <div class=\"row row-header sb-child-row\">\n                Connector\n            </div>\n            <div class=\"row sb-child-row\">\n                <div class=\"image-pattern-style\" id=\"straight\" style=\"background-image: url(./assets/diagram/Images/drawingTool/connector/Connectors_1.png); margin-right: 3px\">\n                </div>\n                <div class=\"image-pattern-style\" id=\"ortho\" style=\"background-image: url(./assets/diagram/Images/drawingTool/connector/Connectors_2.png); margin-right: 3px\">\n                </div>\n                <div class=\"image-pattern-style\" id=\"cubic\" style=\"background-image: url(./assets/diagram/Images/drawingTool/connector/Connectors_3.png); margin-right: 3px\">\n                </div>\n                <br/>\n                \n            </div>\n            <div class=\"row sb-child-row\">\n                <div class=\"image-pattern-style\" id=\"freehand\" style=\"background-image: url(./assets/diagram/Images/drawingTool/connector/freehand.png); \">\n                </div>\n            </div>\n            <div class=\"row\" style=\"padding-top: 10px\">\n                <ejs-checkbox id='checked' [(checked)]=\"continuousDraw\" label='Continous Draw'></ejs-checkbox>\n            </div>\n        </div>\n    </div>\n</div>","app.component.css":".control-fluid {\n    padding: 0px !important;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-diagrams\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-diagrams\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-angular-splitbuttons\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"@syncfusion/ej2-angular-circulargauge\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-angular-calendars\":\"*\",\"@syncfusion/ej2-angular-lists\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-grids\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-angular-popups\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}