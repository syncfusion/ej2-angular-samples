{"dependencies.json":"{\"@syncfusion/ej2-base\": \"*\", \"@syncfusion/ej2-buttons\": \"*\", \"@syncfusion/ej2-splitbuttons\": \"*\", \"@syncfusion/ej2-calendars\": \"*\", \"@syncfusion/ej2-charts\": \"*\", \"@syncfusion/ej2-diagrams\": \"*\", \"@syncfusion/ej2-maps\": \"*\", \"@syncfusion/ej2-treemap\": \"*\", \"@syncfusion/ej2-circulargauge\": \"*\", \"@syncfusion/ej2-data\": \"*\", \"@syncfusion/ej2-dropdowns\": \"*\", \"@syncfusion/ej2-grids\": \"*\", \"@syncfusion/ej2-inputs\": \"*\", \"@syncfusion/ej2-lists\": \"*\", \"@syncfusion/ej2-navigations\": \"*\", \"@syncfusion/ej2-popups\": \"*\", \"@syncfusion/ej2-lineargauge\": \"*\", \"@syncfusion/ej2-pdf-export\": \"*\", \"@syncfusion/ej2-compression\": \"*\", \"@syncfusion/ej2-excel-export\": \"*\", \"@syncfusion/ej2-file-utils\": \"*\", \"@syncfusion/ej2-svg-base\": \"*\", \"@syncfusion/ej2-documenteditor\": \"*\", \"@syncfusion/ej2-richtexteditor\": \"*\", \"@syncfusion/ej2-notifications\": \"*\", \"@syncfusion/ej2-heatmap\": \"*\", \"@syncfusion/ej2-pivotview\": \"*\", \"@syncfusion/ej2-schedule\": \"*\", \"@syncfusion/ej2-layouts\": \"*\", \"@syncfusion/ej2-angular-base\": \"*\", \"@syncfusion/ej2-angular-buttons\": \"*\", \"@syncfusion/ej2-angular-splitbuttons\": \"*\", \"@syncfusion/ej2-angular-calendars\": \"*\", \"@syncfusion/ej2-angular-charts\": \"*\", \"@syncfusion/ej2-angular-diagrams\": \"*\", \"@syncfusion/ej2-angular-maps\": \"*\", \"@syncfusion/ej2-angular-treemap\": \"*\", \"@syncfusion/ej2-angular-circulargauge\": \"*\", \"@syncfusion/ej2-angular-dropdowns\": \"*\", \"@syncfusion/ej2-angular-grids\": \"*\", \"@syncfusion/ej2-angular-inputs\": \"*\", \"@syncfusion/ej2-angular-lists\": \"*\", \"@syncfusion/ej2-angular-navigations\": \"*\", \"@syncfusion/ej2-angular-popups\": \"*\", \"@syncfusion/ej2-angular-lineargauge\": \"*\", \"@syncfusion/ej2-angular-documenteditor\": \"*\", \"@syncfusion/ej2-angular-richtexteditor\": \"*\", \"@syncfusion/ej2-angular-notifications\": \"*\", \"@syncfusion/ej2-angular-heatmap\": \"*\", \"@syncfusion/ej2-angular-pivotview\": \"*\", \"@syncfusion/ej2-angular-schedule\": \"*\", \"@syncfusion/ej2-angular-layouts\": \"*\" , \"@angular/http\": \"*\", \"rxjs-compat\":\"*\", \"core-js\": \"2.6.9\"}","main.ts":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","polyfills.ts":"/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n  <link href=\"../../styles/material.css\" rel=\"stylesheet\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n</head>\n<body class=\"ej2-new\"> \n\n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WLQL39J\"height=\"0\"width=\"0\"style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport {\n    NodeModel, ConnectorModel, DiagramTools, SnapSettingsModel, GridlinesModel, RulerSettingsModel\n} from '@syncfusion/ej2-diagrams';\nimport { DiagramComponent } from '@syncfusion/ej2-angular-diagrams';\n\n/**\n * Sample for DrawingTool\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class AppComponent {\n    @ViewChild('diagram')\n    public diagram: DiagramComponent;\n\n    public rulerSettings: RulerSettingsModel = { showRulers: true, dynamicGrid: true }\n    public continuousDraw: boolean = true;\n\n    private interval: number[] = [1, 9, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25,\n        9.75, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75];\n    private horizontalGridlines: GridlinesModel = { lineColor: '#e0e0e0', lineIntervals: this.interval };\n    private verticalGridlines: GridlinesModel = { lineColor: '#e0e0e0', lineIntervals: this.interval };\n\n    public snapSettings: SnapSettingsModel = {\n        snapObjectDistance: 5, horizontalGridlines: this.horizontalGridlines, verticalGridlines: this.verticalGridlines\n    };\n\n    ngOnInit(): void {\n        document.getElementById('appearance').onclick = this.documentClick.bind(this);\n    }\n\n    // custom code start\n    public getNativeContent(): string {\n        let str: string = '<svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"350.000000pt\" ' +\n            'height=\"229.000000pt\" viewBox=\"0 0 350.000000 229.000000\" ' +\n            'preserveAspectRatio=\"xMidYMid meet\"> <metadata>' +\n            ' Created by potrace 1.11, written by Peter Selinger 2001-2013' +\n            ' </metadata> <g transform=\"translate(0.000000,229.000000) scale(0.100000,-0.100000)\"' +\n            ' fill=\"#de6ca9\" stroke=\"none\"><path d=\"M0 1145 l0 -1145 1750 0 1750 0 0 1145 0 1145' +\n            ' -1750 0 -1750 0 0 -1145z m1434 186 c19 -8 26 -18 26 -37 0 -24 -3 -26' +\n            ' -27 -19 -16 3 -58 9 -94 12 -63 5 -67 4 -88 -23 -23 -29 -21 -60 6 -81 8' +\n            ' -6 47 -19 86 -29 55 -13 80 -25 106 -51 31 -31 33 -37 29 -88 -8 -94 -69' +\n            ' -133 -193 -122 -90 7 -115 20 -115 58 0 26 3 30 18 24 91 -38 168 -41 204' +\n            ' -8 23 21 23 75 1 96 -10 8 -49 23 -88 33 -88 22 -135 63 -135 118 0 92 67 140' +\n            ' 181 131 31 -2 68 -9 83 -14z m854 -6 c38 -15 42 -21 42 -51 l0 -33 -47 25' +\n            ' c-41 22 -58 25 -115 22 -58 -3 -72 -8 -97 -32 -79 -75 -59 -259 32 -297 35' +\n            ' -15 106 -18 150 -6 26 7 27 10 27 67 l0 60 -50 0 c-47 0 -50 2 -50 25 0 25' +\n            ' 1 25 80 25 l81 0 -3 -97 -3 -98 -40 -20 c-22 -10 -65 -21 -95 -23 -153 -11' +\n            ' -242 74 -243 230 0 145 93 235 233 224 30 -2 74 -12 98 -21z m-638 -169 l67' +\n            ' -178 40 103 c22 57 53 139 69 182 28 75 29 77 62 77 19 0 32 -4 30 -9 -1 -5' +\n            ' -39 -104 -83 -220 l-80 -211 -37 0 c-35 0 -37 2 -56 53 -11 28 -48 124 -81 ' +\n            '211 -34 87 -61 163 -61 168 0 5 14 8 32 6 31 -3 32 -5 98 -182z\" />' +\n            '</g> </svg>';\n        return str;\n    }\n    // custom code end\n\n    public documentClick(args: MouseEvent): void {\n        let target: HTMLElement = args.target as HTMLElement;\n        // custom code start\n        let selectedElement: HTMLCollection = document.getElementsByClassName('e-selected-style');\n        if (selectedElement.length && target.id !== '' && target.id !== 'checked') {\n            selectedElement[0].classList.remove('e-selected-style');\n        }\n        // custom code end\n        let drawingObject: NodeModel | ConnectorModel = null;\n        if (target.className === 'image-pattern-style') {\n            switch (target.id) {\n                case 'shape1':\n                    drawingObject = { shape: { type: 'Basic', shape: 'Rectangle' } };\n                    break;\n                case 'shape2':\n                    drawingObject = { shape: { type: 'Basic', shape: 'Ellipse' } };\n                    break;\n                case 'shape3':\n                    drawingObject = { shape: { type: 'Basic', shape: 'Hexagon' } };\n                    break;\n                case 'shape4':\n                    drawingObject = { shape: { type: 'Basic', shape: 'Pentagon' } };\n                    break;\n                case 'shape5':\n                    drawingObject = { shape: { type: 'Basic', shape: 'Triangle' } };\n                    break;\n                case 'straight':\n                    drawingObject = { type: 'Straight' };\n                    break;\n                case 'ortho':\n                    drawingObject = { type: 'Orthogonal' };\n                    break;\n                case 'cubic':\n                    drawingObject = { type: 'Bezier' };\n                    break;\n                case 'path':\n                    drawingObject = {\n                        shape: {\n                            type: 'Path',\n                            data: 'M540.3643,137.9336L546.7973,159.7016L570.3633,159.7296L550.7723,171.9366L558.9053,194.9966L540.3643,' +\n                                '179.4996L521.8223,194.9966L529.9553,171.9366L510.3633,159.7296L533.9313,159.7016L540.3643,137.9336z'\n                        }\n                    };\n                    break;\n                case 'image':\n                    drawingObject = { shape: { type: 'Image', source: './assets/diagram/employees/Clayton.png' } };\n                    break;\n                case 'svg':\n                    drawingObject = { shape: { type: 'Native', content: this.getNativeContent() } };\n                    break;\n                case 'text':\n                    drawingObject = { shape: { type: 'Text' } };\n                    break;\n            }\n            if (drawingObject) {\n                this.diagram.drawingObject = drawingObject;\n                // custom code start\n                target.classList.add('e-selected-style');\n                // custom code end\n            }\n        }\n        this.diagram.tool = this.continuousDraw ? DiagramTools.ContinuousDraw : DiagramTools.DrawOnce;\n        this.diagram.dataBind();\n    };\n\n    public diagramCreate(args: Object): void {\n        this.diagram.drawingObject = { shape: { type: 'Basic', shape: 'Rectangle' } };\n        this.diagram.tool = DiagramTools.ContinuousDraw;\n\n    }\n}","app/app.module.ts":"import { DialogAllModule } from '@syncfusion/ej2-angular-popups';\n\nimport { AccumulationChartModule } from '@syncfusion/ej2-angular-charts';\n\nimport { AccumulationAnnotationService, AccumulationDataLabelService, AccumulationLegendService, AccumulationTooltipService, ChartAllModule } from '@syncfusion/ej2-angular-charts';\n\nimport { DiagramAllModule, SymbolPaletteAllModule, OverviewAllModule } from '@syncfusion/ej2-angular-diagrams';\n\nimport { GridAllModule } from '@syncfusion/ej2-angular-grids';\n\nimport { ListViewAllModule } from '@syncfusion/ej2-angular-lists';\n\nimport { DateRangePickerModule } from '@syncfusion/ej2-angular-calendars';\n\nimport { CircularGaugeModule } from '@syncfusion/ej2-angular-circulargauge';\n\nimport { DropDownListAllModule } from '@syncfusion/ej2-angular-dropdowns';\n\nimport { MultiSelectModule } from '@syncfusion/ej2-angular-dropdowns';\n\nimport { ToolbarModule } from '@syncfusion/ej2-angular-navigations';\n\nimport { NumericTextBoxModule, ColorPickerModule, UploaderModule, TextBoxModule } from '@syncfusion/ej2-angular-inputs';\n\nimport { DropDownButtonModule } from '@syncfusion/ej2-angular-splitbuttons';\n\nimport { ButtonModule, CheckBoxModule, RadioButtonModule } from '@syncfusion/ej2-angular-buttons';\n\nimport { HttpModule } from '@angular/http';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { RouterModule } from '@angular/router';\n\nimport { CommonModule } from '@angular/common';\n\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from '../app.component';\n@NgModule({ declarations: [ AppComponent ], imports: [ DiagramAllModule, ChartAllModule, GridAllModule, SymbolPaletteAllModule, OverviewAllModule, ButtonModule,       ColorPickerModule,  DateRangePickerModule, CheckBoxModule, AccumulationChartModule, BrowserModule,ToolbarModule, DropDownButtonModule, UploaderModule, CircularGaugeModule, DropDownListAllModule, ListViewAllModule,       DialogAllModule, TextBoxModule, RadioButtonModule,       MultiSelectModule, NumericTextBoxModule, BrowserModule], providers: [], bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","app.component.html":"<style>\n    .diagram-drawing-tool .image-pattern-style {\n        background-color: white;\n        background-size: contain;\n        background-repeat: no-repeat;\n        height: 45px;\n        width: calc((100% - 12px) / 3);\n        cursor: pointer;\n        border: 1px solid #D5D5D5;\n        background-position: center;\n        float: left;\n    }\n    \n    .diagram-drawing-tool .row {\n        margin-left: 0px;\n        margin-right: 0px;\n    }\n    \n    .diagram-drawing-tool .sb-child-row {\n        padding-top: 8px;\n    }\n    \n    .diagram-drawing-tool .row-header {\n        font-size: 12px;\n        font-weight: 500;\n    }\n    \n    .diagram-drawing-tool .e-checkbox-wrapper .e-label {\n        font-size: 12px;\n    }\n    \n    .diagram-drawing-tool .property-panel-header {\n        padding-top: 15px;\n        padding-bottom: 5px\n    }\n    \n    .diagram-drawing-tool .e-selected-style {\n        border-color: #006CE6;\n        border-width: 2px;\n    }\n    \n    .diagram-drawing-tool .control-section {\n        padding-top: 0px;\n        padding-bottom: 0px;\n        padding-right: 0px;\n    }\n    \n    .diagram-drawing-tool .container-fluid {\n        padding-left: 0px;\n    }\n    \n    .diagram-drawing-tool .col-xs-6 {\n        padding-left: 0px;\n        padding-right: 0px;\n    }\n</style>\n<div class=\"control-section diagram-drawing-tool\">\n    <div class=\"col-lg-8 control-section\">\n        <div class=\"content-wrapper\">\n            <ejs-diagram #diagram id=\"diagram\" width=\"100%\" height=\"540px\" [rulerSettings]='rulerSettings' (created)='diagramCreate($event)' [snapSettings]='snapSettings'>\n            </ejs-diagram>\n        </div>\n    </div>\n    <div class=\"col-lg-3 property-section\">\n        <div class=\"property-panel-header\">\n            Properties\n        </div>\n        <div class=\"row property-panel-content\" id=\"appearance\">\n            <div class=\"row row-header sb-child-row\">\n                Shapes\n            </div>\n            <div class=\"row sb-child-row\">\n                <div title=\"Retangle\" class=\"image-pattern-style e-selected-style\" id=\"shape1\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/Images/drawingTool/basicshape/DrawingTool_1.png); margin-right: 3px\">\n                </div>\n                <div title=\"Ellipse\" class=\"image-pattern-style\" id=\"shape2\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/Images/drawingTool/basicshape/DrawingTool_2.png); margin: 0px 3px\">\n                </div>\n                <div title=\"Hexagon\" class=\"image-pattern-style\" id=\"shape3\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/Images/drawingTool/basicshape/DrawingTool_3.png);\">\n                </div>\n            </div>\n            <div class=\"row sb-child-row\">\n                <div title=\"Pentagon\" class=\"image-pattern-style\" id=\"shape4\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/Images/drawingTool/basicshape/DrawingTool_4.png); margin-right: 3px\">\n                </div>\n                <div title=\"Triangle\" class=\"image-pattern-style\" id=\"shape5\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/Images/drawingTool/basicshape/DrawingTool_5.png); margin: 0px 3px\">\n                </div>\n                <div title=\"Path\" class=\"image-pattern-style\" id=\"path\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/Images/drawingTool/DrawingTool_6.png);\">\n                </div>\n            </div>\n            <div class=\"row sb-child-row\">\n                <div title=\"Image\" class=\"image-pattern-style\" id=\"image\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/Images/drawingTool/DrawingTool_7.png); margin-right: 3px\">\n                </div>\n                <div title=\"SVG\" class=\"image-pattern-style\" id=\"svg\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/Images/drawingTool/DrawingTool_8.png); margin-right: 3px\">\n                </div>\n                <div title=\"Text\" class=\"image-pattern-style\" id=\"text\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/Images/drawingTool/DrawingTool_9.png); margin-right: 3px\">\n                </div>\n            </div>\n            <div class=\"row row-header sb-child-row\">\n                Connector\n            </div>\n            <div class=\"row sb-child-row\">\n                <div class=\"image-pattern-style\" id=\"straight\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/Images/drawingTool/connector/Connectors_1.png); margin-right: 3px\">\n                </div>\n                <div class=\"image-pattern-style\" id=\"ortho\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/Images/drawingTool/connector/Connectors_2.png); margin: 0px 3px\">\n                </div>\n                <div class=\"image-pattern-style\" id=\"cubic\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/Images/drawingTool/connector/Connectors_3.png); \">\n                </div>\n            </div>\n            <div class=\"row\" style=\"padding-top: 10px\">\n                <ejs-checkbox id='checked' [(checked)]=\"continuousDraw\" label='Continous Draw'></ejs-checkbox>\n            </div>\n        </div>\n    </div>\n</div>","app.component.css":".control-fluid {\n    padding: 0px !important;\n}"}