{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { LinearGaugeComponent, LinearGaugeModule, AnnotationsService } from '@syncfusion/ej2-angular-lineargauge';\nimport { ILoadedEventArgs, LinearGaugeTheme, IPointerDragEventArgs } from '@syncfusion/ej2-lineargauge';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [LinearGaugeModule],\n    providers: [AnnotationsService]\n})\n\nexport class AppComponent {\n    @ViewChild('textWidget')\n    public gaugeTextWidget: LinearGaugeComponent;\n    @ViewChild('iconWidget')\n    public gaugeIconWidget: LinearGaugeComponent;\n    @ViewChild('multipleWidget')\n    public gaugeMultipleWidget: LinearGaugeComponent;\n\n    public axesTextWidget: Object[] = [{\n        line: {\n            width: 20\n        },\n        pointers: [{\n            width: 30,\n            value: 55,\n            offset: -2,\n            color: '#173BBB',\n            position: 'Cross',\n            placement: 'Center',\n            markerType: 'Circle',\n        }\n        ],\n        majorTicks: {\n            interval: 20, height: 7, width: 1\n        },\n        minorTicks: {\n            interval: 10, height: 3\n        },\n        minimum: 0,\n        maximum: 100,\n        opposedPosition: true,\n        labelStyle: { font: { fontFamily: 'inherit' } }\n    }];\n\n    public axesIconWidget: Object[] = [{\n        line: {\n            width: 20\n        },\n        pointers: [{\n            width: 45,\n            value: 90,\n            height: 30,\n            placement: 'Near',\n            markerType: 'Image',\n            imageUrl: 'https://ej2.syncfusion.com/angular/demos/assets/linear-gauge/images/thumb-icon.png'\n        }\n        ],\n        majorTicks: {\n            interval: 20, height: 7, width: 1\n        },\n        minorTicks: {\n            interval: 10, height: 3\n        },\n        minimum: 0,\n        maximum: 100,\n        opposedPosition: true,\n        labelStyle: { font: { fontFamily: 'inherit' } }\n    }];\n\n    public axesMultipleWidget: Object[] = [{\n        line: {\n            width: 20\n        },\n        pointers: [{\n            width: 30,\n            value: 60,\n            offset: -2,\n            placement: 'Center',\n            position: 'Cross',\n            markerType: 'Circle',\n            color: '#173BBB'\n        }, {\n            width: 45,\n            height: 30,\n            value: 30,\n            placement: 'Near',\n            markerType: 'Image',\n            color: '#173BBB',\n            imageUrl: 'https://ej2.syncfusion.com/angular/demos/assets/linear-gauge/images/thumb-icon.png'\n        }\n        ],\n        minimum: 0,\n        maximum: 100,\n        opposedPosition: true,\n        majorTicks: {\n            interval: 20, height: 7, width: 1\n        },\n        minorTicks: {\n            interval: 10, height: 3\n        },\n        labelStyle: { font: { fontFamily: 'inherit', fontWeight: 'normal' } }\n    }];\n\n    public annotationsTextWidget: Object[] = [{\n        axisIndex: 0,\n        axisValue: 55,\n        x: 0,\n        y: 0,\n        zIndex: 1,\n        content: '<div style=\"font-size: 12px;color: white;margin-left: -2px;margin-top:1px;\"> 55 </div>'\n    }];\n\n    public annotationsMultipleWidget: Object[] = [{\n        axisIndex: 0,\n        axisValue: 60,\n        x: 0,\n        y: 0,\n        zIndex: 1,\n        content: '<div style=\"font-size: 12px;color: white;margin-left: -2px;margin-top:1px;\"> 60 </div>'\n    }];\n\n    public titleStyle: Object = {\n        fontFamily: 'inherit', fontWeight: 'normal'\n    };\n\n    public load(args: ILoadedEventArgs): void {\n        // custom code start\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.gauge.theme = <LinearGaugeTheme>(selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n        // custom code end\n    }\n\n    public horizontalGauge(e: Event): void {\n        this.gaugeTextWidget.width = this.gaugeIconWidget.width = this.gaugeMultipleWidget.width = '450px';\n        this.gaugeTextWidget.height = this.gaugeIconWidget.height = this.gaugeMultipleWidget.height = '150px';\n        this.gaugeTextWidget.orientation = this.gaugeIconWidget.orientation = this.gaugeMultipleWidget.orientation = \"Horizontal\";\n        this.gaugeTextWidget.axes[0].pointers[0].offset = 2;\n        this.gaugeMultipleWidget.axes[0].pointers[0].offset = 2;\n        if (e.currentTarget != null) {\n            e.currentTarget['style']['color'] = \"white\";\n            e.currentTarget['style']['backgroundColor'] = \"#0074E3\";\n            document.getElementById('vertical').style.color = \"black\";\n            document.getElementById('vertical').style.backgroundColor = \"white\";\n            document.getElementById('textWidgetGauge').className = document.getElementById('iconWidgetGauge').className =\n                document.getElementById('multipleWidgetGauge').className = \"col-xs-12 col-sm-12 col-lg-12 col-md-12\";\n        }\n    };\n\n    public verticalGauge(e: Event): void {\n        this.gaugeTextWidget.width = this.gaugeIconWidget.width = this.gaugeMultipleWidget.width = '170px';\n        this.gaugeTextWidget.height = this.gaugeIconWidget.height = this.gaugeMultipleWidget.height = '350px';\n        this.gaugeTextWidget.orientation = this.gaugeIconWidget.orientation = this.gaugeMultipleWidget.orientation = \"Vertical\";\n        this.gaugeTextWidget.axes[0].pointers[0].offset = -2;\n        this.gaugeMultipleWidget.axes[0].pointers[0].offset = -2;\n        if (e.currentTarget != null) {\n            e.currentTarget['style']['color'] = \"white\";\n            e.currentTarget['style']['backgroundColor'] = \"#0074E3\";\n            document.getElementById('horizontal')['style']['color'] = \"black\";\n            document.getElementById('horizontal')['style']['backgroundColor'] = \"white\";\n            document.getElementById('textWidgetGauge').className = document.getElementById('iconWidgetGauge').className =\n                document.getElementById('multipleWidgetGauge').className = \"col-xs-5 col-sm-5 col-lg-4 col-md-4\";\n        }\n    };\n\n    constructor() {\n        // code\n    }\n\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<main>\n    <div class=\"control-section\">\n        <div class=\"row\">\n            <div class=\"col-xs-12 col-sm-12 col-lg-12 col-md-12\"\n                style=\"display: flex;justify-content: center; align-items: center;\">\n                <div style=\"margin: auto;padding: 10px;\">\n                    <table role=\"none\">\n                        <tbody>\n                            <tr>\n                                <td>\n                                    <div id='horizontal'\n                                        style=\"padding:6px;cursor:pointer;width:86px;color:black;font-size:15px;border:1px solid #0074E3;background-color:white;text-align:center\"\n                                        (click)='horizontalGauge($event)'>Horizontal</div>\n                                </td>\n                                <td>\n                                    <div id='vertical'\n                                        style=\"padding:6px;cursor:pointer;width:86px;color:white;font-size:15px;border:1px solid #0074E3;background-color: #0074E3;text-align:center\"\n                                        (click)='verticalGauge($event)'>Vertical</div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n        <pre style=\"background-color: inherit; border:hidden\"></pre>\n        <div id=\"containerBox\" style=\"float: left;\"></div>\n        <div id='textWidgetGauge' class=\"col-xs-5 col-sm-5 col-lg-4 col-md-4\"\n            style=\"display: flex;justify-content: center; align-items: center;\">\n            <ejs-lineargauge (load)='load($event)' id='textWidget' animationDuration=2000 #textWidget background='transparent' title='Text widget'\n                [titleStyle]='titleStyle' width='170px' height='350px' style='display:block;' orientation='Vertical'\n                [axes]='axesTextWidget' [annotations]='annotationsTextWidget'>\n            </ejs-lineargauge>\n        </div>\n        <div id='iconWidgetGauge' class=\"col-xs-5 col-sm-5 col-lg-4 col-md-4\"\n            style=\"display: flex;justify-content: center; align-items: center;\">\n            <ejs-lineargauge (load)='load($event)' id='iconWidget' animationDuration=2000 #iconWidget background='transparent' title='Icon widget'\n                [titleStyle]='titleStyle' width='170px' height='350px' style='display:block;' orientation='Vertical'\n                [axes]='axesIconWidget'>\n            </ejs-lineargauge>\n        </div>\n        <div id='multipleWidgetGauge' class=\"col-xs-5 col-sm-5 col-lg-4 col-md-4\"\n            style=\"display: flex;justify-content: center; align-items: center;\">\n            <ejs-lineargauge (load)='load($event)' id='multipleWidget' animationDuration=2000 #multipleWidget title='Multiple widget pointers'\n                [titleStyle]='titleStyle' width='170px' height='350px' style='display:block;' background='transparent'\n                orientation='Vertical' [axes]='axesMultipleWidget' [annotations]='annotationsMultipleWidget'>\n            </ejs-lineargauge>\n        </div>\n    </div>\n    <section id=\"action-description\" aria-label=\"Description of Linear Gauge sample\">\n        <p>\n            This sample demonstrates the inclusion of text and image pointers in the linear gauge. Additionally, multiple\n            pointer support is enabled.\n        </p>\n    </section>\n    <section id=\"description\" aria-label=\"Description of the Linear Gauge features demonstrated in this sample\">\n        <p>\n            In this example, you can see how to render and configure text and image pointers in the linear gauge. The\n            properties available in <a target=\"_blank\"\n                href=\"https://ej2.syncfusion.com/angular/documentation/api/linear-gauge/pointerModel/\">pointers</a> and <a\n                target=\"_blank\"\n                href=\"https://ej2.syncfusion.com/angular/documentation/api/linear-gauge/annotationModel/\">annotations</a>\n            help in the customization of the text and image pointers in the linear gauge.\n        </p>\n        <p>\n            More information on the pointers can be found in this <a target=\"_blank\"\n                href=\"https://ej2.syncfusion.com/angular/documentation/linear-gauge/pointers/\">documentation section</a>.\n        </p>\n    </section>\n</main>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-lineargauge\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-lineargauge\":\"*\",\"@syncfusion/ej2-pdf-export\":\"*\",\"@syncfusion/ej2-svg-base\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}