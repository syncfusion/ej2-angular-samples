{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { LinearGaugeComponent, LinearGauge, LinearGaugeModule, GradientService } from '@syncfusion/ej2-angular-lineargauge';\nimport { ILoadedEventArgs, LinearGaugeTheme } from '@syncfusion/ej2-lineargauge';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [LinearGaugeModule],\n    providers: [GradientService]\n})\n\nexport class AppComponent {\n    @ViewChild('linearDefault')\n    public linearDefault: LinearGaugeComponent;\n    @ViewChild('linearExponential')\n    public linearExponential: LinearGaugeComponent;\n    @ViewChild('linearConcave')\n    public linearConcave: LinearGaugeComponent;\n    @ViewChild('linearGradient')\n    public linearGradient: LinearGaugeComponent;\n    @ViewChild('linearMultiple')\n    public linearMultiple: LinearGaugeComponent;\n\n    public axesDefault: Object[] = [{\n        line: {\n            width: 5\n        },\n        pointers: [{\n            width: 0,\n        }],\n        ranges: [{\n            start: 0,\n            end: 100,\n            startWidth: 10,\n            endWidth: 10,\n            color: '#F45656',\n            offset: 5\n        }],\n        majorTicks: {\n            interval: 20, height: 7, width: 1, position: 'Outside'\n        },\n        minorTicks: {\n            interval: 10, height: 3, position: 'Outside'\n        },\n        minimum: 0,\n        maximum: 100,\n        opposedPosition: true,\n        labelStyle: { position: 'Outside', font: { fontFamily: 'inherit' } }\n    }];\n\n    public axesExponential: Object[] = [{\n        line: {\n            width: 5\n        },\n        pointers: [{\n            width: 0,\n        }],\n        ranges: [{\n            start: 0,\n            end: 50,\n            startWidth: 2,\n            endWidth: 15,\n            color: '#F45656',\n            offset: 5\n        }, {\n            start: 50,\n            end: 100,\n            startWidth: 15,\n            endWidth: 50,\n            color: '#F45656',\n            offset: 5\n        }\n        ],\n        majorTicks: {\n            interval: 20, height: 7, width: 1, position: 'Outside'\n        },\n        minorTicks: {\n            interval: 10, height: 3, position: 'Outside'\n        },\n        minimum: 0,\n        maximum: 100,\n        opposedPosition: true,\n        labelStyle: { position: 'Outside', font: { fontFamily: 'inherit' } }\n    }];\n\n    public axesConcave: Object[] = [{\n        line: {\n            width: 5\n        },\n        pointers: [\n            {\n                width: 0,\n            }\n        ],\n        ranges: [{\n            start: 0,\n            end: 50,\n            color: '#F45656',\n            startWidth: 50, endWidth: 20,\n            offset: 5\n        }, {\n            start: 50,\n            end: 100,\n            color: '#F45656',\n            startWidth: 20, endWidth: 50,\n            offset: 5\n        }\n        ],\n        minimum: 0,\n        maximum: 100,\n        opposedPosition: true,\n        majorTicks: {\n            interval: 20, height: 7, width: 1, position: 'Outside'\n        },\n        minorTicks: {\n            interval: 10, height: 3, position: 'Outside'\n        },\n        labelStyle: { position: 'Outside', font: { fontFamily: 'inherit' } }\n    }];\n\n    public axesGradient: Object = [{\n        line: {\n            width: 5\n        },\n        majorTicks: {\n            interval: 20,\n            height: 7,\n            width: 1,\n            position: 'Outside'\n        },\n        minorTicks: {\n            interval: 10,\n            height: 3,\n            position: 'Outside'\n        },\n        labelStyle: {\n            position: 'Outside',\n            font: { fontFamily: 'inherit' }\n        },\n        pointers: [\n            {\n                width: 0\n            }\n        ],\n        ranges: [\n            {\n                start: 0,\n                end: 100,\n                linearGradient: {\n                    startValue: '0%',\n                    endValue: '100%',\n                    colorStop: [\n                        { color: \"#FB7D55\", offset: \"0%\", opacity: 1 },\n                        { color: \"#ECC85B\", offset: \"50%\", opacity: 1 },\n                        { color: \"#6FC78A\", offset: \"100%\", opacity: 1 }]\n                },\n                startWidth: 50,\n                endWidth: 50,\n                offset: 5\n            }\n        ],\n        minimum: 0,\n        maximum: 100,\n        opposedPosition: true\n    }];\n\n    public axesMultiple: Object = [{\n        line: {\n            width: 5\n        },\n        ranges: [\n            {\n                start: 0,\n                end: 30,\n                color: '#FB7D55',\n                startWidth: 50,\n                endWidth: 50,\n                offset: 5\n            },\n            {\n                start: 30,\n                end: 65,\n                color: '#ECC85B',\n                startWidth: 50,\n                endWidth: 50,\n                offset: 5\n            },\n            {\n                start: 65,\n                end: 100,\n                color: '#6FC78A',\n                startWidth: 50,\n                endWidth: 50,\n                offset: 5\n            }\n        ],\n        majorTicks: {\n            interval: 20,\n            height: 7,\n            width: 1,\n            position: 'Outside'\n        },\n        minorTicks: {\n            interval: 10,\n            height: 3,\n            position: 'Outside'\n        },\n        labelStyle: {\n            position: 'Outside',\n            font: { fontFamily: 'inherit' }\n        },\n        pointers: [\n            {\n                width: 0\n            }\n        ],\n        minimum: 0,\n        maximum: 100,\n        opposedPosition: true\n    }];\n\n    public titleStyle: Object = {\n        fontFamily: 'inherit', fontWeight: 'normal'\n    };\n\n    public load(args: ILoadedEventArgs): void {\n        // custom code start\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.gauge.theme = <LinearGaugeTheme>(selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n        // custom code end\n    }\n\n    public horizontalGauge(e: Event): void {\n        this.linearDefault.width = this.linearExponential.width = this.linearConcave.width = this.linearGradient.width = this.linearMultiple.width = '450px';\n        this.linearDefault.height = this.linearExponential.height = this.linearConcave.height = this.linearGradient.height = this.linearMultiple.height = '150px';\n        this.linearDefault.orientation = this.linearExponential.orientation = this.linearConcave.orientation = this.linearGradient.orientation = this.linearMultiple.orientation = \"Horizontal\";\n        if (e.currentTarget != null) {\n            e.currentTarget['style']['color'] = \"white\";\n            e.currentTarget['style']['backgroundColor'] = \"#0074E3\";\n            document.getElementById('vertical').style.color = \"black\";\n            document.getElementById('vertical').style.backgroundColor = \"white\";\n            document.getElementById('containerone').className = document.getElementById('containertwo').className =\n                document.getElementById('containerthree').className = document.getElementById('containerfour').className =\n                document.getElementById('containerfive').className = \"col-xs-12 col-sm-12 col-lg-12 col-md-12\";\n            document.getElementById('containerBox').style.padding = \"0%\";\n        }\n    };\n\n    public verticalGauge(e: Event): void {\n        this.linearDefault.width = this.linearExponential.width = this.linearConcave.width = this.linearGradient.width = this.linearMultiple.width = '150px';\n        this.linearDefault.height = this.linearExponential.height = this.linearConcave.height = this.linearGradient.height = this.linearMultiple.height = '350px';\n        this.linearDefault.orientation = this.linearExponential.orientation = this.linearConcave.orientation = this.linearGradient.orientation = this.linearMultiple.orientation = \"Vertical\";\n        if (e.currentTarget != null) {\n            e.currentTarget['style']['color'] = \"white\";\n            e.currentTarget['style']['backgroundColor'] = \"#0074E3\";\n            document.getElementById('horizontal')['style']['color'] = \"black\";\n            document.getElementById('horizontal')['style']['backgroundColor'] = \"white\";\n            document.getElementById('containerone').className = document.getElementById('containertwo').className =\n                document.getElementById('containerthree').className = document.getElementById('containerfour').className =\n                document.getElementById('containerfive').className = \"col-xs-4 col-sm-4 col-lg-2 col-md-2\";\n                document.getElementById('containerBox').style.padding = \"4%\";\n        }\n    };\n\n    constructor() {\n        //code\n    }\n\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<main>\n    <div class=\"control-section\">\n        <div class=\"row\">\n            <div class=\"col-xs-12 col-sm-12 col-lg-12 col-md-12\"\n                style=\"display: flex;justify-content: center; align-items: center;\">\n                <div style=\"margin: auto;padding: 10px;\">\n                    <table role=\"none\">\n                        <tbody>\n                            <tr>\n                                <td>\n                                    <div id='horizontal'\n                                        style=\"padding:6px;cursor:pointer;width:86px;color:black;font-size:15px;border:1px solid #0074E3;background-color:white;text-align:center\"\n                                        (click)='horizontalGauge($event)'>Horizontal</div>\n                                </td>\n                                <td>\n                                    <div id='vertical'\n                                        style=\"padding:6px;cursor:pointer;width:86px;color:white;font-size:15px;border:1px solid #0074E3;background-color: #0074E3;text-align:center\"\n                                        (click)='verticalGauge($event)'>Vertical</div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n        <pre style=\"background-color: inherit; border:hidden\"></pre>\n        <div id=\"containerBox\" style=\"float: left;padding: 4%;\"></div>\n        <div id='containerone' class=\"col-xs-4 col-sm-4 col-lg-2 col-md-2\"\n            style=\"display: flex;justify-content: center; align-items: center;\">\n            <ejs-lineargauge (load)='load($event)' id='linearDefault' animationDuration=2000 #linearDefault background='transparent'\n                title='Default' [titleStyle]='titleStyle' width='150px' height='350px' style='display:block;height:100px;'\n                orientation='Vertical' [axes]='axesDefault'>\n            </ejs-lineargauge>\n        </div>\n        <div id='containertwo' class=\"col-xs-4 col-sm-4 col-lg-2 col-md-2\"\n            style=\"display: flex;justify-content: center; align-items: center;\">\n            <ejs-lineargauge (load)='load($event)' id='linearExponential' animationDuration=2000 #linearExponential background='transparent'\n                title='Exponential' [titleStyle]='titleStyle' width='150px' height='350px'\n                style='display:block;height:100px;' orientation='Vertical' [axes]='axesExponential'>\n            </ejs-lineargauge>\n        </div>\n        <div id='containerthree' class=\"col-xs-4 col-sm-4 col-lg-2 col-md-2\"\n            style=\"display: flex;justify-content: center; align-items: center;\">\n            <ejs-lineargauge (load)='load($event)' id='linearConcave' animationDuration=2000 #linearConcave title='Concave'\n                [titleStyle]='titleStyle' width='150px' height='350px' style='display:block;height:130px;'\n                background='transparent' orientation='Vertical' [axes]='axesConcave'>\n            </ejs-lineargauge>\n        </div>\n        <div id='containerfour' class=\"col-xs-4 col-sm-4 col-lg-2 col-md-2\"\n            style=\"display: flex;justify-content: center; align-items: center;\">\n            <ejs-lineargauge (load)='load($event)' id='linearGradient' animationDuration=2000 #linearGradient title='Gradient shader'\n                [titleStyle]='titleStyle' width='150px' height='350px' style='display:block;height:100px;'\n                background='transparent' orientation='Vertical' [axes]='axesGradient'>\n            </ejs-lineargauge>\n        </div>\n        <div id='containerfive' class=\"col-xs-4 col-sm-4 col-lg-2 col-md-2\"\n            style=\"display: flex;justify-content: center; align-items: center;\">\n            <ejs-lineargauge (load)='load($event)' id='linearMultiple' animationDuration=2000 #linearMultiple title='Multiple ranges'\n                [titleStyle]='titleStyle' width='150px' height='350px' style='display:block;height:100px;'\n                background='transparent' orientation='Vertical' [axes]='axesMultiple'>\n            </ejs-lineargauge>\n        </div>\n    </div>\n    <section id=\"action-description\" aria-label=\"Description of Linear Gauge sample\">\n        <p>\n            This sample demonstrates the various customization options for the linear gauge's range. For example, an\n            exponential appearance, a gradient color, and a multiple range.\n        </p>\n    </section>\n    <section id=\"description\" aria-label=\"Description of the Linear Gauge features demonstrated in this sample\">\n        <p>\n            In this example, you can see how to render and configure ranges in the linear gauge. The <a target=\"_blank\"\n                href=\"https://ej2.syncfusion.com/angular/documentation/api/linear-gauge/rangeModel/\">ranges</a> and <a\n                target=\"_blank\"\n                href=\"https://ej2.syncfusion.com/angular/documentation/api/linear-gauge/linearGradientModel/\">\n                linearGradient</a> are used to display multiple ranges, perform range customization, and apply gradient\n            colors, respectively.\n        </p>\n        <p>\n            More information on the ranges can be found in this\n            <a target=\"_blank\" href=\"https://ej2.syncfusion.com/angular/documentation/linear-gauge/ranges/\">documentation\n                section</a>.\n        </p>\n    </section>\n</main>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-lineargauge\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-lineargauge\":\"*\",\"@syncfusion/ej2-pdf-export\":\"*\",\"@syncfusion/ej2-svg-base\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}