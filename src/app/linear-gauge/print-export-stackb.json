{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { ILoadedEventArgs, LinearGaugeTheme, LinearGauge, ExportType } from '@syncfusion/ej2-lineargauge';\nimport { PrintService, PdfExportService, ImageExportService, LinearGaugeModule } from '@syncfusion/ej2-angular-lineargauge';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { ButtonModule } from '@syncfusion/ej2-angular-buttons';\nimport { TextBoxModule } from '@syncfusion/ej2-angular-inputs';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    providers: [PrintService, PdfExportService, ImageExportService],\n    standalone: true,\n    imports: [LinearGaugeModule, ButtonModule, TextBoxModule]\n})\n\nexport class AppComponent {\n    @ViewChild('gauge')\n    public gauge: LinearGauge;\n    public allowPrint: boolean = true;\n    public allowPdfExport: boolean = true;\n    public allowImageExport: boolean = true;\n    public exportType: DropDownList;\n    public downloadFileName: string = 'Linear Gauge';\n\n    public titleStyle: Object = {\n        fontFamily: 'inherit'\n    }\n\n    public axes: Object[] = [{\n        minimum: 0,\n        maximum: 120,\n        line:\n        {\n            width: 0\n        },\n        majorTicks: {\n            height: 0,\n            width: 0,\n            interval: 20\n        },\n        minorTicks: {\n            height: 7,\n            width: 0,\n            interval: 4\n        },\n        labelStyle: {\n            position: \"Outside\",\n            font: {\n                fontFamily: 'inherit'\n            },\n            offset: 4\n        },\n        ranges: [{\n            start: 0,\n            end: 20,\n            startWidth: 15,\n            endWidth: 25,\n            color: '#82b944'\n        },\n        {\n            start: 20,\n            end: 40,\n            startWidth: 25,\n            endWidth: 35,\n            color: '#a1cb43'\n        },\n        {\n            start: 40,\n            end: 60,\n            startWidth: 35,\n            endWidth: 45,\n            color: '#ddec12'\n        },\n        {\n            start: 60,\n            end: 80,\n            startWidth: 45,\n            endWidth: 55,\n            color: '#ffbc00'\n        },\n        {\n            start: 80,\n            end: 100,\n            startWidth: 55,\n            endWidth: 65,\n            color: '#ff6000'\n        },\n        {\n            start: 100,\n            end: 120,\n            startWidth: 65,\n            endWidth: 75,\n            color: 'red'\n        },\n        ],\n        pointers: [{\n            value: 80,\n            height: 23,\n            width: 35,\n            offset: -55,\n            markerType: 'Triangle',\n            border:\n            {\n                width: 2,\n                color: 'white'\n            }\n        }],\n    }];\n\n    public load(args: ILoadedEventArgs): void {\n        // custom code start\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.gauge.theme = <LinearGaugeTheme>(selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n        // custom code end\n    }\n\n    public onClickPrint(e: Event): void {\n        this.gauge.print();\n    };\n\n    public onClickExport(e: Event): void {\n        this.gauge.export(<ExportType>this.exportType.value, this.downloadFileName);\n    }\n    public change(target: any): void {\n        this.downloadFileName = target.value;\n    }\n\n    ngOnInit(): void {\n        this.exportType = new DropDownList({\n            index: 0,\n            width: '90%',\n        });\n        this.exportType.appendTo('#exporttype');\n    }\n\n    constructor() {\n        // code\n    };\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<main>\n    <div class=\"control-section\">\n        <div class=\"col-lg-8\">\n            <ejs-lineargauge (load)='load($event)' id='gauge' #gauge='' title='Speedometer' [titleStyle]='titleStyle'  [allowPrint]='allowPrint' [allowPdfExport]='allowPdfExport' [allowImageExport]='allowImageExport' style='display:block;' orientation='Horizontal'\n                [axes]='axes'>\n            </ejs-lineargauge>\n        </div>\n        <div class=\"col-lg-4 property-section\">\n            <div class=\"property-panel-section\">\n                <div class=\"property-panel-header\">Properties</div>\n                <div class=\"property-panel-content\">\n                    <table title=\"Properties\" style=\"width: 100%\" role=\"none\">\n                        <colgroup>\n                            <col span=\"1\" style=\"width: 50%;\">\n                            <col span=\"1\" style=\"width: 50%;\">\n                        </colgroup>\n                            <tr style=\"height: 50px;\">\n                                <td>\n                                    <div>Export Type</div>\n                                </td>\n                                <td>\n                                    <div>\n                                        <select name=\"selectIndex\" autocomplete=\"off\" id=\"exporttype\" style=\"width: 90%\">\n                                            <option value=\"JPEG\">JPEG</option>\n                                            <option value=\"PNG\">PNG</option>\n                                            <option value=\"SVG\">SVG</option>\n                                            <option value=\"PDF\">PDF</option>\n                                        </select>\n                                    </div>\n                                </td>\n                            </tr>\n                            </table>\n                            <table title=\"Properties\" style=\"width: 100%\" role=\"none\">\n                                <colgroup>\n                                    <col span=\"1\" style=\"width: 50%;\">\n                                    <col span=\"1\" style=\"width: 50%;\">\n                                </colgroup>\n                            <tr style=\"height: 50px;\">\n                                <td>\n                                    <div>File Name</div>\n                                </td>\n                                <td>\n                                    <div style='margin-top: 0px; width: 90%'>\n                                        <ejs-textbox\n                                        id=\"fileName\"\n                                        value=\"Linear Gauge\"\n                                        style=\"width: 90%\" \n                                        (change)=\"change($event)\"\n                                        ></ejs-textbox>\n                                    </div>\n                                </td>\n                            </tr>\n                            </table>\n                            \n                            <table title=\"Properties\" style=\"width: 85%\" role=\"none\">\n                                <colgroup>\n                                    <col span=\"1\" style=\"width: 50%;\">\n                                    <col span=\"1\" style=\"width: 50%;\">\n                                </colgroup>\n                            <tr id=\"button-control\" style=\"height: 70px\" align='center'>\n                                <td style=\"width: 50%\">\n                                    <div style=\"text-align: center;margin-left: 30%;\">\n                                        <button ejs-button isPrimary=true\n                                            (click)='onClickExport($event)' style=\"text-transform: capitalize;\"\n                                            id=\"export\">Export</button>\n                                    </div>\n                                </td>\n                                <td style=\"width: 50%\">\n                                    <div style=\"text-align: center;margin-left: 20%;\">\n                                        <button ejs-button isPrimary=true\n                                            (click)='onClickPrint($event)' style=\"text-transform: capitalize;\"\n                                            id=\"print\">Print</button>\n                                    </div>\n                                </td>\n                            </tr>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n    <section id=\"action-description\" aria-label=\"Description of Linear Gauge sample\">\n        <p>\n            This sample demonstrates the print and export functionalities of the linear gauge.\n        </p>\n    </section>\n    <section id=\"description\" aria-label=\"Description of the Linear Gauge features demonstrated in this sample\">\n        <p>\n            In this example, you can see how to print and export the rendered linear gauge. You can add print functionality by using the <a target=\"_blank\" href=\"https://ej2.syncfusion.com/angular/documentation/api/linear-gauge/#print\">print</a> method when <a target=\"_blank\" href=\"https://ej2.syncfusion.com/angular/documentation/api/linear-gauge/#allowprint\">allowPrint</a> is set as <b>true</b>. Also, you can add export functionality by using the <a target=\"_blank\" href=\"https://ej2.syncfusion.com/angular/documentation/api/linear-gauge/#export\">export</a> method when <a target=\"_blank\" href=\"https://ej2.syncfusion.com/angular/documentation/api/linear-gauge/#allowimageexport\">allowImageExport</a> and <a target=\"_blank\" href=\"https://ej2.syncfusion.com/angular/documentation/api/linear-gauge/#allowpdfexport\">allowPdfExport</a> are set as <b>true</b>. The linear gauge can be exported to JPEG, PNG, SVG, and PDF formats.\n        </p>\n        <p>\n            More information about print and export can be found in this <a target=\"_blank\" href=\"https://ej2.syncfusion.com/angular/documentation/linear-gauge/print-and-export/\">documentation section</a>.\n        </p>\n    </section>\n    <!-- custom code start -->\n    <style>\n        .control-section {\n            min-height: 450px;\n        }\n    \n        #button-control {\n            width: 100%;\n            text-align: center;\n            text-transform: none !important;\n        }\n    \n        .e-play-icon::before {\n            content: '\\e728';\n        }\n    \n        .e-play-icon1::before {\n            content: '\\e813';\n        }\n    \n        .e-view.fluent .e-play-icon::before, .e-view.fluent-dark .e-play-icon::before  {\n            content: '\\e72e';\n        }\n    \n        .e-view.fluent .e-play-icon1::before, .e-view.fluent-dark .e-play-icon1::before  {\n            content: '\\e75d';\n        }\n    \n        .e-view.fabric .e-play-icon1::before, .e-view.fabric-dark .e-play-icon1::before  {\n            content: '\\e7df';\n        }\n    \n        .e-view.fabric .e-play-icon::before, .e-view.fabric-dark .e-play-icon::before {\n            content: '\\e710';\n        }\n    \n        .e-view.bootstrap .e-play-icon1::before, .e-view.bootstrap-dark .e-play-icon1::before {\n            content: '\\e34b';\n        }\n    \n        .e-view.bootstrap4 .e-play-icon::before {\n            content: '\\e780';\n        }\n    \n        .e-view.bootstrap4 .e-play-icon1::before {\n            content: '\\e743';\n        }\n    \n        .e-view.highcontrast .e-play-icon1::before {\n            content: '\\ebf9';\n        }\n    \n        .e-view.highcontrast .e-play-icon::before {\n            content: '\\e710';\n        }\n    \n        .e-view.bootstrap5 .e-play-icon1::before, .e-view.bootstrap5-dark .e-play-icon1::before {\n            content: '\\e75d';\n        }\n    \n        .e-view.bootstrap5 .e-play-icon::before, .e-view.bootstrap5-dark .e-play-icon::before {\n            content: '\\e72e';\n        }\n    </style>\n    <!-- custom code end -->\n</main>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-pdf-export\":\"*\",\"@syncfusion/ej2-svg-base\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-lineargauge\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-lineargauge\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}