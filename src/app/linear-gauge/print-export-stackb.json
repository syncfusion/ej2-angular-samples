{"main.ts":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","polyfills.ts":"/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/**\n * IE11 requires the following for NgClass support on SVG elements\n */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n  <link href=\"../../styles/material.css\" rel=\"stylesheet\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n</head>\n<body class=\"ej2-new\"> \n\n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WLQL39J\"height=\"0\"width=\"0\"style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app.component.ts":"/**\n * Sample for print and export in the Linear Gauge\n */\nimport { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { ILoadedEventArgs, LinearGaugeTheme, LinearGauge, ExportType } from '@syncfusion/ej2-lineargauge';\nimport { PrintService, PdfExportService, ImageExportService } from '@syncfusion/ej2-angular-lineargauge';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    providers: [PrintService, PdfExportService, ImageExportService]\n})\n\nexport class AppComponent {\n    @ViewChild('gauge')\n    public gauge: LinearGauge;\n    public allowPrint: boolean = true;\n    public allowPdfExport: boolean = true;\n    public allowImageExport: boolean = true;\n    public exportType: DropDownList;\n\n    public titleStyle: Object = {\n        fontFamily: 'inherit'\n    }\n\n    public axes: Object[] = [{\n        minimum: 0,\n        maximum: 120,\n        line:\n        {\n            width: 0\n        },\n        majorTicks: {\n            height: 0,\n            width: 0,\n            interval: 20\n        },\n        minorTicks: {\n            height: 7,\n            width: 0,\n            interval: 4\n        },\n        labelStyle: {\n            position: \"Outside\",\n            font: {\n                fontFamily: 'inherit'\n            },\n            offset: 4\n        },\n        ranges: [{\n            start: 0,\n            end: 20,\n            startWidth: 15,\n            endWidth: 25,\n            color: '#82b944'\n        },\n        {\n            start: 20,\n            end: 40,\n            startWidth: 25,\n            endWidth: 35,\n            color: '#a1cb43'\n        },\n        {\n            start: 40,\n            end: 60,\n            startWidth: 35,\n            endWidth: 45,\n            color: '#ddec12'\n        },\n        {\n            start: 60,\n            end: 80,\n            startWidth: 45,\n            endWidth: 55,\n            color: '#ffbc00'\n        },\n        {\n            start: 80,\n            end: 100,\n            startWidth: 55,\n            endWidth: 65,\n            color: '#ff6000'\n        },\n        {\n            start: 100,\n            end: 120,\n            startWidth: 65,\n            endWidth: 75,\n            color: 'red'\n        },\n        ],\n        pointers: [{\n            value: 80,\n            height: 23,\n            width: 35,\n            offset: -55,\n            markerType: 'Triangle',\n            border:\n            {\n                width: 2,\n                color: 'white'\n            }\n        }],\n    }];\n\n    public load(args: ILoadedEventArgs): void {\n        // custom code start\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.gauge.theme = <LinearGaugeTheme>(selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');\n        // custom code end\n    }\n\n    public onClickPrint(e: Event): void {\n        this.gauge.print();\n    };\n\n    public onClickExport(e: Event): void {\n        let fileName: string = (<HTMLInputElement>(document.getElementById('fileName'))).value;\n        this.gauge.export(<ExportType>this.exportType.value, fileName);\n    }\n\n    ngOnInit(): void {\n        this.exportType = new DropDownList({\n            index: 0,\n            width: '90%',\n        });\n        this.exportType.appendTo('#exporttype');\n    }\n\n    constructor() {\n        // code\n    };\n}","app/app.module.ts":"import { ButtonModule, CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\n\nimport { LinearGaugeAllModule } from '@syncfusion/ej2-angular-lineargauge';\n\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from '../app.component';\n\n@NgModule({ declarations: [ AppComponent ], imports: [ LinearGaugeAllModule, ButtonModule, CheckBoxModule, BrowserModule], providers: [], bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","app.component.html":"<div class=\"control-section\">\n    <div class=\"col-lg-8\">\n        <ejs-lineargauge (load)='load($event)' id='gauge' #gauge='' background='transparent' title='Speedometer' [titleStyle]='titleStyle'  [allowPrint]='allowPrint' [allowPdfExport]='allowPdfExport' [allowImageExport]='allowImageExport' style='display:block;' orientation='Horizontal'\n            [axes]='axes'>\n        </ejs-lineargauge>\n    </div>\n    <div class=\"col-lg-4 property-section\">\n        <div class=\"property-panel-section\">\n            <div class=\"property-panel-header\">Properties</div>\n            <div class=\"property-panel-content\">\n                <table id=\"property\" title=\"Properties\" style=\"width: 100%\">\n                    <colgroup>\n                        <col span=\"1\" style=\"width: 50%;\">\n                        <col span=\"1\" style=\"width: 50%;\">\n                    </colgroup>\n                        <tr style=\"height: 50px;\">\n                            <td>\n                                <div>Export Type</div>\n                            </td>\n                            <td>\n                                <div>\n                                    <select name=\"selectIndex\" autocomplete=\"off\" id=\"exporttype\" style=\"width: 90%\">\n                                        <option value=\"JPEG\">JPEG</option>\n                                        <option value=\"PNG\">PNG</option>\n                                        <option value=\"SVG\">SVG</option>\n                                        <option value=\"PDF\">PDF</option>\n                                    </select>\n                                </div>\n                            </td>\n                        </tr>\n                        </table>\n                        <table id=\"property\" title=\"Properties\" style=\"width: 100%\">\n                            <colgroup>\n                                <col span=\"1\" style=\"width: 50%;\">\n                                <col span=\"1\" style=\"width: 50%;\">\n                            </colgroup>\n                        <tr style=\"height: 50px;\">\n                            <td>\n                                <div>File Name</div>\n                            </td>\n                            <td>\n                                <div class=\"e-float-input\" style='margin-top: 0px;'>\n                                    <input type=\"text\" value=\"Linear Gauge\" id=\"fileName\" style=\"width: 90%;\">\n                                </div>\n                            </td>\n                        </tr>\n                        </table>\n                        \n                        <table id=\"property\" title=\"Properties\" style=\"width: 85%\">\n                            <colgroup>\n                                <col span=\"1\" style=\"width: 50%;\">\n                                <col span=\"1\" style=\"width: 50%;\">\n                            </colgroup>\n                        <tr id=\"button-control\" style=\"height: 70px\" align='center'>\n                            <td style=\"width: 50%\">\n                                <div style=\"text-align: center;margin-left: 30%;\">\n                                    <button ejs-button isPrimary=true\n                                        (click)='onClickExport($event)' style=\"text-transform: capitalize;\"\n                                        id=\"export\">Export</button>\n                                </div>\n                            </td>\n                            <td style=\"width: 50%\">\n                                <div style=\"text-align: center;margin-left: 20%;\">\n                                    <button ejs-button isPrimary=true\n                                        (click)='onClickPrint($event)' style=\"text-transform: capitalize;\"\n                                        id=\"print\">Print</button>\n                                </div>\n                            </td>\n                        </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- custom code start -->\n<style>\n    .control-section {\n        min-height: 450px;\n    }\n\n    #button-control {\n        width: 100%;\n        text-align: center;\n        text-transform: none !important;\n    }\n\n    .e-play-icon::before {\n        content: '\\e728';\n    }\n\n    .e-play-icon1::before {\n        content: '\\e813';\n    }\n\n    .e-view.fluent .e-play-icon::before, .e-view.fluent-dark .e-play-icon::before  {\n        content: '\\e72e';\n    }\n\n    .e-view.fluent .e-play-icon1::before, .e-view.fluent-dark .e-play-icon1::before  {\n        content: '\\e75d';\n    }\n\n    .e-view.fabric .e-play-icon1::before, .e-view.fabric-dark .e-play-icon1::before  {\n        content: '\\e7df';\n    }\n\n    .e-view.fabric .e-play-icon::before, .e-view.fabric-dark .e-play-icon::before {\n        content: '\\e710';\n    }\n\n    .e-view.bootstrap .e-play-icon1::before, .e-view.bootstrap-dark .e-play-icon1::before {\n        content: '\\e34b';\n    }\n\n    .e-view.bootstrap4 .e-play-icon::before {\n        content: '\\e780';\n    }\n\n    .e-view.bootstrap4 .e-play-icon1::before {\n        content: '\\e743';\n    }\n\n    .e-view.tailwind .e-play-icon1::before, .e-view.tailwind-dark .e-play-icon1::before {\n        content: '\\e76c';\n    }\n\n    .e-view.tailwind .e-play-icon::before, .e-view.tailwind-dark .e-play-icon::before {\n        content: '\\e7bf';\n    }\n\n    .e-view.highcontrast .e-play-icon1::before {\n        content: '\\ebf9';\n    }\n\n    .e-view.highcontrast .e-play-icon::before {\n        content: '\\e710';\n    }\n\n    .e-view.bootstrap5 .e-play-icon1::before, .e-view.bootstrap5-dark .e-play-icon1::before {\n        content: '\\e75d';\n    }\n\n    .e-view.bootstrap5 .e-play-icon::before, .e-view.bootstrap5-dark .e-play-icon::before {\n        content: '\\e72e';\n    }\n</style>\n<!-- custom code end -->","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-lineargauge\":\"*\",\"@syncfusion/ej2-angular-lineargauge\":\"*\",\"@syncfusion/ej2-pdf-export\":\"*\",\"@syncfusion/ej2-svg-base\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\"}"}