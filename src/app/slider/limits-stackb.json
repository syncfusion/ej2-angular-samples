{"dependencies.json":"{\"@syncfusion/ej2-base\": \"*\", \"@syncfusion/ej2-buttons\": \"*\", \"@syncfusion/ej2-splitbuttons\": \"*\", \"@syncfusion/ej2-calendars\": \"*\", \"@syncfusion/ej2-charts\": \"*\", \"@syncfusion/ej2-diagrams\": \"*\", \"@syncfusion/ej2-maps\": \"*\", \"@syncfusion/ej2-treemap\": \"*\", \"@syncfusion/ej2-circulargauge\": \"*\", \"@syncfusion/ej2-data\": \"*\", \"@syncfusion/ej2-dropdowns\": \"*\", \"@syncfusion/ej2-grids\": \"*\", \"@syncfusion/ej2-inputs\": \"*\", \"@syncfusion/ej2-lists\": \"*\", \"@syncfusion/ej2-navigations\": \"*\", \"@syncfusion/ej2-popups\": \"*\", \"@syncfusion/ej2-lineargauge\": \"*\", \"@syncfusion/ej2-pdf-export\": \"*\", \"@syncfusion/ej2-compression\": \"*\", \"@syncfusion/ej2-excel-export\": \"*\", \"@syncfusion/ej2-file-utils\": \"*\", \"@syncfusion/ej2-svg-base\": \"*\", \"@syncfusion/ej2-documenteditor\": \"*\", \"@syncfusion/ej2-richtexteditor\": \"*\", \"@syncfusion/ej2-notifications\": \"*\", \"@syncfusion/ej2-heatmap\": \"*\", \"@syncfusion/ej2-pivotview\": \"*\", \"@syncfusion/ej2-schedule\": \"*\", \"@syncfusion/ej2-layouts\": \"*\", \"@syncfusion/ej2-angular-base\": \"*\", \"@syncfusion/ej2-angular-buttons\": \"*\", \"@syncfusion/ej2-angular-splitbuttons\": \"*\", \"@syncfusion/ej2-angular-calendars\": \"*\", \"@syncfusion/ej2-angular-charts\": \"*\", \"@syncfusion/ej2-angular-diagrams\": \"*\", \"@syncfusion/ej2-angular-maps\": \"*\", \"@syncfusion/ej2-angular-treemap\": \"*\", \"@syncfusion/ej2-angular-circulargauge\": \"*\", \"@syncfusion/ej2-angular-dropdowns\": \"*\", \"@syncfusion/ej2-angular-grids\": \"*\", \"@syncfusion/ej2-angular-inputs\": \"*\", \"@syncfusion/ej2-angular-lists\": \"*\", \"@syncfusion/ej2-angular-navigations\": \"*\", \"@syncfusion/ej2-angular-popups\": \"*\", \"@syncfusion/ej2-angular-lineargauge\": \"*\", \"@syncfusion/ej2-angular-documenteditor\": \"*\", \"@syncfusion/ej2-angular-richtexteditor\": \"*\", \"@syncfusion/ej2-angular-notifications\": \"*\", \"@syncfusion/ej2-angular-heatmap\": \"*\", \"@syncfusion/ej2-angular-pivotview\": \"*\", \"@syncfusion/ej2-angular-schedule\": \"*\", \"@syncfusion/ej2-angular-layouts\": \"*\" , \"@angular/http\": \"*\", \"rxjs-compat\":\"*\"}","main.ts":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n","polyfills.ts":"/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol';\n// import 'core-js/es6/object';\n// import 'core-js/es6/function';\n// import 'core-js/es6/parse-int';\n// import 'core-js/es6/parse-float';\n// import 'core-js/es6/number';\n// import 'core-js/es6/math';\n// import 'core-js/es6/string';\n// import 'core-js/es6/date';\n// import 'core-js/es6/array';\n// import 'core-js/es6/regexp';\n// import 'core-js/es6/map';\n// import 'core-js/es6/weak-map';\n// import 'core-js/es6/set';\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect';\n\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\nimport 'core-js/es7/reflect';\n\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n **/\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n */\n\n // (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n // (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n // (window as any).__zone_symbol__BLACK_LISTED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n\n /*\n * in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n * with the following flag, it will bypass `zone.js` patch for IE/Edge\n */\n// (window as any).__Zone_enable_cross_context_check = true;\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n<link href=\"../styles/OpenNew.css\" rel=\"stylesheet\">\n  <link href=\"//cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\" />\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body class=\"ej2-new\"> \n\n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WLQL39J\"height=\"0\"width=\"0\"style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app/app.module.ts":"import { NumericTextBoxModule } from '@syncfusion/ej2-angular-inputs';\n\nimport { CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\n\nimport { SliderModule } from '@syncfusion/ej2-angular-inputs';\n\nimport { DialogModule } from '@syncfusion/ej2-angular-popups';\n\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from '../app.component';\n\n@NgModule({ declarations: [   AppComponent ], imports: [ BrowserModule, DialogModule, SliderModule, BrowserModule, CheckBoxModule, NumericTextBoxModule], providers: [], bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","app.component.html":"<div class=\"col-lg-8 control-section\">\n    <div class='content-wrapper'>\n        <div class='sliderwrap'>\n            <label class=\"labeltext\">MinRange Slider With Limits</label>\n            <ejs-slider id='minrange' #minrange [value]='minValue' [min]='min' [max]='max' [tooltip]='tooltip' [ticks]='ticks' [type]='minType'\n                [limits]='minRangeLimits'></ejs-slider>\n        </div>\n        <div class='sliderwrap'>\n            <label class=\"labeltext\">Range Slider With Limits</label>\n            <ejs-slider id='range' #range [value]='rangeValue' [min]='min' [max]='max' [tooltip]='tooltip' [ticks]='ticks' [type]='rangetype'\n                [limits]='rangeLimits'></ejs-slider>\n        </div>\n    </div>\n</div>\n<div class=\"col-lg-4 property-section property-custom\">\n    <table id=\"property\" title=\"Properties\">\n        <tbody>\n            <tr>\n                <td style=\"width: 50%\">\n                    <div class=\"labeltext\">MinStart</div>\n                </td>\n                <td style=\"width: 50%\">\n                    <ejs-numerictextbox id='minStart' #minStart [value]=\"10\" [min]=\"0\" [max]=\"100\" (change)='minStartChange($event)'></ejs-numerictextbox>\n                </td>\n            </tr>\n            <tr>\n                <td style=\"width: 50%\">\n                    <div class=\"labeltext\">MinEnd</div>\n                </td>\n                <td style=\"width: 50%\">\n                    <ejs-numerictextbox id='minEnd' #minEnd [value]=\"40\" [min]=\"0\" [max]=\"100\" (change)='minEndChange($event)'></ejs-numerictextbox>\n                </td>\n            </tr>\n            <tr>\n                <td style=\"width: 50%\">\n                    <div class=\"labeltext\">MaxStart</div>\n                </td>\n                <td style=\"width: 50%\">\n                    <ejs-numerictextbox id='maxStart' #maxStart [value]=\"60\" [min]=\"0\" [max]=\"100\" (change)='maxStartChange($event)'></ejs-numerictextbox>\n                </td>\n            </tr>\n            <tr>\n                <td style=\"width: 50%\">\n                    <div class=\"labeltext\">MaxEnd</div>\n                </td>\n                <td style=\"width: 50%\">\n                    <ejs-numerictextbox id='maxEnd' #maxEnd [value]=\"90\" [min]=\"0\" [max]=\"100\" (change)='maxEndChange($event)'></ejs-numerictextbox>\n                </td>\n            </tr>\n            <tr>\n                <td style=\"width: 50%\">\n                    <div class=\"labeltext\">Lock First Handle</div>\n                </td>\n                <td style=\"width: 50%\">\n                    <ejs-checkbox #fixedOne (change)=\"fixOne($event)\"></ejs-checkbox>\n                </td>\n            </tr>\n            <tr>\n                <td style=\"width: 50%\">\n                    <div class=\"labeltext\">Lock Second Handle</div>\n                </td>\n                <td style=\"width: 50%\">\n                    <ejs-checkbox #fixedSecond (change)=\"fixSecond($event)\"></ejs-checkbox>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>","app.component.css":".control-section {\n    height: 100%;\n}\n\n.material #property tr#slider-showon {\n    display: none;\n}\n.content-wrapper {\n    width: 52%;\n    margin: 0 auto;\n    min-width: 185px;\n}\n\n.sliderwrap {\n    margin-top: 40px;\n}\n\n.e-bigger .content-wrapper {\n    width: 80%;\n}\n\n.property-custom td {\n    padding: 5px;\n}\n\n.sliderwrap label {\n    padding-bottom: 15px;\n    font-size: 13px;\n    font-weight: 500;\n    margin-top: 15px;\n}\n\n.e-bigger .slidertooltip.sliderwrap {\n    margin-right: 20%;\n}\n\n.property-section {\n    margin: 25px auto;\n}","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { SliderModule, SliderComponent, LimitDataModel, SliderType, TicksDataModel, TooltipDataModel } from '@syncfusion/ej2-angular-inputs';\nimport { SliderTooltipEventArgs, SliderTickEventArgs } from '@syncfusion/ej2-inputs';\nimport { CheckBoxComponent } from '@syncfusion/ej2-angular-buttons';\n/**\n * Limits samples\n */\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css']\n})\nexport class AppComponent {\n    @ViewChild('minrange')\n    public minrangeObj: SliderComponent;\n    @ViewChild('range')\n    public rangeObj: SliderComponent;\n\n    public min: number = 0;\n    public max: number = 100;\n\n    public minValue: number = 25;\n    public rangeValue: number[] = [25, 75];\n\n    public tooltip: TooltipDataModel = {\n        placement: 'Before',\n        isVisible: true\n    };\n    public ticks: TicksDataModel = {\n        placement: 'After',\n        largeStep: 20,\n        smallStep: 5,\n        showSmallTicks: true\n    };\n\n    public minType: SliderType = 'MinRange';\n    public rangetype: SliderType = 'Range';\n\n    public minRangeLimits: LimitDataModel = { enabled: true, minStart: 10, minEnd: 40 };\n    public rangeLimits: LimitDataModel = { enabled: true, minStart: 10, minEnd: 40, maxStart: 60, maxEnd: 90 };\n\n    // Eventlisteners to lock first handle of the both sliders\n    public fixOne(args: any): void {\n        this.minrangeObj.limits.startHandleFixed = args.checked;\n        this.rangeObj.limits.startHandleFixed = args.checked;\n    }\n\n    // Eventlisteners to lock second handle of the both sliders\n    public fixSecond(args: any): void {\n        this.minrangeObj.limits.endHandleFixed = args.checked;\n        this.rangeObj.limits.endHandleFixed = args.checked;\n    }\n\n    // Eventlisteners to change limit values for both sliders\n    public minStartChange(args: any): void {\n        this.minrangeObj.limits.minStart = args.value;\n        this.rangeObj.limits.minStart = args.value;\n    }\n\n    public minEndChange(args: any): void {\n        this.minrangeObj.limits.minEnd = args.value;\n        this.rangeObj.limits.minEnd = args.value;\n    }\n\n    public maxStartChange(args: any): void {\n        this.minrangeObj.limits.maxStart = args.value;\n        this.rangeObj.limits.maxStart = args.value;\n    }\n\n    public maxEndChange(args: any): void {\n        this.minrangeObj.limits.maxEnd = args.value;\n        this.rangeObj.limits.maxEnd = args.value;\n    }\n\n    ngOnInit() {\n        document.getElementById('right-pane').addEventListener('scroll', this.onScroll.bind(this));\n    }\n\n    // Handler used to reposition the tooltip on page scroll\n    onScroll(): void {\n        let slider: any = [this.minrangeObj, this.rangeObj];\n        slider.forEach((slider: any) => {\n            slider.refreshTooltip(slider.tooltipTarget);\n        });\n    }\n}\n"}