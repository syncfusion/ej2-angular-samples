{"main.ts":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","polyfills.ts":"/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n  <link href=\"../../styles/material.css\" rel=\"stylesheet\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n</head>\n<body class=\"ej2-new\"> \n\n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WLQL39J\"height=\"0\"width=\"0\"style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app.component.ts":"import { Component, ViewEncapsulation, Inject, ViewChild } from '@angular/core';\nimport { FileManagerComponent, NavigationPaneService, ToolbarService, DetailsViewService } from '@syncfusion/ej2-angular-filemanager';\n\n/**\n * File Manager API sample\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n\tproviders: [ NavigationPaneService, ToolbarService, DetailsViewService]\n})\n\nexport class AppComponent {\n    constructor() {\n        \n    }\n    @ViewChild('fileObj')\n    public fileObj: FileManagerComponent;\n    public ajaxSettings: object;\n    public toolbarSettings: object;\n    public contextMenuSettings: object;\n    public navigationPaneSettings: object;\n    public disableItems: string[] = ['NewFolder', 'Cut', 'Copy', 'Paste', 'Download', 'Delete', 'Refresh', 'Selection', 'View', 'Details'];\n    public enableItems: string[] = ['NewFolder', 'Cut', 'Copy', 'Paste', 'Download', 'Delete', 'Refresh', 'Selection', 'View', 'Details'];\n    public waterMark: string = 'Select item';\n    public hostUrl: string = 'https://ej2-aspcore-service.azurewebsites.net/';\n    public ngOnInit(): void {\n        this.ajaxSettings = {\n            url: this.hostUrl + 'api/FileManager/FileOperations',\n            getImageUrl: this.hostUrl + 'api/FileManager/GetImage',\n            uploadUrl: this.hostUrl + 'api/FileManager/Upload',\n            downloadUrl: this.hostUrl + 'api/FileManager/Download'\n\n        };\n        this.navigationPaneSettings = {\n             visible: false\n        };\n        this.toolbarSettings = { items: ['NewFolder', 'SortBy', 'Cut', 'Copy', 'Paste', 'Delete', 'Refresh', 'Download', 'Rename', 'Selection', 'View', 'Details',] };\n        this.contextMenuSettings = {\n            layout: ['SortBy', 'View', 'Refresh', '|', 'Paste', '|', 'NewFolder', '|', 'Details', '|', 'SelectAll'],\n            visible: true\n        };\n    }\n\n    toolClick(args: any) {\n        if (args.event.currentTarget.id == 'toolbar') {\n            this.fileObj.toolbarSettings.visible = args.checked;\n        }\n        if (args.event.currentTarget.id == 'multiSelect') {\n            this.fileObj.allowMultiSelection = args.checked;\n        }\n        if (args.event.currentTarget.id == 'fileExtension') {\n            this.fileObj.showFileExtension = args.checked;\n        }\n        if (args.event.currentTarget.id == 'thumbnail') {\n            this.fileObj.showThumbnail = args.checked;\n        }\n    }\n    itemChange(args: any) {\n        var changedItem = args.itemData.value;\n        if (args.element.id == 'enable') {\n            this.fileObj.enableToolbarItems([changedItem]);\n        } else {\n            this.fileObj.disableToolbarItems([changedItem]);\n        }\n    }\n}","app/app.module.ts":"import { DropDownListModule } from '@syncfusion/ej2-angular-dropdowns';\n\nimport { ButtonModule, CheckBoxModule   } from '@syncfusion/ej2-angular-buttons';\n\nimport { ContextMenuModule ,ToolbarModule  } from '@syncfusion/ej2-angular-navigations';\n\nimport { FileManagerAllModule } from '@syncfusion/ej2-angular-filemanager';\n\nimport { DialogModule } from '@syncfusion/ej2-angular-popups';\n\nimport { UploaderModule } from '@syncfusion/ej2-angular-inputs';\n\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from '../app.component';\n\n@NgModule({ declarations: [ AppComponent ], imports: [ FileManagerAllModule, UploaderModule , DialogModule, CheckBoxModule, ButtonModule, DropDownListModule, CommonModule, ContextMenuModule, ToolbarModule, BrowserModule], providers: [], bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","app.component.html":"<div class=\"col-lg-8 control-section dateformat sb-property-border\">\n  <div class=\"content-wrapper\">\n    <div class=\"content\">\n      <div id=\"control_wrapper\">\n        <div class=\"file-manager-container\">\n          <ejs-filemanager id='files' #fileObj [ajaxSettings]='ajaxSettings'\n            [toolbarSettings]=\"toolbarSettings\" \n            [contextMenuSettings]=\"contextMenuSettings\"\n            [navigationPaneSettings]='navigationPaneSettings'>\n          </ejs-filemanager>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>  \n<div class=\"col-lg-4 property-section\">\n  <div class=\"property-panel-header\">Properties </div>\n  <table id=\"filemanager_property \" class=\"property-panel-table file-manager\" title=\"Properties\">\n    <tbody>\n      <tr>\n        <td style=\"width: 50%\">\n          <div id=\"checkboxElement\">Toolbar</div>\n        </td>\n        <td style=\"width: 50%;padding-right: 10px\">\n          <div>\n            <ejs-checkbox id=\"toolbar\" [checked]='true' (change)=\"toolClick($event)\"></ejs-checkbox>\n          </div>\n        </td>\n      </tr>\n      <tr>\n        <td style=\"width: 50%\">\n          <div id=\"checkboxElement\">allowmultiSelection</div>\n        </td>\n        <td style=\"width: 50%;padding-right: 10px\">\n          <div>\n            <ejs-checkbox id=\"multiSelect\" [checked]='true' (change)=\"toolClick($event)\"></ejs-checkbox>\n          </div>\n        </td>\n      </tr>\n      <tr>\n        <td style=\"width: 50%\">\n          <div id=\"checkboxElement\">showFileExtension</div>\n        </td>\n        <td style=\"width: 50%;padding-right: 10px\">\n          <div>\n            <ejs-checkbox id=\"fileExtension\" [checked]='true' (change)=\"toolClick($event)\"></ejs-checkbox>\n          </div>\n        </td>\n      </tr>\n      <tr>\n        <td style=\"width: 50%\">\n          <div id=\"checkboxElement\">showThumbnail</div>\n        </td>\n        <td style=\"width: 50%;padding-right: 10px\">\n          <div>\n            <ejs-checkbox id=\"thumbnail\" [checked]='true' (change)=\"toolClick($event)\"></ejs-checkbox>\n          </div>\n        </td>\n      </tr>\n      <tr>\n        <td style=\"width: 50%\">\n          <div id=\"checkboxElement\">Disable</div>\n        </td>\n        <td style=\"width: 50%;padding-right: 10px\">\n          <div>\n            <ejs-dropdownlist [dataSource]=\"disableItems\" (change)=\"itemChange($event)\" [placeholder]=\"waterMark\"></ejs-dropdownlist>\n          </div>\n        </td>\n      </tr>\n      <tr>\n        <td style=\"width: 50%\">\n          <div id=\"checkboxElement\">Enable</div>\n        </td>\n        <td style=\"width: 50%;padding-right: 10px\">\n          <div>\n            <ejs-dropdownlist [dataSource]=\"enableItems\" (change)=\"itemChange($event)\" [placeholder]=\"waterMark\"></ejs-dropdownlist>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n","app.component.css":".property-panel-table.file-manager {\n    padding-left: 0;\n    padding-top: 0;\n}\n#navPane {\n    padding-top: 5px;\n}\n#tool {\n    padding-top: 5px;\n}\n#navPane_toggle,\n#tool_toggle {\n    width: 100px;\n}\n.file-manager-container {\n    margin: 10px 10px 10px 10px;\n}\n\n#filemanager_property tr{\n    height: 50px;\n}\n\n#checkboxElement {\n    font-size:14px;\n}\n","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-filemanager\":\"*\",\"@syncfusion/ej2-angular-filemanager\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-angular-popups\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\"}"}