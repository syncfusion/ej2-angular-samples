{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"/**\n * AutoComplete Custom Filtering Sample\n */\nimport { Component } from '@angular/core';\nimport Fuse from 'fuse.js';\nimport { EmitType } from '@syncfusion/ej2-base';\nimport { FilteringEventArgs } from '@syncfusion/ej2-dropdowns';\n\nimport { AutoCompleteModule } from '@syncfusion/ej2-angular-dropdowns';\n\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    standalone: true,\n    imports: [ AutoCompleteModule, ]\n})\nexport class AppComponent {\n    // define the JSON of books data\n    public booksData: { [key: string]: Object; }[] = [\n        { BookName: 'Support Vector Machines Succinctly', BookID: 'BOOK1' }, { BookName: 'Scala Succinctly', BookID: 'BOOK2' },\n        { BookName: 'Application Security in .NET Succinctly', BookID: 'BOOK3' },\n        { BookName: 'ASP.NET WebHooks Succinctly', BookID: 'BOOK4' },\n        { BookName: 'Xamarin.Forms Succinctly', BookID: 'BOOK5' }, { BookName: 'Asynchronous Programming Succinctly', BookID: 'BOOK6' },\n        { BookName: 'Java Succinctly Part 2', BookID: 'BOOK7' }, { BookName: 'Java Succinctly Part 1', BookID: 'BOOK8' },\n        { BookName: 'PHP Succinctly', BookID: 'BOOK9' }, { BookName: 'Bing Maps V8 Succinctly', BookID: 'BOOK10' },\n        { BookName: 'WPF Debugging and Performance Succinctly', BookID: 'BOOK11' },\n        { BookName: 'Go Web Development Succinctly', BookID: 'BOOK12' },\n        { BookName: 'Go Succinctly', BookID: 'BOOK13' }, { BookName: 'More UWP Succinctly', BookID: 'BOOK14' },\n        { BookName: 'UWP Succinctly', BookID: 'BOOK15' }, { BookName: 'LINQPad Succinctly', BookID: 'BOOK16' },\n        { BookName: 'MongoDB 3 Succinctly', BookID: 'BOOK17' }, { BookName: 'R Programming Succinctly', BookID: 'BOOK18' },\n        { BookName: 'Azure Cosmos DB and DocumentDB Succinctly', BookID: 'BOOK19' },\n        { BookName: 'Unity Game Development Succinctly', BookID: 'BOOK20' },\n        { BookName: 'Aurelia Succinctly', BookID: 'BOOK21' }, { BookName: 'Microsoft Bot Framework Succinctly', BookID: 'BOOK22' },\n        { BookName: 'ASP.NET Core Succinctly', BookID: 'BOOK23' }, { BookName: 'Twilio with C# Succinctly', BookID: 'BOOK24' },\n        { BookName: 'Angular 2 Succinctly', BookID: 'BOOK25' }, { BookName: 'Visual Studio 2017 Succinctly', BookID: 'BOOK26' },\n        { BookName: 'Camtasia Succinctly', BookID: 'BOOK27' }, { BookName: 'SQL Queries Succinctly', BookID: 'BOOK28' },\n        { BookName: 'Keystone.js Succinctly', BookID: 'BOOK29' }, { BookName: 'Groovy Succinctly', BookID: 'BOOK30' },\n        { BookName: 'SQL Server for C# Developers Succinctly', BookID: 'BOOK31' },\n        { BookName: 'Ubuntu Server Succinctly', BookID: 'BOOK32' },\n        { BookName: 'Statistics Fundamentals Succinctly', BookID: 'BOOK33' }, { BookName: '.NET Core Succinctly', BookID: 'BOOK34' },\n        { BookName: 'SOLID Principles Succinctly', BookID: 'BOOK35' }, { BookName: 'Node.js Succinctly', BookID: 'BOOK36' },\n        { BookName: 'Customer Success for C# Developers Succinctly', BookID: 'BOOK37' },\n        { BookName: 'Data Capture and Extraction with C# Succinctly', BookID: 'BOOK38' },\n        { BookName: 'Hadoop Succinctly', BookID: 'BOOK39' }, { BookName: 'SciPy Programming Succinctly', BookID: 'BOOK40' },\n        { BookName: 'Hive Succinctly', BookID: 'BOOK41' }, { BookName: 'React.js Succinctly', BookID: 'BOOK42' },\n        { BookName: 'ECMAScript 6 Succinctly', BookID: 'BOOK43' }, { BookName: 'GitHub Succinctly', BookID: 'BOOK44' },\n        { BookName: 'Gulp Succinctly', BookID: 'BOOK45' }, { BookName: 'Visual Studio Code Succinctly', BookID: 'BOOK46' },\n        { BookName: 'Object-Oriented Programming in C# Succinctly', BookID: 'BOOK47' },\n        { BookName: 'C# Code Contracts Succinctly', BookID: 'BOOK48' },\n        { BookName: 'Leaflet.js Succinctly', BookID: 'BOOK49' }, { BookName: 'Delphi Succinctly', BookID: 'BOOK50' },\n        { BookName: 'SQL on Azure Succinctly', BookID: 'BOOK51' }, { BookName: 'Web Servers Succinctly', BookID: 'BOOK52' },\n        { BookName: 'ASP.NET Multitenant Applications Succinctly', BookID: 'BOOK53' },\n        { BookName: 'ASP.NET MVC Succinctly', BookID: 'BOOK54' },\n        { BookName: 'Windows Azure Websites Succinctly', BookID: 'BOOK55' },\n        { BookName: 'Localization for .NET Succinctly', BookID: 'BOOK56' },\n        { BookName: 'ASP.NET Web API Succinctly', BookID: 'BOOK57' },\n        { BookName: 'ASP.NET MVC 4 Mobile Websites Succinctly', BookID: 'BOOK58' },\n        { BookName: 'jQuery Succinctly', BookID: 'BOOK59' }, { BookName: 'JavaScript Succinctly', BookID: 'BOOK60' },\n    ];\n    // maps the appropriate column to fields property\n    public fields: Object = { value: 'BookName' };\n    // set placeholder to AutoComplete input element\n    public watermark: string = 'e.g. Node.js Succinctly';\n    //Bind the filter event\n    public onFiltering: EmitType<FilteringEventArgs> = (e: FilteringEventArgs) => {\n        let options: Object = {\n            keys: ['BookName'],\n            includeMatches: true,\n            findAllMatches: true\n        };\n        // create object from Fuse constructor\n        let fuse: Fuse<any> = new Fuse(this.booksData, options);\n        // store the search result data based on typed characters\n        let result: any = fuse.search(e.text);\n        let data: { [key: string]: Object; }[] = [];\n        for (let i: number = 0; i < result.length; i++) {\n            data.push(result[i].item as any);\n        }\n        // pass the filter data source to updateData method.\n        e.updateData(data, null);\n        let popupElement: HTMLElement = document.getElementById('books_popup');\n        if (popupElement)\n        {\n            let lists: Element[] = <NodeListOf<Element> & Element[]>popupElement.querySelectorAll('.e-list-item');\n            // For highlight the typed characters, pass the result data and list items to highlightSearch method.\n            this.highlightSearch(lists, result);\n        }\n    }\n\n    public highlightSearch(listItems: Element[], result: any): void {\n        if (result.length > 0) {\n            for (let i: number = 0; i < listItems.length; i++) {\n                let innerHTML: string = listItems[i].innerHTML;\n                for (let j: number = result[i].matches[0].indices.length - 1; j >= 0; j--) {\n                    let indexes: number[] = <number[]>result[i].matches[0].indices[j];\n                    innerHTML = innerHTML.substring(0, indexes[0]) + '<span class=\"e-highlight\">' +\n                        innerHTML.substring(indexes[0], (indexes[1] + 1)) + '</span>' + innerHTML.substring(indexes[1] + 1);\n                    listItems[i].innerHTML = innerHTML;\n                }\n            }\n        }\n    }\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n\n<div class=\"control-section\">\n    <div id='content' style=\"margin: 0px auto; width:300px; padding-top: 40px;\">\n        <ejs-autocomplete id='books' [dataSource]='booksData' [fields]='fields' (filtering)='onFiltering($event)' [placeholder]='watermark'>\n        </ejs-autocomplete>\n    </div>\n</div>\n","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}