{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { DropDownList, ChangeEventArgs } from '@syncfusion/ej2-dropdowns';\nimport { DataMatrixGenerator, DisplayTextModel, DataMatrixGeneratorModule } from '@syncfusion/ej2-angular-barcode-generator';\nimport { TextBoxComponent, TextBoxModule, NumericTextBoxModule, ColorPickerModule } from '@syncfusion/ej2-angular-inputs';\nimport { ChangeEventArgs as NumericChangeEventArgs, FormValidator, FormValidatorModel } from '@syncfusion/ej2-inputs';\nimport { ValidateEvent } from '@syncfusion/ej2-barcode-generator';\nimport { CheckBoxChangeEventArgs } from '@syncfusion/ej2-grids';\nimport { ColorPickerEventArgs } from '@syncfusion/ej2-inputs';\nimport { TextPosition, Alignment } from '@syncfusion/ej2-barcode-generator/src/barcode/enum/enum';\nimport {  DataMatrixEncoding } from '@syncfusion/ej2-barcode-generator/src/barcode/enum/enum';\nimport { TextBox, NumericTextBox, ChangedEventArgs } from '@syncfusion/ej2-inputs';\n\nimport { DropDownListModule } from '@syncfusion/ej2-angular-dropdowns';\nimport { CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ DataMatrixGeneratorModule, TextBoxModule, NumericTextBoxModule, CheckBoxModule, ColorPickerModule, DropDownListModule, ]\n})\nexport class AppComponent {\n  @ViewChild('barcode')\n  public barcode: DataMatrixGenerator;\n  @ViewChild('displayText')\n  public displayText: TextBoxComponent\n  \npublic canShowError: boolean = false;\npublic customfn(): any {\n  let customFn: (args: { [key: string]: string }) => boolean = (args: { [key: string]: string }) => {\n    if (this.canShowError) {\n        return false;\n    }\n    return true;\n};\nreturn customFn\n}\n\npublic options(): any {\n  let custom = this.customfn()\n  let options: FormValidatorModel = {\n    rules: {\n      'password': { minLength: [custom, 'Invalid input'] }\n    },\n    keyup(): void {\n      if (this.canShowError) {\n        this.canShowError = false;\n      }\n    },\n    focusout(args: any): void {\n      this.displayText.value = this.barcode.value = (document.getElementById('barcodeValue') as HTMLInputElement).value;\n      this.barcode.dataBind();\n    },\n\n\n  };\n  return options\n}\npublic invalidInput(args: ValidateEvent): void {\n  let error: HTMLElement = document.getElementById('errorblog');\n\n  this.canShowError = true;\n  let options = this.options()\n  let formobject =  new FormValidator('#form-element', options);\n  //this.formObject.validate();\n  formobject.validate();\n}\n\n\n  public MatrixSizeValue: { [key: string]: Object }[] = [\n    { value: '0', text: 'Auto' },\n    { value: '1', text: 'Size10x10' },\n    { value: '2', text: 'Size12x12' },\n    { value: '3', text: 'Size14x14' },\n    { value: '4', text: 'Size16x16' },\n    { value: '5', text: 'Size18x18' },\n    { value: '6', text: 'Size20x20' },\n    { value: '7', text: 'Size22x22' },\n    { value: '8', text: 'Size24x24' },\n    { value: '9', text: 'Size26x26' },\n    { value: '10', text: 'Size32x32' },\n    { value: '11', text: 'Size36x36' },\n    { value: '12', text: 'Size40x40' },\n    { value: '13', text: 'Size44x44' },\n    { value: '14', text: 'Size48x48' },\n    { value: '15', text: 'Size52x52' },\n    { value: '16', text: 'Size64x64' },\n\n    { value: '17', text: 'Size72x72' },\n    { value: '18', text: 'Size80x80' },\n    { value: '19', text: 'Size88x88' },\n    { value: '20', text: 'Size96x96' },\n    { value: '21', text: 'Size104x104' },\n    { value: '22', text: 'Size120x120' },\n    { value: '23', text: 'Size132x132' },\n    { value: '24', text: 'Size144x144' },\n    { value: '25', text: 'Size8x18' },\n    { value: '26', text: 'Size8x32' },\n    { value: '27', text: 'Size12x26' },\n    { value: '28', text: 'Size12x36' },\n    { value: '29', text: 'Size16x36' },\n    { value: '30', text: 'Size16x48' },\n  ];\n\n  public PdfDataMatrixEncodingValue: { [key: string]: Object }[] = [\n    { value: 'Auto', text: 'Auto' },\n    { value: 'ASCII', text: 'ASCII' },\n    { value: 'ASCIINumeric', text: 'ASCIINumeric' },\n    { value: 'Base256', text: 'Base256' },\n  ];\n  public barcodevalueOnChange(args) {\n    this.barcode.value = args.value.toString();\n    //this.displayText.value = args.value.toString();\n  }\n\n  public onWidthChange(args: NumericChangeEventArgs) {\n    this.barcode.width = args.value.toString();\n  }\n  public onheightChange(args: NumericChangeEventArgs) {\n    this.barcode.height = args.value.toString();\n  }\n\n  public textVisibilityChange(args: CheckBoxChangeEventArgs) {\n    this.barcode.displayText.visibility = args.checked;\n  }\n\n  public svgModeChange(args: CheckBoxChangeEventArgs) {\n    this.barcode.mode = args.checked ? 'SVG' : 'Canvas';\n  }\n\n  public bgColorChange(args: ColorPickerEventArgs) {\n    this.barcode.backgroundColor = args.currentValue.hex;\n  }\n  public foreColorChange(args: ColorPickerEventArgs) {\n    this.barcode.foreColor = args.currentValue.hex;\n  }\n\n\n  public marginLeftChange(args: NumericChangeEventArgs) {\n    this.barcode.margin.left = args.value;\n  }\n  public MarginRighthChange(args: NumericChangeEventArgs) {\n    this.barcode.margin.right = args.value;\n  }\n  public marginTopChange(args: NumericChangeEventArgs) {\n    this.barcode.margin.top = args.value;\n  }\n  public MarginBottomtChange(args: NumericChangeEventArgs) {\n    this.barcode.margin.bottom = args.value;\n  }\n  public displayTextMethod: DisplayTextModel = {\n    visibility: false\n  };\n  // // public displayTextMethod():DisplayTextModel={\n  // //   this.barcode.displayText.visibility = false\n  // // }\n  // public displayTextMethod: DisplayTextModel = {\n  //   visibility: false\n  // };\n\n\n  public TextmarginTophChange(args: NumericChangeEventArgs) {\n    this.barcode.displayText.margin.top = args.value;\n  }\n  public TextMarginBottomhChange(args: NumericChangeEventArgs) {\n    this.barcode.displayText.margin.bottom = args.value;\n  }\n\n  public textPositionOnChange(args: ChangeEventArgs) {\n    this.barcode.displayText.position = (args.value) as TextPosition;\n  }\n\n  public MatrixSizeonOnChange(args: ChangeEventArgs) {\n    // this.barcode.displayText.alignment = (args.value) as Alignment;\n    this.barcode.size = (Number(args.itemData.value));\n  }\n\n\n  public PdfDataMatrixEncodingOnChange(args: ChangeEventArgs) {\n    this.barcode.encoding = ((args.itemData.value.toString()) as DataMatrixEncoding);\n  }\n\n\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<style>\n    .top {\n        margin-top: 10px;\n    }\n\n    .centercontrol {\n        margin: auto;\n        width: 50%;\n        height: 50%;\n    }\n\n    .center {\n        margin-left: 14px;\n        margin-right: 17px;\n        margin-top: 14px;\n        min-width: 280px;\n        width: auto;\n        border: 2px solid lightgray;\n        min-height: 40%;\n        padding-top: 35px;\n    }\n\n    .row {\n        margin-right: 0px;\n        margin-left: 0px;\n        margin-top: 8px;\n    }\n\n    .col-lg-4-property-section {\n        width: 36%;\n    }\n\n    .sb-child-row {\n        margin-top: 8px;\n    }\n\n    .barcode-panel-left {\n        padding-left: 0px;\n    }\n</style>\n\n<div class=\"col-lg-8\" style=\"width: 64%\">\n    <div class=\"content-wrapper\">\n        <div class='center'>\n            <div class='centercontrol' style=\"width:200px;height:200px\">\n                <ejs-datamatrixgenerator style=\"display: block;\" #barcode id=\"barcode\" [displayText]='displayTextMethod'\n                    width=\"200px\" height=\"200px\" mode=\"SVG\" type=\"DataMatrix\" value=\"Syncfusion\">\n                </ejs-datamatrixgenerator>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"col-lg-4 property-section\" style=\"padding-right: 0px; min-width: 36%;\">\n    <div class=\"property-panel-header\"> Appearance </div>\n    <div id=\"propertypanel\">\n\n        <div class=\"property-section-content\">\n\n            <div class=\"row sb-child-row\">\n                <div class=\"col-xs-2 top barcode-panel-left\">\n                    Value\n                </div>\n                <div class=\"col-xs-10 barcode-panel-left\">\n                    <form id=\"form-element\" class=\"form-horizontal\">\n                        <div id='barcodevaluediv'>\n                            <ejs-textbox #barcodevalue id=\"barcodevalue\" value='Syncfusion'\n                                (change)=\"barcodevalueOnChange($event)\"></ejs-textbox>\n                        </div>\n                    </form>\n                </div>\n            </div>\n            <div class=\"row sb-child-row\">\n                <div>\n                    <div class=\"col-xs-2 top barcode-panel-left\">\n                        Width\n                    </div>\n                    <div class=\"col-xs-4 barcode-panel-left\">\n                        <ejs-numerictextbox id=\"width\" format=\"###.##\" value=\"200\" min=\"150\" max=\"250\" step=\"2\"\n                            (change)='onWidthChange($event)'></ejs-numerictextbox>\n                    </div>\n                </div>\n                <div>\n                    <div class=\"col-xs-2 top barcode-panel-left\">\n                        Height\n                    </div>\n                    <div class=\"col-xs-4 barcode-panel-left\">\n                        <ejs-numerictextbox id=\"height\" format=\"###.##\" value=\"150\" min=\"100\" max=\"200\" step=\"2\"\n                            (change)='onheightChange($event)'></ejs-numerictextbox>\n\n                    </div>\n                </div>\n            </div>\n            <div class=\"row sb-child-row\" style=\"padding-top: 10px;\">\n                <div class=\"col-xs-6 barcode-panel-left\">\n                    <div class=\"col-xs-12 barcode-panel-left\" >\n                        <ejs-checkbox #barcode id=\" textVisibility \" [checked]=\"true\"\n                            (change)=\"textVisibilityChange($event) \"></ejs-checkbox>\n                    <div style=\"display: inline-block;vertical-align: middle;padding-left: 4px;\">Text Visibility</div>\n                </div>\n                </div>\n                <div class=\"col-xs-6 barcode-panel-left\">\n                    <div class=\"col-xs-12 barcode-panel-left\">\n                        <ejs-checkbox #barcode id=\" svgMode \" [checked]=\"true\" (change)=\"svgModeChange($event) \">\n                        </ejs-checkbox>\n                    <div style=\"display:inline-block;vertical-align: middle;padding-left: 4px;\">SVG Mode</div>\n                </div>\n                </div>\n            </div>\n\n            <div class=\"row sb-child-row\">\n                <div style=\"padding-top: 10px\">\n                    <div class=\"col-xs-3 barcode-panel-left\" style=\"padding-top: 5px\">BG Color</div>\n                    <div class=\"col-xs-3 barcode-panel-left\">\n                        <input ejs-colorpicker id='bgColor' type='color' value='#ffffff'\n                            (change)=\"bgColorChange($event) \">\n                    </div>\n                    <div class=\"col-xs-3 barcode-panel-left\" style=\"padding-top: 5px\">Fore Color</div>\n                    <div class=\"col-xs-3 barcode-panel-left\">\n                        <input ejs-colorpicker id='foreColor' type='color' value='#000000'\n                            (change)=\"foreColorChange($event) \">\n                    </div>\n                </div>\n            </div>\n            <div class=\"property-panel-header\">\n                Margin\n            </div>\n            <div class=\"row sb-child-row\">\n                <div class=\"col-xs-2 top barcode-panel-left\">Left</div>\n                <div class=\"col-xs-4 barcode-panel-left\">\n                    <ejs-numerictextbox id=\"marginLeft\" format=\"###.##\" value=\"10\" min=\"-10\" max=\"30\" step=\"1\"\n                        (change)='marginLeftChange($event)'></ejs-numerictextbox>\n                </div>\n                <div class=\"col-xs-2 top barcode-panel-left \">Right</div>\n                <div class=\"col-xs-4 barcode-panel-left\">\n                    <ejs-numerictextbox id=\"MarginRight\" format=\"###.##\" value=\"10\" min=\"-10\" max=\"30\" step=\"1\"\n                        (change)='MarginRighthChange($event)'></ejs-numerictextbox>\n                </div>\n            </div>\n            <div class=\"row sb-child-row\">\n                <div class=\"col-xs-2 top barcode-panel-left\">Top</div>\n                <div class=\"col-xs-4 barcode-panel-left\">\n                    <div style=\"padding-bottom: 8px\">\n                        <ejs-numerictextbox id=\"marginTop\" format=\"###.##\" value=\"10\" min=\"-10\" max=\"30\" step=\"1\"\n                            (change)='marginTopChange($event)'></ejs-numerictextbox>\n                    </div>\n                </div>\n                <div class=\"col-xs-2 top barcode-panel-left\">Bottom</div>\n                <div class=\"col-xs-4 barcode-panel-left\">\n                    <ejs-numerictextbox id=\"MarginBottom\" format=\"###.##\" value=\"10\" min=\"-10\" max=\"30\" step=\"1\"\n                        (change)='MarginBottomtChange($event)'></ejs-numerictextbox>\n                </div>\n            </div>\n            <div class=\"row sb-child-row\">\n                <div class=\"col-xs-6 top barcode-panel-left\"> Data Matrix Size</div>\n                <div class=\"col-xs-6 barcode-panel-left\">\n                    <div style=\"padding-bottom: 8px\">\n                        <ejs-dropdownlist #MatrixSize id=\"MatrixSize\" [dataSource]=\"MatrixSizeValue\" value=\"Auto\"\n                            (change)=\"MatrixSizeonOnChange($event)\"></ejs-dropdownlist>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row sb-child-row\">\n                <div class=\"col-xs-6 top barcode-panel-left\">Data Matrix Encoding</div>\n                <div class=\"col-xs-6 barcode-panel-left\">\n                    <div style=\"padding-bottom: 8px\">\n                        <ejs-dropdownlist #PdfDataMatrixEncoding id=\"PdfDataMatrixEncoding\"\n                            [dataSource]=\"PdfDataMatrixEncodingValue\" value=\"Auto\"\n                            (change)=\"PdfDataMatrixEncodingOnChange($event)\"></ejs-dropdownlist>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","app.component.css":".control-fluid {\n    padding: 0px !important;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-barcode-generator\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-barcode-generator\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-compression\":\"*\",\"@syncfusion/ej2-excel-export\":\"*\",\"@syncfusion/ej2-file-utils\":\"*\",\"@syncfusion/ej2-pdf-export\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-barcode-generator/src/barcode/enum/enum\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-angular-splitbuttons\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-angular-lists\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}