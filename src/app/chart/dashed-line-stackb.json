{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","theme-color.ts":"/**\n * Initialize the Theme colors\n */\nimport { EmitType } from \"@syncfusion/ej2-base\";\nimport { IAccPointRenderEventArgs, IAccLoadedEventArgs, AccumulationTheme, IPointRenderEventArgs, ILoadedEventArgs, ChartTheme } from \"@syncfusion/ej2-charts\";\n\n\nexport let themes: string[] = ['bootstrap5', 'bootstrap5dark', 'tailwind', 'tailwinddark', 'material', 'materialdark', 'bootstrap4', 'bootstrap', 'bootstrapdark', 'fabric', 'fabricdark', 'highcontrast', 'fluent', 'fluentdark', 'material3', 'material3dark', 'fluent2', 'fluent2dark', 'fluent2highcontrast'];\nexport let borderColor: string[] = ['#FD7E14', '#FD7E14', '#5A61F6', '#8B5CF6', '#00bdae', '#9ECB08', '#a16ee5', '#a16ee5', '#a16ee5', '#4472c4', '#4472c4', '#79ECE4', '#1AC9E6', '#1AC9E6', '#6355C7', '#4EAAFF', '#6200EE', '#9BB449', '#9BB449'];\nexport let materialColors: string[] = [\"#00bdae\", \"#404041\", \"#357cd2\", \"#e56590\", \"#f8b883\", \"#70ad47\", \"#dd8abd\", \"#7f84e8\", \"#7bb4eb\",\n    \"#ea7a57\", \"#404041\", \"#00bdae\"];\nexport let fabricColors: string[] = [\"#4472c4\", \"#ed7d31\", \"#ffc000\", \"#70ad47\", \"#5b9bd5\",\n    \"#c1c1c1\", \"#6f6fe2\", \"#e269ae\", \"#9e480e\", \"#997300\", \"#4472c4\", \"#70ad47\", \"#ffc000\", \"#ed7d31\"];\nexport let bootstrapColors: string[] = [\"#a16ee5\", \"#f7ce69\", \"#55a5c2\", \"#7ddf1e\", \"#ff6ea6\",\n    \"#7953ac\", \"#b99b4f\", \"#407c92\", \"#5ea716\", \"#b91c52\"];\nexport let bootstrap5Colors: string[] = ['#FD7E14', '#6610F2', '#6F42C1', '#D63384', '#DC3545',\n    '#FFC107', '#198754', '#0DCAF0', '#FD7E14', '#6610F2'];\nexport let highContrastColors: string[] = [\"#79ECE4\", \"#E98272\", \"#DFE6B6\", \"#C6E773\", \"#BA98FF\",\n    \"#FA83C3\", \"#00C27A\", \"#43ACEF\", \"#D681EF\", \"#D8BC6E\"];\nexport let fluentColors: string[] = [\"#1AC9E6\", \"#DA4CB2\", \"#EDBB40\", \"#AF4BCF\", \"#FF7266\", \"#1BD565\", \"#EE993D\", \"#5887FF\", \"#EC548D\",\n    \"#7D39C0\"];\nexport let fluentDarkColors: string[] = [\"#1AC9E6\", \"#DA4CB2\", \"#EDBB40\", \"#AF4BCF\", \"#FF7266\", \"#1BD565\", \"#EE993D\", \"#5887FF\", \"#EC548D\",\n    \"#7D39C0\"];\nexport let fluent2Colors: string[] = [\"#6200EE\", \"#09AF74\", \"#0076E5\", \"#CB3587\", \"#E7910F\", \"#0364DE\", \"#66CD15\", \"#F3A93C\", \"#107C10\",\n    \"#C19C00\"];\nexport let fluent2HighContrastColors: string[] = [\"#9BB449\", \"#2A72D5\", \"#43B786\", \"#3F579A\", \"#584EC6\", \"#E85F9C\", \"#6E7A89\", \"#EA6266\",\n    \"#0B6A0B\", \"#C19C00\"];\nexport let fluent2DarkColors: string[] = [\"#9BB449\", \"#2A72D5\", \"#43B786\", \"#3F579A\", \"#584EC6\", \"#E85F9C\", \"#6E7A89\", \"#EA6266\",\n    \"#0B6A0B\", \"#C19C00\"];\n\nexport let bubbleMaterialColors: string[] = [\"rgba(0, 189, 174, 0.5)\", \"rgba(64, 64, 65, 0.5)\", \"rgba(53, 124, 210, 0.5)\", \"rgba(229, 101, 144, 0.5)\", \"rgba(248, 184, 131, 0.5)\", \"rgba(112, 173, 71, 0.5)\", \"rgba(221, 138, 189, 0.5)\",\n    \"rgba(127, 132, 232, 0.5)\", \"rgba(123, 180, 235, 0.5)\", \"rgba(234, 122, 87, 0.5)\", \"rgba(64, 64, 65, 0.5)\", \"rgba(0, 189, 174, 0.5)\"];\nexport let bubbleFabricColors: string[] = [\"rgba(68, 114, 196, 0.5)\", \"rgba(237, 125, 49, 0.5)\", \"rgba(255, 192, 0, 0.5)\", \"rgba(112, 173, 71, 0.5)\", \"rgba(91, 155, 213, 0.5)\", \"rgba(193, 193, 193, 0.5)\", \"rgba(111, 111, 226, 0.5)\",\n    \"rgba(226, 105, 174, 0.5)\", \"rgba(158, 72, 14, 0.5)\", \"rgba(153, 115, 0, 0.5)\", \"rgba(68, 114, 196, 0.5)\", \"rgba(112, 173, 71, 0.5)\", \"rgba(255, 192, 0, 0.5)\", \"rgba(237, 125, 49, 0.5)\"];\nexport let bubbleBootstrapColors: string[] = [\"rgba(161, 110, 229, 0.5)\", \"rgba(247, 206, 105, 0.5)\", \"rgba(85, 165, 194, 0.5)\", \"rgba(125, 223, 30, 0.5)\", \"rgba(255, 110, 166, 0.5)\", \"rgba(121, 83, 172, 0.5)\",\n    \"rgba(185, 155, 79, 0.5)\", \"rgba(64, 124, 146, 0.5)\", \"rgba(94, 167, 22, 0.5)\", \"rgba(185, 28, 82, 0.5)\"];\nexport let bubbleHighContrastColors: string[] = [\"rgba(121, 236, 228, 0.5)\", \"rgba(233, 130, 114, 0.5)\", \"rgba(223, 230, 182, 0.5)\", \"rgba(198, 231, 115, 0.5)\", \"rgba(186, 152, 255, 0.5)\", \"rgba(250, 131, 195, 0.5)\", \"rgba(0, 194, 122, 0.5)\",\n    \"rgba(67, 172, 239, 0.5)\", \"rgba(214, 129, 239, 0.5)\", \"rgba(216, 188, 110, 0.5)\"];\nexport let bubbleFluentColors: string[] = [\"rgba(26, 201, 230, 0.5)\", \"rgba(218, 76, 178, 0.5)\", \"rgba(237, 187, 64, 0.5)\", \"rgba(175, 75, 207, 0.5)\", \"rgba(255, 114, 102, 0.5)\", \"rgba(27, 213, 101, 0.5)\", \"rgba(238, 153, 61, 0.5)\",\n    \"rgba(88, 135, 255, 0.5)\", \"rgba(236, 84, 141, 0.5)\", \"rgba(125, 57, 192, 0.5)\"];\nexport let bubbleMaterialDarkColors: string[] = [\"rgba(158, 203, 8, 0.5)\", \"rgba(86, 174, 255, 0.5)\", \"rgba(197, 122, 255, 0.5)\", \"rgba(97, 234, 169, 0.5)\", \"rgba(235, 187, 62, 0.5)\", \"rgba(244, 92, 92, 0.5)\", \"rgba(138, 119, 255, 0.5)\",\n    \"rgba(99, 199, 255, 0.5)\", \"rgba(255, 132, 176, 0.5)\", \"rgba(247, 201, 40, 0.5)\"];\nexport let bubbleFluentDarkColors: string[] = [\"rgba(26, 201, 230, 0.5)\", \"rgba(218, 76, 178, 0.5)\", \"rgba(237, 187, 64, 0.5)\", \"rgba(175, 75, 207, 0.5)\", \"rgba(255, 114, 102, 0.5)\", \"rgba(27, 213, 101, 0.5)\", \"rgba(238, 153, 61, 0.5)\",\n    \"rgba(88, 135, 255, 0.5)\", \"rgba(236, 84, 141, 0.5)\", \"rgba(125, 57, 192, 0.5)\"];\nexport let bubbleTailwindColors: string[] = [\"rgba(90, 97, 246, 0.5)\", \"rgba(101, 163, 13, 0.5)\", \"rgba(51, 65, 85, 0.5)\", \"rgba(20, 184, 166, 0.5)\", \"rgba(139, 92, 246, 0.5)\", \"rgba(3, 105, 161, 0.5)\", \"rgba(249, 115, 22, 0.5)\",\n    \"rgba(147, 51, 234, 0.5)\", \"rgba(245, 158, 11, 0.5)\", \"rgba(21, 128, 61, 0.5)\"];\nexport let bubbleTailwindDarkColors: string[] = [\"rgba(139, 92, 246, 0.5)\", \"rgba(34, 211, 238, 0.5)\", \"rgba(248, 113, 113, 0.5)\", \"rgba(74, 222, 128, 0.5)\", \"rgba(232, 121, 249, 0.5)\", \"rgba(252, 211, 77, 0.5)\", \"rgba(249, 115, 22, 0.5)\",\n    \"rgba(45, 212, 191, 0.5)\", \"rgba(244, 114, 182, 0.5)\", \"rgba(16, 185, 129, 0.5)\"];\nexport let bubbleTailwind3Colors: string[] = [\"rgba(47, 64, 116, 0.5)\", \"rgba(3, 180, 180, 0.5)\", \"rgba(13, 114, 222, 0.5)\", \"rgba(255, 87, 51, 0.5)\", \"rgba(214, 51, 132, 0.5)\", \"rgba(243, 156, 18, 0.5)\", \"rgba(239, 41, 31, 0.5)\", \"rgba(145, 200, 34, 0.5)\", \"rgba(47, 64, 116, 0.5)\", \"rgba(3, 180, 180, 0.5)\"];\nexport let bubbleTailwind3DarkColors: string[] = [\"rgba(128, 41, 241, 0.5)\", \"rgba(26, 188, 156, 0.5)\", \"rgba(13, 114, 222, 0.5)\", \"rgba(255, 87, 51, 0.5)\", \"rgba(214, 51, 132, 0.5)\", \"rgba(243, 156, 18, 0.5)\", \"rgba(239, 41, 31, 0.5)\", \"rgba(145, 200, 34, 0.5)\", \"rgba(128, 41, 241, 0.5)\", \"rgba(26, 188, 156, 0.5)\"];\nexport let bubbleBootstrap5Colors: string[] = ['rgba(253, 126, 20, 0.5)', 'rgba(102, 16, 242, 0.5)', 'rgba(111, 66, 193, 0.5)', 'rgba(214, 51, 132, 0.5)', 'rgba(220, 53, 69, 0.5)', 'rgba(255, 193, 7, 0.5)', 'rgba(25, 135, 84, 0.5)', 'rgba(13, 202, 240, 0.5)', 'rgba(253, 126, 20, 0.5)', 'rgba(102, 16, 242, 0.5)', 'rgba(111, 66, 193, 0.5)', 'rgba(214, 51, 132, 0.5)', 'rgba(220, 53, 69, 0.5)'];\nexport let bubbleBootstrap5DarkColors: string[] = ['rgba(253, 126, 20, 0.5)', 'rgba(102, 16, 242, 0.5)', 'rgba(111, 66, 193, 0.5)', 'rgba(214, 51, 132, 0.5)', 'rgba(220, 53, 69, 0.5)', 'rgba(255, 193, 7, 0.5)', 'rgba(25, 135, 84, 0.5)', 'rgba(13, 202, 240, 0.5)', 'rgba(253, 126, 20, 0.5)', 'rgba(102, 16, 242, 0.5)', 'rgba(111, 66, 193, 0.5)', 'rgba(214, 51, 132, 0.5)', 'rgba(220, 53, 69, 0.5)'];\nexport let bubbleMaterial3Colors: string[] = [\"rgba(99, 85, 199, 0.5)\", \"rgba(0, 174, 224, 0.5)\", \"rgba(255, 180, 0, 0.5)\", \"rgba(247, 82, 63, 0.5)\", \"rgba(150, 60, 112, 0.5)\", \"rgba(253, 116, 0, 0.5)\", \"rgba(75, 224, 188, 0.5)\", \"rgba(33, 150, 245, 0.5)\", \"rgba(222, 61, 138, 0.5)\", \"rgba(22, 47, 136, 0.5)\"];\nexport let bubbleMaterial3DarkColors: string[] = [\"rgba(78, 170, 255, 0.5)\", \"rgba(250, 78, 171, 0.5)\", \"rgba(255, 245, 0, 0.5)\", \"rgba(23, 234, 88, 0.5)\", \"rgba(56, 255, 231, 0.5)\", \"rgba(255, 158, 69, 0.5)\", \"rgba(179, 243, 47, 0.5)\", \"rgba(185, 60, 228, 0.5)\", \"rgba(252, 86, 100, 0.5)\", \"rgba(155, 85, 255, 0.5)\"];\nexport let bubbleFluent2Colors: string[] = [\"rgba(98, 0, 238, 0.5)\", \"rgba(9, 175, 116, 0.5)\", \"rgba(0, 118, 229, 0.5)\", \"rgba(203, 53, 135, 0.5)\", \"rgba(231, 145, 15, 0.5)\", \"rgba(3, 100, 222, 0.5)\", \"rgba(102, 205, 21, 0.5)\", \"rgba(243, 169, 60, 0.5)\",\n    \"rgba(16, 124, 16, 0.5)\", \"rgba(193, 156, 0, 0.5)\"];\nexport let bubbleFluent2HighContrastColors: string[] = [\"rgba(155, 180, 73, 0.5)\", \"rgba(42, 114, 213, 0.5)\", \"rgba(67, 183, 134, 0.5)\", \"rgba(63, 87, 154, 0.5)\", \"rgba(88, 78, 198, 0.5)\", \"rgba(232, 95, 156, 0.5)\", \"rgba(110, 122, 137, 0.5)\", \"rgba(234, 98, 102, 0.5)\",\n    \"rgba(11, 106, 11, 0.5)\", \"rgba(193, 156, 0, 0.5)\"];\nexport let bubbleFluent2DarkColors: string[] = [\"rgba(155, 180, 73, 0.5)\", \"rgba(42, 114, 213, 0.5)\", \"rgba(67, 183, 134, 0.5)\", \"rgba(63, 87, 154, 0.5)\", \"rgba(88, 78, 198, 0.5)\", \"rgba(232, 95, 156, 0.5)\", \"rgba(110, 122, 137, 0.5)\", \"rgba(234, 98, 102, 0.5)\",\n    \"rgba(11, 106, 11, 0.5)\", \"rgba(193, 156, 0, 0.5)\"];\n\n\nexport let pointMaterialColors: string[] = [\"#00bdae\", \"#404041\", \"#357cd2\", \"#e56590\", \"#f8b883\", \"#70ad47\", \"#dd8abd\", \"#7f84e8\", \"#7bb4eb\",\n    \"#ea7a57\", \"#404041\", \"#00bdae\"];\nexport let pointFabricColors: string[] = [\"#4472c4\", \"#ed7d31\", \"#ffc000\", \"#70ad47\", \"#5b9bd5\", \"#c1c1c1\", \"#6f6fe2\", \"#e269ae\", \"#9e480e\",\n    \"#997300\", \"#4472c4\", \"#70ad47\", \"#ffc000\", \"#ed7d31\"];\nexport let pointBootstrapColors: string[] = [\"#a16ee5\", \"#f7ce69\", \"#55a5c2\", \"#7ddf1e\", \"#ff6ea6\", \"#7953ac\", \"#b99b4f\", \"#407c92\", \"#5ea716\",\n    \"#b91c52\"];\nexport let pointHighContrastColors: string[] = [\"#79ECE4\", \"#E98272\", \"#DFE6B6\", \"#C6E773\", \"#BA98FF\", \"#FA83C3\", \"#00C27A\", \"#43ACEF\", \"#D681EF\",\n    \"#D8BC6E\"];\nexport let pointFluentColors: string[] = [\"#1AC9E6\", \"#DA4CB2\", \"#EDBB40\", \"#AF4BCF\", \"#FF7266\", \"#1BD565\", \"#EE993D\", \"#5887FF\", \"#EC548D\",\n    \"#7D39C0\"];\nexport let pointMaterialDarkColors: string[] = [\"#9ECB08\", \"#56AEFF\", \"#C57AFF\", \"#61EAA9\", \"#EBBB3E\", \"#F45C5C\", \"#8A77FF\", \"#63C7FF\", \"#FF84B0\",\n    \"#F7C928\"];\nexport let pointFluentDarkColors: string[] = [\"#1AC9E6\", \"#DA4CB2\", \"#EDBB40\", \"#AF4BCF\", \"#FF7266\", \"#1BD565\", \"#EE993D\", \"#5887FF\", \"#EC548D\",\n    \"#7D39C0\"];\nexport let pointTailwindColors: string[] = [\"rgba(90, 97, 246)\", \"rgba(101, 163, 13)\", \"rgba(51, 65, 85)\", \"rgba(20, 184, 166)\", \"rgba(139, 92, 246)\", \"rgba(3, 105, 161)\", \"rgba(249, 115, 22)\",\n    \"rgba(147, 51, 234)\", \"rgba(245, 158, 11)\", \"rgba(21, 128, 61)\"];\nexport let pointTailwindDarkColors: string[] = [\"#8B5CF6\", \"#22D3EE\", \"#F87171\", \"#4ADE80\", \"#E879F9\", \"#FCD34D\", \"#F97316\", \"#2DD4BF\", \"#F472B6\", \"#10B981\"];\nexport let pointTailwind3Colors: string[] = ['#2F4074', '#03B4B4', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822', '#2F4074', '#03B4B4'];\nexport let pointTailwind3DarkColors: string[] = ['#8029F1', '#1ABC9C', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822', '#8029F1', '#1ABC9C'];\nexport let pointBootstrap5Colors: string[] = ['#FD7E14', '#6610F2', '#6F42C1', '#D63384', '#DC3545', '#FFC107', '#198754', '#0DCAF0', '#FD7E14', '#6610F2',];\nexport let pointBootstrap5DarkColors: string[] = ['#FD7E14', '#6610F2', '#6F42C1', '#D63384', '#DC3545', '#FFC107', '#198754', '#0DCAF0', '#FD7E14', '#6610F2',];\nexport let pointMaterial3Colors: string[] = [\"#6355C7\", \"#00AEE0\", \"#FFB400\", \"#F7523F\", \"#963C70\", \"#FD7400\", \"#4BE0BC\", \"#2196F5\", \"#DE3D8A\", \"#162F88\"];\nexport let pointMaterial3DarkColors: string[] = [\"#4EAAFF\", \"#FA4EAB\", \"#FFF500\", \"#17EA58\", \"#38FFE7\", \"#FF9E45\", \"#B3F32F\", \"#B93CE4\", \"#FC5664\", \"#9B55FF\"];\nexport let pointFluent2Colors: string[] = [\"#6200EE\", \"#09AF74\", \"#0076E5\", \"#CB3587\", \"#E7910F\", \"#0364DE\", \"#66CD15\", \"#F3A93C\", \"#107C10\",\n    \"#C19C00\"];\nexport let pointFluent2HighContrastColors: string[] = [\"#9BB449\", \"#2A72D5\", \"#43B786\", \"#3F579A\", \"#584EC6\", \"#E85F9C\", \"#6E7A89\", \"#EA6266\",\n    \"#0B6A0B\", \"#C19C00\"];\nexport let pointFluent2DarkColors: string[] = [\"#9BB449\", \"#2A72D5\", \"#43B786\", \"#3F579A\", \"#584EC6\", \"#E85F9C\", \"#6E7A89\", \"#EA6266\",\n    \"#0B6A0B\", \"#C19C00\"];\n\nexport let keyFabricDark: string[] = [\"#4472C4\", \"#ED7D31\", \"#FFC000\", \"#70AD47\"];\nexport let keyBootstrap4Colors: string[] = ['#a16ee5', '#f7ce69', '#55a5c2', '#7ddf1e', '#ff6ea6', '#7953ac', '#b99b4f', '#407c92', '#5ea716', '#b91c52'];\nexport let keyBootstrapdarkColors: string[] = [\"#a16ee5\", \"#f7ce69\", \"#55a5c2\", \"#7ddf1e\", \"#ff6ea6\", \"#7953ac\", \"#b99b4f\", \"#407c92\", \"#5ea716\", \"#b91c52\"];\n\nexport let bubblePointRender: EmitType<IPointRenderEventArgs> = (args: IPointRenderEventArgs): void => {\n    let selectedTheme: string = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {\n        args.fill = bubbleFabricColors[args.point.index % 10];\n        args.border.color = pointFabricColors[args.point.index % 10];;\n    } else if (selectedTheme === 'material-dark') {\n        args.fill = bubbleMaterialDarkColors[args.point.index % 10];\n        args.border.color = pointMaterialDarkColors[args.point.index % 10];;\n    } else if (selectedTheme === 'material') {\n        args.fill = bubbleMaterialColors[args.point.index % 10];\n        args.border.color = pointMaterialColors[args.point.index % 10];\n    } else if (selectedTheme === 'bootstrap5-dark') {\n        args.fill = bubbleBootstrap5DarkColors[args.point.index % 10];\n        args.border.color = pointBootstrap5DarkColors[args.point.index % 10];\n    } else if (selectedTheme === 'bootstrap5') {\n        args.fill = bubbleBootstrap5Colors[args.point.index % 10];\n        args.border.color = pointBootstrap5Colors[args.point.index % 10];\n    } else if (selectedTheme === 'bootstrap') {\n        args.fill = bubbleBootstrapColors[args.point.index % 10];\n        args.border.color = pointBootstrapColors[args.point.index % 10];\n    } else if (selectedTheme === 'bootstrap4') {\n        args.fill = bubbleBootstrapColors[args.point.index % 10];\n        args.border.color = pointBootstrapColors[args.point.index % 10];\n    } else if (selectedTheme === 'bootstrap-dark') {\n        args.fill = bubbleBootstrapColors[args.point.index % 10];\n        args.border.color = pointBootstrapColors[args.point.index % 10];\n    } else if (selectedTheme === 'highcontrast') {\n        args.fill = bubbleHighContrastColors[args.point.index % 10];\n        args.border.color = pointHighContrastColors[args.point.index % 10];\n    } else if (selectedTheme === 'fluent-dark') {\n        args.fill = bubbleFluentDarkColors[args.point.index % 10];\n        args.border.color = pointFluentDarkColors[args.point.index % 10];\n    } else if (selectedTheme === 'fluent') {\n        args.fill = bubbleFluentColors[args.point.index % 10];\n        args.border.color = pointFluentColors[args.point.index % 10];\n    } else if (selectedTheme === 'tailwind-dark') {\n        args.fill = bubbleTailwindDarkColors[args.point.index % 10];\n        args.border.color = pointTailwindDarkColors[args.point.index % 10];\n    } else if (selectedTheme === 'tailwind') {\n        args.fill = bubbleTailwindColors[args.point.index % 10];\n        args.border.color = pointTailwindColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'material3') {\n        args.fill = bubbleMaterial3Colors[args.point.index % 10];\n        args.border.color = pointMaterial3Colors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'material3-dark') {\n        args.fill = bubbleMaterial3DarkColors[args.point.index % 10];\n        args.border.color = pointMaterial3DarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'fluent2') {\n        args.fill = bubbleFluent2Colors[args.point.index % 10];\n        args.border.color = pointFluent2Colors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'fluent2-highcontrast') {\n        args.fill = bubbleFluent2HighContrastColors[args.point.index % 10];\n        args.border.color = pointFluent2HighContrastColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'fluent2-dark') {\n        args.fill = bubbleFluent2DarkColors[args.point.index % 10];\n        args.border.color = pointFluent2DarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'tailwind3-dark') {\n        args.fill = bubbleTailwind3DarkColors[args.point.index % 10];\n        args.border.color = pointTailwind3DarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'tailwind3') {\n        args.fill = bubbleTailwind3Colors[args.point.index % 10];\n        args.border.color = pointTailwind3Colors[args.point.index % 10];\n    }\n};\nexport let pointRender: EmitType<IPointRenderEventArgs> = (args: IPointRenderEventArgs): void => {\n    let selectedTheme: string = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {\n        args.fill = pointFabricColors[args.point.index % 10];\n    } else if (selectedTheme === 'material-dark') {\n        args.fill = pointMaterialDarkColors[args.point.index % 10];\n    } else if (selectedTheme === 'material') {\n        args.fill = pointMaterialColors[args.point.index % 10];\n    } else if (selectedTheme === 'bootstrap5-dark') {\n        args.fill = pointBootstrap5DarkColors[args.point.index % 10];\n    } else if (selectedTheme === 'bootstrap5') {\n        args.fill = pointBootstrap5Colors[args.point.index % 10];\n    } else if (selectedTheme === 'bootstrap') {\n        args.fill = pointBootstrapColors[args.point.index % 10];\n    } else if (selectedTheme === 'bootstrap4') {\n        args.fill = pointBootstrapColors[args.point.index % 10];\n    } else if (selectedTheme === 'bootstrap-dark') {\n        args.fill = pointBootstrapColors[args.point.index % 10];\n    } else if (selectedTheme === 'highcontrast') {\n        args.fill = pointHighContrastColors[args.point.index % 10];\n    } else if (selectedTheme === 'fluent-dark') {\n        args.fill = pointFluentDarkColors[args.point.index % 10];\n    } else if (selectedTheme === 'fluent') {\n        args.fill = pointFluentColors[args.point.index % 10];\n    } else if (selectedTheme === 'tailwind-dark') {\n        args.fill = pointTailwindDarkColors[args.point.index % 10];\n    } else if (selectedTheme === 'tailwind') {\n        args.fill = pointTailwindColors[args.point.index % 10];\n    } else if (selectedTheme === 'material3') {\n        args.fill = pointMaterial3Colors[args.point.index % 10];\n    } else if (selectedTheme === 'fluent2') {\n        args.fill = pointFluent2Colors[args.point.index % 10];\n    } else if (selectedTheme === 'fluent2-highcontrast' || selectedTheme === 'fluent2-dark') {\n        args.fill = pointFluent2HighContrastColors[args.point.index % 10];\n    } else if (selectedTheme === 'material3-dark') {\n        args.fill = pointMaterial3DarkColors[args.point.index % 10];\n    } else if (selectedTheme === 'tailwind3-dark') {\n        args.fill = pointTailwind3DarkColors[args.point.index % 10];\n    } else if (selectedTheme === 'tailwind3') {\n        args.fill = pointTailwind3Colors[args.point.index % 10];\n    }\n};\n\nexport let funnelPointRender: EmitType<IPointRenderEventArgs> = (args: IPointRenderEventArgs): void => {\n    let selectedTheme: string = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {\n        args.fill = pointFabricColors[0];\n    } else if (selectedTheme === 'material-dark') {\n        args.fill = pointMaterialDarkColors[0];\n    } else if (selectedTheme === 'material') {\n        args.fill = pointMaterialColors[0];\n    } else if (selectedTheme === 'bootstrap5-dark') {\n        args.fill = pointBootstrap5DarkColors[0];\n    } else if (selectedTheme === 'bootstrap5') {\n        args.fill = pointBootstrap5Colors[0];\n    } else if (selectedTheme === 'bootstrap') {\n        args.fill = pointBootstrapColors[0];\n    } else if (selectedTheme === 'bootstrap4') {\n        args.fill = pointBootstrapColors[0];\n    } else if (selectedTheme === 'bootstrap-dark') {\n        args.fill = pointBootstrapColors[0];\n    } else if (selectedTheme === 'highcontrast') {\n        args.fill = pointHighContrastColors[0];\n    } else if (selectedTheme === 'fluent-dark') {\n        args.fill = pointFluentDarkColors[0];\n    } else if (selectedTheme === 'fluent') {\n        args.fill = pointFluentColors[0];\n    } else if (selectedTheme === 'tailwind-dark') {\n        args.fill = pointTailwindDarkColors[0];\n    } else if (selectedTheme === 'tailwind') {\n        args.fill = pointTailwindColors[0];\n    } else if (selectedTheme === 'material3') {\n        args.fill = pointMaterial3Colors[0];\n    } else if (selectedTheme === 'fluent2') {\n        args.fill = pointFluent2Colors[0];\n    } else if (selectedTheme === 'fluent2-highcontrast' || selectedTheme === 'fluent2-dark') {\n        args.fill = pointFluent2HighContrastColors[0];\n    } else if (selectedTheme === 'material3-dark') {\n        args.fill = pointMaterial3DarkColors[0];\n    } else if (selectedTheme === 'tailwind3-dark') {\n        args.fill = pointTailwind3DarkColors[0];\n    } else if (selectedTheme === 'tailwind3') {\n        args.fill = pointTailwind3Colors[0];\n    }\n};\n\nexport let layoutColor: string;\nexport let accPointRender: EmitType<IAccPointRenderEventArgs> = (args: IAccPointRenderEventArgs): void => {\n    let selectedTheme: string = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (selectedTheme.indexOf('dark') > -1) {\n        if (selectedTheme.indexOf('material') > -1) {\n            args.border.color = '#303030';\n            layoutColor = '#303030';\n        }\n        else if (selectedTheme.indexOf('bootstrap5') > -1) {\n            args.border.color = '#212529';\n            layoutColor = '#212529';\n        }\n        else if (selectedTheme.indexOf('bootstrap') > -1) {\n            args.border.color = '#1A1A1A';\n            layoutColor = '#1A1A1A';\n        }\n        else if (selectedTheme.indexOf('tailwind') > -1) {\n            args.border.color = '#1F2937';\n            layoutColor = '#1F2937';\n        }\n        else if (selectedTheme.indexOf('fluent') > -1) {\n            args.border.color = '#252423';\n            layoutColor = '#252423';\n        }\n        else if (selectedTheme.indexOf('fabric') > -1) {\n            args.border.color = '#201f1f';\n            layoutColor = '#201f1f';\n        }\n        else {\n            args.border.color = '#222222';\n            layoutColor = '#222222';\n        }\n    }\n    else if (selectedTheme.indexOf('highcontrast') > -1) {\n        args.border.color = '#000000';\n        layoutColor = '#000000';\n    }\n    else {\n        args.border.color = '#FFFFFF';\n        layoutColor = '#FFFFFF';\n    }\n\n    if (selectedTheme.indexOf('highcontrast') > -1 || selectedTheme.indexOf('dark') > -1) {\n        let element = document.querySelector('#header1') as HTMLElement\n        element.style.color = '#F3F2F1';\n        let element1 = document.querySelector('#header2') as HTMLElement\n        element1.style.color = '#F3F2F1';\n        let element2 = document.querySelector('#header3') as HTMLElement\n        element2.style.color = '#F3F2F1';\n    }\n    if (selectedTheme.indexOf('tailwind') > -1) {\n        let element = document.querySelector('#layout_0_body') as HTMLElement\n        element.style.padding = '0';\n        let element1 = document.querySelector('#layout_1_body') as HTMLElement\n        element1.style.padding = '0';\n        let element2 = document.querySelector('#layout_2_body') as HTMLElement\n        element2.style.padding = '0';\n    }\n    let element = document.querySelector('#layout_0template') as HTMLElement\n    element.style.background = layoutColor;\n    let elementBody = document.getElementById('column');\n    elementBody.style.background = layoutColor;\n    let element1 = document.querySelector('#layout_1template') as HTMLElement\n    element1.style.background = layoutColor;\n    let element1Body = document.getElementById('pie');\n    element1Body.style.background = layoutColor;\n    let element2 = document.querySelector('#layout_2template') as HTMLElement\n    element2.style.background = layoutColor;\n    let element2Body = document.getElementById('spline');\n    element2Body.style.background = layoutColor;\n};\nexport let accpatternPointRender: EmitType<IAccPointRenderEventArgs> = (args: IAccPointRenderEventArgs): void => {\n    if (args.point.index == 0) {\n        args.pattern = 'DiagonalBackward'\n\n    }\n    else if (args.point.index == 1) {\n        args.pattern = 'DiagonalForward'\n\n    }\n    else if (args.point.index == 2) {\n        args.pattern = 'HorizontalStripe'\n\n    }\n    else if (args.point.index == 3) {\n        args.pattern = 'VerticalStripe'\n\n    }\n    else if (args.point.index == 4) {\n        args.pattern = 'HorizontalDash'\n\n    }\n    let selectedTheme: string = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (selectedTheme.indexOf('dark') > -1) {\n        if (selectedTheme.indexOf('material') > -1) {\n            args.border.color = '#303030';\n        }\n        else if (selectedTheme.indexOf('bootstrap5') > -1) {\n            args.border.color = '#212529';\n        }\n        else if (selectedTheme.indexOf('bootstrap') > -1) {\n            args.border.color = '#1A1A1A';\n        }\n        else if (selectedTheme.indexOf('tailwind') > -1) {\n            args.border.color = '#1F2937';\n        }\n        else if (selectedTheme.indexOf('fluent') > -1) {\n            args.border.color = '#252423';\n        }\n        else if (selectedTheme.indexOf('fabric') > -1) {\n            args.border.color = '#201f1f';\n        }\n        else {\n            args.border.color = '#222222';\n        }\n    }\n    else if (selectedTheme.indexOf('highcontrast') > -1) {\n        args.border.color = '#000000';\n    }\n    else {\n        args.border.color = '#FFFFFF';\n    }\n};\nlet seriesColor: string[] = ['#FFE066', \"#FAB666\", \"#F68F6A\", \"#F3646A\", \"#CC555A\", \"#9C4649\"];\nexport let donutPointRender: EmitType<IPointRenderEventArgs> = (args: IPointRenderEventArgs): void => {\n    let selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (selectedTheme === 'fluent') {\n        args.fill = seriesColor[args.point.index % 10];\n    }\n    else if (selectedTheme === 'bootstrap5') {\n        args.fill = seriesColor[args.point.index % 10];\n    }\n    if (selectedTheme.indexOf('dark') > -1) {\n        if (selectedTheme.indexOf('material') > -1) {\n            args.border.color = '#303030';\n        }\n        else if (selectedTheme.indexOf('bootstrap5') > -1) {\n            args.border.color = '#212529';\n        }\n        else if (selectedTheme.indexOf('bootstrap') > -1) {\n            args.border.color = '#1A1A1A';\n        }\n        else if (selectedTheme.indexOf('fabric') > -1) {\n            args.border.color = '#201f1f';\n        }\n        else if (selectedTheme.indexOf('fluent') > -1) {\n            args.border.color = '#252423';\n        }\n        else if (selectedTheme.indexOf('bootstrap') > -1) {\n            args.border.color = '#1A1A1A';\n        }\n        else if (selectedTheme.indexOf('tailwind') > -1) {\n            args.border.color = '#1F2937';\n        }\n        else {\n            args.border.color = '#222222';\n        }\n    }\n    else if (selectedTheme.indexOf('highcontrast') > -1) {\n        args.border.color = '#000000';\n    }\n    else if (selectedTheme.indexOf('fluent2') > -1) {\n        args.fill = seriesColor[args.point.index % 10];\n    }\n    else {\n        args.border.color = '#FFFFFF';\n    }\n};\n\nexport let roundedCornnerPointRender: EmitType<IAccPointRenderEventArgs> = (args: IAccPointRenderEventArgs): void => {\n    let selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (selectedTheme.indexOf('dark') > -1) {\n        if (selectedTheme.indexOf('material') > -1) {\n            args.border.color = '#303030';\n        }\n        else if (selectedTheme.indexOf('bootstrap5') > -1) {\n            args.border.color = '#212529';\n        }\n        else if (selectedTheme.indexOf('bootstrap') > -1) {\n            args.border.color = '#1A1A1A';\n\n        }\n        else if (selectedTheme.indexOf('fabric') > -1) {\n            args.border.color = '#201f1f';\n\n        }\n        else if (selectedTheme.indexOf('fluent') > -1) {\n            args.border.color = '#252423';\n\n        }\n        else if (selectedTheme.indexOf('bootstrap') > -1) {\n            args.border.color = '#1A1A1A';\n\n        }\n        else if (selectedTheme.indexOf('tailwind') > -1) {\n            args.border.color = '#1F2937';\n\n        }\n        else {\n            args.border.color = '#222222';\n\n        }\n    }\n    else if (selectedTheme.indexOf('highcontrast') > -1) {\n        args.border.color = '#000000';\n    }\n    else {\n        args.border.color = '#FFFFFF';\n    }\n}\n\nexport let loadChartTheme = (args?: ILoadedEventArgs, isgradient?: Boolean): ChartTheme | string => {\n    let selectedTheme: string = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    var theme: ChartTheme;\n    if (args) {\n        theme = args.chart.theme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    }\n    else {\n        theme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    }\n    if(isgradient) {\n        return selectedTheme;\n    } else {\n        return theme;\n    }\n    \n};\n\nexport let loadAccumulationChartTheme = (args?: IAccLoadedEventArgs): string => {\n    let selectedTheme: string = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    args.accumulation.theme = <AccumulationTheme>(selectedTheme.charAt(0).toUpperCase() +\n        selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    return selectedTheme;\n};","app.component.ts":"import { Component, ViewEncapsulation } from '@angular/core';\nimport { ILoadedEventArgs, IAxisLabelRenderEventArgs, ISharedTooltipRenderEventArgs, ILegendRenderEventArgs, ChartAllModule } from '@syncfusion/ej2-angular-charts';\nimport { Browser } from '@syncfusion/ej2-base';\n\n\nimport { loadChartTheme } from './theme-color';\n\n/**\n * Sample for Line Series with dashed line\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ ChartAllModule, ]\n})\nexport class AppComponent {\n    public dashedLineData: Object[] = [\n        { x: 1950, y: 2493092843, y1: 126304100, y2: 1042159246, y3: 1324614904, y4: 867732396, y5: 343353092 },\n        { x: 1951, y: 2536927039, y1: 127874077, y2: 1059306957, y3: 1349731048, y4: 887027436, y5: 357004128 },\n        { x: 1952, y: 2584086332, y1: 129789937, y2: 1077187100, y3: 1377093884, y4: 908405828, y5: 369808784 },\n        { x: 1953, y: 2634106246, y1: 132153416, y2: 1096035634, y3: 1405901764, y4: 931753376, y5: 382937200 },\n        { x: 1954, y: 2685894869, y1: 134605062, y2: 1115476219, y3: 1435798628, y4: 956729584, y5: 394915600 },\n        { x: 1955, y: 2740213784, y1: 136880366, y2: 1135578064, y3: 1467741048, y4: 983973024, y5: 405901520 },\n        { x: 1956, y: 2795409978, y1: 139125007, y2: 1155761749, y3: 1500508948, y4: 1011888692, y5: 415775920 },\n        { x: 1957, y: 2852618346, y1: 141568323, y2: 1175591988, y3: 1535443604, y4: 1042438600, y5: 425253344 },\n        { x: 1958, y: 2911249658, y1: 144363555, y2: 1195306118, y3: 1571565948, y4: 1074936332, y5: 433848472 },\n        { x: 1959, y: 2965950358, y1: 147197383, y2: 1214751313, y3: 1603988080, y4: 1103604040, y5: 437784216 },\n        { x: 1960, y: 3015470890, y1: 149860352, y2: 1233928643, y3: 1631668376, y4: 1127544516, y5: 436596448 },\n        { x: 1961, y: 3064869656, y1: 152850029, y2: 1253708611, y3: 1658297144, y4: 1148386820, y5: 434964720 },\n        { x: 1962, y: 3123374299, y1: 156395576, y2: 1274900546, y3: 1692063800, y4: 1173295688, y5: 438972640 },\n        { x: 1963, y: 3192807820, y1: 160302497, y2: 1296562666, y3: 1735927828, y4: 1206503268, y5: 452062216 },\n        { x: 1964, y: 3264487340, y1: 164451917, y2: 1317979479, y3: 1782040416, y4: 1239592904, y5: 469172200 },\n        { x: 1965, y: 3334533717, y1: 169108161, y2: 1338894058, y3: 1826515176, y4: 1268384936, y5: 485583192 },\n        { x: 1966, y: 3404041107, y1: 174013799, y2: 1359285314, y3: 1870725008, y4: 1295130168, y5: 501321120 },\n        { x: 1967, y: 3473412894, y1: 179017542, y2: 1379099986, y3: 1915277412, y4: 1319254600, y5: 511678312 },\n        { x: 1968, y: 3545187239, y1: 184229600, y2: 1398152460, y3: 1962786172, y4: 1343769016, y5: 515962920 },\n        { x: 1969, y: 3619491592, y1: 189539722, y2: 1417310770, y3: 2012621136, y4: 1369478312, y5: 520507776 },\n        { x: 1970, y: 3694683801, y1: 195016711, y2: 1437190872, y3: 2062454968, y4: 1393771016, y5: 526956400 },\n        { x: 1971, y: 3769847834, y1: 200588292, y2: 1459336606, y3: 2109900176, y4: 1417853552, y5: 534032664 },\n        { x: 1972, y: 3844917687, y1: 206390747, y2: 1484884110, y3: 2153618424, y4: 1440422400, y5: 541213960 },\n        { x: 1973, y: 3920805030, y1: 212422892, y2: 1512563538, y3: 2195792440, y4: 1462497824, y5: 546365040 },\n        { x: 1974, y: 3996416108, y1: 218717961, y2: 1542270558, y3: 2235399592, y4: 1486019592, y5: 548583600 },\n        { x: 1975, y: 4070735264, y1: 225166613, y2: 1574702706, y3: 2270835680, y4: 1508916512, y5: 548458064 },\n        { x: 1976, y: 4144246391, y1: 231559948, y2: 1608826064, y3: 2303827704, y4: 1530800952, y5: 547089112 },\n        { x: 1977, y: 4217863819, y1: 238154900, y2: 1645110360, y3: 2334563496, y4: 1547645704, y5: 545866904 },\n        { x: 1978, y: 4292097508, y1: 245024620, y2: 1683215588, y3: 2363819640, y4: 1556720360, y5: 545028776 },\n        { x: 1979, y: 4368539472, y1: 252002993, y2: 1722489600, y3: 2394006664, y4: 1565820904, y5: 546646552 },\n        { x: 1980, y: 4447606208, y1: 258253409, y2: 1764580050, y3: 2424729928, y4: 1578266056, y5: 551846088 },\n        { x: 1981, y: 4528777285, y1: 263195672, y2: 1808778556, y3: 2456757336, y4: 1592682840, y5: 559671496 },\n        { x: 1982, y: 4612673436, y1: 267593878, y2: 1854986672, y3: 2490043408, y4: 1610230968, y5: 570399848 },\n        { x: 1983, y: 4697327604, y1: 272017870, y2: 1901816808, y3: 2523439120, y4: 1626733184, y5: 581810632 },\n        { x: 1984, y: 4782175500, y1: 277170763, y2: 1945941806, y3: 2559004464, y4: 1641254336, y5: 591666648 },\n        { x: 1985, y: 4868943460, y1: 283540500, y2: 1988008110, y3: 2597331592, y4: 1656735296, y5: 601095160 },\n        { x: 1986, y: 4958072822, y1: 290665853, y2: 2029712638, y3: 2637625464, y4: 1673777344, y5: 610851352 },\n        { x: 1987, y: 5049746378, y1: 298201619, y2: 2075990698, y3: 2675478592, y4: 1693431288, y5: 620493512 },\n        { x: 1988, y: 5141992550, y1: 306184817, y2: 2129663112, y3: 2706062632, y4: 1713928864, y5: 629807696 },\n        { x: 1989, y: 5234431714, y1: 314703670, y2: 2184634986, y3: 2735005000, y4: 1735347000, y5: 639046304 },\n        { x: 1990, y: 5327803075, y1: 323619711, y2: 2238415822, y3: 2765674296, y4: 1758562896, y5: 647145312 },\n        { x: 1991, y: 5418735879, y1: 332665856, y2: 2291717918, y3: 2794254864, y4: 1780282120, y5: 650732200 },\n        { x: 1992, y: 5505989821, y1: 341998187, y2: 2343506204, y3: 2820384936, y4: 1799662128, y5: 648925872 },\n        { x: 1993, y: 5591544841, y1: 351680100, y2: 2396466244, y3: 2843295464, y4: 1817863560, y5: 645336136 },\n        { x: 1994, y: 5675551281, y1: 361762416, y2: 2450773196, y3: 2862909328, y4: 1833093864, y5: 640546200 },\n        { x: 1995, y: 5758878997, y1: 371721306, y2: 2505532870, y3: 2881513424, y4: 1845505312, y5: 634154088 },\n        { x: 1996, y: 5842055726, y1: 381398079, y2: 2560800906, y3: 2899738688, y4: 1855881872, y5: 629364568 },\n        { x: 1997, y: 5924787787, y1: 391326985, y2: 2615527344, y3: 2917806576, y4: 1862965920, y5: 627307696 },\n        { x: 1998, y: 6007066714, y1: 401296934, y2: 2670641308, y3: 2934990720, y4: 1867940384, y5: 626110096 },\n        { x: 1999, y: 6089006330, y1: 411254796, y2: 2725406328, y3: 2952195672, y4: 1872029008, y5: 625629808 },\n        { x: 2000, y: 6171703018, y1: 421660833, y2: 2778339060, y3: 2971541416, y4: 1875006224, y5: 626535704 },\n        { x: 2001, y: 6254936479, y1: 432645199, y2: 2829812884, y3: 2992304680, y4: 1876577360, y5: 628668808 },\n        { x: 2002, y: 6337730319, y1: 444024330, y2: 2880295052, y3: 3013226576, y4: 1876397640, y5: 631412760 },\n        { x: 2003, y: 6420361649, y1: 455436352, y2: 2930943312, y3: 3033788328, y4: 1875994912, y5: 634725280 },\n        { x: 2004, y: 6503377778, y1: 466713013, y2: 2983841408, y3: 3052619880, y4: 1875497888, y5: 638468416 },\n        { x: 2005, y: 6586970145, y1: 478036109, y2: 3038958536, y3: 3069761136, y4: 1874478024, y5: 641820944 },\n        { x: 2006, y: 6671452018, y1: 489424846, y2: 3096159140, y3: 3085641296, y4: 1876181776, y5: 645167776 },\n        { x: 2007, y: 6757308750, y1: 500428766, y2: 3156555272, y3: 3100083760, y4: 1882180592, y5: 649871160 },\n        { x: 2008, y: 6844457675, y1: 510794361, y2: 3218017656, y3: 3115390608, y4: 1891210304, y5: 656122824 },\n        { x: 2009, y: 6932766459, y1: 521178808, y2: 3279351504, y3: 3131965312, y4: 1902480200, y5: 663301136 },\n        { x: 2010, y: 7021732131, y1: 532057050, y2: 3342060220, y3: 3147327512, y4: 1914573024, y5: 670391464 },\n        { x: 2011, y: 7110923797, y1: 544982124, y2: 3404883628, y3: 3160754888, y4: 1927465608, y5: 676963504 },\n        { x: 2012, y: 7201202531, y1: 560697398, y2: 3467181704, y3: 3173003520, y4: 1942243728, y5: 683539920 },\n        { x: 2013, y: 7291793608, y1: 577848182, y2: 3528461544, y3: 3185146168, y4: 1958086304, y5: 689121936 },\n        { x: 2014, y: 7381616239, y1: 596508339, y2: 3588072904, y3: 3196678576, y4: 1973723728, y5: 692944144 },\n        { x: 2015, y: 7470491904, y1: 617227976, y2: 3646515492, y3: 3206377680, y4: 1987689968, y5: 695586976 },\n        { x: 2016, y: 7558554580, y1: 639011154, y2: 3701427400, y3: 3217734760, y4: 2000603912, y5: 697616160 },\n        { x: 2017, y: 7645618013, y1: 662249068, y2: 3750580264, y3: 3232394080, y4: 2013577872, y5: 697928096 },\n        { x: 2018, y: 7729902724, y1: 686727264, y2: 3796508740, y3: 3246253968, y4: 2024111456, y5: 695282048 },\n        { x: 2019, y: 7811293714, y1: 711960159, y2: 3840671552, y3: 3258218608, y4: 2031520384, y5: 690617536 },\n        { x: 2020, y: 7887001284, y1: 736844945, y2: 3882253576, y3: 3267423136, y4: 2035060496, y5: 683431016 },\n        { x: 2021, y: 7954448405, y1: 758737437, y2: 3921248932, y3: 3273956664, y4: 2034484160, y5: 673691560 },\n        { x: 2022, y: 8021407170, y1: 782133168, y2: 3959728840, y3: 3279020696, y4: 2030820152, y5: 663098224 },\n        { x: 2023, y: 8091734935, y1: 808366320, y2: 3999849852, y3: 3282968992, y4: 2024582768, y5: 654028320 }\n    ];\n    public dashLineData: Object[] = [\n        { x: 2024, y: 8161972549, y1: 832893775, y2: 4041127600, y3: 3287364176, y4: 2016800712, y5: 647339928 },\n        { x: 2025, y: 8231613090, y1: 856250699, y2: 4083270100, y3: 3291462584, y4: 2008312288, y5: 643562112 },\n        { x: 2026, y: 8300678442, y1: 879523781, y2: 4125853768, y3: 3294628960, y4: 1999255032, y5: 642354544 },\n        { x: 2027, y: 8369094318, y1: 906337883, y2: 4164244648, y3: 3297797216, y4: 1988692880, y5: 642333896 },\n        { x: 2028, y: 8436618862, y1: 939269399, y2: 4196151560, y3: 3300437224, y4: 1977677632, y5: 643121856 },\n        { x: 2029, y: 8503285348, y1: 973321243, y2: 4226977848, y3: 3302176512, y4: 1967410000, y5: 644104488 },\n        { x: 2030, y: 8569124886, y1: 1005909636, y2: 4259440112, y3: 3302914224, y4: 1957758448, y5: 645159856 },\n        { x: 2031, y: 8634119339, y1: 1037534710, y2: 4293141648, y3: 3302530704, y4: 1948442800, y5: 646407664 },\n        { x: 2032, y: 8698229878, y1: 1067916691, y2: 4328669872, y3: 3300680448, y4: 1939621776, y5: 647795032 },\n        { x: 2033, y: 8761449104, y1: 1099339870, y2: 4363884728, y3: 3297213208, y4: 1933196616, y5: 649316048 },\n        { x: 2034, y: 8823784961, y1: 1132103324, y2: 4398236688, y3: 3292384736, y4: 1929351040, y5: 650938824 },\n        { x: 2035, y: 8885210190, y1: 1164947923, y2: 4432201432, y3: 3286943024, y4: 1928467400, y5: 652611688 },\n        { x: 2036, y: 8945686606, y1: 1197331535, y2: 4466044920, y3: 3281129608, y4: 1930347416, y5: 654300584 },\n        { x: 2037, y: 9005152615, y1: 1228347839, y2: 4501631624, y3: 3273929248, y4: 1933528488, y5: 655969000 },\n        { x: 2038, y: 9063572896, y1: 1258209093, y2: 4537724896, y3: 3266334544, y4: 1937577584, y5: 657564864 },\n        { x: 2039, y: 9120928391, y1: 1286729880, y2: 4573373208, y3: 3259459480, y4: 1941800352, y5: 659039168 },\n        { x: 2040, y: 9177190247, y1: 1313365950, y2: 4609289768, y3: 3253098224, y4: 1945997736, y5: 660367176 },\n        { x: 2041, y: 9232281559, y1: 1338564237, y2: 4645330944, y3: 3246879800, y4: 1950197896, y5: 661489608 },\n        { x: 2042, y: 9286110411, y1: 1362737926, y2: 4680925880, y3: 3240876080, y4: 1954263112, y5: 662356952 },\n        { x: 2043, y: 9338661330, y1: 1386381265, y2: 4713715064, y3: 3236933616, y4: 1958137824, y5: 662970856 },\n        { x: 2044, y: 9389873699, y1: 1410883374, y2: 4742169672, y3: 3235133696, y4: 1961688736, y5: 663280416 },\n        { x: 2050, y: 9664378588, y1: 1575447386, y2: 4835760816, y3: 3250602296, y4: 1969375024, y5: 656480224 },\n        { x: 2051, y: 9704192320, y1: 1605226113, y2: 4844144088, y3: 3252088520, y4: 1967690048, y5: 654007048 },\n        { x: 2052, y: 9742264492, y1: 1636146498, y2: 4850402672, y3: 3252811384, y4: 1965120824, y5: 651310896 },\n        { x: 2053, y: 9778614529, y1: 1666900774, y2: 4855886048, y3: 3252752744, y4: 1961706808, y5: 648487560 },\n        { x: 2054, y: 9813251648, y1: 1697317280, y2: 4860845360, y3: 3251848568, y4: 1957465520, y5: 645583536 },\n        { x: 2055, y: 9846237603, y1: 1728208872, y2: 4864514728, y3: 3250089464, y4: 1952463848, y5: 642681416 },\n        { x: 2056, y: 9877680349, y1: 1756711135, y2: 4869826392, y3: 3247539920, y4: 1946856608, y5: 639881648 },\n        { x: 2057, y: 9907637176, y1: 1781513004, y2: 4878093952, y3: 3244244176, y4: 1940773248, y5: 637237832 },\n        { x: 2058, y: 9936164370, y1: 1804535251, y2: 4887447256, y3: 3240213768, y4: 1934278320, y5: 634775320 },\n        { x: 2059, y: 9963337060, y1: 1826347801, y2: 4897402304, y3: 3235472944, y4: 1927497464, y5: 632551472 },\n        { x: 2060, y: 9989232308, y1: 1847284669, y2: 4907618176, y3: 3230074872, y4: 1920598744, y5: 630575696 },\n        { x: 2061, y: 10013916270, y1: 1867330861, y2: 4918122112, y3: 3224058080, y4: 1913686984, y5: 628789408 },\n        { x: 2062, y: 10037466618, y1: 1886351815, y2: 4928959744, y3: 3217507576, y4: 1906901904, y5: 627198472 },\n        { x: 2063, y: 10059950016, y1: 1904498006, y2: 4939934640, y3: 3210489672, y4: 1900366608, y5: 625805136 },\n        { x: 2064, y: 10081402757, y1: 1922221123, y2: 4950744240, y3: 3203043384, y4: 1894148856, y5: 624574264 },\n        { x: 2065, y: 10101849556, y1: 1940535516, y2: 4960409512, y3: 3195214824, y4: 1888309832, y5: 623473544 },\n        { x: 2066, y: 10121317193, y1: 1959106385, y2: 4969198200, y3: 3187081312, y4: 1882872968, y5: 622484536 },\n        { x: 2067, y: 10139808403, y1: 1977096755, y2: 4977840088, y3: 3178729376, y4: 1877849024, y5: 621558184 },\n        { x: 2068, y: 10157301910, y1: 1994915171, y2: 4985798336, y3: 3170167920, y4: 1873207184, y5: 620635120 },\n        { x: 2069, y: 10173782143, y1: 2012984882, y2: 4992611728, y3: 3161436008, y4: 1868919280, y5: 619666904 },\n        { x: 2070, y: 10189241966, y1: 2031474339, y2: 4998041720, y3: 3152639040, y4: 1864932264, y5: 618624416 },\n        { x: 2071, y: 10203681578, y1: 2050499789, y2: 5001903664, y3: 3143862112, y4: 1861167368, y5: 617503712 },\n        { x: 2072, y: 10217055191, y1: 2070381773, y2: 5003800576, y3: 3135166880, y4: 1857552744, y5: 616275552 },\n        { x: 2073, y: 10229327843, y1: 2091255671, y2: 5003495224, y3: 3126601880, y4: 1854016664, y5: 614925336 },\n        { x: 2074, y: 10240485124, y1: 2112931045, y2: 5001147520, y3: 3118184600, y4: 1850474008, y5: 613451984 },\n        { x: 2075, y: 10250496479, y1: 2134750926, y2: 4997397320, y3: 3109926536, y4: 1846843016, y5: 611835360 },\n        { x: 2076, y: 10259351451, y1: 2156452037, y2: 4992464888, y3: 3101832760, y4: 1843085824, y5: 610058640 },\n        { x: 2077, y: 10267044976, y1: 2178944733, y2: 4985414808, y3: 3093896656, y4: 1839135408, y5: 608133872 },\n        { x: 2078, y: 10273556402, y1: 2201309734, y2: 4977186456, y3: 3086056968, y4: 1834902648, y5: 606047560 },\n        { x: 2079, y: 10278887444, y1: 2222493561, y2: 4968812480, y3: 3078281136, y4: 1830335488, y5: 603796000 },\n        { x: 2080, y: 10283078029, y1: 2242689112, y2: 4960173392, y3: 3070529528, y4: 1825417720, y5: 601410976 },\n        { x: 2081, y: 10286161702, y1: 2262268062, y2: 4951073056, y3: 3062701512, y4: 1820123000, y5: 598887944 },\n        { x: 2082, y: 10288205101, y1: 2281150810, y2: 4941677928, y3: 3054765416, y4: 1814462232, y5: 596255952 },\n        { x: 2083, y: 10289247340, y1: 2297665959, y2: 4933818992, y3: 3046682416, y4: 1808454080, y5: 593561400 },\n        { x: 2084, y: 10289315221, y1: 2311723214, y2: 4927702760, y3: 3038378040, y4: 1802108200, y5: 590819136 },\n        { x: 2085, y: 10288456631, y1: 2322939251, y2: 4923711016, y3: 3029807368, y4: 1795441424, y5: 588034952 },\n        { x: 2086, y: 10286708315, y1: 2331487672, y2: 4921728216, y3: 3020946312, y4: 1788451736, y5: 585227688 },\n        { x: 2087, y: 10284111359, y1: 2338720283, y2: 4920486208, y3: 3011759712, y4: 1781182624, y5: 582399832 },\n        { x: 2088, y: 10280704571, y1: 2345116023, y2: 4919642816, y3: 3002229656, y4: 1773690544, y5: 579574520 },\n        { x: 2089, y: 10276518216, y1: 2351323914, y2: 4918577464, y3: 2992360824, y4: 1766029280, y5: 576795080 },\n        { x: 2090, y: 10271565096, y1: 2357459993, y2: 4917129168, y3: 2982145848, y4: 1758239920, y5: 574064480 },\n        { x: 2091, y: 10265861685, y1: 2363618518, y2: 4915399152, y3: 2971591416, y4: 1750350392, y5: 571396696 },\n        { x: 2092, y: 10259408415, y1: 2369870272, y2: 4913338544, y3: 2960721080, y4: 1742401792, y5: 568800952 },\n        { x: 2093, y: 10252184759, y1: 2376041244, y2: 4910899928, y3: 2949564544, y4: 1734451728, y5: 566264600 },\n        { x: 2094, y: 10244185824, y1: 2382123990, y2: 4908000336, y3: 2938161648, y4: 1726545712, y5: 563775664 },\n        { x: 2095, y: 10235403633, y1: 2388126286, y2: 4904583056, y3: 2926534408, y4: 1718694168, y5: 561335384 },\n        { x: 2096, y: 10225850878, y1: 2394065867, y2: 4900634528, y3: 2914702448, y4: 1710937968, y5: 558952208 },\n        { x: 2097, y: 10215549325, y1: 2399936776, y2: 4896124768, y3: 2902732248, y4: 1703303144, y5: 556640024 },\n        { x: 2098, y: 10204489848, y1: 2405753390, y2: 4890990312, y3: 2890660088, y4: 1695792608, y5: 554391472 },\n        { x: 2099, y: 10192689014, y1: 2411559196, y2: 4885172224, y3: 2878513592, y4: 1688423552, y5: 552193472 },\n        { x: 2100, y: 10180160751, y1: 2417301901, y2: 4878640816, y3: 2866316728, y4: 1681182000, y5: 550027496 }\n    ];\n    //Initializing Primary X Axis\n    public primaryXAxis: Object = {\n        valueType: 'Double',\n        majorGridLines: { width: 0 },\n        minimum: 1950,\n        maximum: 2100,\n        interval: 30,\n        labelIntersectAction: Browser.isDevice ? 'None' : 'Trim',\n        labelRotation: Browser.isDevice ? -45 : 0,\n        majorTickLines: { width: 0 },\n        minorTickLines: { width: 0 }\n    };\n    //Initializing Primary Y Axis\n    public primaryYAxis: Object = {\n        maximum: 12e9,\n        interval: 2e9,\n        lineStyle: { width: 0 },\n        title: 'Population (in Billions)',\n        majorTickLines: { width: 0 },\n        minorTickLines: { width: 0 }\n    };\n    //Initializing Marker\n    public marker: Object = {\n        visible: false,\n        width: 7,\n        height: 7\n    };\n    public crosshair: Object = {\n        enable: false,\n        line: {\n            color: 'rgba(204,214,235,0.25)',\n            width: Browser.isDevice ? 50 : 20\n        },\n        lineType: 'Vertical'\n    };\n    public chartArea: Object = {\n        border: {\n            width: 0\n        },\n        margin: {\n            bottom: 12\n        }\n    };\n    public width: string = Browser.isDevice ? '100%' : '75%';\n    public tooltip: Object = {\n        enable: true,\n        shared: true,\n        showNearestTooltip: true\n    };\n    public legendSettings: Object = {\n        visible: true\n    };\n    // custom code start\n    public AnnotationColor: string = \"light\";\n    public load(args: ILoadedEventArgs): void {\n        loadChartTheme(args);\n    };\n    public axisLabelRender = (args: IAxisLabelRenderEventArgs) => {\n        if (args.axis.orientation === 'Vertical') {\n            let value: number = Number(args.text);\n            if (!isNaN(value) && value >= 0) {\n                args.text = (value / 1e9).toFixed(0);\n            }\n        }\n    };\n    public sharedTooltipRender = (args: ISharedTooltipRenderEventArgs) => {\n        if (args.text && Array.isArray(args.point) && Array.isArray(args.series)) {\n            args.text = args.point.map((point, i) => {\n                if (point && point.y !== undefined && args.series[i]) {\n                    const value: number = Number(point.y);\n                    let formattedValue: string = '';\n                    if (value >= 1_000_000_000) {\n                        formattedValue = (value / 1_000_000_000).toFixed(2) + ' B';\n                    } else if (value >= 1_000_000) {\n                        formattedValue = (value / 1_000_000).toFixed(2) + ' M';\n                    }\n                    const seriesNameMapping: Record<string, string> = {\n                        'Total1': 'Total',\n                        'Ages1 65+': 'Ages 65+',\n                        'Ages1 25-64': 'Ages 25-64',\n                        'Unders-25s': 'Under-25s',\n                        'Unders-15s': 'Under-15s',\n                        'Unders-5s': 'Under-5s',\n                    };\n                    let seriesName = args.series[i].name || `Series ${i + 1}`;\n                    seriesName = seriesNameMapping[seriesName] || seriesName;\n                    return `${seriesName}: <b>${formattedValue}</b>`;\n                }\n                return null;\n            }).filter(Boolean);\n        }\n    };\n    public legendRender = (args: ILegendRenderEventArgs) => {\n        const cancelLegendNames: Set<string> = new Set([\n            'Total1',\n            'Ages1 65+',\n            'Ages1 25-64',\n            'Unders-25s',\n            'Unders-15s',\n            'Unders-5s'\n        ]);\n\n        if (cancelLegendNames.has(args.text)) {\n            args.cancel = true;\n        }\n    };\n    // custom code end\n    public title: string = 'Global Population Trends by Age Group (1950–2100)';\n    public subTitle: string = 'Source: ourworldindata.org';\n    constructor() {\n        //code\n    };\n\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section\">\n    <ejs-chart style='display:block' align='center' id='dashed-chartcontainer' [chartArea]='chartArea' [title]='title' [subTitle]='subTitle' [primaryXAxis]='primaryXAxis' [primaryYAxis]='primaryYAxis' [tooltip]='tooltip' (load)='load($event)' (axisLabelRender)='axisLabelRender($event)' (sharedTooltipRender)='sharedTooltipRender($event)' (legendRender)='legendRender($event)' [crosshair]='crosshair' [width]='width' [legendSettings]='legendSettings'>\n        <e-series-collection>\n            <e-series [dataSource]='dashedLineData' type='Line' xName='x' yName='y' width=2 [marker]='marker' name='Total'> </e-series>\n            <e-series [dataSource]='dashLineData' type='Line' xName='x' yName='y' dashArray='4,4' width=2 [marker]='marker' name='Total1'> </e-series>\n            <e-series [dataSource]='dashedLineData' type='Line' xName='x' yName='y1' width=2 [marker]='marker' name='Ages 65+'> </e-series>\n            <e-series [dataSource]='dashLineData' type='Line' xName='x' yName='y1' dashArray='4,4' width=2 [marker]='marker' name='Ages1 65+'> </e-series>\n            <e-series [dataSource]='dashedLineData' type='Line' xName='x' yName='y2' width=2 [marker]='marker' name='Ages 25-64'> </e-series>\n            <e-series [dataSource]='dashLineData' type='Line' xName='x' yName='y2' dashArray='4,4' width=2 [marker]='marker' name='Ages1 25-64'> </e-series>\n            <e-series [dataSource]='dashedLineData' type='Line' xName='x' yName='y3' width=2 [marker]='marker' name='Under-25s'> </e-series>\n            <e-series [dataSource]='dashLineData' type='Line' xName='x' yName='y3' dashArray='4,4' width=2 [marker]='marker' name='Unders-25s'> </e-series>\n            <e-series [dataSource]='dashedLineData' type='Line' xName='x' yName='y4' width=2 [marker]='marker' name='Under-15s'> </e-series>\n            <e-series [dataSource]='dashLineData' type='Line' xName='x' yName='y4' dashArray='4,4' width=2 [marker]='marker' name='Unders-15s'> </e-series>\n            <e-series [dataSource]='dashedLineData' type='Line' xName='x' yName='y5' width=2 [marker]='marker' name='Under-5s'> </e-series>\n            <e-series [dataSource]='dashLineData' type='Line' xName='x' yName='y5' dashArray='4,4' width=2 [marker]='marker' name='Unders-5s'> </e-series>\n        </e-series-collection>\n    </ejs-chart>\n</div>\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n    \n    #dashed-chartcontainer_Series_1, #dashed-chartcontainer_Series_3,\n    #dashed-chartcontainer_Series_5, #dashed-chartcontainer_Series_7,\n    #dashed-chartcontainer_Series_9, #dashed-chartcontainer_Series_11 {\n        stroke-dasharray: 4px 4px;\n        stroke-linejoin: round;\n        stroke-linecap: round;\n        -webkit-animation: dash 1s linear infinite;\n        animation: dash 1s linear infinite;\n    }\n    \n    #dashed-chartcontainer_Series_0_Point_3_Symbol {\n        -webkit-animation: opac 1s ease-out infinite;\n        animation: opac 1s ease-out infinite;\n    }\n    \n    @-webkit-keyframes dash {\n        100% {\n            stroke-dashoffset: -20px;\n        }\n    }\n    \n    @keyframes dash {\n        100% {\n            stroke-dashoffset: -20px;\n        }\n    }\n    \n    @keyframes opac {\n        0% {\n            stroke-opacity: 1;\n            stroke-width: 0px;\n        }\n        100% {\n            stroke-opacity: 0;\n            stroke-width: 10px;\n        }\n    }\n    #e-annotaion{\n        color: black ;\n        background-color: azure;\n    } \n</style>\n","app.component.css":".control-fluid {\n    padding: 0px !important;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-angular-calendars\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-layouts\":\"*\",\"@syncfusion/ej2-angular-layouts\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}