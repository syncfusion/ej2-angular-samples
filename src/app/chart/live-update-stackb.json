{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { AccumulationChart, AccumulationChartComponent, ChartAllModule, IAccLoadedEventArgs, IAccTextRenderEventArgs, AccumulationTheme, AccumulationChartAllModule, IAccPointRenderEventArgs, AccumulationSeries } from '@syncfusion/ej2-angular-charts';\nimport { Browser } from '@syncfusion/ej2-base';\n\n\n\n/**\n * Sample for Pie Update Data Source\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  encapsulation: ViewEncapsulation.None,\n  standalone: true,\n  imports: [ ChartAllModule, AccumulationChartAllModule, ]\n})\nexport class AppComponent {\n  /**\n   * Sample for Doughnut\n   */\n\n  public updatedData: Object[] = [\n    { x: 'Apple', y: 7.8451 },\n    { x: 'Google', y: 13.4167 },\n    { x: 'Amazon', y: 6.9403 },\n    { x: 'Microsoft', y: 20.7127 },\n    { x: 'IBM', y: 76.2822 },\n    { x: 'Oracle', y: 21.0090 },\n    { x: 'Netflix', y: 16.8242 }\n  ];\n  public updatedData2: Object[] = [\n    { x: 'Apple', y: 10.9899 },\n    { x: 'Google', y: 14.2521 },\n    { x: 'Amazon', y: 9.8100 },\n    { x: 'Microsoft', y: 20.4205 },\n    { x: 'IBM', y: 100.6536 },\n    { x: 'Oracle', y: 26.0708 },\n    { x: 'Netflix', y: 27.4937 }\n  ];\n  public updatedData3: Object[] = [\n    { x: 'Apple', y: 17.4344 },\n    { x: 'Google', y: 16.1018 },\n    { x: 'Amazon', y: 10.9887 },\n    { x: 'Microsoft', y: 24.0142 },\n    { x: 'IBM', y: 117.6709 },\n    { x: 'Oracle', y: 24.9828 },\n    { x: 'Netflix', y: 11.8551 }\n  ];\n  public updatedData4: Object[] = [\n    { x: 'Apple', y: 14.5929 },\n    { x: 'Google', y: 22.1492 },\n    { x: 'Amazon', y: 14.8658 },\n    { x: 'Microsoft', y: 26.9842 },\n    { x: 'IBM', y: 118.2763 },\n    { x: 'Oracle', y: 28.5474 },\n    { x: 'Netflix', y: 35.2718 }\n  ];\n  public updatedData5: Object[] = [\n    { x: 'Apple', y: 20.4231 },\n    { x: 'Google', y: 28.3890 },\n    { x: 'Amazon', y: 16.5876 },\n    { x: 'Microsoft', y: 36.2762 },\n    { x: 'IBM', y: 113.4907 },\n    { x: 'Oracle', y: 34.4296 },\n    { x: 'Netflix', y: 57.4951 }\n  ];\n  public updatedData6: Object[] = [\n    { x: 'Apple', y: 27.0239 },\n    { x: 'Google', y: 30.9638 },\n    { x: 'Amazon', y: 23.8494 },\n    { x: 'Microsoft', y: 40.9778 },\n    { x: 'IBM', y: 99.4267 },\n    { x: 'Oracle', y: 35.4508 },\n    { x: 'Netflix', y: 91.8956 }\n  ];\n  public updatedData7: Object[] = [\n    { x: 'Apple', y: 24.0368 },\n    { x: 'Google', y: 38.1172 },\n    { x: 'Amazon', y: 34.8921 },\n    { x: 'Microsoft', y: 49.8084 },\n    { x: 'IBM', y: 100.0202 },\n    { x: 'Oracle', y: 34.6261 },\n    { x: 'Netflix', y: 102.0304 }\n  ];\n  public updatedData8: Object[] = [\n    { x: 'Apple', y: 35.2487 },\n    { x: 'Google', y: 46.9350 },\n    { x: 'Amazon', y: 48.2920 },\n    { x: 'Microsoft', y: 66.5079 },\n    { x: 'IBM', y: 108.4717 },\n    { x: 'Oracle', y: 41.7164 },\n    { x: 'Netflix', y: 165.3743 }\n  ];\n  public updatedData9: Object[] = [\n    { x: 'Apple', y: 44.9396 },\n    { x: 'Google', y: 56.0381 },\n    { x: 'Amazon', y: 81.8891 },\n    { x: 'Microsoft', y: 95.1360 },\n    { x: 'IBM', y: 103.0934 },\n    { x: 'Oracle', y: 43.7122 },\n    { x: 'Netflix', y: 319.2903 }\n  ];\n  public updatedData10: Object[] = [\n    { x: 'Apple', y: 50.2883 },\n    { x: 'Google', y: 59.4929 },\n    { x: 'Amazon', y: 89.2447 },\n    { x: 'Microsoft', y: 124.6044 },\n    { x: 'IBM', y: 103.0097 },\n    { x: 'Oracle', y: 49.6689 },\n    { x: 'Netflix', y: 328.8713 }\n  ];\n\n  private intervalId: any;\n\n  @ViewChild('pie')\n  public pie: AccumulationChartComponent | AccumulationChart;\n  //Initializing Legend\n  public legendSettings: Object = {\n    visible: false\n  };\n  public textRender(args: IAccTextRenderEventArgs): void {\n    args.text = Browser.isDevice ? String(args.point.x) : String(args.point.x + \": \" + \"$\" + args.text);\n  };\n  public centerLabel: Object = {\n    text: '2010',\n    textStyle: {\n        fontWeight: '600',\n        size: Browser.isDevice ? '25px' : '40px'\n    },\n  };\n  //Initializing Datalabel\n  public dataLabel: Object = {\n    visible: true, position: 'Outside', font: {\n      fontWeight: '600',\n    },\n    connectorStyle: { type: 'Line', width: 2, length: Browser.isDevice ? '7px' : '18px' }\n  };\n\n  // custom code start\n  public load(args: IAccLoadedEventArgs): void {\n    let yearIndex: number = 2;\n    let year: number = 10;\n    args.accumulation.centerLabel.text = \"2010\";\n    let selectedTheme: string = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n    args.accumulation.theme = <AccumulationTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    this.updateClearInterval();\n    this.intervalId = setInterval(() => {\n      let container: HTMLElement = document.getElementById('donut-container');\n      if (container && container.id === args.chart.element.id) {\n        let newData: Object[] = (this['updatedData' + yearIndex] || []).map(function (item: { x: string; y: number; }) {\n          return { x: item.x, y: item.y };\n        });\n        year = year < 20 ? year + 1 : 10;\n        args.accumulation.centerLabel.text = \"20\" + year;\n        if (args.chart.series.length > 0) {\n          (args.chart.series[0]).setData(newData, 500);\n        }\n        yearIndex = yearIndex < 10 ? yearIndex + 1 : 2;\n      }\n      else {\n        this.updateClearInterval();\n      }\n    }, 2000);\n  };\n  // custom code end\n  public enableAnimation: boolean = true;\n  public tooltip: Object = {\n    enable: false,\n  };\n\n  private updateClearInterval(): void {\n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n      this.intervalId = null;\n    }\n  }\n  public title: string = 'Average Stock Market Prices of Leading Tech Giants';\n  public radius: string = Browser.isDevice ? '40%' : '75%';\n  public titleStyle: Object = {\n    size: Browser.isDevice ? '16px' : '18px'\n  }\n  constructor() {\n    //code\n  };\n\n}\n\n\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section\">\n    <div>\n        <ejs-accumulationchart id=\"donut-container\" #pie style='display:block; width: 92%' align='center'\n            [legendSettings]=\"legendSettings\" [tooltip]=\"tooltip\" [title]=\"title\" [enableAnimation]='enableAnimation'\n            (load)='load($event)' [enableBorderOnMouseMove]='false' [titleStyle]='titleStyle' (textRender)='textRender($event)'\n            [centerLabel]=\"centerLabel\">\n            <e-accumulation-series-collection>\n                <e-accumulation-series [dataSource]='updatedData' xName='x' yName='y' innerRadius=\"65%\" [radius]='radius'\n                    [dataLabel]=\"dataLabel\">\n                </e-accumulation-series>\n            </e-accumulation-series-collection>\n        </ejs-accumulationchart>\n    </div>\n</div>\n<style>\n    .control-section {\n        min-height: 450px;\n    }\n</style>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-angular-calendars\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-layouts\":\"*\",\"@syncfusion/ej2-angular-layouts\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}