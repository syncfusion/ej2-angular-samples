{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { ILoadedEventArgs, ChartComponent, ChartTheme, ChartAllModule } from '@syncfusion/ej2-angular-charts';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\n\n\n\n/**\n * Sample for stripLineRecurrence\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ ChartAllModule, ]\n})\nexport class AppComponent {\n\n    public data1: Object[] = [\n        { x: new Date(1970, 1, 1), y: 16500 }, { x: new Date(1975, 1, 1), y: 16000 }, { x: new Date(1980, 1, 1), y: 15400 },\n        { x: new Date(1985, 1, 1), y: 15800 }, { x: new Date(1990, 1, 1), y: 14000 }, { x: new Date(1995, 1, 1), y: 10500 },\n        { x: new Date(2000, 1, 1), y: 13300 }, { x: new Date(2005, 1, 1), y: 12800 }\n    ];\n    public data2: Object[] = [\n        { x: new Date(1970, 1, 1), y: 8000 }, { x: new Date(1975, 1, 1), y: 7600 }, { x: new Date(1980, 1, 1), y: 6400 },\n        { x: new Date(1985, 1, 1), y: 3700 }, { x: new Date(1990, 1, 1), y: 7200 }, { x: new Date(1995, 1, 1), y: 2300 },\n        { x: new Date(2000, 1, 1), y: 4000 }, { x: new Date(2005, 1, 1), y: 4800 }\n    ];\n    //Initializing Primary Y Axis\n    public primaryXAxis: Object = {\n        valueType: 'DateTime', intervalType: 'Years', majorGridLines: { width: 0 },\n        edgeLabelPlacement: 'Shift', majorTickLines: {width : 0},\n        minorTickLines: {width: 0},\n        minimum: new Date(1965, 1, 1), maximum: new Date(2010, 1, 1), \n        //Initializing Striplines\n        stripLines: [{\n            startFromAxis: true, size: 5, sizeType: 'Years', isRepeat: true, repeatEvery: 10, visible: true,\n            color: 'rgba(167,169,171, 0.1)'\n        }]\n    };\n    chartArea: { border: { width: 0 } };\n    //Initializing Primary Y Axis\n    public primaryYAxis: Object = {\n        minimum: 0, maximum: 18000, interval: 2000, majorGridLines: { color: 'rgba(167,169,171, 0.3)' },\n            majorTickLines: { width: 0 }, lineStyle: { width: 0 }, labelStyle: { color: 'transparent' },\n            stripLines: [{\n                startFromAxis: true, size: 2000, isRepeat: true, repeatEvery: 4000, visible: true,\n                color: 'rgba(167,169,171, 0.1)'\n            }]\n    };\n    public tooltip: Object = {\n        enable: true, format: ' Year: <b>${point.x}</b><br> Tons Per Day: <b>${point.y}</b>'\n    };\n     // custom code start\n    public load(args: ILoadedEventArgs): void {\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n        args.chart.theme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i,Â 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    };\n    public legend: Object = {\n        enableHighlight : true\n    }\n    // custom code end\n    public title: string = 'World Pollution Report';\n    @ViewChild('chart')\n    public chart: ChartComponent;\n    public mode: DropDownList;\n    public xChange(e: Event): void {\n        let element: HTMLInputElement = <HTMLInputElement>e.target;\n        this.chart.primaryXAxis.stripLines[0].visible = element.checked;\n        this.chart.series[0].animation.enable = false;\n        this.chart.series[1].animation.enable = false;\n        this.chart.refresh();\n    }\n    public yChange(e: Event): void {\n        let element: HTMLInputElement = <HTMLInputElement>e.target;\n        this.chart.primaryYAxis.stripLines[0].visible = element.checked;\n        this.chart.series[0].animation.enable = false;\n        this.chart.series[1].animation.enable = false;\n        this.chart.refresh();\n    }\n    constructor() {\n        //code\n    };\n\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n\n    <div class=\"col-lg-8 control-section  sb-property-border\" >\n        <ejs-chart #chart style='display:block;' id='chartcontainer' [primaryXAxis]='primaryXAxis' [primaryYAxis]='primaryYAxis'\n            [title]='title' [tooltip]='tooltip' (load)='load($event)' [legendSettings]='legend'>\n            <e-series-collection>\n                <e-series [dataSource]='data1' type='Column' xName='x' yName='y' name='All sources' columnSpacing='0.1' ></e-series>\n                <e-series [dataSource]='data2' type='Column' xName='x' yName='y' name='Autos & Light Trucks'></e-series>\n            </e-series-collection>\n        </ejs-chart>\n    </div>\n    <div class=\"col-lg-4 property-section\">\n        <div class=\"property-panel-section\">\n            <div class=\"property-panel-header\">Properties</div>\n            <div class=\"property-panel-content\">\n                <table id=\"property\" class=\"property-panel-table\" title=\"Properties\" style=\"width: 100%\">\n                    <tr style=\"height: 50px\">\n                        <td style=\"width: 60%\">\n                            <div id=\"xAxis\">X Axis:</div>\n                        </td>\n                        <td style=\"width: 40%;\">\n                            <div>\n                                <input type=\"checkbox\" (change)='xChange($event)' id=\"xIndex\" checked aria-labelledby=\"Checkbox checked\">\n                            </div>\n                        </td>\n                    </tr>\n                    <tr style=\"height: 50px\">\n                        <td style=\"width: 60%\">\n                            <div id=\"yAxis\">Y Axis:</div>\n                        </td>\n                        <td style=\"width: 40%;\">\n                            <div>\n                                <input type=\"checkbox\" (change)='yChange($event)' id=\"yIndex\" checked aria-labelledby=\"Checkbox checked\">\n                            </div>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n   \n    </div>\n</div>\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n    #xIndex,#yIndex:hover {\n        cursor: pointer;\n    }\n</style>","app.component.css":".control-fluid {\n    padding: 0px !important;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-angular-calendars\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-layouts\":\"*\",\"@syncfusion/ej2-angular-layouts\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}