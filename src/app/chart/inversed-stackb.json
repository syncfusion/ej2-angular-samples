{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation } from '@angular/core';\nimport { ILoadedEventArgs, IPointRenderEventArgs, ChartTheme, ChartAllModule } from '@syncfusion/ej2-angular-charts';\nimport { Browser } from '@syncfusion/ej2-base';\n\n\n\n/**\n * Sample for Inversed Axis\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ ChartAllModule, ]\n})\n\nexport class AppComponent {\n    //Initializing Primary X Axis\n    public primaryXAxis: Object = {\n        valueType: 'Category',\n        opposedPosition: true,\n        isInversed: true,\n        majorGridLines: { width: 0 },\n        majorTickLines: { width: 0},\n        minorTickLines: {width: 0}\n    };\n\n    //Initializing Primary Y Axis\n    public primaryYAxis: Object = {\n        edgeLabelPlacement: 'Shift',\n        labelIntersectAction: 'Rotate45',\n        isInversed: true,\n        majorGridLines: { width: 0 },\n        majorTickLines: { width: 0 },\n        lineStyle: { width: 0 },\n        labelStyle: {\n            color: 'transparent'\n        }\n    };\n\n    public pointRender(args: IPointRenderEventArgs): void {\n        let pointMaterialColors: string[] = [\"#00bdae\", \"#404041\", \"#357cd2\", \"#e56590\", \"#f8b883\", \"#70ad47\", \"#dd8abd\", \"#7f84e8\", \"#7bb4eb\",\n            \"#ea7a57\", \"#404041\", \"#00bdae\"];\n        let pointMaterialDarkColors: string[] = [\"#9ECB08\", \"#56AEFF\", \"#C57AFF\", \"#61EAA9\", \"#EBBB3E\", \"#F45C5C\", \"#8A77FF\", \"#63C7FF\", \"#FF84B0\",\n            \"#F7C928\"];\n        let pointFabricColors: string[] = [\"#4472c4\", \"#ed7d31\", \"#ffc000\", \"#70ad47\", \"#5b9bd5\", \"#c1c1c1\", \"#6f6fe2\", \"#e269ae\", \"#9e480e\",\n            \"#997300\", \"#4472c4\", \"#70ad47\", \"#ffc000\", \"#ed7d31\"];\n        let pointBootstrapColors: string[] = [\"#a16ee5\", \"#f7ce69\", \"#55a5c2\", \"#7ddf1e\", \"#ff6ea6\", \"#7953ac\", \"#b99b4f\", \"#407c92\", \"#5ea716\",\n            \"#b91c52\"];\n        let pointHighContrastColors: string[] = [\"#79ECE4\", \"#E98272\", \"#DFE6B6\", \"#C6E773\", \"#BA98FF\", \"#FA83C3\", \"#00C27A\", \"#43ACEF\", \"#D681EF\",\n            \"#D8BC6E\"];\n        let pointBootstrap5Colors: string[] = ['#FD7E14', '#6610F2', '#6F42C1', '#D63384', '#DC3545',\n        '#FFC107', '#198754', '#0DCAF0','#FD7E14', '#6610F2'];\n        let pointBootstrap5DarkColors: string[] = ['#FD7E14', '#6610F2', '#6F42C1', '#D63384', '#DC3545',\n        '#FFC107', '#198754', '#0DCAF0','#FD7E14', '#6610F2'];\n        let pointFluentColors: string[] = ['#1AC9E6', '#DA4CB2', '#EDBB40', '#AF4BCF', '#FF7266', '#1BD565', '#EE993D', '#5887FF', '#EC548D', \n            '#7D39C0'];\n        let pointFluentDarkColors: string[] =  ['#1AC9E6', '#DA4CB2', '#EDBB40', '#AF4BCF', '#FF7266', '#1BD565', '#EE993D', '#5887FF', '#EC548D', \n            '#7D39C0'];\n        let pointTailwindColors: string[] = [\"#5A61F6\", \"#65A30D\", \"#334155\", \"#14B8A6\", \"#8B5CF6\", \"#0369A1\", \"#F97316\", \"#9333EA\", \"#F59E0B\",\n            \"#15803D\"];\n        let pointTailwindDarkColors: string[] = [\"#8B5CF6\", \"#22D3EE\", \"#F87171\", \"#4ADE80\", \"#E879F9\", \"#FCD34D\", \"#F97316\", \"#2DD4BF\", \"#F472B6\",\n            \"#10B981\"];\n        let pointTailwind3Colors: string[] = ['#2F4074', '#03B4B4', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822'];\n        let pointTailwind3DarkColors: string[] = ['#8029F1', '#1ABC9C', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822'];\n        let pointFluent2Colors: string[] = ['#6200EE', '#09AF74', '#0076E5', '#CB3587', '#E7910F', '#0364DE', '#66CD15', '#F3A93C', '#107C10',\n            '#C19C00'];\n        let pointFluent2DarkColors: string[] = ['#9BB449', '#2A72D5', '#43B786', '#3F579A', '#584EC6', '#E85F9C', '#6E7A89', '#EA6266',\n            '#0B6A0B', '#C19C00'];\n        let pointFluent2HighContrastColors: string[] = ['#9BB449', '#2A72D5', '#43B786', '#3F579A', '#584EC6', '#E85F9C', '#6E7A89', '#EA6266',\n            '#0B6A0B', '#C19C00'];\n            let selectedTheme: string = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n    \n            if (selectedTheme==='material-dark')\n            {\n                args.border.color = pointMaterialDarkColors[args.point.index % 10];\n            }\n            else if(selectedTheme==='material')\n            {\n                args.fill = pointMaterialColors[args.point.index % 10];\n            }\n            else if (selectedTheme==='fabric-dark' || selectedTheme==='fabric')\n            {\n                args.fill= pointFabricColors[args.point.index % 10];\n            }\n            else if (selectedTheme==='bootstrap5-dark')\n            {\n                args.fill = pointBootstrap5DarkColors[args.point.index % 10];\n            }\n            else if (selectedTheme==='bootstrap5')\n            {\n                args.fill = pointBootstrap5Colors[args.point.index % 10];\n            }\n            else if (selectedTheme==='fluent-dark')\n            {\n                args.fill = pointFluentDarkColors[args.point.index % 10];\n            }\n            else if (selectedTheme==='fluent')\n            {\n                args.fill = pointFluentColors[args.point.index % 10];\n            }\n            else if (selectedTheme==='bootstrap4' || selectedTheme==='bootstrap')\n            {\n                    args.fill = pointBootstrapColors[args.point.index % 10];           \n            }\n            else if (selectedTheme==='tailwind-dark')\n            {\n                args.fill = pointTailwindDarkColors[args.point.index % 10];                     \n    \n            }\n            else if (selectedTheme==='tailwind')\n            {                    \n                args.fill = pointTailwindColors[args.point.index % 10];\n            }\n            else if (selectedTheme==='highcontrast')\n            {\n                args.fill = pointHighContrastColors[args.point.index % 10];           \n            }\n            else if (selectedTheme === 'fluent2') {\n                args.fill = pointFluent2Colors[args.point.index % 10];\n            } else if (selectedTheme === 'fluent2-highcontrast') {\n                args.fill = pointFluent2HighContrastColors[args.point.index % 10];\n            } else if (selectedTheme === 'fluent2-dark') {\n                args.fill = pointFluent2DarkColors[args.point.index % 10];\n            } else if (selectedTheme === 'tailwind3') {\n                args.fill = pointTailwind3Colors[args.point.index % 10];\n            } else if (selectedTheme === 'tailwind3-dark') {\n                args.fill = pointTailwind3DarkColors[args.point.index % 10];\n            }\n            else\n            {\n                args.fill = pointBootstrapColors[args.point.index % 10];           \n            }\n    };\n\n    public data: Object[] = [\n        { x: '2008', y: 1.5 }, { x: '2009', y: 7.6 }, { x: '2010', y: 11 },\n        { x: '2011', y: 16.2 }, { x: '2012', y: 18 }, { x: '2013', y: 21.4 },\n        { x: '2014', y: 16 }, { x: '2015', y: 17.1 }\n        ];\n\n    public marker: Object = {\n        dataLabel: { visible: true,height:7, width:7, isFilled: true, position:'Top', font:{fontWeight: 600, color:'#ffffff'} }\n    };\n    public tooltip: Object = {\n        enable: true\n    };\n\n    public legend: Object = {\n        visible: false\n    };\n\n    public chartArea: Object = {\n        border: {\n            width: 0\n        }\n    };\n// custom code start\npublic width: string = Browser.isDevice ? '100%' : '75%';\n    public load(args: ILoadedEventArgs): void {\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n        args.chart.theme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    };\n// custom code end\n    public title: string = 'Exchange Rate (INR per USD)';\n\n\n    constructor() {\n        //code\n    };\n\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section\">\n    <div align='center'>\n        <ejs-chart style='display:block;' [chartArea]='chartArea' [width]='width' align='center' id='chartcontainer' [title]='title'\n            [primaryXAxis]='primaryXAxis' [primaryYAxis]='primaryYAxis' [tooltip]='tooltip' [legendSettings]='legend' (load)='load($event)'\n            (pointRender)='pointRender($event)'>\n            <e-series-collection>\n                <e-series [dataSource]='data' type='Column' xName='x' yName='y' name='Rate' [marker]='marker'>\n                </e-series>\n            </e-series-collection>\n        </ejs-chart>\n    </div>\n</div>","app.component.css":".control-fluid {\n    padding: 0px !important;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-angular-calendars\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-layouts\":\"*\",\"@syncfusion/ej2-angular-layouts\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}