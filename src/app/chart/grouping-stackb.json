{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { AccumulationChartComponent, IAccTextRenderEventArgs,ChartAllModule, AccumulationChart, GroupModes, IAccPointRenderEventArgs, IAccLoadedEventArgs, AccumulationTheme, AccumulationChartAllModule } from '@syncfusion/ej2-angular-charts';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { Browser } from '@syncfusion/ej2-base';\n\n\n\n/**\n * Sample for groping in pie chart\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ChartAllModule, AccumulationChartAllModule, ]\n})\nexport class AppComponent {\n    public data: Object[] = [\n        { 'x': 'Australia', y: 26, text: 'Australia: 8' },\n        { 'x': 'Russia', y: 19, text: 'Russia: 19' },\n        { 'x': 'Japan', y: 17, text: 'Japan: 12' },\n        { 'x': 'Germany', y: 12, text: 'Germany: 17' },\n        { 'x': 'France', y: 10, text: 'France: 10' },\n        { 'x': 'South Korea', y: 9, text: 'South Korea: 9' },\n        { 'x': 'Great Britain', y: 27, text: 'Great Britain: 27' },\n        { 'x': 'Italy', y: 8, text: 'Italy: 8' },\n        { 'x': 'China', y: 8, text: 'China: 26' },\n        { 'x': 'Netherlands', y: 8, text: 'Netherlands: 8' },\n        { 'x': 'Hungary', y: 8, text: 'Hungary: 8' },\n        { 'x': 'Brazil', y: 7, text: 'Brazil: 7' },\n        { 'x': 'Spain', y: 7, text: 'Spain: 7' },\n        { 'x': 'Kenya', y: 6, text: 'Kenya: 6' },\n    ];\n    @ViewChild('pie')\n    public pie: AccumulationChartComponent | AccumulationChart;\n    public onTextRender(args: IAccTextRenderEventArgs): void {\n        args.text = args.point.x + ' ' + args.point.y;\n    }\n    public onPointRender(args: IAccPointRenderEventArgs): void {\n        if (args.point.isClubbed || args.point.isSliced) {\n            args.fill = '#D3D3D3';\n        }\n    }\n    public radius: string = Browser.isDevice ? '40%' : '70%';\n    public explode: boolean = true;\n    //Initializing Legend\n    public legendSettings: Object = {\n        visible: false,\n    };\n    //Initializing DataLabel\n    public dataLabel: Object = {\n        visible: true,\n        position: 'Outside',\n        connectorStyle: { type: 'Curve', length: '20px' },\n        font: {\n            size: '11px' ,\n            fontWeight: '600'\n        }\n    };\n    public onChange(e: Event): void {\n        let element: HTMLInputElement = <HTMLInputElement>e.target;\n        let currentValue: number = element.value === 'Point' ? 9 : 8;\n        this.pie.series[0].groupMode = <GroupModes>element.value;\n        this.pie.series[0].groupTo = currentValue.toString();\n        this.pie.series[0].animation.enable = false;\n        document.getElementById('clubtext').innerHTML = currentValue.toString();\n        this.pie.removeSvg();\n        this.pie.refreshSeries();\n        this.pie.refreshChart();\n    };\n    public onClubvalue(e: Event): void {\n        let clubvalue: string = (document.getElementById('clubvalue') as HTMLSelectElement).value;\n        this.pie.series[0].groupTo = clubvalue;\n        this.pie.series[0].animation.enable = false;\n        document.getElementById('clubtext').innerHTML = clubvalue;\n        this.pie.removeSvg();\n        this.pie.refreshSeries();\n        this.pie.refreshChart();\n    };\n    // custom code start\n    public load(args: IAccLoadedEventArgs): void {\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n        args.accumulation.theme = <AccumulationTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    };\n    // custom code end\n    public clubvalue: string = '9';\n    public startAngle: number = 0;\n    public endAngle: number = 360;\n    public tooltip: Object = { enable: true, header:'', format:'<b>${point.x}</b><br> Gold Medals: <b>${point.y}</b>', enableHighlight: true };\n    public title: string = 'Rio Olympic Gold Medals';\n    public groupMode: DropDownList;\n    ngOnInit(): void {\n        this.groupMode = new DropDownList({\n            index: 0,\n            width: 120,\n            change: () => {\n                let mode: string = this.groupMode.value.toString();\n                let currentValue: number = mode === 'Point' ? 9 : 8;\n                this.pie.series[0].groupMode = <GroupModes>mode;\n                this.pie.series[0].groupTo = currentValue.toString();\n                this.pie.series[0].animation.enable = false;\n                document.getElementById('clubtext').innerHTML = currentValue.toString();\n                (document.getElementById('clubvalue') as HTMLInputElement).value = currentValue.toString();\n                this.pie.removeSvg();\n                this.pie.refreshSeries();\n                this.pie.refreshChart();\n            }\n        });\n        this.groupMode.appendTo('#mode');\n    }\n    constructor() {\n        //code\n    };\n\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section\">\n    <div class=\"col-md-8\">\n        <ejs-accumulationchart id=\"container\" #pie style='display:block; width: 92%' [legendSettings]=\"legendSettings\" [tooltip]=\"tooltip\" [title]=\"title\" (textRender)=\"onTextRender($event)\" (pointRender)=\"onPointRender($event)\" (load)='load($event)' [enableBorderOnMouseMove]='false'>\n            <e-accumulation-series-collection>\n                <e-accumulation-series name='RIO' [dataSource]='data' xName='x' yName='y' [startAngle]=\"startAngle\" [endAngle]=\"endAngle\" [radius]=\"radius\" innerRadius=\"0%\" [explode]=\"explode\" [dataLabel]=\"dataLabel\" [groupTo]='clubvalue' groupMode='Point'>\n                </e-accumulation-series>\n            </e-accumulation-series-collection>\n        </ejs-accumulationchart>\n    </div>\n    <div class=\"col-md-4 property-section\">\n        <div class=\"property-panel-section\">\n            <div class=\"property-panel-header\">Properties</div>\n            <div class=\"property-panel-content\">\n            <table id=\"property\" class=\"property-panel-table\" title=\"Properties\" style=\"width: 100%\">\n                <tr>\n                 <td style=\"width: 50%\">\n                       <div>GroupModes:\n                       </div>\n                </td>\n                <td style=\"width: 50%;\">\n                    <div>\n                        <select id=\"mode\">\t\t\t\t \n                            <option value=\"Point\">Point</option>        \n                            <option value=\"Value\">Value</option>\n                        </select>\n                    </div>\n                  </td>\n                  </tr>\n                    <tr style=\"height: 50px\">\n                        <td style=\"width: 60%\">\n                            <div id=\"groupValue\">Group To\n                            </div>\n                        </td>\n                        <td style=\"width: 40%;\">\n                            <div data-role=\"rangeslider\">\n                                <input type=\"range\" name=\"clubvalue\" value=\"9\" min=\"0\" max=\"27\" (touchmove)='onClubvalue($event)' (change)='onClubvalue($event)' autocomplete=\"off\" id=\"clubvalue\" style=\"width:90%\" aria-labelledby=\"Slider\">\n                            </div>\n                        </td>\n                        <td style=\"width: 60%;\">\n                            <p id=\"clubtext\" style=\"font-weight: normal; padding-top: 15px\">9</p>\n                    </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n<style>\n    .control-section {\n        min-height: 450px;\n    }\n</style>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-angular-calendars\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-layouts\":\"*\",\"@syncfusion/ej2-angular-layouts\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}