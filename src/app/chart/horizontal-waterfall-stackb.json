{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation } from '@angular/core';\nimport { ILoadedEventArgs, ITooltipRenderEventArgs, IPointRenderEventArgs, ChartTheme, ChartAllModule, ILegendRenderEventArgs } from '@syncfusion/ej2-angular-charts';\nimport { Browser } from '@syncfusion/ej2-base';\n\n\n/**\n * Sample for Waterfall Series\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.css'],\n  encapsulation: ViewEncapsulation.None,\n  standalone: true,\n  imports: [ ChartAllModule, ]\n})\nexport class AppComponent {\n\n  public dataSource: Object[] = [\n    { x: 'JAN', y: 55 },\n    { x: 'MAR', y: 42 },\n    { x: 'JUNE', y: -12 },\n    { x: 'AUG', y: 40 },\n    { x: 'OCT', y: -26 },\n    { x: 'DEC', y: 45 },\n    { x: '2023' }\n  ];\n\n  //Initializing Primary X Axis\n  public primaryXAxis: Object = {\n    valueType: 'Category',\n    edgeLabelPlacement: 'Shift',\n    majorGridLines: { width: 1 },\n    majorTickLines: { width: 0 },\n    isInversed: true\n\n  };\n  //Initializing Primary Y Axis\n  public primaryYAxis: Object = {\n    minimum: 0, maximum: 150, interval: 25,\n    labelFormat: '{value}K',\n    edgeLabelPlacement: 'Shift',\n    majorGridLines: { width: 1 }\n  };\n  public chartArea: Object = {\n    border: {\n      width: 0\n    }\n  };\n  public width: string = Browser.isDevice ? '100%' : '70%';\n\n  public title: string = 'Revenue Variation';\n\n  public legend: Object = {\n    mode: 'Point', toggleVisibility: false, visible: true\n  };\n  public marker: Object = {\n    dataLabel: { visible: true, position: 'Middle' }\n  };\n  public border: Object = {\n    width: 0.2, color: 'Black'\n  }\n  public connector: Object = {\n    width: 0.8, dashArray: '1,2', color: '#5F6A6A'\n  };\n\n  public cornerRadius: Object = {\n    topLeft: 3, bottomLeft: 3, bottomRight: 3, topRight: 3\n  }\n\n  public sum: number[] = [6];\n  //Initializing Tooltip\n  public tooltip: Object = {\n    enable: true, header: '', format: \"<b>${point.x}</b> <br> Product Revenue : <b>${point.y}</b>\"\n  }\n\n  public legendRender(args: ILegendRenderEventArgs): void {\n    if (args.text === 'JAN') {\n      args.text = 'Increase';\n    }\n    else if (args.text === 'OCT') {\n      args.text = 'Decrease';\n      args.fill = '#e56590'\n    }\n    else if (args.text === '2023') {\n      args.text = 'Total';\n      args.fill = '#4E81BC'\n    }\n    else {\n      args.cancel = true;\n    }\n  };\n\n\n  // custom code start\n  public load(args: ILoadedEventArgs): void {\n    let selectedTheme: string = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n    args.chart.theme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n  };\n  // custom code end\n\n  constructor() {\n    //code\n  };\n\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section\">\n    <div>\n        <ejs-chart id='chartcontainer' [chartArea]='chartArea' [width]='width' align='center' style=\"display:block;\"\n            [title]='title' [primaryXAxis]='primaryXAxis' [primaryYAxis]='primaryYAxis' [legendSettings]='legend'\n            [tooltip]='tooltip' [chartArea]='chartArea' isTransposed=true (load)='load($event)'\n            (legendRender)='legendRender($event)' selectionMode='None'>\n            <e-series-collection>\n                <e-series [dataSource]='dataSource' type='Waterfall' xName='x' name=\"Increases\" yName='y'\n                    [connector]='connector' [border]='border' [marker]='marker' negativeFillColor='#e56590'\n                    columnWidth=\"0.5\" [cornerRadius]='cornerRadius' [sumIndexes]='sum' > </e-series>\n            </e-series-collection>\n        </ejs-chart>\n    </div>\n</div>","app.component.css":".control-fluid {\n    padding: 0px !important;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-angular-calendars\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-layouts\":\"*\",\"@syncfusion/ej2-angular-layouts\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}