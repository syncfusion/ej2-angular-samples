{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { NumericTextBox } from '@syncfusion/ej2-inputs';\nimport { ILoadedEventArgs, ChartComponent, ChartTheme, ChartAllModule } from '@syncfusion/ej2-angular-charts';\n\n\n/**\n * Sample for box and whisker series\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ ChartAllModule, ]\n})\nexport class AppComponent {\n    public data1: Object[] = [{ x: -6, y: 2 }, { x: -3, y: -4 }, { x: 1.5, y: 3.5 }, { x: 6, y: 4.5 }];\n    public data2: Object[] = [\n        { x: -6, y: 2 }, { x: -5, y: 0 }, { x: -4.511, y: -0.977 }, { x: -3, y: -4 }, { x: -1.348, y: -1.247 },\n        { x: -0.6, y: 0 }, { x: 0, y: 1 }, { x: 1.5, y: 3.5 }, { x: 6, y: 4.5 },\n    ];\n    public data3: Object[] = [\n        { x: -6, y: 2 }, { x: -5.291, y: 0 }, { x: -5, y: -0.774 }, { x: -3, y: -4 }, { x: -0.6, y: -0.965 },\n        { x: -0.175, y: 0 }, { x: 0, y: 0.404 }, { x: 1.5, y: 3.5 }, { x: 3.863, y: 5.163 }, { x: 6, y: 4.5 },\n    ];\n    //Initializing Primary X Axis\n    public primaryXAxis: Object = {\n        minimum: -8, maximum: 8, interval: 2,\n        valueType: 'Double',\n        lineStyle: {\n            width: 2\n        },\n        minorTickLines: { width: 0 },\n        majorTickLines: { width: 0 },\n        crossesAt: 0,\n        minorTicksPerInterval: 3\n    };\n    //Initializing Primary Y Axis\n    public primaryYAxis: Object = {\n        minimum: -8, maximum: 8, interval: 2,\n        lineStyle: {\n            width: 2\n        },\n        majorTickLines: { width: 0 },\n        minorTickLines: { width: 0 },\n        crossesAt: 0,\n        minorTicksPerInterval: 3,\n    };\n    public tooltip: object = {\n        enable: true\n    }\n    public marker: Object = {\n        visible: false,\n        height: 7,\n        width: 7,\n    };\n    //Initializing Tooltip\n        // custom code start\n    public load(args: ILoadedEventArgs): void {\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n        args.chart.theme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i,Â 'Contrast').replace(/-highContrast/i, 'HighContrast');\n      };\n          // custom code end\n    public title: string = 'Spline Interpolation';\n    @ViewChild('chart')\n    public chart: ChartComponent;\n    public check(e: Event): void {\n        let value: boolean = (e.target as HTMLInputElement).checked;\n        if (this.axis.index === 0) {\n            this.chart.primaryXAxis.placeNextToAxisLine = value;\n        } else {\n            this.chart.primaryYAxis.placeNextToAxisLine = value;\n        }\n        this.chart.dataBind();\n    };\n    public legend: Object = {\n        visible: true,\n        enableHighlight: true\n    };\n    public axis: DropDownList;\n    public crossValue: NumericTextBox;\n    ngOnInit(): void {\n        this.axis = new DropDownList({\n            index: 0,\n            width: 120,\n            change: () => {\n                let target: HTMLInputElement = document.getElementById('axisElements') as HTMLInputElement;\n                if (this.axis.index === 0) {\n                    target.checked = this.chart.primaryXAxis.placeNextToAxisLine;\n                    this.crossValue.value = +this.chart.primaryXAxis.crossesAt;\n                } else {\n                    target.checked = this.chart.primaryYAxis.placeNextToAxisLine;\n                    this.crossValue.value = +this.chart.primaryYAxis.crossesAt;\n                }\n                this.chart.dataBind();\n            }\n        });\n        this.axis.appendTo('#selectAxis');\n        this.crossValue = new NumericTextBox({\n            value: 0, min: -8,\n            max: 8, width: 120,\n            step: 2,\n            change: () => {\n                if (this.axis.index === 0) {\n                    this.chart.primaryXAxis.crossesAt = this.crossValue.value;\n                } else {\n                    this.chart.primaryYAxis.crossesAt = this.crossValue.value;\n                }\n                this.chart.dataBind();\n            }\n        });\n        this.crossValue.appendTo('#crossingValue');\n    }\n    constructor() {\n        //code\n    };\n\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n\n    <div class=\"col-md-8 control-section sb-property-border\">\n        <ejs-chart style='display:block;' [legendSettings]='legend' #chart id='chartcontainer' [primaryXAxis]='primaryXAxis' [tooltip]='tooltip'\n            [primaryYAxis]='primaryYAxis' [title]='title' (load)='load($event)'>\n            <e-series-collection>\n                <e-series [dataSource]='data2' name='Linear Interpolation' type='Line' fill='blue' xName='x' yName='y' width=2 enableTooltip=false>\n                </e-series>\n                <e-series [dataSource]='data3' name='Cubic Spline Interpolation' fill='green' type='Spline' xName='x' yName='y' width=2 enableTooltip=false>\n                </e-series>\n                <e-series [dataSource]='data1' name='Data Points' fill='red' type='Scatter' xName='x' yName='y' width=2 [marker]='marker'>\n                </e-series>                \n            </e-series-collection>\n        </ejs-chart>\n    </div>\n    <div class=\"col-md-4 property-section\">\n        <div class=\"property-panel-section\">\n            <div class=\"property-panel-header\">Properties</div>\n            <div class=\"property-panel-content\">\n                <table id=\"property\" class=\"property-panel-table\" title=\"Properties\" style=\"width: 100%\">\n                    <tr style=\"height: 50px\">\n                        <td style=\"width: 50%\">\n                            <div>Axis:</div>\n                        </td>\n                        <td style=\"width: 50%;padding-left: 10px; padding-right: 10px\">\n                            <div>\n                                <select name=\"selectIndex\" id=\"selectAxis\" style=\"margin-left: -10px\">\n                                    <option value=\"xaxis\">X</option>\n                                    <option value=\"yaxis\">Y</option>\n                                </select>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr style=\"height: 50px\">\n                        <td style=\"width: 50%\">\n                            <div id=\"crossValue\">Crosses Value:</div>\n                        </td>\n                        <td style=\"width: 40%;\">\n                            <div style=\"margin-top: 0px;\">\n                                <input type=\"text\" id=\"crossingValue\" aria-labelledby=\"Text\">\n                            </div>\n                        </td>\n                    </tr>\n                    <tr style=\"height: 50px\">\n                        <td style=\"width: 50%\">\n                            <div id=\"axis\">Placing Label Near to Axis Line:</div>\n                        </td>\n                        <td style=\"width: 50%;padding-left: 10px; padding-right: 10px\">\n                            <div>\n                                <input type=\"checkbox\" (change)='check($event)' id=\"axisElements\" checked=true aria-labelledby=\"Checkbox checked\">\n                            </div>\n                        </td>\n                    </tr>\n                </table>\n        \n        </div>\n    </div>\n</div>\n<style>\n    .control-section {\n        min-height: 450px;\n    }\n</style>","app.component.css":".control-fluid {\n    padding: 0px !important;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-angular-calendars\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-layouts\":\"*\",\"@syncfusion/ej2-angular-layouts\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}