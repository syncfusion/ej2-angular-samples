{"main.ts":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","polyfills.ts":"/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n  <link href=\"../../styles/material.css\" rel=\"stylesheet\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n</head>\n<body class=\"ej2-new\"> \n\n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WLQL39J\"height=\"0\"width=\"0\"style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app.component.ts":"import { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport {\n    AccumulationChartComponent, IMouseEventArgs, Index, IAccTextRenderEventArgs,\n    AccumulationChart, IAccLoadedEventArgs, AccumulationTheme\n} from '@syncfusion/ej2-angular-charts';\nimport { getElement, indexFinder } from '@syncfusion/ej2-charts';\nimport { Browser } from '@syncfusion/ej2-base';\n\n/**\n * Sample for Drilldown in Pie chart\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n    public data: Object[] = [\n        { x: 'SUV', y: 25 }, { x: 'Car', y: 37 }, { x: 'Pickup', y: 15 },\n        { x: 'Minivan', y: 23 }\n    ];\n    public suvs: Object = [{ x: 'Toyota', y: 8 }, { x: 'Ford', y: 12 }, { x: 'GM', y: 17 }, { x: 'Renault', y: 6 }, { x: 'Fiat', y: 3 },\n    { x: 'Hyundai', y: 16 }, { x: 'Honda', y: 8 }, { x: 'Maruthi', y: 10 }, { x: 'BMW', y: 20 }];\n\n    public cars: Object = [{ x: 'Toyota', y: 7 }, { x: 'Chrysler', y: 12 }, { x: 'Nissan', y: 9 }, { x: 'Ford', y: 15 },\n    { x: 'Tata', y: 10 },\n    { x: 'Mahindra', y: 7 }, { x: 'Renault', y: 8 }, { x: 'Skoda', y: 5 }, { x: 'Volkswagen', y: 15 }, { x: 'Fiat', y: 3 }];\n\n    public pickups: Object = [{ x: 'Nissan', y: 9 }, { x: 'Chrysler', y: 4 }, { x: 'Ford', y: 7 }, { x: 'Toyota', y: 20 },\n    { x: 'Suzuki', y: 13 }, { x: 'Lada', y: 12 }, { x: 'Bentley', y: 6 }, { x: 'Volvo', y: 10 }, { x: 'Audi', y: 19 }];\n\n    public minivans: Object = [{ x: 'Hummer', y: 11 }, { x: 'Ford', y: 5 }, { x: 'GM', y: 12 }, { x: 'Chrysler', y: 3 },\n    { x: 'Jaguar', y: 9 },\n    { x: 'Fiat', y: 8 }, { x: 'Honda', y: 15 }, { x: 'Hyundai', y: 4 }, { x: 'Scion', y: 11 }, { x: 'Toyota', y: 17 }];\n\n    @ViewChild('pie')\n    public pie: AccumulationChartComponent | AccumulationChart;\n    //Initializing Legend\n    public legendSettings: Object = {\n        visible: false,\n    };\n    //Initializing Datalabel\n    public dataLabel: Object = {\n        visible: true, position: 'Inside', enableRotation : false, connectorStyle: { type: 'Curve', length: '10%' }, font: {color: 'white', fontWeight:'600' }\n    };\n    public explode: boolean = false;\n    public content: string = '<div id= \"white\" style=\"cursor:pointer;padding:3px;width:30px; height:30px;\"><img src=\"./assets/chart/images/white.png\" id=\"back\" /><div>';\n    public startAngle: number = 0;\n    public explodeIndex: number = 2;\n    public endAngle: number = 360;\n    public title: string = 'Automobile Sales by Category';\n    public isparent: boolean = true;\n    public onTextRender(args: IAccTextRenderEventArgs): void {\n        args.text = args.point.x + ' ' + args.point.y + '%';\n    }\n    public onChartMouseClick(args: IMouseEventArgs): void {\n        let index: Index = indexFinder(args.target);\n        let lightThemeContent = '<div id=\"back\" style=\"cursor:pointer;padding:3px;width:30px; height:30px;\">' +\n        '<img src=\"./assets/chart/images/back.png\" id=\"back\" />';\n        let darkThemeContent = '<div id= \"white\" style=\"cursor:pointer;padding:3px;width:30px; height:30px;\">'+\n        '<img src=\"./assets/chart/images/white.png\" id=\"back\" /><div>';\n        if (this.isparent && document.getElementById('container_Series_' + index.series + '_Point_' + index.point)) {\n            this.isparent = false;\n            this.pie.annotations = [{\n                content: (this.pie.theme === 'HighContrast')|| (this.pie.theme.indexOf('Dark') > -1) ? darkThemeContent : lightThemeContent, region: 'Series', x: '50%', y: '50%'\n            }];\n            this.pie.series[0].innerRadius = '30%';\n            switch (index.point) {\n                case 0:\n                    this.pie.series[0].dataSource = this.suvs;\n                    this.pie.title = 'Automobile Sales in the SUV Segment';\n                    document.getElementById('text').innerHTML = 'SUV';\n                    break;\n                case 1:\n                    this.pie.series[0].dataSource = this.cars;\n                    this.pie.title = 'Automobile Sales in the Car Segment';\n                    document.getElementById('text').innerHTML = 'Car';\n                    break;\n                case 2:\n                    this.pie.series[0].dataSource = this.pickups;\n                    this.pie.title = 'Automobile Sales in the Pickup Segment';\n                    document.getElementById('text').innerHTML = 'Pickup';\n                    break;\n                case 3:\n                    this.pie.series[0].dataSource = this.minivans;\n                    this.pie.title = 'Automobile Sales in the Minivan Segment';\n                    document.getElementById('text').innerHTML = 'Minivan';\n                    break;\n            }\n            this.pie.series[0].radius = Browser.isDevice ? '90%' : '80%';\n            this.pie.series[0].dataLabel.connectorStyle.length = '20px'\n            this.pie.series[0].dataLabel.position = Browser.isDevice ? 'Inside' : 'Outside';\n            this.pie.series[0].dataLabel.enableRotation = true;\n            this.pie.series[0].dataLabel.font.color = '';\n            this.pie.legendSettings.visible = false;\n            this.pie.visibleSeries[0].explodeIndex = null;\n            this.pie.enableSmartLabels = true;\n            this.pie.series[0].animation.enable = false;\n            this.pie.refresh();\n            document.getElementById('category').style.visibility = 'visible';\n            document.getElementById('symbol').style.visibility = 'visible';\n            document.getElementById('text').style.visibility = 'visible';\n        }\n        if (args.target.indexOf('back') > -1) {\n            this.pie.annotations[0].content = '';\n            this.pie.series[0].dataSource = this.data;\n            this.pie.series[0].dataLabel = this.dataLabel;\n            this.isparent = true;\n            this.pie.title = this.title;\n            this.pie.legendSettings.visible = false;\n            this.pie.visibleSeries[0].explodeIndex = this.explodeIndex;\n            this.pie.enableSmartLabels = false;\n            this.pie.series[0].innerRadius = '0%';\n            this.pie.series[0].animation.enable = false;\n            (getElement('category') as HTMLElement).style.visibility = 'hidden';\n            document.getElementById('symbol').style.visibility = 'hidden';\n            document.getElementById('text').style.visibility = 'hidden';\n            this.pie.refresh();\n        }\n    }\n    public onClick(e: MouseEvent): void {\n        this.pie.series[0].dataSource = this.data;\n        this.pie.series[0].dataLabel = this.dataLabel;\n        this.isparent = true;\n        this.pie.title = this.title;\n        this.pie.legendSettings.visible = false;\n        this.pie.visibleSeries[0].explodeIndex = this.explodeIndex;\n        this.pie.enableSmartLabels = false;\n        this.pie.annotations[0].content = '';\n        this.pie.series[0].dataSource = this.data;\n        this.pie.series[0].dataLabel = this.dataLabel;\n        this.pie.title = this.title;\n        this.pie.legendSettings.visible = false;\n        this.pie.visibleSeries[0].explodeIndex = this.explodeIndex;\n        this.pie.enableSmartLabels = false;\n        this.pie.series[0].innerRadius = '0%';\n        this.pie.series[0].animation.enable = false;\n        this.pie.refresh();\n        (getElement('category') as HTMLElement).style.visibility = 'hidden';\n        (e.target as HTMLButtonElement).style.visibility = 'hidden';\n        document.getElementById('symbol').style.visibility = 'hidden';\n        document.getElementById('text').style.visibility = 'hidden';\n    }\n // custom code start\n    public load(args: IAccLoadedEventArgs): void {\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.accumulation.theme = <AccumulationTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast');\n        if (selectedTheme === 'highcontrast') {\n            args.accumulation.series[0].dataLabel.font.color = \"white\";\n        }\n        if (args.accumulation.theme.indexOf('Dark') > -1){\n            args.accumulation.series[0].dataLabel.font.color = \"white\";\n        }\n    };\n     // custom code end\n    constructor() {\n        //code\n    };\n\n}","app/app.module.ts":"import { DashboardLayoutModule } from '@syncfusion/ej2-angular-layouts';\n\nimport { ChartAllModule, AccumulationChartAllModule, RangeNavigatorAllModule } from '@syncfusion/ej2-angular-charts';\n\nimport { DropDownListAllModule } from '@syncfusion/ej2-angular-dropdowns';\n\nimport { DatePickerModule } from '@syncfusion/ej2-angular-calendars';\n\nimport { NumericTextBoxModule } from '@syncfusion/ej2-angular-inputs';\n\nimport { ButtonModule } from '@syncfusion/ej2-angular-buttons';\n\nimport { HttpModule } from '@angular/http';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { RouterModule } from '@angular/router';\n\nimport { CommonModule } from '@angular/common';\n\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from '../app.component';\n@NgModule({ declarations: [ AppComponent ], imports: [ ChartAllModule, RangeNavigatorAllModule, BrowserModule, ButtonModule, AccumulationChartAllModule, NumericTextBoxModule, DatePickerModule, DropDownListAllModule, DashboardLayoutModule], providers: [], bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","app.component.html":"<div class=\"control-section\">\n    <div>\n        <div id=\"link\">\n            <a id=\"category\" (click)=\"onClick($event)\" style=\"visibility:hidden; display:inline-block\">\n\t\t\t\t\tSales by Category \n\t\t</a>\n            <p style=\"visibility:hidden; display:inline-block\" id=\"symbol\">&nbsp;&gt;&gt;&nbsp;</p>\n            <p id=\"text\" style=\"display:inline-block;\"></p>\n        </div>\n        <button type=\"button\" id=\"back\" style=\"visibility: hidden;\" (click)=\"onClick($event)\">Back</button>\n        <ejs-accumulationchart id=\"container\" #pie style='display:block; width: 92%' [legendSettings]=\"legendSettings\" [enableSmartLabels]='false' [title]=\"title\" (textRender)=\"onTextRender($event)\" (chartMouseClick)=\"onChartMouseClick($event)\" (load)='load($event)' [enableBorderOnMouseMove]='false'>>\n            <e-accumulation-series-collection>\n                <e-accumulation-series [dataSource]='data' xName='x' yName='y' [startAngle]=\"startAngle\" [endAngle]=\"endAngle\" innerRadius=\"0%\" radius=\"70%\" [dataLabel]=\"dataLabel\" [explode]=\"explode\" explodeOffset='10%' [explodeIndex]='explodeIndex'>\n                </e-accumulation-series>\n            </e-accumulation-series-collection>\n        </ejs-accumulationchart>\n    </div>\n</div>\n<style>\n    .control-section {\n        min-height: 450px;\n    }\n    \n    #category:hover {\n        cursor: pointer;\n    }\n</style>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-layouts\":\"*\",\"@syncfusion/ej2-angular-layouts\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-angular-calendars\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-compression\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-file-utils\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-pdf-export\":\"*\",\"@syncfusion/ej2-svg-base\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\"}"}