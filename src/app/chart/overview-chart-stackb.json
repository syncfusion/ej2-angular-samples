{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component , ViewEncapsulation } from '@angular/core';\nimport { ILoadedEventArgs, ChartTheme, IAccPointRenderEventArgs, IAccLoadedEventArgs, AccumulationTheme, ChartAllModule, AccumulationChartAllModule } from '@syncfusion/ej2-angular-charts';\nimport { Browser } from '@syncfusion/ej2-base';\n\nimport { DashboardLayoutModule } from '@syncfusion/ej2-angular-layouts';\n\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ DashboardLayoutModule, ChartAllModule, AccumulationChartAllModule, ]\n})\n\nexport class AppComponent {\n  public layoutColor: string;\n  public cellSpacing: number[] = [15, 15];\n  public cellAspectRatio: number = Browser.isDevice ? 1 : 0.8;\n  public columns: number = Browser.isDevice ? 2 : 8;\n  public columnSizeX: number = Browser.isDevice ? 1: 5;\n  public columnSizeY: number = Browser.isDevice ? 1 : 2;\n  public pieColumn: number = Browser.isDevice ? 1 : 5;\n  public pieSizeX: number = Browser.isDevice ? 1 : 3;\n  public pieSizeY: number = Browser.isDevice ? 1 : 2;\n  public splineRow: number = Browser.isDevice ? 1 : 4;\n  public splineSizeX: number = Browser.isDevice ? 2 : 8;\n  public splineSizeY: number = Browser.isDevice ? 1 : 3;\n  public chartArea: Object = {\n    border: { width: 0,},\n  };\n\n  // Column Chart Data\n  public columnChartDataCollection: Object[] = [\n    { Period: \"2017\", Percentage: 60, TextMapping: \"60%\" },\n    { Period: \"2018\", Percentage: 56, TextMapping: \"56%\" },\n    { Period: \"2019\", Percentage: 71, TextMapping: \"71%\" },\n    { Period: \"2020\", Percentage: 85, TextMapping: \"85%\" },\n    { Period: \"2021\", Percentage: 73, TextMapping: \"73%\" }\n  ];\n  public columnChartData: Object[] = [\n    { Period: \"2017\", Percentage: 40, TextMapping: \"40%\" },\n    { Period: \"2018\", Percentage: 44, TextMapping: \"44%\" },\n    { Period: \"2019\", Percentage: 29, TextMapping: \"29%\" },\n    { Period: \"2020\", Percentage: 15, TextMapping: \"15%\" },\n    { Period: \"2021\", Percentage: 27, TextMapping: \"27%\" }\n  ];\n\n  //Initializing Primary X Axis\n  public columnChartprimaryXAxis: Object = {\n    valueType: 'Category',\n    majorGridLines: { width: 0 },\n    lableStyle: { size: '11px' }\n  };\n  //Initializing Primary Y Axis\n  public columnChartprimaryYAxis: Object = {\n    labelFormat: '{value}%',\n    lineStyle: { width: 0 },\n    maximum: 100,\n    minimum: 0,\n    majorTickLines: { width: 0 },\n    lableStyle: { size: '11px' },\n    titleStyle: { size: '13px' }\n  };\n\n  public columnChartlegendSettings: Object = {\n    padding:5,\n    shapeHeight:8,\n    shapeWidth:8\n  };\n\n  public columnChartmarker: Object = {\n    dataLabel: {\n      visible: true, position: 'Middle', name:'TextMapping',\n      font: {\n        color:'#FFFFFF'\n      }\n    },\n  };\n\n  public series1Fill: string = '#2485fa'\n  public series2Fill: string = '#FEC200'\n\n  //Pie Chart\n  \n  public data: Object[] = [\n    { Product : \"TV : 30 (12%)\", Percentage : 12, TextMapping : \"TV, 30 <br>12%\"},\n    { Product : \"PC : 20 (8%)\", Percentage : 8, TextMapping : \"PC, 20 <br>8%\"},\n    { Product : \"Laptop : 40 (16%)\",  Percentage : 16, TextMapping : \"Laptop, 40 <br>16%\"},\n    { Product : \"Mobile : 90 (36%)\", Percentage : 36, TextMapping : \"Mobile, 90 <br>36%\"},\n    { Product : \"Camera : 27 (11%)\", Percentage : 11, TextMapping : \"Camera, 27 <br>11%\"}\n  ];\n\n  public animation: Object = {\n    enable: true\n  };\n  public border: Object = { width:3 };\n  public pieTooltipSetting: Object = { enable: true, format: '${point.x}', enableHighlight: true };\n  public palettes: string[] = [\"#61EFCD\", \"#CDDE1F\", \"#FEC200\", \"#CA765A\", \"#2485FA\", \"#F57D7D\", \"#C152D2\",\n    \"#8854D9\", \"#3D4EB8\", \"#00BCD7\", \"#4472c4\", \"#ed7d31\", \"#ffc000\", \"#70ad47\", \"#5b9bd5\", \"#c1c1c1\", \"#6f6fe2\", \"#e269ae\", \"#9e480e\", \"#997300\"];\n\n  public dataLabel: Object = {\n    visible: true,\n    position: 'Outside', name: 'TextMapping',\n    connectorStyle: { length: '10px', type:'Curve' }\n  };\n  public enableBorderOnMouseMove: boolean = false;\n  public enableSmartLabels: boolean = false;\n  public pielegendSettings: Object = {\n    visible: false,\n  };\n  public startAngle: number = 270;\n  public endAngle: number = 270;\n  public accumulationload(args: IAccLoadedEventArgs): void {\n    let selectedTheme: string = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n    args.accumulation.theme = <AccumulationTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n  };  \n\n  //Spline Area\n  \n  public spLineAreaData: Object[] = [\n       { Period : \"Jan\", Percentage : 3600 },\n       { Period : \"Feb\", Percentage : 6200 },\n       { Period : \"Mar\", Percentage : 8100 },\n       { Period : \"Apr\", Percentage : 5900 },\n       { Period : \"May\", Percentage : 8900 },\n       { Period : \"Jun\", Percentage : 7200 },\n       { Period : \"Jul\", Percentage : 4300 },\n       { Period : \"Aug\", Percentage : 4600 },\n       { Period : \"Sep\", Percentage : 5500 },\n       { Period : \"Oct\", Percentage : 6350 },\n       { Period : \"Nov\", Percentage : 5700 },\n       { Period : \"Dec\", Percentage : 8000 }\n  ];\n  public spLineAreaData2: Object[] = [\n      { Period : \"Jan\", Percentage : 6400,},\n      { Period : \"Feb\", Percentage : 5300 },\n      { Period : \"Mar\", Percentage : 4900 },\n      { Period : \"Apr\", Percentage : 5300 },\n      { Period : \"May\", Percentage : 4200 },\n      { Period : \"Jun\", Percentage : 6500 },\n      { Period : \"Jul\", Percentage : 7900 },\n      { Period : \"Aug\", Percentage : 3800 },\n      { Period : \"Sep\", Percentage : 6800 },\n      { Period : \"Oct\", Percentage : 3400 },\n      { Period : \"Nov\", Percentage : 6400 },\n      { Period : \"Dec\", Percentage : 6800 }\n  ];\n\n  //Initializing Primary X Axis\n  public spLineAreaprimaryXAxis: Object = {\n    valueType: 'Category',\n    majorGridLines: { width: 0 },\n    majorTickLines: { width: 0 },\n    edgeLabelPlacement: 'Shift',\n    lableStyle: { size: '11px' }\n  };\n  //Initializing Primary Y Axis\n  public spLineAreaprimaryYAxis: Object = {\n    labelFormat: '${value}',\n    lineStyle: { width: 0 },\n    maximum: 12000,\n    minimum: 0,\n    majorTickLines: { width: 0 },\n    lableStyle: { size: '11px' },\n    textStyle: { size: '13px' }\n  };\n  public spLineLegendSettings: Object = {\n    enableHighlight: true,\n  }\n  public spLineAreatooltipSettings: Object = {\n    enable: true,\n    shared: true,\n    enableMarker: false\n  };\n  public spLineAreaBorder: Object = {\n    width: 2.75,\n    color:'#2485fa'\n  };\n  public spLineAreaBorder1: Object = {\n    width: 2.75,\n    color:'#FEC200'\n  };\n\n  public spLineAreaFill: string = '#2485fa'\n  public spLineAreaFill1: string = '#FEC200'\n\n  public load(args: ILoadedEventArgs ): void {\n    let selectedTheme: string = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n    args.chart.theme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    args.chart.series[0].fill = 'url(#' +'gradient-chart)';\n    args.chart.series[1].fill = 'url(#' +'gradient-chart1)';\n};\n\npublic pointRender(args: IAccPointRenderEventArgs): void {\n  let selectedTheme: string = location.hash.split('/')[1];\n  selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n  if (selectedTheme.indexOf('dark') > -1 )\n  {\n    if(selectedTheme.indexOf('material') > -1 )\n    {\n      args.border.color = '#303030' ;\n      this.layoutColor= '#303030' ;\n    }\n    else if(selectedTheme.indexOf('bootstrap5') > -1 )\n    {\n      args.border.color = '#212529' ;\n      this.layoutColor= '#212529' ;\n    }\n    else if(selectedTheme.indexOf('bootstrap') > -1 )\n    {\n      args.border.color = '#1A1A1A' ;\n      this.layoutColor= '#1A1A1A' ;\n    }\n    else if(selectedTheme.indexOf('tailwind') > -1 )\n    {\n      args.border.color = '#1F2937' ;\n      this.layoutColor= '#1F2937' ;\n    }\n    else if(selectedTheme.indexOf('fluent') > -1 )\n    {\n      args.border.color = '#252423' ;\n      this.layoutColor= '#252423' ;\n    }\n    else if(selectedTheme.indexOf('fabric') > -1 )\n    {\n      args.border.color = '#201f1f' ;\n      this.layoutColor= '#201f1f' ;\n    }\n    else\n    {\n      args.border.color = '#222222' ;\n      this.layoutColor= '#222222' ;\n    }\n  }\n  else if(selectedTheme.indexOf('highcontrast') > -1)\n  {\n    args.border.color = '#000000' ;\n    this.layoutColor= '#000000' ;\n  }\n  else\n  {\n    args.border.color = '#FFFFFF' ;\n    this.layoutColor= '#FFFFFF' ;\n  }\n\n  if(selectedTheme.indexOf('highcontrast') > -1 || selectedTheme.indexOf('dark') > -1)\n  {\n    let element =  document.querySelector('#header1') as HTMLElement \n    element.style.color='#F3F2F1';\n    let element1 =  document.querySelector('#header2') as HTMLElement \n    element1.style.color='#F3F2F1';\n    let element2 =  document.querySelector('#header3') as HTMLElement \n    element2.style.color='#F3F2F1';\n  }\n  if(selectedTheme.indexOf('tailwind') > -1)\n  {\n    let element =  document.querySelector('#layout_0_body') as HTMLElement \n    element.style.padding='0';\n    let element1 =  document.querySelector('#layout_1_body') as HTMLElement \n    element1.style.padding='0';\n    let element2 =  document.querySelector('#layout_2_body') as HTMLElement \n    element2.style.padding='0';\n  }\n  let element =  document.querySelector('#layout_0template') as HTMLElement \n  element.style.background= this.layoutColor;\n  let elementBody = document.getElementById('column');\n  elementBody.style.background = this.layoutColor;\n  let element1 =  document.querySelector('#layout_1template') as HTMLElement \n  element1.style.background= this.layoutColor;\n  let element1Body = document.getElementById('pie');\n  element1Body.style.background = this.layoutColor;\n  let element2 =  document.querySelector('#layout_2template') as HTMLElement \n  element2.style.background=this.layoutColor;\n  let element2Body = document.getElementById('spline');\n  element2Body.style.background = this.layoutColor;\n};\n\n  constructor() {\n     //code\n  }\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n\n<div class=\"control-section\">\n  <ejs-dashboardlayout [columns]='columns' [cellSpacing]='cellSpacing' [cellAspectRatio]='cellAspectRatio'>\n    <e-panels>\n      <e-panel [sizeX]='columnSizeX' [sizeY]='columnSizeY' [row]=\"0\" [col]=\"0\">\n        <ng-template #header>\n          <div class=\"title\" id=\"header1\"> Sales - Yearly Performance </div>\n        </ng-template>\n        <ng-template #content>\n          <ejs-chart id = 'column' style=\"height:100%; width:100%\" [primaryXAxis]='columnChartprimaryXAxis'\n            [primaryYAxis]='columnChartprimaryYAxis' [chartArea]='chartArea'\n            [legendSettings]=\" columnChartlegendSettings\" (load)='load($event)'>\n            <e-series-collection>\n              <e-series [dataSource]='columnChartDataCollection' type='Column' name='Online' xName='Period'\n                yName='Percentage' [marker]='columnChartmarker' [fill]=\"series1Fill\">\n              </e-series>\n              <e-series [dataSource]='columnChartData' type='Column' name='Retail' xName='Period' yName='Percentage'\n                [marker]='columnChartmarker' [fill]=\"series2Fill\">\n              </e-series>\n            </e-series-collection>\n          </ejs-chart>\n        </ng-template>\n      </e-panel>\n      <e-panel [sizeX]='pieSizeX' [sizeY]='pieSizeY' [row]=\"0\" [col]='pieColumn'>\n        <ng-template #header>\n          <div class=\"title\" id=\"header2\">Product Wise Sales - 2021</div>\n        </ng-template>\n        <ng-template #content>\n          <ejs-accumulationchart id = 'pie' style=\"height:100%; width:100%\" [legendSettings]=\"pielegendSettings\"\n            [tooltip]=\"pieTooltipSetting\" [enableAnimation]='animation'\n            [enableBorderOnMouseMove]='enableBorderOnMouseMove' [enableSmartLabels]='enableSmartLabels'\n            (pointRender)='pointRender($event)' (load)='accumulationload($event)'>\n            <e-accumulation-series-collection>\n              <e-accumulation-series [dataSource]='data' xName='Product' yName='Percentage' innerRadius=\"40%\" radius=\"75%\"\n               [palettes]=\"palettes\" [dataLabel]=\"dataLabel\" [startAngle]=\"startAngle\" [endAngle]=\"endAngle\" [border]='border'>\n              </e-accumulation-series>\n            </e-accumulation-series-collection>\n          </ejs-accumulationchart>\n        </ng-template>\n      </e-panel>\n      <e-panel [sizeX]='splineSizeX' [sizeY]='splineSizeY' [row]='splineRow' [col]=\"0\">\n        <ng-template #header>\n          <div class=\"title\" id=\"header3\"> Monthly Sales for 2021 </div>\n        </ng-template>\n        <ng-template #content>\n          <ejs-chart id = 'spline' style=\"height:100%; width:100%\" [primaryXAxis]='spLineAreaprimaryXAxis'\n            [primaryYAxis]='spLineAreaprimaryYAxis' [tooltip]='spLineAreatooltipSettings' [chartArea]='chartArea'\n            [legendSettings]=\"spLineLegendSettings\" (load)='load($event)'>\n            <e-series-collection>\n              <e-series [dataSource]='spLineAreaData' name='Online' type='SplineArea' xName='Period' yName='Percentage'\n                opacity='0.3' width='2.5' [fill]=\"spLineAreaFill\" [border]='spLineAreaBorder'>\n              </e-series>\n              <e-series [dataSource]='spLineAreaData2' name='Retail' type='SplineArea' xName='Period' yName='Percentage'\n                opacity='0.3' width='2.5' [fill]=\"spLineAreaFill1\" [border]='spLineAreaBorder1'>\n              </e-series>\n            </e-series-collection>\n          </ejs-chart>\n        </ng-template>\n      </e-panel>\n    </e-panels>\n  </ejs-dashboardlayout>\n</div>\n<style>\n</style>\n<style>\n.e-dashboardlayout {\n  padding: 20px;\n  z-index: 0;\n}\n.e-panel {\n  cursor: auto !important;\n}\n.e-panel-header{\n  border: none !important;\n  height: 50px !important;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.title {\n  font-size: 15px;\n  font-weight: bold;\n  color: #737373;\n}\n</style>\n\n<style>\n  .control-container {\n      padding: 0px !important;\n  }\n #gradient-chart stop {\n      stop-color: #2485FA;        \n  }\n  #gradient-chart1 stop{\n      stop-color: #FEC200;\n  } \n</style>\n<svg style=\"height: 0\">\n  <defs>       \n      <linearGradient id=\"gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n          <stop offset=\"0\"></stop>\n          <stop offset=\"1\"></stop>\n      </linearGradient>\n       <linearGradient id=\"gradient-chart1\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n          <stop offset=\"0\"></stop>\n          <stop offset=\"1\"></stop>\n      </linearGradient>\n  </defs>\n</svg>","app.component.css":".control-fluid {\n    padding: 0px !important;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-layouts\":\"*\",\"@syncfusion/ej2-angular-layouts\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-angular-calendars\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}