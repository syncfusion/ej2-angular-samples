{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","theme-color.ts":"/**\n * Initialize the Theme colors\n */\nexport let materialColors: string[] = [\"#00bdae\", \"#404041\", \"#357cd2\", \"#e56590\", \"#f8b883\", \"#70ad47\", \"#dd8abd\", \"#7f84e8\", \"#7bb4eb\",\n    \"#ea7a57\", \"#404041\", \"#00bdae\"];\nexport let fabricColors: string[] = [\"#4472c4\", \"#ed7d31\", \"#ffc000\", \"#70ad47\", \"#5b9bd5\",\n    \"#c1c1c1\", \"#6f6fe2\", \"#e269ae\", \"#9e480e\", \"#997300\", \"#4472c4\", \"#70ad47\", \"#ffc000\", \"#ed7d31\"];\nexport let bootstrapColors: string[] = [\"#a16ee5\", \"#f7ce69\", \"#55a5c2\", \"#7ddf1e\", \"#ff6ea6\",\n    \"#7953ac\", \"#b99b4f\", \"#407c92\", \"#5ea716\", \"#b91c52\"];\nexport let bootstrap5Colors: string[] = ['#FD7E14', '#6610F2', '#6F42C1', '#D63384', '#DC3545',\n        '#FFC107', '#198754', '#0DCAF0','#FD7E14', '#6610F2'];\nexport let highContrastColors: string[] = [\"#79ECE4\", \"#E98272\", \"#DFE6B6\", \"#C6E773\", \"#BA98FF\",\n    \"#FA83C3\", \"#00C27A\", \"#43ACEF\", \"#D681EF\", \"#D8BC6E\"];\nexport let fluentColors: string[] = [\"#1AC9E6\", \"#DA4CB2\", \"#EDBB40\", \"#AF4BCF\", \"#FF7266\", \"#1BD565\", \"#EE993D\", \"#5887FF\", \"#EC548D\",\n    \"#7D39C0\"];\nexport let fluentDarkColors: string[] = [\"#1AC9E6\", \"#DA4CB2\", \"#EDBB40\", \"#AF4BCF\", \"#FF7266\", \"#1BD565\", \"#EE993D\", \"#5887FF\", \"#EC548D\",\n    \"#7D39C0\"];\nexport let fluent2Colors: string[] = [\"#6200EE\", \"#09AF74\", \"#0076E5\", \"#CB3587\", \"#E7910F\", \"#0364DE\", \"#66CD15\", \"#F3A93C\", \"#107C10\",\n    \"#C19C00\"];\nexport let fluent2HighContrastColors: string[] = [\"#9BB449\", \"#2A72D5\", \"#43B786\", \"#3F579A\", \"#584EC6\", \"#E85F9C\", \"#6E7A89\", \"#EA6266\",\n    \"#0B6A0B\", \"#C19C00\"];\nexport let fluent2DarkColors: string[] = [\"#9BB449\", \"#2A72D5\", \"#43B786\", \"#3F579A\", \"#584EC6\", \"#E85F9C\", \"#6E7A89\", \"#EA6266\",\n    \"#0B6A0B\", \"#C19C00\"];\n\nexport let bubbleMaterialColors: string[] = [\"rgba(0, 189, 174, 0.5)\", \"rgba(64, 64, 65, 0.5)\", \"rgba(53, 124, 210, 0.5)\", \"rgba(229, 101, 144, 0.5)\", \"rgba(248, 184, 131, 0.5)\", \"rgba(112, 173, 71, 0.5)\", \"rgba(221, 138, 189, 0.5)\",\n    \"rgba(127, 132, 232, 0.5)\", \"rgba(123, 180, 235, 0.5)\", \"rgba(234, 122, 87, 0.5)\", \"rgba(64, 64, 65, 0.5)\", \"rgba(0, 189, 174, 0.5)\"];\nexport let bubbleFabricColors: string[] = [\"rgba(68, 114, 196, 0.5)\", \"rgba(237, 125, 49, 0.5)\", \"rgba(255, 192, 0, 0.5)\", \"rgba(112, 173, 71, 0.5)\", \"rgba(91, 155, 213, 0.5)\", \"rgba(193, 193, 193, 0.5)\", \"rgba(111, 111, 226, 0.5)\",\n    \"rgba(226, 105, 174, 0.5)\", \"rgba(158, 72, 14, 0.5)\", \"rgba(153, 115, 0, 0.5)\", \"rgba(68, 114, 196, 0.5)\", \"rgba(112, 173, 71, 0.5)\", \"rgba(255, 192, 0, 0.5)\", \"rgba(237, 125, 49, 0.5)\"];\nexport let bubbleBootstrapColors: string[] = [\"rgba(161, 110, 229, 0.5)\", \"rgba(247, 206, 105, 0.5)\", \"rgba(85, 165, 194, 0.5)\", \"rgba(125, 223, 30, 0.5)\", \"rgba(255, 110, 166, 0.5)\", \"rgba(121, 83, 172, 0.5)\",\n    \"rgba(185, 155, 79, 0.5)\", \"rgba(64, 124, 146, 0.5)\", \"rgba(94, 167, 22, 0.5)\", \"rgba(185, 28, 82, 0.5)\"];\nexport let bubbleHighContrastColors: string[] = [\"rgba(121, 236, 228, 0.5)\", \"rgba(233, 130, 114, 0.5)\", \"rgba(223, 230, 182, 0.5)\", \"rgba(198, 231, 115, 0.5)\", \"rgba(186, 152, 255, 0.5)\", \"rgba(250, 131, 195, 0.5)\", \"rgba(0, 194, 122, 0.5)\",\n    \"rgba(67, 172, 239, 0.5)\", \"rgba(214, 129, 239, 0.5)\", \"rgba(216, 188, 110, 0.5)\"];\nexport let bubbleFluentColors: string[] = [\"rgba(26, 201, 230, 0.5)\", \"rgba(218, 76, 178, 0.5)\", \"rgba(237, 187, 64, 0.5)\", \"rgba(175, 75, 207, 0.5)\", \"rgba(255, 114, 102, 0.5)\", \"rgba(27, 213, 101, 0.5)\", \"rgba(238, 153, 61, 0.5)\",\n\"rgba(88, 135, 255, 0.5)\", \"rgba(236, 84, 141, 0.5)\", \"rgba(125, 57, 192, 0.5)\"];\nexport let bubbleMaterialDarkColors: string[] = [\"rgba(158, 203, 8, 0.5)\", \"rgba(86, 174, 255, 0.5)\", \"rgba(197, 122, 255, 0.5)\", \"rgba(97, 234, 169, 0.5)\", \"rgba(235, 187, 62, 0.5)\", \"rgba(244, 92, 92, 0.5)\", \"rgba(138, 119, 255, 0.5)\",\n    \"rgba(99, 199, 255, 0.5)\", \"rgba(255, 132, 176, 0.5)\", \"rgba(247, 201, 40, 0.5)\"];\nexport let bubbleFluentDarkColors: string[] = [\"rgba(26, 201, 230, 0.5)\", \"rgba(218, 76, 178, 0.5)\", \"rgba(237, 187, 64, 0.5)\", \"rgba(175, 75, 207, 0.5)\", \"rgba(255, 114, 102, 0.5)\", \"rgba(27, 213, 101, 0.5)\", \"rgba(238, 153, 61, 0.5)\",\n\"rgba(88, 135, 255, 0.5)\", \"rgba(236, 84, 141, 0.5)\", \"rgba(125, 57, 192, 0.5)\"];\nexport let bubbleTailwindColors: string[] = [\"rgba(90, 97, 246, 0.5)\", \"rgba(101, 163, 13, 0.5)\", \"rgba(51, 65, 85, 0.5)\", \"rgba(20, 184, 166, 0.5)\", \"rgba(139, 92, 246, 0.5)\", \"rgba(3, 105, 161, 0.5)\", \"rgba(249, 115, 22, 0.5)\",\n    \"rgba(147, 51, 234, 0.5)\", \"rgba(245, 158, 11, 0.5)\", \"rgba(21, 128, 61, 0.5)\"];\nexport let bubbleTailwindDarkColors: string[] = [\"rgba(139, 92, 246, 0.5)\", \"rgba(34, 211, 238, 0.5)\", \"rgba(248, 113, 113, 0.5)\", \"rgba(74, 222, 128, 0.5)\", \"rgba(232, 121, 249, 0.5)\", \"rgba(252, 211, 77, 0.5)\", \"rgba(249, 115, 22, 0.5)\",\n    \"rgba(45, 212, 191, 0.5)\", \"rgba(244, 114, 182, 0.5)\", \"rgba(16, 185, 129, 0.5)\"];\nexport let bubbleTailwind3Colors: string[] = [\"rgba(47, 64, 116, 0.5)\", \"rgba(3, 180, 180, 0.5)\", \"rgba(13, 114, 222, 0.5)\", \"rgba(255, 87, 51, 0.5)\", \"rgba(214, 51, 132, 0.5)\", \"rgba(243, 156, 18, 0.5)\", \"rgba(239, 41, 31, 0.5)\", \"rgba(145, 200, 34, 0.5)\", \"rgba(47, 64, 116, 0.5)\", \"rgba(3, 180, 180, 0.5)\"];\nexport let bubbleTailwind3DarkColors: string[] = [\"rgba(128, 41, 241, 0.5)\", \"rgba(26, 188, 156, 0.5)\", \"rgba(13, 114, 222, 0.5)\", \"rgba(255, 87, 51, 0.5)\", \"rgba(214, 51, 132, 0.5)\", \"rgba(243, 156, 18, 0.5)\", \"rgba(239, 41, 31, 0.5)\", \"rgba(145, 200, 34, 0.5)\", \"rgba(128, 41, 241, 0.5)\", \"rgba(26, 188, 156, 0.5)\"];\nexport let bubbleBootstrap5Colors: string[] = ['rgba(253, 126, 20, 0.5)', 'rgba(102, 16, 242, 0.5)', 'rgba(111, 66, 193, 0.5)', 'rgba(214, 51, 132, 0.5)', 'rgba(220, 53, 69, 0.5)', 'rgba(255, 193, 7, 0.5)', 'rgba(25, 135, 84, 0.5)', 'rgba(13, 202, 240, 0.5)','rgba(253, 126, 20, 0.5)', 'rgba(102, 16, 242, 0.5)', 'rgba(111, 66, 193, 0.5)', 'rgba(214, 51, 132, 0.5)', 'rgba(220, 53, 69, 0.5)'];\nexport let bubbleBootstrap5DarkColors: string[] = ['rgba(253, 126, 20, 0.5)', 'rgba(102, 16, 242, 0.5)', 'rgba(111, 66, 193, 0.5)', 'rgba(214, 51, 132, 0.5)', 'rgba(220, 53, 69, 0.5)', 'rgba(255, 193, 7, 0.5)', 'rgba(25, 135, 84, 0.5)', 'rgba(13, 202, 240, 0.5)','rgba(253, 126, 20, 0.5)', 'rgba(102, 16, 242, 0.5)', 'rgba(111, 66, 193, 0.5)', 'rgba(214, 51, 132, 0.5)', 'rgba(220, 53, 69, 0.5)'];\nexport let bubbleMaterial3Colors: string[] = [\"rgba(99, 85, 199, 0.5)\", \"rgba(0, 174, 224, 0.5)\", \"rgba(255, 180, 0, 0.5)\", \"rgba(247, 82, 63, 0.5)\", \"rgba(150, 60, 112, 0.5)\", \"rgba(253, 116, 0, 0.5)\", \"rgba(75, 224, 188, 0.5)\", \"rgba(33, 150, 245, 0.5)\", \"rgba(222, 61, 138, 0.5)\", \"rgba(22, 47, 136, 0.5)\"];\nexport let bubbleMaterial3DarkColors: string[] = [\"rgba(78, 170, 255, 0.5)\", \"rgba(250, 78, 171, 0.5)\", \"rgba(255, 245, 0, 0.5)\", \"rgba(23, 234, 88, 0.5)\", \"rgba(56, 255, 231, 0.5)\", \"rgba(255, 158, 69, 0.5)\", \"rgba(179, 243, 47, 0.5)\", \"rgba(185, 60, 228, 0.5)\", \"rgba(252, 86, 100, 0.5)\", \"rgba(155, 85, 255, 0.5)\"];\nexport let bubbleFluent2Colors: string[] = [\"rgba(98, 0, 238, 0.5)\", \"rgba(9, 175, 116, 0.5)\", \"rgba(0, 118, 229, 0.5)\", \"rgba(203, 53, 135, 0.5)\", \"rgba(231, 145, 15, 0.5)\", \"rgba(3, 100, 222, 0.5)\", \"rgba(102, 205, 21, 0.5)\", \"rgba(243, 169, 60, 0.5)\",\n\"rgba(16, 124, 16, 0.5)\", \"rgba(193, 156, 0, 0.5)\"];\nexport let bubbleFluent2HighContrastColors: string[] = [\"rgba(155, 180, 73, 0.5)\", \"rgba(42, 114, 213, 0.5)\", \"rgba(67, 183, 134, 0.5)\", \"rgba(63, 87, 154, 0.5)\", \"rgba(88, 78, 198, 0.5)\", \"rgba(232, 95, 156, 0.5)\", \"rgba(110, 122, 137, 0.5)\", \"rgba(234, 98, 102, 0.5)\",\n\"rgba(11, 106, 11, 0.5)\", \"rgba(193, 156, 0, 0.5)\"];\nexport let bubbleFluent2DarkColors: string[] = [\"rgba(155, 180, 73, 0.5)\", \"rgba(42, 114, 213, 0.5)\", \"rgba(67, 183, 134, 0.5)\", \"rgba(63, 87, 154, 0.5)\", \"rgba(88, 78, 198, 0.5)\", \"rgba(232, 95, 156, 0.5)\", \"rgba(110, 122, 137, 0.5)\", \"rgba(234, 98, 102, 0.5)\",\n\"rgba(11, 106, 11, 0.5)\", \"rgba(193, 156, 0, 0.5)\"];\n\n\nexport let pointMaterialColors: string[] = [\"#00bdae\", \"#404041\", \"#357cd2\", \"#e56590\", \"#f8b883\", \"#70ad47\", \"#dd8abd\", \"#7f84e8\", \"#7bb4eb\",\n    \"#ea7a57\", \"#404041\", \"#00bdae\"];\nexport let pointFabricColors: string[] = [\"#4472c4\", \"#ed7d31\", \"#ffc000\", \"#70ad47\", \"#5b9bd5\", \"#c1c1c1\", \"#6f6fe2\", \"#e269ae\", \"#9e480e\",\n    \"#997300\", \"#4472c4\", \"#70ad47\", \"#ffc000\", \"#ed7d31\"];\nexport let pointBootstrapColors: string[] = [\"#a16ee5\", \"#f7ce69\", \"#55a5c2\", \"#7ddf1e\", \"#ff6ea6\", \"#7953ac\", \"#b99b4f\", \"#407c92\", \"#5ea716\",\n    \"#b91c52\"];\nexport let pointHighContrastColors: string[] = [\"#79ECE4\", \"#E98272\", \"#DFE6B6\", \"#C6E773\", \"#BA98FF\", \"#FA83C3\", \"#00C27A\", \"#43ACEF\", \"#D681EF\",\n    \"#D8BC6E\"];\nexport let pointFluentColors: string[] = [\"#1AC9E6\", \"#DA4CB2\", \"#EDBB40\", \"#AF4BCF\", \"#FF7266\", \"#1BD565\", \"#EE993D\", \"#5887FF\", \"#EC548D\",\n    \"#7D39C0\"];\nexport let pointMaterialDarkColors: string[] = [\"#9ECB08\", \"#56AEFF\", \"#C57AFF\", \"#61EAA9\", \"#EBBB3E\", \"#F45C5C\", \"#8A77FF\", \"#63C7FF\", \"#FF84B0\",\n    \"#F7C928\"];\nexport let pointFluentDarkColors: string[] = [\"#1AC9E6\", \"#DA4CB2\", \"#EDBB40\", \"#AF4BCF\", \"#FF7266\", \"#1BD565\", \"#EE993D\", \"#5887FF\", \"#EC548D\",\n    \"#7D39C0\"];\nexport let pointTailwindColors: string[] = [\"rgba(90, 97, 246)\", \"rgba(101, 163, 13)\", \"rgba(51, 65, 85)\", \"rgba(20, 184, 166)\", \"rgba(139, 92, 246)\", \"rgba(3, 105, 161)\", \"rgba(249, 115, 22)\",\n    \"rgba(147, 51, 234)\", \"rgba(245, 158, 11)\", \"rgba(21, 128, 61)\"];\nexport let pointTailwindDarkColors: string[] = [\"#8B5CF6\", \"#22D3EE\", \"#F87171\", \"#4ADE80\", \"#E879F9\", \"#FCD34D\", \"#F97316\", \"#2DD4BF\", \"#F472B6\", \"#10B981\"];\nexport let pointTailwind3Colors: string[] = ['#2F4074', '#03B4B4', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822', '#2F4074', '#03B4B4'];\nexport let pointTailwind3DarkColors: string[] = ['#8029F1', '#1ABC9C', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822', '#8029F1', '#1ABC9C'];\nexport let pointBootstrap5Colors: string[] = ['#FD7E14', '#6610F2', '#6F42C1', '#D63384', '#DC3545', '#FFC107', '#198754', '#0DCAF0', '#FD7E14', '#6610F2',];\nexport let pointBootstrap5DarkColors: string[] = ['#FD7E14', '#6610F2', '#6F42C1', '#D63384', '#DC3545', '#FFC107', '#198754', '#0DCAF0', '#FD7E14', '#6610F2',];\nexport let pointMaterial3Colors: string[] = [\"#6355C7\", \"#00AEE0\", \"#FFB400\", \"#F7523F\", \"#963C70\", \"#FD7400\", \"#4BE0BC\", \"#2196F5\", \"#DE3D8A\", \"#162F88\"];\nexport let pointMaterial3DarkColors: string[] = [\"#4EAAFF\", \"#FA4EAB\", \"#FFF500\", \"#17EA58\", \"#38FFE7\", \"#FF9E45\", \"#B3F32F\", \"#B93CE4\", \"#FC5664\", \"#9B55FF\"];\nexport let pointFluent2Colors: string[] = [\"#6200EE\", \"#09AF74\", \"#0076E5\", \"#CB3587\", \"#E7910F\", \"#0364DE\", \"#66CD15\", \"#F3A93C\", \"#107C10\",\n    \"#C19C00\"];\nexport let pointFluent2HighContrastColors: string[] = [\"#9BB449\", \"#2A72D5\", \"#43B786\", \"#3F579A\", \"#584EC6\", \"#E85F9C\", \"#6E7A89\", \"#EA6266\",\n    \"#0B6A0B\", \"#C19C00\"];\nexport let pointFluent2DarkColors: string[] = [\"#9BB449\", \"#2A72D5\", \"#43B786\", \"#3F579A\", \"#584EC6\", \"#E85F9C\", \"#6E7A89\", \"#EA6266\",\n    \"#0B6A0B\", \"#C19C00\"];","app.component.ts":"import { Component, ViewChild, OnInit } from '@angular/core';\nimport { ChartComponent, ChartTheme, ILoadedEventArgs, IPointRenderEventArgs, IAxisLabelRenderEventArgs, IMouseEventArgs, ChartAllModule, IAxisLabelClickEventArgs, Series } from '@syncfusion/ej2-angular-charts';\nimport { Browser } from '@syncfusion/ej2-base';\n\n\nimport { bubbleFabricColors, pointFabricColors, pointMaterialDarkColors, bubbleMaterialDarkColors, bubbleMaterialColors, pointMaterialColors, bubbleBootstrap5DarkColors, pointBootstrap5DarkColors, bubbleBootstrap5Colors, pointBootstrap5Colors, bubbleBootstrapColors, pointBootstrapColors, bubbleHighContrastColors, pointHighContrastColors, bubbleFluentDarkColors, pointFluentDarkColors, bubbleFluentColors, pointFluentColors, bubbleTailwindDarkColors, pointTailwindDarkColors, bubbleTailwindColors, pointTailwindColors, bubbleMaterial3Colors, pointMaterial3Colors, bubbleMaterial3DarkColors, pointMaterial3DarkColors, bubbleFluent2Colors, pointFluent2Colors, bubbleFluent2HighContrastColors, pointFluent2HighContrastColors, bubbleFluent2DarkColors, pointFluent2DarkColors, pointTailwind3Colors, pointTailwind3DarkColors } from './theme-color';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    standalone: true,\n    imports: [ ChartAllModule, ]\n})\nexport class AppComponent {\n    @ViewChild('chart')\n    public chart: ChartComponent;\n\n    public data: Object[] = [\n        { y: 4778, drilldown: 'Asia' },\n        { y: 1481, drilldown: 'Africa' },\n        { y: 746, drilldown: 'Europe' },\n        { y: 379, drilldown: 'North America' },\n        { y: 46, drilldown: 'Oceania' }\n    ];\n\n    public primaryXAxis: Object = {\n        valueType: 'Category',\n        labelStyle: { color: 'blue' },\n        interval: 1,\n        majorGridLines: { width: 0 },\n        labelIntersectAction: Browser.isDevice ? 'None' : 'Rotate90',\n        labelRotation: Browser.isDevice ? -45 : 0,\n        majorTickLines: { width: 0 },\n        minorTickLines: { width: 0 }\n    };\n\n    public primaryYAxis: Object = {\n        title: 'Population (in Millions)',\n        majorTickLines: { width: 0 },\n        lineStyle: { width: 0 },\n        interval: 1000\n    };\n\n    public chartArea: Object = {\n        border: { width: 0 }\n    };\n\n    public cornerRadius: Object = {\n        topLeft: Browser.isDevice ? 2 : 5,\n        topRight: Browser.isDevice ? 2 : 5\n    };\n\n    public width: string = Browser.isDevice ? '100%' : '75%';\n    public title: string = 'Top Populated Continents of 2023';\n    public tooltip: Object = {\n        enable: true,\n        header: \"<b>Population - 2023</b>\",\n        format: '${point.x}: ${point.y}M'\n    };\n    public legendSettings: Object = { visible: false };\n\n    private clicked: boolean = false;\n\n    constructor() {}\n\n    ngOnInit(): void {}\n\n    public load(args: ILoadedEventArgs): void {\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n        args.chart.theme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    }\n\n    public loaded(args: ILoadedEventArgs): void {\n        if (!this.clicked) {\n            for (let i = 0; i <= 6; i++) {\n                const axisLabel = document.getElementById(`drilldown0_AxisLabel_${i}`);\n                if (axisLabel) {\n                    axisLabel.style.textDecoration = 'underline';\n                    axisLabel.style.cursor = 'pointer';\n                    axisLabel.style.color = 'blue';\n                }\n                const seriesElement = document.getElementById(`drilldown_Series_0_Point_${i}`);\n                if (seriesElement) {\n                    axisLabel.style.textDecoration = 'underline';\n                    seriesElement.style.cursor = 'pointer';\n                    seriesElement.classList.add('no-underline');\n                }\n            }\n        }\n    }\n    public pointClick(args: IPointRenderEventArgs): void {\n        args.series.fill = args.point.color;\n        if (args.point.index !== 6) {\n            args.series.yAxis.interval = null;\n            if (!args.series.chart.theme.includes('Dark') && args.series.chart.theme !== 'HighContrast' && args.series.chart.theme !== 'Fluent2HighContrast') {\n                args.series.chart.primaryXAxis.labelStyle.color = \"black\";\n            }\n            else if (args.series.chart.theme === 'Material3Dark') {\n                args.series.chart.primaryXAxis.labelStyle.color = \"#CAC4D0\";\n            }\n            else if (args.series.chart.theme === 'FluentDark') {\n                args.series.chart.primaryXAxis.labelStyle.color = \"#C8C6C4\";\n            }\n            else if (args.series.chart.theme === 'Fluent2Dark') {\n                args.series.chart.primaryXAxis.labelStyle.color = \"#ADADAD\";\n            }\n            else if (args.series.chart.theme === 'Bootstrap5Dark') {\n                args.series.chart.primaryXAxis.labelStyle.color = \"#DEE2E6\";\n            }\n            else if (args.series.chart.theme === 'TailwindDark') {\n                args.series.chart.primaryXAxis.labelStyle.color = \"#9CA3AF\";\n            }\n            else if (args.series.chart.theme === 'Tailwind3Dark') {\n                args.series.chart.primaryXAxis.labelStyle.color = \"#D1D5DB\";\n            }\n            else if (args.series.chart.theme === 'HighContrast') {\n                args.series.chart.primaryXAxis.labelStyle.color = \"#969696\";\n            }\n            else if (args.series.chart.theme === 'Fluent2HighContrast') {\n                args.series.chart.primaryXAxis.labelStyle.color = \"#FFFFFF\";\n            }\n            if (!this.clicked) {\n                document.getElementById(\"text\").innerHTML = <string>args.point.x;\n                document.getElementById(\"category\").style.visibility = \"visible\";\n                document.getElementById(\"symbol\").style.visibility = \"visible\";\n                document.getElementById(\"text\").style.visibility = \"visible\";\n                if (args.point.index === 0) {\n                    args.series.chart.title = \"Top Populated Countries of Asia - 2023\";\n                    this.clicked = true;\n                    args.series.chart.series[0].dataSource = [{\n                            y: 1422,\n                            drilldown: 'China'\n                        },\n                        {\n                            y: 1438,\n                            drilldown: 'India'\n                        },\n                        {\n                            y: 278,\n                            drilldown: 'Indonesia'\n                        },\n                        {\n                            y: 240,\n                            drilldown: 'Pakistan'\n                        },\n                        {\n                            y: 173,\n                            drilldown: 'Bangladesh'\n                        },\n                        {\n                            y: 125,\n                            drilldown: 'Japan'\n                        },\n                        {\n                            y: 117,\n                            drilldown: 'Philippines'\n                        },\n                        {\n                            y: 99,\n                            drilldown: 'Vietnam'\n                        }\n                    ];\n                }\n                if (args.point.index === 1) {\n                    args.series.chart.title = \"Top Populated Countries of Africa - 2023\";\n                    this.clicked = true;\n                    args.series.chart.series[0].dataSource = [{\n                            y: 223,\n                            drilldown: 'Nigeria'\n                        },\n                        {\n                            y: 126,\n                            drilldown: 'Ethiopia'\n                        },\n                        {\n                            y: 113,\n                            drilldown: 'Egypt'\n                        },\n                        {\n                            y: 68,\n                            drilldown: 'Tanzania'\n                        },\n                        {\n                            y: 60,\n                            drilldown: 'South Africa'\n                        },\n                        {\n                            y: 55,\n                            drilldown: 'Kenya'\n                        },\n                        {\n                            y: 48,\n                            drilldown: 'Uganda'\n                        }\n                    ];\n                }\n                if (args.point.index === 2) {\n                    args.series.chart.title = \"Top Populated Countries of Europe - 2023\";\n                    this.clicked = true;\n                    args.series.chart.series[0].dataSource = [{\n                            y: 143,\n                            drilldown: 'Russia'\n                        },\n                        {\n                            y: 84,\n                            drilldown: 'Germany'\n                        },\n                        {\n                            y: 67,\n                            drilldown: 'United Kingdom'\n                        },\n                        {\n                            y: 65,\n                            drilldown: 'France'\n                        },\n                        {\n                            y: 59,\n                            drilldown: 'Italy'\n                        },\n                        {\n                            y: 47,\n                            drilldown: 'Spain'\n                        }\n                    ];\n                }\n                if (args.point.index === 3) {\n                    args.series.chart.title = \"Top Populated Countries of North America - 2023\";\n                    this.clicked = true;\n                    args.series.chart.series[0].dataSource = [{\n                            y: 339,\n                            drilldown: 'United States'\n                        },\n                        {\n                            y: 127,\n                            drilldown: 'Mexico'\n                        },\n                        {\n                            y: 39,\n                            drilldown: 'Canada'\n                        },\n                        {\n                            y: 19,\n                            drilldown: 'Guatemala'\n                        },\n                        {\n                            y: 10,\n                            drilldown: 'Honduras'\n                        },\n                        {\n                            y: 6,\n                            drilldown: 'El Salvador'\n                        },\n                        {\n                            y: 6,\n                            drilldown: 'Nicaragua'\n                        },\n                        {\n                            y: 5,\n                            drilldown: 'Costa Rica'\n                        }\n                    ];\n                }\n                if (args.point.index === 4) {\n                    args.series.chart.title = \"Top Populated Countries of Oceania - 2023\";\n                    this.clicked = true;\n                    args.series.chart.series[0].dataSource = [{\n                            y: 26,\n                            drilldown: 'Australia'\n                        },\n                        {\n                            y: 9,\n                            drilldown: 'Papua New Guinea'\n                        },\n                        {\n                            y: 5,\n                            drilldown: 'New Zealand'\n                        }\n                    ];\n                }\n            }\n        }\n    }\n    public marker: Object = {\n        dataLabel: {\n            visible: true,\n            position: 'Outer',\n        }\n    };\n\n    public pointRender(args: IPointRenderEventArgs): void {\n        if (!this.clicked) {\n            let selectedTheme: string = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'material';\n            if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {\n                args.fill = pointFabricColors[args.point.index % 10];;\n            } else if (selectedTheme === 'material-dark') {\n                args.fill = pointMaterialDarkColors[args.point.index % 10];;\n            } else if (selectedTheme === 'material') {\n                args.fill = pointMaterialColors[args.point.index % 10];\n            } else if (selectedTheme === 'bootstrap5-dark') {\n                args.fill = pointBootstrap5DarkColors[args.point.index % 10];\n            } else if (selectedTheme === 'bootstrap5') {\n                args.fill = pointBootstrap5Colors[args.point.index % 10];\n            } else if (selectedTheme === 'bootstrap') {\n                args.fill = pointBootstrapColors[args.point.index % 10];\n            } else if (selectedTheme === 'bootstrap4') {\n                args.fill = pointBootstrapColors[args.point.index % 10];\n            } else if (selectedTheme === 'bootstrap-dark') {\n                args.fill = pointBootstrapColors[args.point.index % 10];\n            } else if (selectedTheme === 'highcontrast') {\n                args.fill = pointHighContrastColors[args.point.index % 10];\n            } else if (selectedTheme === 'fluent-dark') {\n                args.fill = pointFluentDarkColors[args.point.index % 10];\n            } else if (selectedTheme === 'fluent') {\n                args.fill = pointFluentColors[args.point.index % 10];\n            } else if (selectedTheme === 'tailwind-dark') {\n                args.fill = pointTailwindDarkColors[args.point.index % 10];\n            } else if (selectedTheme === 'tailwind') {\n                args.fill = pointTailwindColors[args.point.index % 10];\n            }\n            else if (selectedTheme === 'material3') {\n                args.fill = pointMaterial3Colors[args.point.index % 10];\n            }\n            else if (selectedTheme === 'material3-dark') {\n                args.fill = pointMaterial3DarkColors[args.point.index % 10];\n            }\n            else if (selectedTheme === 'fluent2') {\n                args.fill = pointFluent2Colors[args.point.index % 10];\n            }\n            else if (selectedTheme === 'fluent2-highcontrast') {\n                args.fill = pointFluent2HighContrastColors[args.point.index % 10];\n            }\n            else if (selectedTheme === 'fluent2-dark') {\n                args.fill = pointFluent2DarkColors[args.point.index % 10];\n            } else if (selectedTheme === 'tailwind3-dark') {\n                args.fill = pointTailwind3DarkColors[args.point.index % 10];\n            } \n            else if (selectedTheme === 'tailwind3') {\n                args.fill = pointTailwind3Colors[args.point.index % 10];\n            }\n        }\n    }\n\n    public chartMouseClick(args: IMouseEventArgs): void {\n        if (args.target.indexOf('category') > -1) {\n            this.chart.series[0].dataSource = this.data;\n        }\n    }\n\n    public axisLabelClick(args: IAxisLabelClickEventArgs): void {\n        if (args.axis.name === \"primaryXAxis\") {\n            this.chart.series[0].fill = (this.chart.series[0] as Series).points[args.value].color;\n            if (args.value !== 6) {\n                this.chart.primaryYAxis.interval = null;\n                if (!args.chart.theme.includes('Dark') && args.chart.theme !== 'HighContrast' && args.chart.theme !== 'Fluent2HighContrast') {\n                    args.chart.primaryXAxis.labelStyle.color = \"black\";\n                }\n                else if (args.chart.theme === 'Material3Dark') {\n                    args.chart.primaryXAxis.labelStyle.color = \"#CAC4D0\";\n                }\n                else if (args.chart.theme === 'FluentDark') {\n                    args.chart.primaryXAxis.labelStyle.color = \"#C8C6C4\";\n                }\n                else if (args.chart.theme === 'Fluent2Dark') {\n                    args.chart.primaryXAxis.labelStyle.color = \"#ADADAD\";\n                }\n                else if (args.chart.theme === 'Bootstrap5Dark') {\n                    args.chart.primaryXAxis.labelStyle.color = \"#DEE2E6\";\n                }\n                else if (args.chart.theme === 'TailwindDark') {\n                    args.chart.primaryXAxis.labelStyle.color = \"#9CA3AF\";\n                }\n                else if (args.chart.theme === 'Tailwind3Dark') {\n                    args.chart.primaryXAxis.labelStyle.color = \"#D1D5DB\";\n                }\n                else if (args.chart.theme === 'HighContrast') {\n                    args.chart.primaryXAxis.labelStyle.color = \"#969696\";\n                }\n                else if (args.chart.theme === 'Fluent2HighContrast') {\n                    args.chart.primaryXAxis.labelStyle.color = \"#FFFFFF\";\n                }\n                if (!this.clicked) {\n                    document.getElementById(\"text\").innerHTML = args.text;\n                    document.getElementById(\"category\").style.visibility = \"visible\";\n                    document.getElementById(\"symbol\").style.visibility = \"visible\";\n                    document.getElementById(\"text\").style.visibility = \"visible\";\n                    if (args.index === 0) {\n                        args.chart.title = \"Top Populated Countries of Asia - 2023\";\n                        this.clicked = true;\n                        args.chart.series[0].dataSource = [{\n                            y: 1422,\n                            drilldown: 'China'\n                        },\n                        {\n                            y: 1438,\n                            drilldown: 'India'\n                        },\n                        {\n                            y: 278,\n                            drilldown: 'Indonesia'\n                        },\n                        {\n                            y: 240,\n                            drilldown: 'Pakistan'\n                        },\n                        {\n                            y: 173,\n                            drilldown: 'Bangladesh'\n                        },\n                        {\n                            y: 125,\n                            drilldown: 'Japan'\n                        },\n                        {\n                            y: 117,\n                            drilldown: 'Philippines'\n                        },\n                        {\n                            y: 99,\n                            drilldown: 'Vietnam'\n                        }\n                        ]\n                    }\n                    if (args.index === 1) {\n                        args.chart.title = \"Top Populated Countries of Africa - 2023\";\n                        this.clicked = true;\n                        args.chart.series[0].dataSource = [{\n                            y: 223,\n                            drilldown: 'Nigeria'\n                        },\n                        {\n                            y: 126,\n                            drilldown: 'Ethiopia'\n                        },\n                        {\n                            y: 113,\n                            drilldown: 'Egypt'\n                        },\n                        {\n                            y: 68,\n                            drilldown: 'Tanzania'\n                        },\n                        {\n                            y: 60,\n                            drilldown: 'South Africa'\n                        },\n                        {\n                            y: 55,\n                            drilldown: 'Kenya'\n                        },\n                        {\n                            y: 48,\n                            drilldown: 'Uganda'\n                        }\n                        ]\n                    }\n                    if (args.index === 2) {\n                        args.chart.title = \"Top Populated Countries of Europe - 2023\";\n                        this.clicked = true;\n                        args.chart.series[0].dataSource = [{\n                            y: 143,\n                            drilldown: 'Russia'\n                        },\n                        {\n                            y: 84,\n                            drilldown: 'Germany'\n                        },\n                        {\n                            y: 67,\n                            drilldown: 'United Kingdom'\n                        },\n                        {\n                            y: 65,\n                            drilldown: 'France'\n                        },\n                        {\n                            y: 59,\n                            drilldown: 'Italy'\n                        },\n                        {\n                            y: 47,\n                            drilldown: 'Spain'\n                        }\n                        ]\n                    }\n                    if (args.index === 3) {\n                        args.chart.title = \"Top Populated Countries of North America - 2023\";\n                        this.clicked = true;\n                        args.chart.series[0].dataSource = [{\n                            y: 339,\n                            drilldown: 'United States'\n                        },\n                        {\n                            y: 127,\n                            drilldown: 'Mexico'\n                        },\n                        {\n                            y: 39,\n                            drilldown: 'Canada'\n                        },\n                        {\n                            y: 19,\n                            drilldown: 'Guatemala'\n                        },\n                        {\n                            y: 10,\n                            drilldown: 'Honduras'\n                        },\n                        {\n                            y: 6,\n                            drilldown: 'El Salvador'\n                        },\n                        {\n                            y: 6,\n                            drilldown: 'Nicaragua'\n                        },\n                        {\n                            y: 5,\n                            drilldown: 'Costa Rica'\n                        }\n                        ]\n                    }\n                    if (args.index === 4) {\n                        args.chart.title = \"Top Populated Countries of Oceania - 2023\";\n                        this.clicked = true;\n                        args.chart.series[0].dataSource = [{\n                            y: 26,\n                            drilldown: 'Australia'\n                        },\n                        {\n                            y: 9,\n                            drilldown: 'Papua New Guinea'\n                        },\n                        {\n                            y: 5,\n                            drilldown: 'New Zealand'\n                        }\n                        ]\n                    }\n                }\n            }\n        }\n    }\n\n    public resetChart(): void {\n        this.chart.title = \"Top Populated Continents of 2023\";\n        this.chart.primaryXAxis.labelStyle.color = \"blue\";\n        this.chart.primaryYAxis.interval = 1000;\n        this.chart.series[0].dataSource = this.data;\n        this.clicked = false;\n        document.getElementById('category').style.visibility = 'hidden';\n        document.getElementById('symbol').style.visibility = 'hidden';\n        document.getElementById('text').style.visibility = 'hidden';\n    }\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section\">\n    <div id=\"link\">\n        <a id=\"category\" style=\"visibility:hidden; display:inline-block\" (click)=\"resetChart()\">Population</a>\n        <p style=\"visibility:hidden; display:inline-block\" id=\"symbol\">&nbsp;&gt;&gt;&nbsp;</p>\n        <p id=\"text\" style=\"visibility:hidden; display:inline-block;\"></p>\n    </div>\n    <div  align=\"center\">\n        <ejs-chart #chart id=\"drilldown\" [primaryXAxis]='primaryXAxis' [primaryYAxis]='primaryYAxis'\n                   [chartArea]='chartArea' [width]='width' [title]='title' [tooltip]='tooltip'\n                   [legendSettings]='legendSettings' (load)='load($event)' (loaded)='loaded($event)'\n                   (pointRender)='pointRender($event)' (chartMouseClick)='chartMouseClick($event)'\n                   (axisLabelClick)='axisLabelClick($event)' (pointClick)='pointClick($event)'>\n            <e-series-collection>\n                <e-series [dataSource]='data' type='Column' xName='drilldown' yName='y' name='Population' [width]='2' [cornerRadius]='cornerRadius' [marker]='marker'>\n                </e-series>\n            </e-series-collection>\n        </ejs-chart>\n    </div>\n</div>\n\n\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n    #category:hover {\n        cursor: pointer;\n\n    }\n</style>\n","app.component.css":".control-fluid {\n    padding: 0px !important;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-angular-calendars\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-layouts\":\"*\",\"@syncfusion/ej2-angular-layouts\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}