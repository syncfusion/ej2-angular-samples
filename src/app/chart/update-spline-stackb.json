{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { ILoadedEventArgs, IAxisRangeCalculatedEventArgs, ChartTheme, ChartAllModule, Series } from '@syncfusion/ej2-angular-charts';\nimport { Browser } from '@syncfusion/ej2-base';\n\n\n \n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ ChartAllModule, ]\n})\nexport class AppComponent {\n    public chartArea: Object = {\n        border: {\n            width: 0\n        }\n    };\n    public width: string = Browser.isDevice ? '100%' : '75%';\n    public primaryXAxis: Object = {\n        valueType: 'DateTime',\n        edgeLabelPlacement: Browser.isDevice ? 'None' : 'Shift',\n        labelRotation: Browser.isDevice ? 45 : 0,\n        majorGridLines: { width: 0 },\n        interval: 7,\n        plotOffsetRight: 30,\n        labelIntersectAction: 'Hide'\n    };\n    public primaryYAxis: Object = {\n        title: 'Value',\n        lineStyle: { width: 0 },\n        majorTickLines: { width: 0 }\n    };\n    public marker: Object = {\n        visible: true,\n        width: 7,\n        height: 7,\n        isFilled: true\n    };\n    public splineData = [\n        { x: new Date(2024, 5, 6, 6, 7, 3), y: 42 },\n        { x: new Date(2024, 5, 6, 6, 7, 5), y: 52 },\n        { x: new Date(2024, 5, 6, 6, 7, 7), y: 83 },\n        { x: new Date(2024, 5, 6, 6, 7, 9), y: 75 },\n        { x: new Date(2024, 5, 6, 6, 7, 11), y: 35 },\n        { x: new Date(2024, 5, 6, 6, 7, 13), y: 85 },\n        { x: new Date(2024, 5, 6, 6, 7, 15), y: 78 },\n        { x: new Date(2024, 5, 6, 6, 7, 17), y: 29 },\n        { x: new Date(2024, 5, 6, 6, 7, 19), y: 62 },\n        { x: new Date(2024, 5, 6, 6, 7, 21), y: 95 },\n        { x: new Date(2024, 5, 6, 6, 7, 23), y: 32 },\n        { x: new Date(2024, 5, 6, 6, 7, 25), y: 76 },\n        { x: new Date(2024, 5, 6, 6, 7, 27), y: 83 },\n        { x: new Date(2024, 5, 6, 6, 7, 29), y: 53 },\n        { x: new Date(2024, 5, 6, 6, 7, 31), y: 32 },\n        { x: new Date(2024, 5, 6, 6, 7, 33), y: 75 },\n    ];\n    public data: Object[];\n    public title: string = 'Live data';\n    private intervalId: any;\n \n    constructor() {\n    }\n \n    ngOnDestroy(): void {\n        this.clearInterval();\n    }\n \n    public load(args: ILoadedEventArgs): void {\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n        args.chart.theme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n \n        this.startInterval(args.chart);\n    }\n \n    public axisRangeCalculated(args: IAxisRangeCalculatedEventArgs): void {\n        if (args.axis.name === 'primaryXAxis') {\n            let lastPoint: Object = args.axis.series[0].points[args.axis.series[0].points.length - 1].x;\n            args.maximum = new Date(Number(lastPoint)).getTime() + 500;\n        }\n    }\n \n    private startInterval(chart: any): void {\n        this.clearInterval(); // Clear any existing interval\n        this.intervalId = setInterval(() => {\n            if (document.getElementById('spline')) {\n                if (chart && chart.series.length > 0 && chart.series[0].dataSource) {\n                    var lastDataPointIndex = chart.series[0].dataSource.length - 1;\n                    if (lastDataPointIndex >= 0) {\n                        var timestamp = chart.series[0].dataSource[lastDataPointIndex].x;\n                        var lastTimestamp = new Date(timestamp).getTime();\n                        var x = new Date(lastTimestamp + 2000);\n                        var y = 0;\n                        if (x.getSeconds() % 3 === 0) {\n                            y = Math.max(30, Math.random() * 150);\n                        } else if (x.getSeconds() % 2 === 0) {\n                            y = Math.max(30, Math.random() * 200);\n                        } else {\n                            y = Math.max(30, Math.random() * 100);\n                        }\n                        (chart.series[0]).addPoint({ x: x, y: y }, 800);\n                        (chart.series[0]).removePoint(0, 800);\n                    }\n                }\n            } else {\n                this.clearInterval();\n            }\n        }, 1000);\n    }\n \n    private clearInterval(): void {\n        if (this.intervalId) {\n            clearInterval(this.intervalId);\n            this.intervalId = null;\n        }\n    }\n \n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section\">\n    <div align='center'>\n        <ejs-chart id='spline' align='center' [chartArea]='chartArea' [width]='width' style='display:block;' [primaryXAxis]='primaryXAxis'\n            [primaryYAxis]='primaryYAxis' (load)='load($event)' (axisRangeCalculated)='axisRangeCalculated($event)' [title]='title'>\n            <e-series-collection>\n                <e-series [dataSource]='splineData' type='Spline' xName='x' yName='y' width=2 [marker]='marker'> </e-series>\n            </e-series-collection>\n        </ejs-chart>\n    </div>\n</div>\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n    #spline_Series_0_Point_15_Symbol {\n        -webkit-animation: opac 1s ease-out infinite;\n        animation: opac 1s ease-out infinite;\n    }\n    @keyframes opac {\n        0% {\n            stroke-opacity: 1;\n            stroke-width: 10px;\n        }\n        100% {\n            stroke-opacity: 0;\n            stroke-width: 20px;\n        }\n    }\n</style>","app.component.css":".control-fluid {\n    padding: 0px !important;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-angular-calendars\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-layouts\":\"*\",\"@syncfusion/ej2-angular-layouts\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}