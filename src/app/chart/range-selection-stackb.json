{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { ChartComponent, ILoadedEventArgs, ChartAllModule } from '@syncfusion/ej2-angular-charts';\nimport { SelectionMode, ChartTheme } from '@syncfusion/ej2-charts';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\n\n\n/**\n * Sample for Range Selection in chart\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ ChartAllModule, ]\n})\nexport class AppComponent {\n\n    public data: Object[] = [\n        { x: 1971, y: 50 }, { x: 1972, y: 20 }, { x: 1973, y: 63 }, { x: 1974, y: 81 }, { x: 1975, y: 64 },\n        { x: 1976, y: 36 }, { x: 1977, y: 22 }, { x: 1978, y: 78 }, { x: 1979, y: 60 }, { x: 1980, y: 41 },\n        { x: 1981, y: 62 }, { x: 1982, y: 56 }, { x: 1983, y: 96 }, { x: 1984, y: 48 }, { x: 1985, y: 23 },\n        { x: 1986, y: 54 }, { x: 1987, y: 73 }, { x: 1988, y: 56 }, { x: 1989, y: 67 }, { x: 1990, y: 79 },\n        { x: 1991, y: 18 }, { x: 1992, y: 78 }, { x: 1993, y: 92 }, { x: 1994, y: 43 }, { x: 1995, y: 29 },\n        { x: 1996, y: 14 }, { x: 1997, y: 85 }, { x: 1998, y: 24 }, { x: 1999, y: 61 }, { x: 2000, y: 80 },\n        { x: 2001, y: 14 }, { x: 2002, y: 34 }, { x: 2003, y: 81 }, { x: 2004, y: 70 }, { x: 2005, y: 21 },\n        { x: 2006, y: 70 }, { x: 2007, y: 32 }, { x: 2008, y: 43 }, { x: 2009, y: 21 }, { x: 2010, y: 63 },\n        { x: 2011, y: 9 }, { x: 2012, y: 51 }, { x: 2013, y: 25 }, { x: 2014, y: 96 }, { x: 2015, y: 32 }\n    ];\n    public data1: Object[] = [\n        { x: 1971, y: 23 }, { x: 1972, y: 67 }, { x: 1973, y: 83 }, { x: 1974, y: 43 }, { x: 1975, y: 8 },\n        { x: 1976, y: 41 }, { x: 1977, y: 56 }, { x: 1978, y: 31 }, { x: 1979, y: 29 }, { x: 1980, y: 87 },\n        { x: 1981, y: 43 }, { x: 1982, y: 12 }, { x: 1983, y: 38 }, { x: 1984, y: 67 }, { x: 1985, y: 49 },\n        { x: 1986, y: 67 }, { x: 1987, y: 83 }, { x: 1988, y: 16 }, { x: 1989, y: 89 }, { x: 1990, y: 18 },\n        { x: 1991, y: 46 }, { x: 1992, y: 39 }, { x: 1993, y: 68 }, { x: 1994, y: 87 }, { x: 1995, y: 45 },\n        { x: 1996, y: 42 }, { x: 1997, y: 28 }, { x: 1998, y: 82 }, { x: 1999, y: 13 }, { x: 2000, y: 83 },\n        { x: 2001, y: 26 }, { x: 2002, y: 57 }, { x: 2003, y: 48 }, { x: 2004, y: 84 }, { x: 2005, y: 64 },\n        { x: 2006, y: 24 }, { x: 2007, y: 82 }, { x: 2008, y: 37 }, { x: 2009, y: 68 }, { x: 2010, y: 37 },\n        { x: 2011, y: 35 }, { x: 2012, y: 81 }, { x: 2013, y: 38 }, { x: 2014, y: 51 }, { x: 2015, y: 58 }\n    ];\n    public marker1: Object = {\n        shape: 'Triangle',\n        width: 10, height: 10\n    }\n    public marker2: Object = {\n        shape: 'Pentagon',\n        width: 10, height: 10\n    }\n    @ViewChild('chart')\n    public chart: ChartComponent;\n    public chartArea: Object = {\n        border: {\n            width: 0\n        }\n    };\n    //Initializing Primary X Axis\n    public primaryXAxis: Object = {\n        minimum: 1970,\n        maximum: 2016,\n        majorGridLines: { width: 0 },\n        majorTickLines: {width : 0},\n        minorTickLines: {width: 0}\n    };\n    //Initializing Primary Y Axis\n    public primaryYAxis: Object = {\n        title: 'Sales',\n        labelFormat: '{value}%',\n        interval: 25,\n        minimum: 0,\n        maximum: 100,\n        lineStyle: { width: 0 },\n        majorTickLines: { width: 0 },\n        minorTickLines: { width: 0 },\n    }\n\n    public legendSettings : Object = {\n       visible: true, toggleVisibility: false \n    }\n   // custom code start\n    public load(args: ILoadedEventArgs): void {\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n        args.chart.theme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i,Â 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    };\n     // custom code end\n    public title: string = 'Profit Comparision of A and B';\n    public selectionMode: DropDownList;\n    ngOnInit(): void {\n        this.selectionMode = new DropDownList({\n            index: 0,\n            width: 100,\n            change: () => {\n                let type: string = this.selectionMode.value.toString();\n                this.chart.selectionMode = <SelectionMode>type;\n                this.chart.series[0].animation.enable = false;\n                this.chart.series[1].animation.enable = false;\n                this.chart.refresh();\n            }\n        });\n        this.selectionMode.appendTo('#selmode');\n    }\n    public setMultiSelect(e: Event): void {\n        this.chart.allowMultiSelection = (<HTMLInputElement>e.target).checked === true;\n        this.chart.series[0].animation.enable = false;\n        this.chart.series[1].animation.enable = false;\n        this.chart.refresh();\n    };\n    constructor() {\n        //code\n    };\n\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n\n    <div class=\"control-section col-md-8 sb-property-border\">\n            <ejs-chart #chart style='display:block; width: 92%' [chartArea]='chartArea'[primaryXAxis]='primaryXAxis' [legendSettings]='legendSettings' [primaryYAxis]='primaryYAxis'  [title]='title'\n                id='chartcontainer' selectionMode='DragXY' (load)='load($event)'>\n                <e-series-collection>\n                    <e-series [dataSource]='data' type='Scatter' xName='x' yName='y' name='Product A' width=2 [marker]='marker1'> </e-series>\n                    <e-series [dataSource]='data1' type='Scatter' xName='x' yName='y' name='Product B' width=2 [marker]='marker2'> </e-series>\n                </e-series-collection>\n             </ejs-chart>\n    </div>\n    <div class=\"col-md-4 property-section\">\n       <div class=\"property-panel-section\">\n          <div class=\"property-panel-header\">Properties</div>\n          <div class=\"property-panel-content\">\n            <table id=\"property\" class=\"property-panel-table\" title=\"Properties\" style=\"width: 100%\">\n                <tr style=\"height: 50px\">\n                    <td style=\"width: 60%\">\n                        <div>Selection Mode:</div>\n                    </td>\n                    <td style=\"width: 40%;\">\n                        <div>\n                            <select name=\"selectIndex\" autocomplete=\"off\" id=\"selmode\" style=\"width: 90%\">\n                               <option value='DragXY'>DragXY</option>\n                                <option value=\"DragX\">DragX</option>\n                                <option value=\"DragY\">DragY</option>\n                                <option value=\"Lasso\">Lasso</option>\n                            </select>\n                        </div>\n                    </td>\n                </tr>\n                <tr style=\"height: 50px\">\n                    <td style=\"width: 80%\">\n                        <div id=\"multiSelection\">Enable MultipleSelection:</div>\n                    </td>\n                    <td style=\"width: 40%;\">\n                        <div>\n                            <input type=\"checkbox\" (change)='setMultiSelect($event)' id=\"select\" aria-labelledby=\"Checkbox unchecked\">\n                        </div>\n                    </td>\n                </tr>\n            </table>\n        \n       </div>\n    </div>\n</div>\n<style>\n.control-section {\n        min-height: 450px;\n    }\n    #select,#selmode:hover {\n        cursor: pointer;\n    }\n</style>","app.component.css":".control-fluid {\n    padding: 0px !important;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-excel-export\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-pdf-export\":\"*\",\"@syncfusion/ej2-svg-base\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-angular-calendars\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-layouts\":\"*\",\"@syncfusion/ej2-angular-layouts\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}