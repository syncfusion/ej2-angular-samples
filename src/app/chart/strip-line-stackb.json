{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { ILoadedEventArgs, ChartComponent, ChartTheme, StripLineSettingsModel, ChartAllModule } from '@syncfusion/ej2-angular-charts';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { Browser} from '@syncfusion/ej2-base';\n\n\n/**\n * Sample for stripLines\n */\nlet fontSize: string = Browser.isDevice ? '14px' : '18px';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ChartAllModule,  ]\n})\nexport class AppComponent {\n\n    public data: Object[] = [\n        { x: new Date(2023, 4, 1), wind : 19 },\n        { x: new Date(2023, 4, 2), wind : 17 },\n        { x: new Date(2023, 4, 3), wind : 14 },\n        { x: new Date(2023, 4, 4), wind : 9 },\n        { x: new Date(2023, 4, 5), wind : 10 },\n        { x: new Date(2023, 4, 6), wind : 8 },\n        { x: new Date(2023, 4, 7), wind : 8 },\n        { x: new Date(2023, 4, 8), wind : 16 },\n        { x: new Date(2023, 4, 9), wind : 9 },\n        { x: new Date(2023, 4, 10), wind : 13 },\n        { x: new Date(2023, 4, 11), wind : 7 },\n        { x: new Date(2023, 4, 12), wind : 12 },\n        { x: new Date(2023, 4, 13), wind : 10 },\n        { x: new Date(2023, 4, 14), wind : 5 },\n        { x: new Date(2023, 4, 15), wind : 8 }\n    ];\n    public data1: Object[] = [\n        { x: new Date(2023, 4, 1), gust : 30 },\n        { x: new Date(2023, 4, 2), gust : 28 },\n        { x: new Date(2023, 4, 3), gust : 26 },\n        { x: new Date(2023, 4, 4), gust : 19 },\n        { x: new Date(2023, 4, 5), gust : 21 },\n        { x: new Date(2023, 4, 6), gust : 14 },\n        { x: new Date(2023, 4, 7), gust : 13 },\n        { x: new Date(2023, 4, 8), gust : 29 },\n        { x: new Date(2023, 4, 9), gust : 19 },\n        { x: new Date(2023, 4, 10), gust : 20 },\n        { x: new Date(2023, 4, 11), gust : 15 },\n        { x: new Date(2023, 4, 12), gust : 25 },\n        { x: new Date(2023, 4, 13), gust : 20 },\n        { x: new Date(2023, 4, 14), gust : 10 },\n        { x: new Date(2023, 4, 15), gust : 15 }\n    ];\n    //Initializing Primary Y Axis\n    public primaryXAxis: Object =  {\n        valueType: 'DateTimeCategory', majorGridLines: { width: 0}, labelFormat : 'E dd/MM', labelRotation: -90,\n        //Initializing Striplines\n        majorTickLines: { width: 0 }, labelIntersectAction: Browser.isDevice ? 'Rotate90' : 'None',\n    }\n    //Initializing Primary Y Axis\n    public primaryYAxis: Object = {\n        minimum: 0, maximum: 30, interval: 10, rangePadding: 'None', majorTickLines: { width: 0 }, title: 'Wind Speed and Gust (km/h)', lineStyle: { width: 0 }, majorGridLines: { width: 0 },\n        //Initializing Striplines\n        stripLines: [\n            {\n                start: 0, end: 5, text: 'Calm', color: 'rgba(68, 170, 213, 0.1)', visible: true, horizontalAlignment: 'Start',\n                textStyle: { size: '13px' }, border: { width: 0 },\n            },\n            {\n                start: 5, end: 8, text: 'Light Air', color: 'rgba(0, 0, 0, 0)', visible: true, horizontalAlignment: 'Start',\n                textStyle: { size: '13px' }, border: { width: 0 },\n            },\n            {\n                start: 8, end: 11, text: 'Light Breeze', visible: true, horizontalAlignment: 'Start',\n                textStyle: { size: '13px' }, border: { width: 0 }, color: 'rgba(68, 170, 213, 0.1)'\n            },\n            {\n                start: 11, end: 18, text: 'Gentle Breeze', color: 'rgba(0, 0, 0, 0)', visible: true, horizontalAlignment: 'Start',\n                textStyle: { size: '13px' }, border: { width: 0 },\n            },\n            {\n                start: 18, end: 28, text: 'Moderate Breeze', visible: true, horizontalAlignment: 'Start',\n                textStyle: { size: '13px' }, border: { width: 0 }, color: 'rgba(68, 170, 213, 0.1)'\n            },\n            {\n                start: 28, end: 30, text: 'Fresh Breeze', visible: true, horizontalAlignment: 'Start',\n                textStyle: { size: '13px' }, border: { width: 0 }, color: 'rgba(0, 0, 0, 0)'\n            }\n        ]\n    };\n    public chartArea: Object ={\n        border: { width: 0 }\n    }\n    public width: string = Browser.isDevice ? '100%' : '75%';\n    public tooltip: Object = {\n        enable: true,\n        header: \" \",\n        format: \"<b>${point.x}</b> <br> ${series.name} : <b>${point.y}</b>\",\n        enableMarker: false\n    };\n    public legendSettings: Object = {\n        visible: true,\n        enableHighlight: true,\n        shapeWidth: 15\n    };\n     // custom code start\n    public load(args: ILoadedEventArgs): void {\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n        args.chart.theme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i,Â 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    };\n     // custom code end\n    public title: string = 'Wind Speed and Gust (km/h)';\n    public titleStyle: Object = { position : 'Bottom', textAlignment:'Far' }\n    public subTitle: Object = 'WorldWeatherOnline.com'\n    @ViewChild('chart')\n    public chart: ChartComponent;\n    public mode: DropDownList;\n    constructor() {\n        //code\n    };\n\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section\">\n    <div align='center'>\n        <ejs-chart #chart style='display:block;' id='chartcontainer' [chartArea]=\"chartArea\" [titleStyle]=\"titleStyle\" [subTitle]=\"subTitle\" [primaryXAxis]='primaryXAxis' [width]='width'\n            [primaryYAxis]='primaryYAxis' [title]='title' [tooltip]='tooltip' [legendSettings]='legendSettings'\n            (load)='load($event)'>\n            <e-series-collection>\n                <e-series [dataSource]='data' type='Spline' xName='x' yName='wind' name='Wind Speed (km/h)' width=4 legendShape='HorizontalLine'\n                    >\n                </e-series>\n                <e-series [dataSource]='data1' type='Spline' xName='x' yName='gust' name='Wind Gust (km/h)' width=4 legendShape='HorizontalLine'\n                 >\n            </e-series>\n            </e-series-collection>\n        </ejs-chart>\n    </div> \n</div>\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n\n    #control-container {\n        padding: 0px !important;\n    }\n\n    #winter stop {\n        stop-color: #4ca1af;\n    }\n\n    #winter stop[offset=\"0\"] {\n        stop-color: #c4e0e5;\n    }\n\n    #winter stop[offset=\"1\"] {\n        stop-color: #4ca1af;\n    }\n\n    #summer stop {\n        stop-color: #ffa751;\n    }\n\n    #summer stop[offset=\"0\"] {\n        stop-color: #ffe259;\n    }\n\n    #summer stop[offset=\"1\"] {\n        stop-color: #ffa751;\n    }\n\n    #spring stop {\n        stop-color: #1d976c;\n    }\n\n    #spring stop[offset=\"0\"] {\n        stop-color: #93f9b9;\n    }\n\n    #spring stop[offset=\"1\"] {\n        stop-color: #1d976c;\n    }\n\n    #autumn stop {\n        stop-color: #603813;\n    }\n\n    #autumn stop[offset=\"0\"] {\n        stop-color: #b29f94;\n    }\n\n    #autumn stop[offset=\"1\"] {\n        stop-color: #603813;\n    }\n</style>\n<svg style=\"height: 0\">\n    <defs>\n        <linearGradient id=\"winter\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\" />\n            <stop offset=\"1\" />\n        </linearGradient>\n        <linearGradient id=\"summer\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\" />\n            <stop offset=\"1\" />\n        </linearGradient>\n        <linearGradient id=\"spring\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\" />\n            <stop offset=\"1\" />\n        </linearGradient>\n        <linearGradient id=\"autumn\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\" />\n            <stop offset=\"1\" />\n        </linearGradient>\n    </defs>\n</svg>","app.component.css":".control-fluid {\n    padding: 0px !important;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-angular-calendars\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-layouts\":\"*\",\"@syncfusion/ej2-angular-layouts\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}