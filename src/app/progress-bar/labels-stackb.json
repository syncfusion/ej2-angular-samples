{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { ProgressBar, ITextRenderEventArgs, AnimationModel, FontModel,ILoadedEventArgs,ProgressTheme } from '@syncfusion/ej2-progressbar';\nimport { ProgressBarAllModule } from '@syncfusion/ej2-angular-progressbar';\n\n\n/**\n * RTl sample\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ProgressBarAllModule]\n})\n\nexport class AppComponent {\n    public type: string = 'Linear';\n    public width: string = '100%';\n    public height: string = '40px';\n    public trackThickness: number = 24;\n    public progressThickness: number = 24;\n    public min: number = 0;\n    public max: number = 100;\n    public value1: number = 40;\n    public value2: number = 50;\n    public value3: number = 60;\n    public value4: number = 70;\n    public showProgressValue: boolean = true;\n    public role1:string = 'Success';\n    public role2:string = 'Info';\n    public role3:string = 'Warning';\n    public role4:string = 'Danger';\n    public animation: AnimationModel = { enable: true, duration: 2000, delay: 0 };\n    public labelStyle1: FontModel = { textAlignment: 'Center', text: '40% Complete (Success)', color: '#ffffff'};\n    public labelStyle2: FontModel = { textAlignment: 'Center', text: '50% Complete (Info)', color: '#ffffff'};\n    public labelStyle3: FontModel = { textAlignment: 'Center', text: '60% Complete (Warning)', color: '#ffffff'};\n    public labelStyle4: FontModel = { textAlignment: 'Center', text: '70% Complete (Danger)', color: '#ffffff'};\n    @ViewChild('linear1')\n    public linear1: ProgressBar;\n    @ViewChild('linear2')\n    public linear2: ProgressBar;\n    @ViewChild('linear3')\n    public linear3: ProgressBar;\n    @ViewChild('linear4')\n    public linear4: ProgressBar;\n    public onClick = () => {\n        this.linear1.refresh();\n        this.linear2.refresh();\n        this.linear3.refresh();\n        this.linear4.refresh();\n    }\n    public load(args: ILoadedEventArgs): void {\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n        args.progressBar.theme = <ProgressTheme>(selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n            if (args.progressBar.theme === 'Material') {\n                args.progressBar.trackColor = '#eee';\n            }\n            if (selectedTheme === 'highcontrast') {\n               args.progressBar.labelStyle.color = '#000000';\n               args.progressBar.trackColor = '#969696';\n           }\n\n    }\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section\">\n    <div class=\"row linear-parent\">\n        <div id=\"percentage\" class=\"linear-progress\">\n            <ejs-progressbar #linear1 id='linear1' [type]='type' [maximum]='max' [minimum]='min' [value]='value1'\n                [width]='width' [trackThickness]='trackThickness' [progressThickness]='progressThickness'\n                [height]='height' [role]='role1' [showProgressValue]='showProgressValue' [animation]='animation'\n                [labelStyle]='labelStyle1' (load)='load($event)'>\n            </ejs-progressbar>\n        </div>\n        <div id=\"ratio\" class=\"linear-progress\">\n            <ejs-progressbar #linear2 id='linear2' [type]='type' [maximum]='max' [minimum]='min' [value]='value2'\n                [width]='width' [trackThickness]='trackThickness' [progressThickness]='progressThickness'\n                [height]='height' [role]='role2' [showProgressValue]='showProgressValue' [animation]='animation'\n                [labelStyle]='labelStyle2' (load)='load($event)'>\n            </ejs-progressbar>\n        </div>\n        <div id=\"acutal\" class=\"linear-progress\">\n            <ejs-progressbar #linear3 id='linear3' [type]='type' [maximum]='max' [minimum]='min' [value]='value3'\n                [width]='width' [trackThickness]='trackThickness' [progressThickness]='progressThickness'\n                [height]='height' [role]='role3' [showProgressValue]='showProgressValue' [animation]='animation'\n                [labelStyle]='labelStyle3' (load)='load($event)'>\n            </ejs-progressbar>\n        </div>\n        <div id=\"custom\" class=\"linear-progress\">\n            <ejs-progressbar #linear4 id='linear4' [type]='type' [maximum]='max' [minimum]='min' [value]='value4'\n                [width]='width' [trackThickness]='trackThickness' [progressThickness]='progressThickness'\n                [height]='height' [role]='role4' [showProgressValue]='showProgressValue' [animation]='animation'\n                [labelStyle]='labelStyle4' (load)='load($event)'>\n            </ejs-progressbar>\n        </div>\n    </div>\n    <div class=\"row linear-button\">\n        <button id=\"reLoad\" (click)=\"onClick()\" class=\"e-control e-btn e-lib e-outline e-primary\">Reload</button></div>\n</div>\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n    #linear1_Lineartrack, #linear2_Lineartrack, #linear3_Lineartrack, #linear4_Lineartrack {\n        opacity: 1 !important;\n    }\n    .linear-parent {\n        text-align: center;\n        margin-top: 2%;\n    }\n\n    .linear-button {\n        text-align: center;\n    }\n\n    .linear-progress {\n        width: 80%;\n        margin: auto;\n        margin-bottom: 3%;\n    }\n\n    #reLoad {\n        border-radius: 4px;\n        text-transform: capitalize;\n    }\n</style>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-svg-base\":\"*\",\"@types/requirejs\":\"^2.1.37\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-progressbar\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-progressbar\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}