{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { SliderComponent, NumericTextBoxComponent, SliderChangeEventArgs, SliderModule, NumericTextBoxModule } from '@syncfusion/ej2-angular-inputs';\nimport { CheckBoxComponent, CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\nimport { ChangeEventArgs } from '@syncfusion/ej2-buttons';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n\n\n\n/**\n * slider property customization\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [SliderModule, NumericTextBoxModule, CheckBoxModule,  ]\n})\n\nexport class AppComponent {\n    @ViewChild('slider')\n    public slider: SliderComponent;\n    @ViewChild('numeric1')\n    public numericTextBox: NumericTextBoxComponent;\n    public value: number = 30;\n    public min: number = 0;\n    public max: number = 100;\n    public type: string = 'MinRange';\n    public format: string = 'n0';\n    public ticks: Object = { placement: 'After', largeStep: 20 };\n    public tooltip: Object = { isVisible: true, placement: 'Before', showOn: 'Hover' };\n    change(args: any) {\n        if (args.value) {\n            this.slider.value = args.value;\n        }\n    }\n    min_change(args: any) {\n        if (args.value) {\n            this.slider.min = args.value;\n        }\n    }\n    max_change(args: any) {\n        if (args.value) {\n            this.slider.max = args.value;\n        }\n    }\n    step_change(args: any) {\n        if (args.value) {\n            this.slider.step = args.value;\n        }\n    }\n    sliderChange(args: SliderChangeEventArgs) {\n        if (args.value) {\n            this.numericTextBox.value = <number>args.value;\n        }\n    }\n\n    button_onChange(args: ChangeEventArgs) {\n        this.slider.showButtons = args.checked;\n    }\n    orientation_onChange(args: ChangeEventArgs) {\n        args.checked ? this.slider.orientation = 'Vertical' : this.slider.orientation = 'Horizontal';\n    }\n    readOnly_onChange(args: ChangeEventArgs) {\n        this.slider.readonly = args.checked;\n    }\n    disabled_onChange(args: ChangeEventArgs) {\n        this.slider.enabled = !args.checked;\n    }\n\n    buttonM_onChange(args: ChangeEventArgs) {\n        this.slider.showButtons = args.checked;\n    }\n    orientationM_onChange(args: ChangeEventArgs) {\n        args.checked ? this.slider.orientation = 'Vertical' : this.slider.orientation = 'Horizontal';\n    }\n    readOnlyM_onChange(args: ChangeEventArgs) {\n        this.slider.readonly = args.checked;\n    }\n    disabledM_onChange(args: ChangeEventArgs) {\n        this.slider.enabled = !args.checked;\n    }\n\n    ngOnInit() {\n        if (!isNullOrUndefined(document.getElementById('right-pane'))) {\n            document.getElementById('right-pane').addEventListener('scroll', this.onScroll.bind(this));\n        }\n    }\n    // Handler used to reposition the tooltip on page scroll\n    onScroll(): void {\n        let slider: any = [this.slider];\n        slider.forEach((slider: any) => {\n            slider.refreshTooltip(slider.tooltipTarget);\n        });\n    }\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"col-lg-8 control-section\">\n    <div class=\"content-wrapper\" id=\"all-option-sample\">\n        <div class='api sliderwrap'>\n            <ejs-slider id='slider' #slider [value]='value' [min]='min' [max]='max' (change)='sliderChange($event)' [type]='type' [tooltip]='tooltip' [ticks]='ticks'></ejs-slider>\n        </div>\n    </div>\n</div>\n\n<div class=\"col-lg-4 property-section\" id=\"all-option-table\">\n    <div class=\"property-panel-section\">\n        <div class=\"property-panel-header\">Properties</div>\n        <div class=\"property-panel-content\">\n            <table id=\"property\" title=\"Properties\">\n                <tbody>\n                    <tr>\n                        <td style=\"width: 50%\">\n                            <div id=\"valueLabel\" class=\"userselect\">Value</div>\n                        </td>\n                        <td style=\"width: 50%\">\n                            <div>\n                                <ejs-numerictextbox id='value' #numeric1 format=\"n0\" value=\"30\" (change)='change($event)' aria-labelledby=\"valueLabel\"></ejs-numerictextbox>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"width: 50%\">\n                            <div id=\"minLabel\" class=\"userselect\">Min</div>\n                        </td>\n                        <td style=\"width: 50%\">\n                            <div>\n                                <ejs-numerictextbox id='min' #numeric2 format=\"n0\" value=\"0\" (change)='min_change($event)' aria-labelledby=\"minLabel\"></ejs-numerictextbox>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"width: 50%\">\n                            <div id=\"maxLabel\" class=\"userselect\">Max</div>\n                        </td>\n                        <td style=\"width: 50%\">\n                            <div>\n                                <ejs-numerictextbox id='max' #numeric3 format=\"n0\" value=\"100\" (change)='max_change($event)' aria-labelledby=\"maxLabel\"></ejs-numerictextbox>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"width: 50%\">\n                            <div id=\"stepLabel\" class=\"userselect\">Step</div>\n                        </td>\n                        <td style=\"width: 50%\">\n                            <div>\n                                <ejs-numerictextbox id='step' #numeric4 value=\"1\" format=\"n0\" (change)='step_change($event)' aria-labelledby=\"stepLabel\"></ejs-numerictextbox>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr id=\"desktop-checkbox-row-1\">\n                        <td style=\"width: 50%\">\n                            <div class=\"userselect\" style=\"padding-left: 0\">\n                                <ejs-checkbox id='button' [checked]=\"false\" label=\"Show Buttons\" (change)=\"button_onChange($event)\"></ejs-checkbox>\n                            </div>\n                        </td>\n                        <td style=\"width: 50%;padding-right: 10px\">\n                            <div class=\"apiSlider\">\n                                <ejs-checkbox id='disabled' [checked]=\"false\" label=\"Disabled\" (change)=\"disabled_onChange($event)\"></ejs-checkbox>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr id=\"desktop-checkbox-row-2\">\n                        <td style=\"width: 50%;padding-right: 10px\">\n                            <div style=\"padding-left: 0;padding-top: 0\">\n                                <ejs-checkbox id='readOnly' [checked]=\"false\" label=\"Readonly\" (change)=\"readOnly_onChange($event)\"></ejs-checkbox>\n                            </div>\n                        </td>\n                        <td style=\"width: 50%\">\n                            <div class=\"userselect\" style=\"padding-left: 0\">\n                                <ejs-checkbox id='orientation' [checked]=\"false\" label=\"Vertical Orientation\" (change)=\"orientation_onChange($event)\"></ejs-checkbox>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr id=\"mobie-checkbox-row-1\">\n                        <td style=\"width: 50%\">\n                            <div class=\"userselect\">Show Buttons</div>\n                        </td>\n                        <td style=\"width: 50%;padding-right: 10px\">\n                            <div>\n                                <ejs-checkbox id='mb-button' [checked]=\"false\" (change)=\"buttonM_onChange($event)\"></ejs-checkbox>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr id=\"mobile-checkbox-row-2\">\n                        <td style=\"width: 50%\">\n                            <div class=\"userselect\">Disabled</div>\n                        </td>\n                        <td style=\"width: 50%;padding-right: 10px\">\n                            <div>\n                                <ejs-checkbox id='mb-disabled' [checked]=\"false\" (change)=\"disabledM_onChange($event)\"></ejs-checkbox>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr id=\"mobile-checkbox-row-3\">\n                        <td style=\"width: 50%\">\n                            <div class=\"userselect\">Vertical Orientation</div>\n                        </td>\n                        <td style=\"width: 50%;padding-right: 10px\">\n                            <div>\n                                <ejs-checkbox id='mb-orientation' [checked]=\"false\" (change)=\"orientationM_onChange($event)\"></ejs-checkbox>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr id=\"mobile-checkbox-row-4\">\n                        <td style=\"width: 50%\">\n                            <div class=\"userselect\">Readonly</div>\n                        </td>\n                        <td style=\"width: 50%;padding-right: 10px\">\n                            <div>\n                                <ejs-checkbox id='mb-readOnly' [checked]=\"false\" (change)=\"disabledM_onChange($event)\"></ejs-checkbox>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n\n\n","app.component.css":".sb-mobile-prop-pane #all-option-table #desktop-checkbox-row-1,\n    .sb-mobile-prop-pane #all-option-table #desktop-checkbox-row-2 {\n        display: none;\n\n    }\n\n    .sb-mobile-prop-pane #all-option-table #mobie-checkbox-row-1,\n    .sb-mobile-prop-pane #all-option-table #mobile-checkbox-row-2,\n    .sb-mobile-prop-pane #all-option-table #mobile-checkbox-row-3,\n    .sb-mobile-prop-pane #all-option-table #mobile-checkbox-row-4 {\n        display: table-row;\n\n    }\n\n    #all-option-table #mobie-checkbox-row-1,\n    #all-option-table #mobile-checkbox-row-2,\n    #all-option-table #mobile-checkbox-row-3,\n    #all-option-table #mobile-checkbox-row-4 {\n        display: none;\n\n    }\n\n    #all-option-table.property-section table#property tr {\n        height: 50px;\n    }\n\n    #all-option-sample .e-slider-container.e-horizontal {\n        margin-top: 160px;\n    }\n\n    #all-option-sample .e-slider-container.e-vertical {\n        margin-left: 40%;\n    }\n\n    #all-option-sample.content-wrapper {\n        height: 463px;\n        width: 50%;\n        margin: 0 auto;\n        min-width: 185px;\n    }\n\n    .api.sliderwrap {\n        height: 340px;\n    }\n\n    .e-bigger .content-wrapper {\n        width: 50%;\n    }\n\n    .api.sliderwrap label {\n        padding-bottom: 26px;\n        font-size: 13px;\n        font-weight: 500;\n        margin-top: 15px;\n        text-align: left;\n        width: 100%;\n    }\n\n    #desktop-checkbox-row-1 .apiSlider {\n        padding-left: 0;\n        padding-top: 0;\n    }\n\n    .tailwind.e-bigger #desktop-checkbox-row-1 .apiSlider,\n    .tailwind-dark.e-bigger #desktop-checkbox-row-1 .apiSlider {\n        padding-left: 10px;\n    }\n\n    .userselect {\n        -webkit-user-select: none;\n        /* Safari 3.1+ */\n        -moz-user-select: none;\n        /* Firefox 2+ */\n        -ms-user-select: none;\n        /* IE 10+ */\n        user-select: none;\n        /* Standard syntax */\n    }\n\n    .e-bigger .e-sidebar .sb-mobile-right-pane .property-section .e-numerictextbox {\n        display: flex;\n        padding-left: 0;\n        text-align: center;\n    } \n\n    body.tailwind3 .sliderwrap .e-tick-after.e-scale.e-h-scale .e-tick,\n    body.tailwind3-dark .sliderwrap .e-tick-after.e-scale.e-h-scale .e-tick,\n    body.tailwind3.e-bigger .sliderwrap .e-tick-after.e-scale.e-h-scale .e-tick\n    body.tailwind3-dark.e-bigger .sliderwrap .e-tick-after.e-scale.e-h-scale .e-tick {\n        top: 0px;\n    }","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-icons\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-angular-popups\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}