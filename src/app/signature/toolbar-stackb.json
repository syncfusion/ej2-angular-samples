{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { addClass, createElement, getComponent } from '@syncfusion/ej2-base';\nimport { SignatureComponent, ColorPickerModule, SignatureModule } from '@syncfusion/ej2-angular-inputs';\nimport { SplitButton, ItemModel, MenuEventArgs, DropDownButton } from '@syncfusion/ej2-splitbuttons';\nimport { ClickEventArgs } from '@syncfusion/ej2-navigations';\nimport { Button, ChangeEventArgs, CheckBox } from '@syncfusion/ej2-buttons';\nimport { ColorPicker, ColorPickerEventArgs, NumericTextBox, PaletteTileEventArgs, Signature, SignatureFileType } from '@syncfusion/ej2-inputs';\nimport { DropDownList, DropDownListModule } from '@syncfusion/ej2-angular-dropdowns';\n\nimport { CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\nimport { SplitButtonModule } from '@syncfusion/ej2-angular-splitbuttons';\nimport { ToolbarModule } from '@syncfusion/ej2-angular-navigations';\n\n\n/**\n * Default sample\n */\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ ToolbarModule, SplitButtonModule, ColorPickerModule, DropDownListModule, CheckBoxModule, SignatureModule, ]\n})\nexport class AppComponent {\n    @ViewChild('signature') signature !: SignatureComponent;\n    public widthOptions: ItemModel[] = [\n      { text: '1'},\n      { text: '2'},\n      { text: '3'},\n      { text: '4'},\n      { text: '5'}\n    ];\n    public items: ItemModel[] = [\n    {\n      text: 'Png'\n    },\n    {\n      text: 'Jpeg'\n    },\n    {\n      text: 'Svg'\n    }];\n  \n    public templateCheckbox1: any = new CheckBox({\n      label: 'Disabled',\n      checked: false,\n      change: (args: ChangeEventArgs) => {\n          (this.signature.disabled as any) = args.checked;\n      }\n    });\n  \n    public valueChange(args:ChangeEventArgs) {\n      this.signature.disabled = args.checked as boolean;\n    };\n  \n    public onChange(){\n      let saveBtn: SplitButton = getComponent(document.getElementById(\"save-option\") as HTMLElement, 'split-btn');\n        if (!this.signature.isEmpty()) {\n            this.clearButton();\n            saveBtn.disabled = false;\n        }\n        this.updateUndoRedo();\n    }\n  \n    public presetColors = {\n      'custom': ['#000000', '#e91e63', '#9c27b0', '#673ab7', '#2196f3', '#03a9f4', '#00bcd4',\n          '#009688', '#8bc34a', '#cddc39', '#ffeb3b', '#ffc107']\n    };\n  \n    public onCreated(e: any) {\n      let toolbarlItems: NodeListOf<Element> = document.querySelectorAll('.e-toolbar .e-toolbar-items .e-toolbar-item .e-tbar-btn.e-tbtn-txt');\n          for (var i = 0; i < toolbarlItems.length; i++) {\n              if (toolbarlItems[i].children[0].classList.contains('e-undo')) {\n                  let undoButton: Button = getComponent(toolbarlItems[i] as HTMLElement, 'btn');\n                  undoButton.disabled = true;\n              }\n              if (toolbarlItems[i].children[0].classList.contains('e-redo')) {\n                  let redoButton: Button = getComponent(toolbarlItems[i] as HTMLElement, 'btn');\n                  redoButton.disabled = true;\n              }\n                let redoButton1: SplitButton | any = document.querySelectorAll('.e-selected-color');\n                addClass(redoButton1, 'e-sign-icons');      \n      }\n      this.clearButton();\n      (document.getElementById('save-option') as HTMLElement).addEventListener('click', this.saveBtnClick);\n    };\n  \n    public onColorChange(args: ColorPickerEventArgs, id: string) {\n      if(!this.signature.disabled){\n        let pickerElem: any = this.getPickerElem(document.getElementById(id));\n        if(id === 'bg-color'){\n          this.signature.backgroundColor = args.currentValue.rgba;\n        } else {\n          this.signature.strokeColor = args.currentValue.rgba;\n        }\n        pickerElem.style.borderBottomColor =  args.currentValue.rgba ;\n      }\n    };\n  \n    public tileRender(args: PaletteTileEventArgs) {\n      if(args) {\n        args.element.classList.add('e-circle-palette');\n        args.element.appendChild(createElement('span', { className: 'e-circle-selection' }));\n      }\n    }\n  \n    public onSelect(args: any, option?: string) {\n      if(option === 'width') {\n        this.signature.maxStrokeWidth = parseInt((args.item.textContent as string));\n      } else {\n        this.signature.save(args.item.text as SignatureFileType, 'Save');\n      }\n    }\n     \n    public getPickerElem(args:any) {\n      let pickerElem: HTMLElement = args.nextElementSibling;\n      return (pickerElem) ? pickerElem.querySelector('.e-selected-color') : null;\n    }\n  \n    public onClick (args: ClickEventArgs): void {\n      let saveBtn: SplitButton = getComponent(document.getElementById(\"save-option\") as HTMLElement, 'split-btn');\n          if (this.signature.disabled && args.item.tooltipText != 'Disabled') {\n              return;\n          }\n          switch (args.item.tooltipText) {\n              case 'Undo (Ctrl + Z)':\n                  if (this.signature.canUndo()) {\n                      this.signature.undo();\n                      this.updateUndoRedo();\n                      this.updateSaveBtn();\n                  }\n                  break;\n              case 'Redo (Ctrl + Y)':\n                  if (this.signature.canRedo()) {\n                      this.signature.redo();\n                      this.updateUndoRedo();\n                      this.updateSaveBtn();\n                  }\n                  break;\n              case 'Clear':\n                  this.signature.clear();\n                  if (this.signature.isEmpty()) {\n                      this.clearButton();\n                      saveBtn.disabled = true;\n                  }\n                  break;\n          }\n    }\n  \n    public updateSaveBtn() {\n      let saveBtn: SplitButton = getComponent(document.getElementById(\"save-option\") as HTMLElement, 'split-btn');\n      if (this.signature.isEmpty()) {\n          saveBtn.disabled = true;\n      }\n    }\n  \n    public updateUndoRedo() {\n      let undoButton: Button | any; let redoButton: Button | any\n      let tlItems: NodeListOf<Element> = document.querySelectorAll('.e-toolbar .e-toolbar-items .e-toolbar-item .e-tbar-btn.e-tbtn-txt');\n      for (var i = 0; i < tlItems.length; i++) {\n          if (tlItems[i].children[0].classList.contains('e-undo')) {\n              undoButton = getComponent(tlItems[i] as HTMLElement, 'btn'); \n          }\n          if (tlItems[i].children[0].classList.contains('e-redo')) {\n              redoButton = getComponent(tlItems[i] as HTMLElement, 'btn');\n          }\n      }\n      if (this.signature.canUndo()) {\n          undoButton.disabled = false;\n      } else {\n          undoButton.disabled = true;\n      }\n      if (this.signature.canRedo()) {\n          redoButton.disabled = false;\n      } else {\n          redoButton.disabled = true;\n      }\n    };\n  \n    public saveBtnClick(): void {\n      let signature: Signature = getComponent(document.getElementById(\"signature\") as HTMLElement, 'signature');\n      signature.save();\n    };\n  \n    public clearButton() {\n      let tlItems: NodeListOf<Element> = document.querySelectorAll('.e-toolbar .e-toolbar-items .e-toolbar-item .e-tbar-btn.e-tbtn-txt');\n      for (var i = 0; i < tlItems.length; i++) {\n          if (tlItems[i].children[0].classList.contains('e-clear')) {\n              let clrBtn: Button = getComponent(tlItems[i] as HTMLElement, 'btn');\n              if (this.signature.isEmpty()) {\n                  clrBtn.disabled = true;\n              } else {\n                  clrBtn.disabled = false;\n              }\n          }\n      }\n    };\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n\n<div class=\"col-lg-12 control-section\">\n    <div id=\"signature-toolbar-control\">\n        <ejs-toolbar id=\"toolbar\" (created)=\"onCreated($event)\" (clicked)=\"onClick($event)\">\n            <e-items>\n                <e-item text=\"Undo\" tooltipText='Undo (Ctrl + Z)' prefixIcon=\"e-icons e-undo\" ></e-item>\n                <e-item text=\"Redo\" tooltipText='Redo (Ctrl + Y)' prefixIcon=\"e-icons e-redo\" ></e-item>\n                <e-item type=\"Separator\"></e-item>\n                <e-item >\n                    <ng-template #template>\n                        <ejs-splitbutton id=\"save-option\" \n                        iconCss= 'e-sign-icons e-save'\n                        [items]=\"items\"\n                        content=\"Save\"\n                        (created)=\"onCreated('save-option')\"\n                        (select)=\"onSelect($event)\"\n                        [disabled]=true\n                        ></ejs-splitbutton>\n                    </ng-template>\n                </e-item>\n                <e-item type=\"Separator\"></e-item>\n                <e-item tooltipText=\"Stroke Color\">\n                    <ng-template #template>\n                        <input id=\"stroke-color\" ejs-colorpicker mode='Palette' \n                        cssClass='e-stroke-color'\n                        [modeSwitcher]= false\n                        [showButtons]= false\n                        [presetColors]=\"presetColors\"\n                        (beforeTileRender)=\"tileRender($event)\"\n                        (created)=\"onCreated('stroke-color')\"\n                        (change)=\"onColorChange($event, 'stroke-color')\"\n                        columns= 4 />\n                    </ng-template>\n                </e-item>\n                <e-item type=\"Separator\"></e-item>\n                <e-item tooltipText=\"Background Color\">\n                    <ng-template #template>\n                        <input id=\"bg-color\" ejs-colorpicker \n                        mode='Palette' \n                        [noColor]=true\n                        cssClass='e-bg-color'\n                        [modeSwitcher]= false\n                        [showButtons]= false\n                        [presetColors]=\"presetColors\"\n                        (beforeTileRender)=\"tileRender($event)\"\n                        (created)=\"onCreated('bg-color')\"\n                        (change)=\"onColorChange($event, 'bg-color')\"\n                        columns= 4 />\n                    </ng-template>\n                </e-item>\n                <e-item type=\"Separator\"></e-item>\n                <e-item template=\"<button id='stroke-width'></button>\">\n                    <ng-template #template>\n                        <ejs-dropdownlist [dataSource]=\"widthOptions\"\n                        width=\"60\"\n                        value=\"2\"\n                        iconCss='e-icons e-stroke-width'\n                        (select)=\"onSelect($event,'width')\"\n                        ></ejs-dropdownlist>\n                    </ng-template>\n                </e-item>\n                <e-item type=\"Separator\"></e-item>\n                <e-item text=\"Clear\" tooltipText= 'Clear' prefixIcon=\"e-sign-icons e-clear\" (click)=\"onClick($event)\"></e-item>\n                <e-item align=\"Right\">\n                    <ng-template #template>\n                        <ejs-checkbox label='Disabled' [checked]=false (change)=\"valueChange($event)\"></ejs-checkbox>\n                    </ng-template>\n                </e-item>\n            </e-items>\n        </ejs-toolbar>\n        <div id=\"signature-control\">\n            <canvas ejs-signature #signature id=\"signature\" style=\"height: 100%; width: 100%;\" (change)=\"onChange()\"></canvas>\n        </div>\n    </div>\n</div>\n","app.component.css":"@font-face {\n    font-family: 'font-icons';\n    src:\n    url(data:application/x-font-ttf;charset=utf-8;base64,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) format('truetype');\n    font-weight: normal;\n    font-style: normal;\n}\n\n.e-sign-icons {\n    font-family: 'font-icons' !important;\n    font-size: 55px;\n    font-style: normal;\n    font-weight: normal;\n    font-variant: normal;\n    text-transform: none;\n    line-height: 1;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}\n\n#signature-toolbar-control {\n    border: 1px solid lightgray;\n}\n\n.highcontrast #signature-toolbar-control  {\n    border: 1px solid white;\n}\n\n#signature-toolbar-control #toolbar {\n    border: none;\n    border-bottom: 1px solid lightgray;\n    box-sizing: border-box;\n}\n\n/* custom code start */\n\n#signature-toolbar-control div#toolbar {\n    height: 44px !important;\n}\n\n.e-bigger #signature-toolbar-control #toolbar {\n    height: 54px !important;\n}\n\n.e-bigger .material #signature-toolbar-control div#toolbar,\n.e-bigger .material-dark #signature-toolbar-control div#toolbar {\n    height: 57px !important;\n}\n\n.e-bigger .bootstrap4 #signature-toolbar-control div#toolbar,\n.e-bigger .bootstrap4-dark #signature-toolbar-control div#toolbar {\n    height: 65px !important;\n}\n\n.bootstrap4 #signature-toolbar-control div#toolbar,\n.bootstrap4-dark #signature-toolbar-control div#toolbar,\n.bootstrap-dark #signature-toolbar-control div#toolbar,\n.bootstrap #signature-toolbar-control div#toolbar {\n    height: 49px !important;\n}\n\n.bootstrap5 #signature-toolbar-control #toolbar .e-split-btn,\n.bootstrap5 #signature-toolbar-control #toolbar .e-dropdown-btn {\n    color: #6c757d\n}\n\n.bootstrap4 #signature-toolbar-control #toolbar .e-split-btn,\n.bootstrap4 #signature-toolbar-control #toolbar .e-dropdown-btn {\n    color: #495057;\n}\n\n.highcontrast #signature-toolbar-control #toolbar .e-split-btn,\n.highcontrast #signature-toolbar-control #toolbar .e-dropdown-btn {\n    color: #fff;\n}\n\n.fabric #signature-toolbar-control #toolbar .e-split-btn,\n.fabric #signature-toolbar-control #toolbar .e-dropdown-btn,\n.bootstrap5 #signature-toolbar-control #toolbar .e-split-btn,\n.bootstrap5 #signature-toolbar-control #toolbar .e-dropdown-btn,\n.bootstrap4 #signature-toolbar-control #toolbar .e-split-btn,\n.bootstrap4 #signature-toolbar-control #toolbar .e-dropdown-btn {\n    background-color: transparent !important;\n    border-color: lightgray;\n}\n\n.fabric-dark #toolbar .e-dropdown-btn,\n.fabric-dark #toolbar .e-split-btn,\n.bootstrap5-dark #toolbar .e-split-btn,\n.bootstrap5-dark #toolbar .e-dropdown-btn,\n.bootstrap4-dark #toolbar .e-split-btn,\n.bootstrap4-dark #toolbar .e-dropdown-btn {\n    background-color: transparent !important;\n    border-color: gray;\n}\n\n#signature-toolbar-control .e-btn:disabled {\n    opacity: 0.5 !important;\n    pointer-events: none;\n}\n\n#signature-toolbar-control #signature-control {\n    height: 300px;\n    width: 100%;\n    margin: 0;\n}\n\n#signature-toolbar-control #signature {\n    border: none !important;\n}\n\n.e-colorpicker-wrapper.e-bg-color #bg-color+.e-split-btn-wrapper .e-split-btn .e-selected-color {\n    background: none;\n    border-bottom-style: solid;\n    border-bottom-width: 3px;\n    width: 14px;\n    margin: 0px 2px;\n    border-bottom-color: #ffffff;\n}\n.e-colorpicker-wrapper.e-stroke-color #stroke-color+.e-split-btn-wrapper .e-split-btn .e-selected-color {\n    background: none;\n    border-bottom-style: solid;\n    border-bottom-width: 3px;\n    width: 14px;\n    margin: 0px 2px;\n    border-bottom-color: #000000;\n}\n\n.e-colorpicker-wrapper.e-bg-color #bg-color+.e-split-btn-wrapper .e-split-btn .e-selected-color .e-split-preview,\n.e-colorpicker-wrapper.e-stroke-color #stroke-color+.e-split-btn-wrapper .e-split-btn .e-selected-color .e-split-preview {\n    display: none;\n}\n\n.e-colorpicker-wrapper.e-bg-color #bg-color+.e-split-btn-wrapper .e-split-btn .e-selected-color::before {\n    content: '\\e707';\n}\n\n.e-colorpicker-wrapper.e-stroke-color #stroke-color+.e-split-btn-wrapper .e-split-btn .e-selected-color::before {\n    content: '\\e704';\n}\n\n.bootstrap4 .e-colorpicker-wrapper.e-bg-color #bg-color+.e-split-btn-wrapper .e-split-btn:hover .e-selected-color::before {\n    color: black;\n}\n\n.bootstrap5 .e-colorpicker-wrapper.e-bg-color #bg-color+.e-split-btn-wrapper .e-split-btn:hover .e-selected-color::before {\n    color: grey;\n}\n\n.bootstrap4 .e-colorpicker-wrapper.e-stroke-color #stroke-color+.e-split-btn-wrapper .e-split-btn:hover .e-selected-color::before {\n    color: black;\n}\n\n.bootstrap5 .e-colorpicker-wrapper.e-stroke-color #stroke-color+.e-split-btn-wrapper .e-split-btn:hover .e-selected-color::before {\n    color: grey;\n}\n\n#signature-toolbar-control .e-clear::before {\n    content: '\\e706';\n}\n\n#signature-toolbar-control .e-save::before {\n    content: '\\e701';\n}\n\n/* Circle palette customization */\n.e-container .e-palette .e-circle-palette {\n    border: 0;\n    height: 32px;\n    width: 32px;\n    border-radius: 20px;\n    margin: 4px;\n}\n.e-bigger .e-container .e-palette .e-circle-palette {\n    height: 32px;\n    width: 32px;\n}\n.e-container .e-palette .e-circle-palette:hover {\n    box-shadow: none;\n    transform: scale(1.2);\n    transition: transform .2s ease-out;\n}\n.e-circle-palette .e-circle-selection {\n    height: 32px;\n    width: 32px;\n    border-radius: 20px;\n    display: inline-block;\n    transform: scale(0);\n    transition: transform 1.2s ease-in;\n}\n.e-circle-palette.e-selected .e-circle-selection {\n    transform: scale(0.8);\n    background-color: #fff;\n    transition: transform .2s ease-out;\n}\n#circle-palette+.e-container,\n#scroll-palette+.e-container {\n    background-color: transparent;\n    border-color: transparent;\n    box-shadow: none;\n}\n.e-container .e-palette .e-circle-palette.e-selected {\n    outline: none;\n}\n\n.e-bg-color .e-circle-palette.e-nocolor-item.e-selected .e-circle-selection {\n    background: transparent;\n}\n\n.e-bg-color .e-circle-palette.e-nocolor-item.e-selected {\n    border: 3px solid lightgray;\n}\n\n/* custom code end */","dependencies.json":"{\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-angular-splitbuttons\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-angular-popups\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}