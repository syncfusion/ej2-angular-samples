{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { Button, ButtonComponent, ChangeEventArgs, ButtonModule, CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\nimport { Message, MessageComponent, MessageModule } from '@syncfusion/ej2-angular-notifications';\nimport { getComponent } from '@syncfusion/ej2-base';\n\n\n/**\n *  Sample for Message\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ ButtonModule, MessageModule, CheckBoxModule, ]\n})\n\nexport class AppComponent {\n    @ViewChild('btn1') private defaultBtn: ButtonComponent;\n    @ViewChild('btn2') private infoBtn: ButtonComponent;\n    @ViewChild('btn3') private successBtn: ButtonComponent;\n    @ViewChild('btn4') private warningBtn: ButtonComponent;\n    @ViewChild('btn5') private errorBtn: ButtonComponent;\n    @ViewChild('msg_default_icon') private msgDefault: MessageComponent;\n    @ViewChild('msg_success_icon') private msgSuccess: MessageComponent;\n    @ViewChild('msg_warning_icon') private msgWarning: MessageComponent;\n    @ViewChild('msg_error_icon') private msgError: MessageComponent;\n    @ViewChild('msg_info_icon') private msgInfo: MessageComponent;\n\n    public defaultClick(): void {\n        this.show(this.msgDefault, this.defaultBtn);\n    }\n\n    public defaultClosed(): void {\n        this.defaultBtn.element.classList.remove('msg-hidden');\n    }\n\n    public infoClick(): void {\n        this.show(this.msgInfo, this.infoBtn);\n    }\n\n    public infoClosed(): void {\n        this.infoBtn.element.classList.remove('msg-hidden');\n    }\n\n    public successClick(): void {\n        this.show(this.msgSuccess, this.successBtn);\n    }\n\n    public successClosed(): void {\n        this.successBtn.element.classList.remove('msg-hidden');\n    }\n\n    public warningClick(): void {\n        this.show(this.msgWarning, this.warningBtn);\n    }\n\n    public warningClosed(): void {\n        this.warningBtn.element.classList.remove('msg-hidden');\n    }\n\n    public errorClick(): void {\n        this.show(this.msgError, this.errorBtn);\n    }\n\n    public errorClosed(): void {\n        this.errorBtn.element.classList.remove('msg-hidden');\n    }\n\n    public severityIconChange(args: ChangeEventArgs): void {\n        this.changeProp(\"showIcon\", args.checked);\n    }\n\n    public closeIconChange(args: ChangeEventArgs): void {\n        this.changeProp(\"showCloseIcon\", args.checked);\n    }\n\n    public show(message: Message, btn: Button): void {\n        message.visible = true;\n        btn.element.classList.add('msg-hidden');\n    }\n\n    public changeProp(prop: string, value: boolean): void {\n        let msgTypes: string[] = [\"default\", \"info\", \"success\", \"warning\", \"error\"];\n        for (let i: number = 0; i <= 4; i++) {\n            let msgObj: Message = getComponent(document.getElementById(\"msg_\" + msgTypes[i] + \"_icon\"), \"message\") as Message;\n            if (msgObj) {\n                if (value) {\n                    msgObj[prop] = true;\n                } else {\n                    msgObj[prop] = false;\n                }\n            }\n        }\n    }\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n\n<div class=\"col-lg-8 control-section msg-icon-section sb-property-border\">\n    <div class=\"content-section\">\n        <button #btn1 ejs-button content=\"Show Default Message\" cssClass=\"e-outline e-primary msg-hidden\" (click)=\"defaultClick()\"></button>\n        <ejs-message #msg_default_icon id=\"msg_default_icon\" [showCloseIcon]=\"true\" (closed)=\"defaultClosed()\">Editing is restricted</ejs-message>\n        <button #btn2 ejs-button content=\"Show Info Message\" cssClass=\"e-outline e-primary e-info msg-hidden\" (click)=\"infoClick()\"></button>\n        <ejs-message #msg_info_icon id=\"msg_info_icon\" severity=\"Info\" [showCloseIcon]=\"true\" (closed)=\"infoClosed()\">Please read the comments carefully</ejs-message>\n        <button #btn3 ejs-button content=\"Show Success Message\" cssClass=\"e-outline e-primary e-success msg-hidden\" (click)=\"successClick()\"></button>\n        <ejs-message #msg_success_icon id=\"msg_success_icon\" severity=\"Success\" [showCloseIcon]=\"true\" (closed)=\"successClosed()\">Your message has been sent successfully</ejs-message>\n        <button #btn4 ejs-button content=\"Show Warning Message\" cssClass=\"e-outline e-primary e-warning msg-hidden\" (click)=\"warningClick()\"></button>\n        <ejs-message #msg_warning_icon id=\"msg_warning_icon\" severity=\"Warning\" [showCloseIcon]=\"true\" (closed)=\"warningClosed()\">There was a problem with your network connection</ejs-message>\n        <button #btn5 ejs-button content=\"Show Error Message\" cssClass=\"e-outline e-primary e-error msg-hidden\" (click)=\"errorClick()\"></button>\n        <ejs-message #msg_error_icon id=\"msg_error_icon\" severity=\"Error\" [showCloseIcon]=\"true\" (closed)=\"errorClosed()\">A problem occurred while submitting your data</ejs-message>\n    </div>\n</div>\n<div class=\"col-lg-4 property-section\">\n    <div class=\"property-panel-section\">\n        <div class=\"property-panel-header\">Properties</div>\n        <div class=\"property-panel-content\">\n            <table id=\"property\" title=\"Properties\">\n                <tbody>\n                    <tr>\n                        <td style=\"padding: 10px;\">\n                            <ejs-checkbox #showIcon label='Severity Icon' [checked]=\"true\"\n                                (change)=\"severityIconChange($event)\"></ejs-checkbox>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"padding: 10px;\">\n                            <ejs-checkbox #showCloseIcon label='Close Icon' [checked]=\"true\"\n                                (change)=\"closeIconChange($event)\"></ejs-checkbox>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n\n</div>\n\n","app.component.css":".msg-icon-section .content-section {\n    margin: 0 auto;\n    max-width: 520px;\n    padding-top: 10px;\n}\n\n.msg-icon-section .e-message {\n    margin: 10px 0;\n}\n\n.msg-icon-section .e-btn {\n    display: block;\n    margin: 10px 0;\n}\n\n.msg-icon-section .e-btn.msg-hidden {\n    display: none;\n}\n","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-angular-notifications\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}