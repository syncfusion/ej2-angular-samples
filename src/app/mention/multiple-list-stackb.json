{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"/**\n * Mention multiple-list Sample\n */\nimport { Component } from '@angular/core';\nimport { Query, DataManager, WebApiAdaptor } from '@syncfusion/ej2-data';\n\nimport { MentionModule } from '@syncfusion/ej2-angular-dropdowns';\n\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    standalone: true,\n    imports: [ MentionModule, ]\n})\nexport class AppComponent {\n    // define the JSON of data\n    public projects: Object[] = [\n        { Id: 'Project1', Value: 'ERP' }, \n        { Id: 'Project2', Value: 'Help desk' },\n        { Id: 'Project3', Value: 'Banking' }, \n        { Id: 'Project4', Value: 'Chat Box' },\n        { Id: 'Project5', Value: 'Accounts' }\n    ];\n\n    public useCosts: Object[] = [\n        { Id: 'Cost1', Value: '$1000' }, \n        { Id: 'Cost2', Value: '$1500' },\n        { Id: 'Cost3', Value: '$3000' }, \n        { Id: 'Cost4', Value: '$3250' },\n        { Id: 'Cost5', Value: '$5000' }\n    ];\n\n    public status: Object[] = [\n        { Id: 'status1', Value: 'Open' }, \n        { Id: 'status2', Value: 'In-progress' },\n        { Id: 'status3', Value: 'Hold' }, \n        { Id: 'status4', Value: 'Closed' }\n    ];\n\n    public commonTarget: string = '#multipleList';\n    public localFields: Object = { text: 'Value' };\n    public dataFields: Object = { text: 'FirstName', value: 'EmployeeID' };\n    public count: number = 15;\n    public popupWidth: string = \"250px\";\n    public popupHeight: string = \"250px\";\n\n    public data: DataManager = new DataManager({\n        url: 'https://services.syncfusion.com/angular/production/api/Employees',\n        adaptor: new WebApiAdaptor,\n        crossDomain: true\n    });\n    public query: Query = new Query().select(['FirstName', 'EmployeeID']).requiresCount();\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n\n<div class=\"col-lg-12 control-section\">\n    <div id=\"mention-controls\">\n        <table>\n            <tr>\n                <td>\n                    <label id=\"label\">Start typing <code>&#64;</code>, <code>#</code>, <code>$</code> or <code>%</code> to select the respective values</label>\n                    <div id=\"multipleList\" placeHolder=\"Type here..!\"></div>\n                </td>\n            </tr>\n        </table>\n    </div>\n</div>\n\n<ejs-mention [dataSource]='data' [target]='commonTarget' [suggestionCount]='count' [fields]='dataFields' [query]='query' [popupWidth]=\"popupWidth\" [popupHeight]=\"popupHeight\" allowSpaces='true'></ejs-mention>\n\n<ejs-mention [dataSource]='projects' mentionChar='#' [requireLeadingSpace]='false' [target]='commonTarget' [fields]='localFields'>\n    <ng-template #displayTemplate let-data>\n        <span class=\"e-success\">{{data.Value}}</span>\n    </ng-template>\n</ejs-mention>\n\n<ejs-mention [dataSource]='useCosts' mentionChar='$' [target]='commonTarget' [fields]='localFields'>\n    <ng-template #displayTemplate let-data>\n        <span class=\"e-error\">{{data.Value}}</span>\n    </ng-template>\n</ejs-mention>\n\n<ejs-mention [dataSource]='status' mentionChar='%' [target]='commonTarget' [fields]='localFields'>\n    <ng-template #displayTemplate let-data>\n        <span class=\"e-warning\">{{data.Value}}</span>\n    </ng-template>\n</ejs-mention>\n\n","app.component.css":"#mention-controls .e-input-group, #mention-controls .e-input-group.e-control-wrapper{\n    margin-bottom: 20px;\n}\n\n#commentsMention {\n    min-height: 100px;\n    border: 1px solid #D7D7D7;\n    border-radius: 4px;\n    padding: 8px;\n    font-size: 14px;\n    width: 600px;\n}\n\n#mention-controls {\n    margin: 0 auto;\n    width: 600px;\n}\n\ndiv#commentsMention[placeholder]:empty:before {\n    content: attr(placeholder);\n    color: #555;\n}\n\n#multipleList {\n    min-height: 100px;\n    border: 1px solid #D7D7D7;\n    width: 600px;\n    font-size: 14px;\n    padding: 8px;\n    border-radius: 4px;\n}\n#mention-controls #label, .default-size {\n    font-size: 15px;\n    font-weight: 600;\n}\ndiv#multipleList[placeholder]:empty:before {\n    content: attr(placeholder);\n    color: #555;\n}\n\n@media screen and (max-width: 1010px) {\n    #multipleList,\n    #mention-controls, #mention-controls table{\n        width: 100%;\n    }\n}\n","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}