{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { FieldSettingsModel, DragEventArgs } from '@syncfusion/ej2-dropdowns';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { ListBoxComponent, ListBoxModule } from '@syncfusion/ej2-angular-dropdowns';\n\n\n/**\n * Drag And Drop ListBox sample\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ListBoxModule,  ]\n})\n\nexport class AppComponent {\n    @ViewChild('listbox1') public listObj1: ListBoxComponent; @ViewChild('listbox2') public listObj2: ListBoxComponent;\n    public dataA: DataManager = new DataManager({\n        json: [\n            { Name: 'Australia', Code: 'AU' },\n            { Name: 'Bermuda', Code: 'BM' },\n            { Name: 'Canada', Code: 'CA' },\n            { Name: 'Cameroon', Code: 'CM' },\n            { Name: 'Denmark', Code: 'DK' },\n            { Name: 'France', Code: 'FR' },\n            { Name: 'Finland', Code: 'FI' },\n            { Name: 'Germany', Code: 'DE' },\n            { Name: 'Hong Kong', Code: 'HK' }\n        ]\n    });\n    public fields: FieldSettingsModel = { text: 'Name' };\n    public dataB: DataManager = new DataManager({\n        json: [\n            { Name: 'India', Code: 'IN' },\n            { Name: 'Italy', Code: 'IT' },\n            { Name: 'Japan', Code: 'JP' },\n            { Name: 'Mexico', Code: 'MX' },\n            { Name: 'Norway', Code: 'NO' },\n            { Name: 'Poland', Code: 'PL' },\n            { Name: 'Switzerland', Code: 'CH' },\n            { Name: 'United Kingdom', Code: 'GB' },\n            { Name: 'United States', Code: 'US' }\n        ]\n    });\n    public modifiedDataA: ModifiedRecords = { addedRecords: [], deletedRecords: [], changedRecords: [] };\n    public modifiedDataB: ModifiedRecords = { addedRecords: [], deletedRecords: [], changedRecords: [] };\n    public saveChanges(): void {\n        this.dataA.saveChanges(this.modifiedDataA, this.fields.text);\n        this.dataB.saveChanges(this.modifiedDataB, this.fields.text);\n        this.modifiedDataA.addedRecords = []; this.modifiedDataB.addedRecords = [];\n    }\n    public onDropGroupA(args: DragEventArgs): void {\n        args.items.forEach((item: { [key: string]: Object; }): void => {\n            /*Preventing item manipulation while doing drag and drop within same list box.*/\n            if (!this.listObj1.getDataByValue(item[this.fields.text] as string)) {\n                this.modifiedDataB.addedRecords.push(item);\n                this.modifiedDataA.deletedRecords.push(item);\n            }\n        });\n    }\n    public onDropGroupB(args: DragEventArgs): void {\n        args.items.forEach((item: { [key: string]: Object; }): void => {\n            if (!this.listObj2.getDataByValue(item[this.fields.text] as string)) {\n                this.modifiedDataA.addedRecords.push(item);\n                this.modifiedDataB.deletedRecords.push(item);\n            }\n        });\n    }\n}\ninterface ModifiedRecords {\n    addedRecords: { [key: string]: Object }[];\n    deletedRecords: { [key: string]: Object }[];\n    changedRecords: { [key: string]: Object }[];\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"col-lg-12 control-section\" style=\"min-height: 450px\">\n    <div id=\"drag-drop-wrapper\">\n        <div class=\"listbox-control\">\n            <h4>Group A</h4>\n            <ejs-listbox #listbox1 [dataSource]='dataA' [allowDragAndDrop]='true' height='330px' scope='combined-list' [fields]='fields' (drop)='onDropGroupA($event)'></ejs-listbox>\n        </div>\n        <span class=\"e-swap-icon\"></span>\n        <div class=\"listbox-control\">\n            <h4>Group B</h4>\n            <ejs-listbox #listbox2 [dataSource]='dataB' [allowDragAndDrop]='true' height='330px' scope='combined-list' [fields]='fields' (drop)='onDropGroupB($event)'></ejs-listbox>\n            <button class=\"e-btn\" (click)='saveChanges()'>Update</button>\n        </div>\n    </div>\n</div>","app.component.css":"@font-face {\n  font-family: 'swap-icon';\n  src: url(data:application/x-font-ttf;charset=utf-8;base64,AAEAAAAKAIAAAwAgT1MvMj1tSfIAAAEoAAAAVmNtYXDnEOdVAAABiAAAADZnbHlmXID+ZgAAAcgAAAA4aGVhZBR5I0cAAADQAAAANmhoZWEIVQQDAAAArAAAACRobXR4CAAAAAAAAYAAAAAIbG9jYQAcAAAAAAHAAAAABm1heHABDgAZAAABCAAAACBuYW1ltM6mlQAAAgAAAAI9cG9zdFSIYnYAAARAAAAALgABAAAEAAAAAFwEAAAAAAAD+AABAAAAAAAAAAAAAAAAAAAAAgABAAAAAQAARPvYwl8PPPUACwQAAAAAANixb1gAAAAA2LFvWAAAAAAD+AOaAAAACAACAAAAAAAAAAEAAAACAA0AAgAAAAAAAgAAAAoACgAAAP8AAAAAAAAAAQQAAZAABQAAAokCzAAAAI8CiQLMAAAB6wAyAQgAAAIABQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGZFZABA5wDnAAQAAAAAXAQAAAAAAAABAAAAAAAABAAAAAQAAAAAAAACAAAAAwAAABQAAwABAAAAFAAEACIAAAAEAAQAAQAA5wD//wAA5wD//wAAAAEABAAAAAEAAAAAAAAAHAAAAAIAAAAAA/gDmgAFAAwAABMhBxcBITUxBTUhNycIA1HcLAFP/BAD8Pyv2ysBYs4uATy9AUDOLgAAAAASAN4AAQAAAAAAAAABAAAAAQAAAAAAAQAJAAEAAQAAAAAAAgAHAAoAAQAAAAAAAwAJABEAAQAAAAAABAAJABoAAQAAAAAABQALACMAAQAAAAAABgAJAC4AAQAAAAAACgAsADcAAQAAAAAACwASAGMAAwABBAkAAAACAHUAAwABBAkAAQASAHcAAwABBAkAAgAOAIkAAwABBAkAAwASAJcAAwABBAkABAASAKkAAwABBAkABQAWALsAAwABBAkABgASANEAAwABBAkACgBYAOMAAwABBAkACwAkATsgRm9udCBTd2FwUmVndWxhckZvbnQgU3dhcEZvbnQgU3dhcFZlcnNpb24gMS4wRm9udCBTd2FwRm9udCBnZW5lcmF0ZWQgdXNpbmcgU3luY2Z1c2lvbiBNZXRybyBTdHVkaW93d3cuc3luY2Z1c2lvbi5jb20AIABGAG8AbgB0ACAAUwB3AGEAcABSAGUAZwB1AGwAYQByAEYAbwBuAHQAIABTAHcAYQBwAEYAbwBuAHQAIABTAHcAYQBwAFYAZQByAHMAaQBvAG4AIAAxAC4AMABGAG8AbgB0ACAAUwB3AGEAcABGAG8AbgB0ACAAZwBlAG4AZQByAGEAdABlAGQAIAB1AHMAaQBuAGcAIABTAHkAbgBjAGYAdQBzAGkAbwBuACAATQBlAHQAcgBvACAAUwB0AHUAZABpAG8AdwB3AHcALgBzAHkAbgBjAGYAdQBzAGkAbwBuAC4AYwBvAG0AAAAAAgAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAQIBAwAEU3dhcAAAAAA=) format('truetype');\n  font-weight: normal;\n  font-style: normal;\n}\n.e-swap-icon {\n  font-family: 'swap-icon' !important;\n  speak: none;\n  font-size: 40px;\n  font-style: normal;\n  font-weight: normal;\n  font-variant: normal;\n  text-transform: none;\n  line-height: 1;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  align-self: center;\n  margin: 0 10px;\n  transform: rotateX(180deg);\n}\n#drag-drop-wrapper .e-swap-icon:before {\n  content: '\\e700';\n}\n#drag-drop-wrapper {\n  width: 85%;\n  margin: auto;\n  display: flex;\n}\n#drag-drop-wrapper .e-btn {\n  margin-top: 15px;\n  float: right;\n  margin-bottom: -43px;\n}\n.e-bigger #drag-drop-wrapper .e-btn {\n  margin-bottom: -51px;\n}\n.listbox-control {\n  width: 40%;\n  margin: auto;\n}\n@media screen and (max-width: 590px) {\n  .listbox-control,\n  #drag-drop-wrapper {\n      width: 100%;\n  }\n  .e-swap-icon {\n      font-size: 30px;\n  }\n}\n#right-pane {\n  transform: none !important;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}