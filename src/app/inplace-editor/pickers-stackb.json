{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild, OnInit } from '@angular/core';\nimport { DropDownListComponent, ChangeEventArgs, DropDownListModule } from '@syncfusion/ej2-angular-dropdowns';\nimport { InPlaceEditorComponent, TimePickerService, DateRangePickerService, RenderMode, InPlaceEditorModule } from '@syncfusion/ej2-angular-inplace-editor';\nimport { DatePickerModel, TimePickerModel, DateTimePickerModel, DateRangePickerModel } from '@syncfusion/ej2-calendars';\n\n\n\n/**\n * In-place Editor pickers sample\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [TimePickerService, DateRangePickerService],\n    standalone: true,\n    imports: [InPlaceEditorModule, DropDownListModule,  ]\n})\nexport class AppComponent {\n\n    @ViewChild('datePickerEle')\n    public datePickerObj: InPlaceEditorComponent;\n\n    @ViewChild('timePickerEle')\n    public timePickerObj: InPlaceEditorComponent;\n\n    @ViewChild('dateTimePickerEle')\n    public dateTimePickerObj: InPlaceEditorComponent;\n\n    @ViewChild('dateRangePickerEle')\n    public dateRangePickeObj: InPlaceEditorComponent;\n\n    @ViewChild('editorMode')\n    public editorModeObj: DropDownListComponent;\n\n    public date: Date = new Date();\n    public datePickerModel: DatePickerModel = {\n        placeholder: 'Select a date'\n    };\n    public timePickerModel: TimePickerModel = {\n        placeholder: 'Select a time'\n    };\n    public dateTimePickerModel: DateTimePickerModel = {\n        placeholder: 'Select a date and time'\n    };\n    public dateRangePickerModel: DateRangePickerModel = {\n        placeholder: 'Select a date range'\n    };\n    public dateValue: Date = new Date();\n    public timeValue: Date = new Date();\n    public dateTimeValue: Date = new Date();\n    public rangeValue: Date[] = [new Date('11/20/2018'), new Date('11/21/2018')];\n    public editorModeData: string[] = ['Inline', 'Popup'];\n    public scrollParent: HTMLElement = document.querySelector('.sb-right-pane') as HTMLElement;\n\n    ngOnInit(): void {\n        if(this.scrollParent){\n            this.scrollParent.addEventListener('scroll', this.hidePopup.bind(this));\n        }\n    }\n\n    changeMode(e: ChangeEventArgs): void {\n        /*Apply selected mode to the component*/\n        this.datePickerObj.mode = e.value as RenderMode;\n        this.dateRangePickeObj.mode = e.value as RenderMode;\n        this.timePickerObj.mode = e.value as RenderMode;\n        this.dateTimePickerObj.mode = e.value as RenderMode;\n    }\n\n    hidePopup(): void {\n        if (this.editorModeObj.value === 'Inline') { return; }\n        if (this.datePickerObj && this.datePickerObj.element.querySelectorAll('.e-editable-open').length > 0) {\n            this.datePickerObj.enableEditMode = false;\n        }\n        if (this.dateRangePickeObj && this.dateRangePickeObj.element.querySelectorAll('.e-editable-open').length > 0) {\n            this.dateRangePickeObj.enableEditMode = false;\n        }\n        if (this.timePickerObj && this.timePickerObj.element.querySelectorAll('.e-editable-open').length > 0) {\n            this.timePickerObj.enableEditMode = false;\n        }\n        if (this.dateTimePickerObj && this.dateTimePickerObj.element.querySelectorAll('.e-editable-open').length > 0) {\n            this.dateTimePickerObj.enableEditMode = false;\n        }\n    }\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"col-lg-8 control-section inplace-control-section pickers-layout\">\n    <div class=\"control_wrapper form-horizontal \">\n        <table>\n            <tr>\n                <td>\n                    <label class=\"control-label\" style=\"text-align: left;font-size: 14px;font-weight: 400\"> DatePicker\n                    </label>\n                </td>\n                <td>\n                    <ejs-inplaceeditor #datePickerEle mode=\"Inline\" [model]=\"datePickerModel\" type=\"Date\" [value]='dateValue'></ejs-inplaceeditor>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <label class=\"control-label\" style=\"text-align: left;font-size: 14px;font-weight: 400\"> TimePicker\n                    </label>\n                </td>\n                <td>\n                    <ejs-inplaceeditor #timePickerEle mode=\"Inline\" [model]=\"timePickerModel\" type=\"Time\" [value]='timeValue'></ejs-inplaceeditor>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <label class=\"control-label\" style=\"text-align: left;font-size: 14px;font-weight: 400\">\n                        DateTimePicker </label>\n                </td>\n                <td>\n                        <ejs-inplaceeditor #dateTimePickerEle mode=\"Inline\" [model]=\"dateTimePickerModel\" type=\"DateTime\" [value]='dateTimeValue'></ejs-inplaceeditor>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <label class=\"control-label\" style=\"text-align: left;font-size: 14px;font-weight: 400\">\n                        DateRangePicker </label>\n                </td>\n                <td>\n                        <ejs-inplaceeditor #dateRangePickerEle mode=\"Inline\" [model]=\"dateRangePickerModel\" type=\"DateRange\" [value]='rangeValue'></ejs-inplaceeditor>\n                    <div id='dateRangePickerEle'></div>\n                </td>\n            </tr>\n        </table>\n    </div>\n</div>\n<div id=\"pickersProperty\" class=\"col-lg-4 property-section\">\n    <div class=\"property-panel-section\">\n        <div class=\"property-panel-header\"></div>\n        <div class=\"property-panel-content\">\n            <table id=\"property \" class=\"property-panel-table\" title=\"Properties\">\n                <tr>\n                    <td>\n                        <div> Mode</div>\n                    </td>\n                    <td>\n                        <div>\n                            <ejs-dropdownlist #editorMode [dataSource]='editorModeData' (change)='changeMode($event)' value='Inline'></ejs-dropdownlist>\n                        </div>\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</div>\n","app.component.css":".e-inplaceeditor-tip .e-editable-component .e-input-group .e-clear-icon.e-clear-icon-hide,\n.inplace-control-section.pickers-layout .e-inplaceeditor .e-editable-component .e-clear-icon-hide {\n    display: block;\n    visibility: hidden;\n}\n\n/* <!-- custom code start --> */\n.inplace-control-section .control_wrapper table {\n    margin: auto;\n}\n\n.inplace-control-section .control_wrapper table td {\n    width: 200px;\n    height: 100px;\n}\n\n.inplace-control-section.pickers-layout .control_wrapper table td .control-label {\n    margin-bottom: 0px;\n}\n.inplace-control-section .control_wrapper {\n    margin: auto;\n    max-width: 400px;\n}\n#pickersProperty .property-panel-section {\n    margin: 30px auto;\n    padding-top: 50px;\n}\n.e-bigger .e-inplaceeditor .e-editable-value-wrapper .e-editable-value{\n    margin-right: -3px;\n}\n@media (max-width: 768px) {\n    .inplace-control-section.pickers-layout {\n        padding-left: 0;\n        padding-right: 0;\n    }\n\n    .inplace-control-section .control_wrapper table tr td:nth-child(1) {\n        width: 130px;\n    }\n\n    .inplace-control-section .control_wrapper table tr td:nth-child(2) {\n        width: 200px;\n    }\n}\n/* <!-- custom code end --> */","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-inplace-editor\":\"*\",\"@syncfusion/ej2-angular-inplace-editor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}