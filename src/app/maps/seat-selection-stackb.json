{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","seat-data.json":"{ \"type\": \"FeatureCollection\", \"features\": [\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[0, 0], [0, 20], [20, 20], [20, 0], [0, 0]]], [[[0, 22], [0, 27], [20, 27], [20, 22], [0, 22]]]] }, \"properties\": { \"seatno\": 19, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[0, 47], [0, 67], [20, 67], [20, 47], [0, 47]]], [[[0, 69], [0, 74], [20, 74], [20, 69], [0, 69]]]] }, \"properties\": { \"seatno\": 18, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[0, 94], [0, 114], [20, 114], [20, 94], [0, 94]]], [[[0, 116], [0, 121], [20, 121], [20, 116], [0, 116]]]] }, \"properties\": { \"seatno\": 13, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[0, 141], [0, 161], [20, 161], [20, 141], [0, 141]]], [[[0, 163], [0, 168], [20, 168], [20, 163], [0, 163]]]] }, \"properties\": { \"seatno\": 12, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[0, 188], [0, 208], [20, 208], [20, 188], [0, 188]]], [[[0, 210], [0, 215], [20, 215], [20, 210], [0, 210]]]] }, \"properties\": { \"seatno\": 7, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[0, 235], [0, 255], [20, 255], [20, 235], [0, 235]]], [[[0, 257], [0, 262], [20, 262], [20, 257], [0, 257]]]] }, \"properties\": { \"seatno\": 6, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[0, 282], [0, 302], [20, 302], [20, 282], [0, 282]]], [[[0, 304], [0, 309], [20, 309], [20, 304], [0, 304]]]] }, \"properties\": { \"seatno\": 1, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[50, 0], [50, 20], [70, 20], [70, 0], [50, 0]]], [[[50, 22], [50, 27], [70, 27], [70, 22], [50, 22]]]] }, \"properties\": { \"seatno\": 20, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[50, 47], [50, 67], [70, 67], [70, 47], [50, 47]]], [[[50, 69], [50, 74], [70, 74], [70, 69], [50, 69]]]] }, \"properties\": { \"seatno\": 17, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[50, 94], [50, 114], [70, 114], [70, 94], [50, 94]]], [[[50, 116], [50, 121], [70, 121], [70, 116], [50, 116]]]] }, \"properties\": { \"seatno\": 14, \"fill\": \"Orange\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[50, 141], [50, 161], [70, 161], [70, 141], [50, 141]]], [[[50, 163], [50, 168], [70, 168], [70, 163], [50, 163]]]] }, \"properties\": { \"seatno\": 11, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[50, 188], [50, 208], [70, 208], [70, 188], [50, 188]]], [[[50, 210], [50, 215], [70, 215], [70, 210], [50, 210]]]] }, \"properties\": { \"seatno\": 8, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[50, 235], [50, 255], [70, 255], [70, 235], [50, 235]]], [[[50, 257], [50, 262], [70, 262], [70, 257], [50, 257]]]] }, \"properties\": { \"seatno\": 5, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[50, 282], [50, 302], [70, 302], [70, 282], [50, 282]]], [[[50, 304], [50, 309], [70, 309], [70, 304], [50, 304]]]] }, \"properties\": { \"seatno\": 2, \"fill\": \"Orange\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[80, 0], [80, 20], [100, 20], [100, 0], [80, 0]]], [[[80, 22], [80, 27], [100, 27], [100, 22], [80, 22]]]] }, \"properties\": { \"seatno\": 21, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[80, 47], [80, 67], [100, 67], [100, 47], [80, 47]]], [[[80, 69], [80, 74], [100, 74], [100, 69], [80, 69]]]] }, \"properties\": { \"seatno\": 16, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[80, 94], [80, 114], [100, 114], [100, 94], [80, 94]]], [[[80, 116], [80, 121], [100, 121], [100, 116], [80, 116]]]] }, \"properties\": { \"seatno\": 15, \"fill\": \"Orange\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[80, 141], [80, 161], [100, 161], [100, 141], [80, 141]]], [[[80, 163], [80, 168], [100, 168], [100, 163], [80, 163]]]] }, \"properties\": { \"seatno\": 10, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[80, 188], [80, 208], [100, 208], [100, 188], [80, 188]]], [[[80, 210], [80, 215], [100, 215], [100, 210], [80, 210]]]] }, \"properties\": { \"seatno\": 9, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[80, 235], [80, 255], [100, 255], [100, 235], [80, 235]]], [[[80, 257], [80, 262], [100, 262], [100, 257], [80, 257]]]] }, \"properties\": { \"seatno\": 4, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[80, 282], [80, 302], [100, 302], [100, 282], [80, 282]]], [[[80, 304], [80, 309], [100, 309], [100, 304], [80, 304]]]] }, \"properties\": { \"seatno\": 3, \"fill\": \"gray\" } }\n    ] }","app.component.ts":"/**\n * Seat Selection sample\n */\nimport { Component, ViewEncapsulation, Inject } from '@angular/core';\nimport { MapsTheme, Maps, ISelectionEventArgs, Selection, ILoadEventArgs, MapsModule } from '@syncfusion/ej2-angular-maps';\n\n\nMaps.Inject(Selection);\ninterface SeatInfo {\n    seatno?: number;\n    fill?: string;\n}\ndeclare var require: any;\nlet seat_selection: object[] = require('./seat-data.json');\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ MapsModule, ]\n})\nexport class AppComponent {\n    public zoomSettings: object = {\n        enable: false\n    };\n    public seatInfo: HTMLDivElement;\n    // custom code start\n    public load = (args: ILoadEventArgs) => {\n        let theme: string = location.hash.split('/')[1];\n        theme = theme ? theme : 'Material';\n        args.maps.theme = <MapsTheme>(theme.charAt(0).toUpperCase() +\n        theme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n    }\n    // custom code end\n    public itemSelection = (args: ISelectionEventArgs) => {\n        if ((args.shapeData as SeatInfo).fill === 'Orange') {\n            args.fill = 'Orange';\n            document.getElementById(args.target).setAttribute('class', 'ShapeselectionMapStyle');\n            return;\n        }\n        args.fill = 'green';\n        let seat: number = (args.shapeData as SeatInfo).seatno;\n        let connector: string = ' ';\n        if (this.seatInfo.innerHTML === '') {\n            this.seatInfo.innerHTML = '<span id=\"seat-info\">Seats Selected -</span>';\n        } else {\n            connector = ', ';\n        }\n        let seatString: string = '<span class=\"seats\">' + connector + seat + '</span>';\n        let seatString1: string = ' ' + seat + '</span><span class=\"seats\">,'; // 15</span><span class=\"seats\">,\n        let lastString: string = '<span id=\"seat-info\">Seats Selected -</span><span class=\"seats\"> ' + seat + '</span>';\n        if (this.seatInfo.innerHTML.indexOf(seatString) === -1 && this.seatInfo.innerHTML.indexOf(seatString1) === -1 &&\n            this.seatInfo.innerHTML.indexOf(lastString) === -1) {\n            this.seatInfo.innerHTML += '<span class=\"seats\">' + connector + seat + '</span>';\n        } else {\n            this.seatInfo.innerHTML = this.seatInfo.innerHTML.replace(seatString, '');\n            this.seatInfo.innerHTML = this.seatInfo.innerHTML.replace(seatString1, '');\n            if (this.seatInfo.innerHTML === lastString) {\n                this.seatInfo.innerHTML = '';\n            }\n        }\n    };\n\n    public layers: object[] = [\n        {\n            geometryType: 'Normal',\n            shapeData: seat_selection,\n            shapeSettings: {\n                colorValuePath: 'fill'\n            },\n            selectionSettings: {\n                enable: true,\n                opacity: 1,\n                enableMultiSelect: true,\n                fill : 'green'\n            }\n        }\n    ];\n    ngAfterViewInit() {\n        this.seatInfo = <HTMLDivElement>document.getElementById('selectedseats');\n        document.getElementById('clear-btn').onclick = () => {\n            this.seatInfo.innerHTML = '';\n            let selected: HTMLCollection = document.getElementsByClassName('ShapeselectionMapStyle');\n            for (let i: number = 0, length: number = selected.length; i < length; i++) {\n                selected[0].setAttribute('class', '');\n            }\n        };\n    }\n    // custom code start\n    constructor() {\n        \n    };\n    // custom code end\n\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<main>\n    <section id=\"action-description\" aria-label=\"Description of Maps sample\">\n        <p>\n            This sample visualizes a seating chart, in which the seats can be selected similarly to bus seat booking. Available, booked, and selected seats will be displayed in different colors.\n        </p>\n    </section>\n    \n    <div class=\"col-lg-9 control-section\">\n        <div style=\"width:200px;margin:auto;padding-bottom:20px\">\n            <img alt=\"Bus icon\" src=\"https://ej2.syncfusion.com/angular/demohttps://ej2.syncfusion.com/angular/demos/assets/maps/images/bus-icon.png\" style=\"width:25px;height:25px;float:left\">\n            <div style=\"padding-left:30px;font-size:20px;font-weight:400;\">Bus seat selection</div>\n        </div>\n    \n        <div style=\"border: 3px solid darkgray;width:200px;display:block;margin:auto;border-radius:5px\">\n            <img alt=\"Steering wheel icon\" src=\"https://ej2.syncfusion.com/angular/demohttps://ej2.syncfusion.com/angular/demos/assets/maps/images/wheel.png\" style=\"width:30px;height:30px;margin-left:18%;margin-top:10px\">\n    \n            <ejs-maps id='container' style=\"display:block;\" projectionType='Equirectangular' [zoomSettings]='zoomSettings' height='400'\n                [layers]='layers' (itemSelection)=\"itemSelection($event)\" (load)=\"load($event)\">\n            </ejs-maps>\n    \n        </div>\n    </div>\n    \n    <div class=\"col-lg-3 property-section\">\n        <div class=\"property-panel-section\">\n            <div class=\"property-panel-header\">Properties</div>\n            <div class=\"property-panel-content\">\n                <table id=\"property\" title=\"Seat Selection\" role=\"none\" style=\"width: 100%;font-weight:400 !important\">\n                    <tbody>\n                        <tr style=\"height: 30px\">\n                            <td>\n                                <span style=\"float:left;height:15px;width:15px;background-color:gray;border-radius:25%\"></span>\n                                <span id=\"available\" style=\"margin-top:-7px;margin-left: 15px\">Available </span>\n                            </td>\n                        </tr>\n                        <tr style=\"height: 30px\">\n                            <td>\n                                <span style=\"float:left;height:15px;width:15px;background-color:green;border-radius:25%\"></span>\n                                <span id=\"selected\" style=\"margin-top:-7px;margin-left: 15px\">Selected </span>\n                            </td>\n                        </tr>\n                        <tr style=\"height: 30px\">\n                            <td>\n                                <span style=\"float:left;height:15px;width:15px;background-color:orange;border-radius:25%\"></span>\n                                <span id=\"booked\" style=\"margin-top:-7px;margin-left: 15px\">Booked </span>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n    <div id=\"seat-parent\">\n        <span id=\"clear-btn\">Clear Selection</span>\n        <br>\n        <br>\n        <div id=\"selectedseats\"></div>\n    </div>\n    <!-- custom code start -->\n    <style>\n        #control-container {\n            padding: 0px !important;\n        }\n    \n        #seat-parent {\n            text-align: center;\n            cursor: pointer\n        }\n    \n        #selectedseats {\n            padding: 10px;\n        }\n    \n        #selectedseats,\n        #seat-info {\n            font-size: 14px;\n        }\n    \n        #clear-btn {\n            padding: 10px;\n            border: 2px solid rgb(241, 235, 247);\n            border-radius: 8px;\n            background: rgb(246, 245, 248);\n            color: black;\n            font-size: 14px;\n        }\n    \n        .seats {\n            padding-top: 15px;\n            font-weight: bold;\n        }\n    </style>\n    <!-- custom code end -->\n    <section id='description' aria-label=\"Description of the Maps features demonstrated in this sample\">\n    \n        <p>\n            In this example, you can see how to render the normal geometry type shapes on the map. Selection is enabled in this sample.\n            You can use the\n            <code>fill</code>,\n            <code>width</code>, and\n            <code>color</code> properties in the\n            <code>selectionSettings</code> to customize the appearance of the shapes after selection.\n        </p>\n        <br/>\n        <p style=\"font-weight: 500\">Injecting Module</p>\n        <p>\n            Maps component features are segregated into individual feature-wise modules. To use the selection, inject the\n            <code>Selection</code> module using the\n            <code>Maps.Inject(Selection)</code> method.\n        </p>\n        <p>\n            More information on the selection can be found in this\n            <a target=\"_blank\" href=\"\">documentation section</a>.\n        </p>\n    \n    </section>\n</main>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-maps\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-maps\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}