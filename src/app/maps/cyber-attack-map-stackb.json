{"dependencies.json":"{\"@syncfusion/ej2-base\": \"*\", \"@syncfusion/ej2-buttons\": \"*\", \"@syncfusion/ej2-splitbuttons\": \"*\", \"@syncfusion/ej2-calendars\": \"*\", \"@syncfusion/ej2-charts\": \"*\", \"@syncfusion/ej2-diagrams\": \"*\", \"@syncfusion/ej2-maps\": \"*\", \"@syncfusion/ej2-treemap\": \"*\", \"@syncfusion/ej2-circulargauge\": \"*\", \"@syncfusion/ej2-data\": \"*\", \"@syncfusion/ej2-dropdowns\": \"*\", \"@syncfusion/ej2-grids\": \"*\", \"@syncfusion/ej2-inputs\": \"*\", \"@syncfusion/ej2-lists\": \"*\", \"@syncfusion/ej2-navigations\": \"*\", \"@syncfusion/ej2-popups\": \"*\", \"@syncfusion/ej2-lineargauge\": \"*\", \"@syncfusion/ej2-pdf-export\": \"*\", \"@syncfusion/ej2-compression\": \"*\", \"@syncfusion/ej2-excel-export\": \"*\", \"@syncfusion/ej2-file-utils\": \"*\", \"@syncfusion/ej2-svg-base\": \"*\", \"@syncfusion/ej2-documenteditor\": \"*\", \"@syncfusion/ej2-richtexteditor\": \"*\", \"@syncfusion/ej2-notifications\": \"*\", \"@syncfusion/ej2-heatmap\": \"*\", \"@syncfusion/ej2-pivotview\": \"*\", \"@syncfusion/ej2-schedule\": \"*\", \"@syncfusion/ej2-layouts\": \"*\", \"@syncfusion/ej2-angular-base\": \"*\", \"@syncfusion/ej2-angular-buttons\": \"*\", \"@syncfusion/ej2-angular-splitbuttons\": \"*\", \"@syncfusion/ej2-angular-calendars\": \"*\", \"@syncfusion/ej2-angular-charts\": \"*\", \"@syncfusion/ej2-angular-diagrams\": \"*\", \"@syncfusion/ej2-angular-maps\": \"*\", \"@syncfusion/ej2-angular-treemap\": \"*\", \"@syncfusion/ej2-angular-circulargauge\": \"*\", \"@syncfusion/ej2-angular-dropdowns\": \"*\", \"@syncfusion/ej2-angular-grids\": \"*\", \"@syncfusion/ej2-angular-inputs\": \"*\", \"@syncfusion/ej2-angular-lists\": \"*\", \"@syncfusion/ej2-angular-navigations\": \"*\", \"@syncfusion/ej2-angular-popups\": \"*\", \"@syncfusion/ej2-angular-lineargauge\": \"*\", \"@syncfusion/ej2-angular-documenteditor\": \"*\", \"@syncfusion/ej2-angular-richtexteditor\": \"*\", \"@syncfusion/ej2-angular-notifications\": \"*\", \"@syncfusion/ej2-angular-heatmap\": \"*\", \"@syncfusion/ej2-angular-pivotview\": \"*\", \"@syncfusion/ej2-angular-schedule\": \"*\", \"@syncfusion/ej2-angular-layouts\": \"*\" , \"@angular/http\": \"*\", \"rxjs-compat\":\"*\"}","main.ts":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n","polyfills.ts":"/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol';\n// import 'core-js/es6/object';\n// import 'core-js/es6/function';\n// import 'core-js/es6/parse-int';\n// import 'core-js/es6/parse-float';\n// import 'core-js/es6/number';\n// import 'core-js/es6/math';\n// import 'core-js/es6/string';\n// import 'core-js/es6/date';\n// import 'core-js/es6/array';\n// import 'core-js/es6/regexp';\n// import 'core-js/es6/map';\n// import 'core-js/es6/weak-map';\n// import 'core-js/es6/set';\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect';\n\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\nimport 'core-js/es7/reflect';\n\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n **/\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n */\n\n // (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n // (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n // (window as any).__zone_symbol__BLACK_LISTED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n\n /*\n * in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n * with the following flag, it will bypass `zone.js` patch for IE/Edge\n */\n// (window as any).__Zone_enable_cross_context_check = true;\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n<link href=\"../styles/OpenNew.css\" rel=\"stylesheet\">\n  <link href=\"//cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\" />\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body class=\"ej2-new\"> \n\n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WLQL39J\"height=\"0\"width=\"0\"style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app/app.module.ts":"import { SliderModule } from '@syncfusion/ej2-angular-inputs';\n\nimport { MapsAllModule } from '@syncfusion/ej2-angular-maps';\n\nimport { HttpModule } from '@angular/http';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { RouterModule } from '@angular/router';\n\nimport { CommonModule } from '@angular/common';\n\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from '../app.component';\n@NgModule({ declarations: [   AppComponent ], imports: [ MapsAllModule, SliderModule, BrowserModule], providers: [], bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","app.component.html":"<div class=\"control-section\">\n    <ejs-maps id='container' style=\"display:block;\"\n         [layers] = 'layers'  [titleSettings]=\"titleSettings\"\n         (load)='load($event)' (loaded)='loaded($event)' >\n        </ejs-maps>\n</div>\n<style>\n    .name {\n        margin-top: -6px;\n        margin-left: -6px;\n        font-size: 12px;\n        color: black;\n        text-shadow: 0px 1px 1px lightgray;\n        font-weight: 500\n    }\n\n    @keyframes dash {\n        from {\n            stroke-dashoffset: 1000;\n            stroke-width: 1px;\n            stroke: #D2691E;\n        }\n\n        to {\n            stroke-dashoffset: 0;\n            stroke-width: 1px;\n        }\n\n        40% {\n            opacity: 0.7;\n        }\n\n        50%,\n        100% {\n            opacity: 0;\n        }\n    }\n\n    .pulse-css {\n        width: 12px;\n        height: 12px;\n        -webkit-border-radius: 10px;\n        -moz-border-radius: 10px;\n        border-radius: 10px;\n        background: #D2691E;\n        position: relative;\n        animation-delay: 5s;\n    }\n\n    .pulse-css:before,\n    .pulse-css:after {\n        content: '';\n        width: 9px;\n        height: 9px;\n        -webkit-border-radius: 10px;\n        -moz-border-radius: 10px;\n        border-radius: 10px;\n        background-color: #D2691E;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        margin: auto;\n        transform: scale(0.5);\n        animation: pulse-css1 2s linear infinite;\n    }\n\n    .parent_css {\n        width: 13px;\n        height: 13px;\n        background: #D2691E;\n        position: relative;\n        animation-delay: 5s;\n    }\n\n    .parent_css:before,\n    .parent_css:after {\n        content: '';\n        width: 9px;\n        height: 9px;\n        background-color: #D2691E;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        margin: auto;\n        transform: scale(0.5);\n        animation: pulse-css1 3s linear infinite;\n    }\n\n    @keyframes pulse-css1 {\n        0% {\n            transform: scale(0.5);\n            opacity: 0;\n        }\n\n        50% {\n            opacity: 0.2;\n        }\n\n        90%,\n        100% {\n            transform: scale(5);\n            opacity: 0;\n        }\n    }\n</style>","app.component.css":"","app.component.ts":"/**\n * Cyber attack maps sample\n */\nimport { Component, ViewEncapsulation, Inject } from '@angular/core';\nimport { MapsTheme, Maps, Legend, Marker, MapsTooltip, ILoadEventArgs, ILoadedEventArgs, NavigationLineSettingsModel, NavigationLine } from '@syncfusion/ej2-angular-maps';\nimport { MapAjax } from '@syncfusion/ej2-maps';\n\nMaps.Inject(Marker, NavigationLine, MapsTooltip);\ndeclare var require: any;\nlet worldMap: object[] = require('./../../../../src/app/maps/world-map.json');\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n    titleSettings: object = {\n        text: 'Cyber Attack Map of United States',\n        textStyle: { size: '16px' }\n    };\n    public zoomSettings: object = {\n        enable: false\n    };\n    public legendSettings: object = { visible: true };\n\n    public layers: object[] = [{\n        shapeData: worldMap,\n        shapeSettings: {\n            border: { color: '#D2691E', width: 0.5 },\n            fill: '#FFFFE0'\n        },\n        navigationLineSettings: [\n            {\n                dashArray: '5,1', visible: true,\n                angle: -0.3, color: '#ffffb3',\n                latitude: [15.758401, 39.864171],\n                longitude: [101.155642, -100.854833],\n            },\n            {\n                dashArray: '5,1', visible: true,\n                angle: 0.4, color: '#ffffb3',\n                latitude: [57.725612, 39.864171],\n                longitude: [-101.802160, -100.854833],\n            },\n            {\n                dashArray: '5,1', visible: true,\n                angle: -0.2, color: '#ffffb3',\n                latitude: [29.930938, 39.864171],\n                longitude: [69.358894, -100.854833],\n            },\n            {\n                dashArray: '5,1', visible: true,\n                angle: -0.1, color: '#ffffb3',\n                latitude: [22.860388, 39.864171],\n                longitude: [79.739066, -100.854833],\n            },\n            {\n                dashArray: '5,1', visible: true,\n                angle: -0.1, color: '#ffffb3',\n                latitude: [-24.763753, 39.864171],\n                longitude: [134.852191, -100.854833],\n            },\n            {\n                dashArray: '5,1', visible: true,\n                angle: -0.4, color: '#ffffb3',\n                latitude: [34.611098, 39.864171],\n                longitude: [104.189872, -100.854833],\n            },\n            {\n                dashArray: '5,1', visible: true,\n                angle: -0.8, color: '#ffffb3',\n                latitude: [-12.354844, 39.864171],\n                longitude: [-49.017709, -100.854833],\n            },\n            {\n                dashArray: '5,1', visible: true,\n                angle: -0.4, color: '#ffffb3',\n                latitude: [3.450682, 39.864171],\n                longitude: [-72.943141, -100.854833],\n            },\n            {\n                dashArray: '5,1', visible: true,\n                angle: -0.7, color: '#ffffb3',\n                latitude: [62.448268, 39.864171],\n                longitude: [97.251835, -100.854833],\n            },\n            {\n                dashArray: '5,1', visible: true,\n                angle: -0.3, color: '#ffffb3',\n                latitude: [65.931163, 39.864171],\n                longitude: [-45.812820, -100.854833],\n            },\n            {\n                dashArray: '5,1', visible: true,\n                angle: -0.2, color: '#ffffb3',\n                latitude: [-21.206222, 39.864171],\n                longitude: [17.122018, -100.854833],\n\n            },\n            {\n                dashArray: '5,1', visible: true,\n                angle: -0.2, color: '#ffffb3',\n                latitude: [35.839969, 39.864171],\n                longitude: [137.904641, -100.854833],\n            },\n            {\n                dashArray: '5,1', visible: true,\n                angle: -0.2, color: '#ffffb3',\n                latitude: [46.582184, 39.864171],\n                longitude: [2.232903, -100.854833],\n            },\n            {\n                dashArray: '5,1', visible: true,\n                angle: -0.2, color: '#ffffb3',\n                latitude: [0.390617, 39.864171],\n                longitude: [37.893734, -100.854833],\n            }\n        ],\n        markerSettings: [\n            {\n                visible: true, height: 15, width: 15,\n                template: '<div id=\"template\"><div class=\"pulse-css\"><br /><div class=\"name\">{{:name}}</div></div></div>',\n                animationDuration: 0,\n                dataSource: [\n                    { latitude: 15.758401, longitude: 101.155642, name: 'Thailand' },\n                    { latitude: 57.725612, longitude: -101.802160, name: 'Canada' },\n                    { latitude: 39.634177, longitude: 42.410740, name: 'Turkey' },\n                    { latitude: 22.860388, longitude: 79.739066, name: 'India' },\n                    { latitude: -24.763753, longitude: 134.852191, name: 'Australia' },\n                    { latitude: 34.611098, longitude: 104.189872, name: 'China' },\n                    { latitude: -12.354844, longitude: -49.017709, name: 'Brazil' },\n                    { latitude: 3.450682, longitude: -72.943141, name: 'Colombia' },\n                    { latitude: 62.448268, longitude: 97.251835, name: 'Russia' },\n                    { latitude: 65.931163, longitude: -45.812820, name: 'Greenland' },\n                    {  latitude: -21.206222, longitude: 17.122018, name: 'Namibia' },\n                    { latitude: 35.839969, longitude: 137.904641, name: 'Japan' },\n                    { latitude: 46.582184, longitude: 2.232903, name: 'France' },\n                    { latitude: 0.390617, longitude: 37.893734, name: 'Kenya' }\n                ]\n            },\n            {\n                visible: true, height: 15, width: 15,\n                template: '<div id=\"parent_template\" ><div class=\"parent_css\"><br/><div class=\"name\" style=\"margin-left: -10px\">United States</div></div></div>',\n                animationDuration: 0,\n                dataSource: [{\n                    latitude: 39.864171,\n                    longitude: -100.854833\n                }]\n            },\n        ]\n    },\n];\n    public load = (args: ILoadEventArgs) => {\n        let theme: string = location.hash.split('/')[1];\n        theme = theme ? theme : 'Material';\n        args.maps.theme = <MapsTheme>(theme.charAt(0).toUpperCase() + theme.slice(1));\n    }\n    public loaded = (args: ILoadedEventArgs) => {\n        let lines = args.maps.layers[0].navigationLineSettings;\n            for (let i: number = 0; i < lines.length; i++) {\n                let line: HTMLElement = document.getElementById('container_LayerIndex_0_NavigationIndex_' + i + '_Line0');\n                let marker: HTMLElement = document.getElementById('container_LayerIndex_0_MarkerIndex_0_dataIndex_' + i)\n                line.style.strokeDasharray = '1000';\n                line.style.strokeDashoffset = '1000';\n                if (i < 4) {\n                    line.style.animation = marker.style.animation = 'dash 5s linear 0s infinite';\n                    marker.style.visibility = 'hidden';\n                    setTimeout(() => {\n                        marker.style.visibility = 'visible';\n                    }, 0);\n                } else if (i < 8) {\n                    line.style.animation = marker.style.animation = 'dash 6s linear 2s infinite';\n                    marker.style.visibility = 'hidden';\n                    setTimeout(() => {\n                        marker.style.visibility = 'visible';\n                    }, 2000);\n                } else if (i < 12) {\n                    line.style.animation = marker.style.animation = 'dash 6s linear 4.5s infinite';\n                    marker.style.visibility = 'hidden';\n                    setTimeout(() => {\n                        marker.style.visibility = 'visible';\n                    }, 4500);\n                } else {\n                    line.style.animation = marker.style.animation = 'dash 5s linear 7s infinite';\n                    marker.style.visibility = 'hidden';\n                    setTimeout(() => {\n                        marker.style.visibility = 'visible';\n                    }, 7000);\n                }\n            }\n    }\n    constructor() {\n        \n    };\n}","data.ts":"/**\n * Curved lines data\n */\n//tslint:disable\nexport let data : any = [\n    {\n        dashArray: '5,1',\n        visible: true,       \n        angle: -0.2,\n        color: 'black',\n        latitude: [28.6139391, 39.9041999],\n        longitude: [77.2090212, 116.4073963],\n        \n    },\n    {\n        dashArray: '5,1',\n        visible: true,       \n        angle: -0.2,\n        color: 'black',\n        latitude: [28.6139391, 31.2303904],\n        longitude: [77.2090212, 121.4737021],\n        \n    },\n    {\n        dashArray: '5,1',\n        visible: true,       \n        angle: -0.2,\n        color: 'black',\n        latitude: [28.6139391, 23.12911],\n        longitude: [77.2090212, 113.264385],\n        \n    },\n    {\n        dashArray: '5,1',\n        visible: true,       \n        angle: -0.4,\n        color: 'black',\n        latitude: [28.6139391, 22.396428],\n        longitude: [77.2090212, 114.109497],\n        \n    },\n    {\n        dashArray: '5,1',\n        visible: true,       \n        angle: -0.2,\n        color: 'black',\n        latitude: [19.0759837, 23.12911],\n        longitude: [72.8776559, 113.264385],\n        \n    },\n    {\n        dashArray: '5,1',\n        visible: true,       \n        angle: -0.2,\n        color: 'black',\n        latitude: [13.0826802, 22.396428],\n        longitude: [80.2707184, 114.109497],\n        \n    },\n    {\n        dashArray: '5,1',\n        visible: true,       \n        angle: -0.2,\n        color: 'black',\n        latitude: [22.572646, 24.880095],\n        longitude: [88.363895, 102.832891],        \n    }\n]"}