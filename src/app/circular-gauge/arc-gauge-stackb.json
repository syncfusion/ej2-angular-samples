{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"/* custom code start */\n// tslint:disable\n/* custom code end */\n\nimport { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { CircularGaugeComponent, ILoadedEventArgs, GaugeTheme, CircularGaugeModule, AnnotationsService } from '@syncfusion/ej2-angular-circulargauge';\nimport { Slider, SliderChangeEventArgs } from '@syncfusion/ej2-inputs';\n\nlet sliderValue: number = 60;\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [CircularGaugeModule],\n    providers: [AnnotationsService]\n})\n\nexport class AppComponent {\n\n    @ViewChild('circulargauge')\n    public circulargauge: CircularGaugeComponent;\n\n    public titleStyle: Object = { fontFamily: 'inherit' };\n    public title: string = 'Progress Tracker';\n\n    public lineStyle: Object = {\n        width: 0\n    };\n\n    public labelStyle: Object = {\n        position: 'Inside', useRangeColor: true,\n        font: { size: '0px', fontFamily: 'inherit' }\n    };\n\n    public ranges: Object[] = [\n        {\n            start: 0, end: 100,\n            radius: '90%',\n            startWidth: 30, endWidth: 30,\n            color: '#E0E0E0',\n            roundedCornerRadius: 20\n        },\n    ];\n\n    public pointers: Object[] = [{\n        roundedCornerRadius: 20,\n        value: 60,\n        type: 'RangeBar',\n        radius: '90%',\n        color: '#e5ce20',\n        border: {\n            width: 0\n        },\n        animation: {\n            enable: false\n        },\n        pointerWidth: 30\n    }];\n\n    public majorTicks: Object = {\n        height: 0,\n    };\n\n    public minorTicks: Object = {\n        height: 0\n    };\n\n    public tail: Object = {\n        length: '18%', color: '#757575'\n    };\n\n    public pointerCap: Object = {\n        radius: 7, color: '#757575'\n    };\n\n    public annotaions: Object = [{\n        description:'RangeBar pointer value from the slider',\n        content: '<div id=\"pointervalue\" style=\"font-size:35px;width:120px;text-align:center;\">' +\n            sliderValue.toString() + '/100</div>',\n        angle: 0,\n        zIndex: '1',\n        radius: '0%'\n    }, {\n        description: 'Slider',\n        content: '<div id=\"slider\" style=\"height:70px;width:250px;\"></div>',\n        angle: 0,\n        zIndex: '1',\n        radius: '-100%'\n    }];\n\n    public load(args: ILoadedEventArgs): void {\n        /* custom code start */\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.gauge.theme = <GaugeTheme>(selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n        /* custom code end */\n    }\n\n    public loaded(args: ILoadedEventArgs): void {\n        let annotation: Element = document.getElementById(args.gauge.element.id + '_Annotations_0');\n        if (annotation) {\n            this.annotationRender('slider', this.circulargauge.axes[0].pointers[0].value);\n            if (document.getElementById('pointervalue')) {\n                document.getElementById('pointervalue').innerHTML = this.circulargauge.axes[0].pointers[0].value.toString() + '/100';\n            }\n        }\n    };\n\n    public annotationRender(id: string, sliderValue: number): void {\n        let first: Slider = new Slider({\n            min: 0, max: 100,\n            type: 'MinRange',\n            limits: { enabled: true, minStart: 0, minEnd: 100 },\n            value: sliderValue,\n            change: (args: SliderChangeEventArgs) => {\n                sliderValue = args.value as number;\n                if (!isNaN(sliderValue)) {\n                    this.circulargauge['isProtectedOnChange'] = true;\n                    if (sliderValue >= 0 && sliderValue < 20) {\n                        this.circulargauge.axes[0].pointers[0].color = '#ea501a';\n                    } else if (sliderValue >= 20 && sliderValue < 40) {\n                        this.circulargauge.axes[0].pointers[0].color = '#f79c02';\n                    } else if (sliderValue >= 40 && sliderValue < 60) {\n                        this.circulargauge.axes[0].pointers[0].color = '#e5ce20';\n                    } else if (sliderValue >= 60 && sliderValue < 80) {\n                        this.circulargauge.axes[0].pointers[0].color = '#a1cb43';\n                    } else if (sliderValue >= 80 && sliderValue < 100) {\n                        this.circulargauge.axes[0].pointers[0].color = '#82b944';\n                    }\n                    this.circulargauge.setPointerValue(0, 0, sliderValue);\n                    if (document.getElementById('pointervalue')) {\n                        document.getElementById('pointervalue').innerHTML = this.circulargauge.axes[0].pointers[0].value.toString() + '/100';\n                    }\n                }\n            }\n        });\n        first.appendTo('#' + id);\n    }\n\n    constructor() {\n        // code\n    };\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<main>\n    <div class=\"control-section\">\n        <ejs-circulargauge (load)='load($event)' (loaded)='loaded($event)' background='transparent' style='display:block;'\n            id='range-container' #circulargauge='' [title]='title' [titleStyle]='titleStyle'>\n            <e-axes>\n                <e-axis minimum=1 radius='80%' maximum=100 startAngle=200 endAngle=160 [majorTicks]='majorTicks'\n                    [labelStyle]='labelStyle' [lineStyle]='lineStyle' [minorTicks]='minorTicks' [annotations]='annotaions'\n                    [ranges]='ranges' [pointers]='pointers'>\n                </e-axis>\n            </e-axes>\n        </ejs-circulargauge>\n        <div id='template'>\n            <div class='sliderwrap'>\n                <div id='default'></div>\n            </div>\n        </div>\n    </div>\n    \n    <script id='pointerValue' type=\"text/x-template\">\n        <div id='sliderwrap'>\n            <div class='des'>\n                <div id='default'></div>\n            </div>\n        </div>\n    </script>\n    <!-- custom code start -->\n    <section id=\"action-description\" aria-label=\"Description of Circular Gauge sample\">\n        <p>\n            This sample shows the work progress using a circular gauge and a range bar pointer with rounded corners.\n        </p>\n    </section>\n    <section id=\"description\" aria-label=\"Description of the Circular Gauge features demonstrated in this sample\">\n        <p>\n            In this example, you can see how to render the range and range bar pointer with rounded corners. A slider is\n            placed at the bottom of the circular gauge using annotation to change the range bar pointer value. Based on the\n            value, the color of the pointer can also be changed.\n        </p>\n        <p>\n            More information on the ranges can be found in this <a target=\"_blank\"\n                href=\"https://ej2.syncfusion.com/angular/documentation/circular-gauge/gauge-ranges/\">documentation\n                section</a>.\n        </p>\n    </section>\n    \n    <style>\n        .sliderwrap {\n            margin-top: 4px;\n            width: 300px;\n            align-self: center;\n        }\n    \n        #slider.e-control.e-slider .e-handle {\n            background-color: #fff;\n            border: 2px solid #666;\n            width:15px;\n            height:15px;\n        }\n    \n        #range-container_Axis_0_Annotation_1 .e-control-wrapper.e-slider-container.e-horizontal .e-slider-track {\n            background: -webkit-linear-gradient(left, #ea501a 0, #ea501a 20%, #f79c02 40%, #e5ce20 60%, #a1cb43 80%, #82b944 100%);\n            background: linear-gradient(left, #ea501a 0, #ea501a 20%, #f79c02 40%, #e5ce20 60%, #a1cb43 80%, #82b944 100%);\n            background: -moz-linear-gradient(left, #ea501a 0, #ea501a 20%, #f79c02 40%, #e5ce20 60%, #a1cb43 80%, #82b944 100%);\n        }\n    \n        .e-limit-bar.e-limits {\n            background-color: transparent !important;\n        }\n    \n        .e-control-wrapper.e-slider-container.e-horizontal .e-range {\n            height: 0px !important;\n            width: 0px !important;\n            background-color: transparent;\n        }\n    \n        #slider.e-control.e-slider .e-slider-track {\n            height: 8px;\n            top: calc(50% - 4px);\n            border-radius: 5px;\n        }\n        .fluent2 #slider.e-control.e-slider .e-handle, .fluent2-dark #slider.e-control.e-slider .e-handle {\n                margin-top: 2px;\n        }\n        .bootstrap5 #slider.e-control.e-slider .e-handle, .bootstrap5-dark #slider.e-control.e-slider .e-handle {\n                margin-top: -1px;\n        }\n        .fluent2-highcontrast #slider.e-control.e-slider .e-handle {\n            margin-top: 3px;\n        }\n        .material #slider.e-control.e-slider .e-handle, .material-dark #slider.e-control.e-slider .e-handle {\n                margin-top: -1px;\n        }\n        .material3 #slider.e-control.e-slider .e-handle, .material3-dark #slider.e-control.e-slider .e-handle {\n                margin-top: 4.5px;\n        }\n        .fabric #slider.e-control.e-slider .e-handle, .fabric-dark #slider.e-control.e-slider .e-handle {\n                margin-top: 1px;\n        }\n        .bootstrap #slider.e-control.e-slider .e-handle, .bootstrap-dark #slider.e-control.e-slider .e-handle {\n                margin-top: 1px;\n        }\n        .highcontrast #slider.e-control.e-slider .e-handle {\n                margin-top: 1px;\n        }\n    \n        @media screen and (max-width: 410px) {\n            .bootstrap5 #slider.e-control.e-slider .e-handle, .bootstrap5-dark #slider.e-control.e-slider .e-handle,\n            .fluent #slider.e-control.e-slider .e-handle {\n                margin-top: 1px;\n            }\n            .highcontrast #slider.e-control.e-slider .e-handle,\n            .fabric #slider.e-control.e-slider .e-handle, .fabric-dark #slider.e-control.e-slider .e-handle,\n            .bootstrap #slider.e-control.e-slider .e-handle, .bootstrap-dark #slider.e-control.e-slider .e-handle {\n                margin-top: 1.5px;\n            }\n            .material #slider.e-control.e-slider .e-handle, .material-dark #slider.e-control.e-slider .e-handle {\n                margin-top: -1.5px;\n            }\n            .material3 #slider.e-control.e-slider .e-handle, .material3-dark #slider.e-control.e-slider .e-handle {\n                margin-top: 6.5px;\n            }\n            .bootstrap4 #slider.e-control.e-slider .e-handle {\n                margin-top: 0.5px;\n            }\n        }\n        \n    </style>\n    <!-- custom code end -->\n</main>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-circulargauge\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-grids\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}