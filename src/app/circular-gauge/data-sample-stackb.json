{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { CircularGaugeComponent, ILoadedEventArgs, GaugeTheme, CircularGaugeModule, AnnotationsService } from '@syncfusion/ej2-angular-circulargauge';\nimport { GridComponent, GridModule } from '@syncfusion/ej2-angular-grids';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [CircularGaugeModule, GridModule],\n    providers: [AnnotationsService]\n})\nexport class AppComponent {\n\n    @ViewChild('germanyGauge')\n    public germany: CircularGaugeComponent;\n    @ViewChild('usaGauge')\n    public usa: CircularGaugeComponent;\n    @ViewChild('ukGauge')\n    public uk: CircularGaugeComponent;\n    @ViewChild('dataGrid')\n    public grid: GridComponent;\n\n    public data: Object[] = [];\n    public tooltipInterval1: number;\n    public annotation1: string = \"<div id='positiveoneTemplateWrap'><img alt='positive image' class='imageStyle' src='./assets/circular-gauge/images/positive.png' />\" +\n        \"<div class='fontDes'>${pointers[0].value}%</div></div></div>\";\n    public annotation2: string = \"<div class='fontDes1'>Germany</div>\"\n    public annotation3: string = \"<div class='fontDes1'>USA</div>\"\n    public annotation4: string = \"<div class='fontDes1'>UK</div>\"\n    public annotation5: string = \"<div id='negativeTemplateWrap'><img alt='negative image' class='imageStyle' src='./assets/circular-gauge/images/negative.png' />\" +\n        \"<div class='fontDes'>${pointers[0].value}%</div></div></div>\";\n    public annotation6: string = \"<div id='positivetwoTemplateWrap'><img alt='positive image' class='imageStyle' src='./assets/circular-gauge/images/positive.png' />\" +\n        \"<div class='fontDes'>${pointers[0].value}%</div></div></div>\";\n\n    public load(args: ILoadedEventArgs): void {\n        /* custom code start */\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.gauge.theme = <GaugeTheme>(selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n        /* custom code end */\n    }\n\n    public majorTicks: Object = {\n        width: 0, height: 0\n    };\n\n    public lineStyle: Object = {\n        width: 0, color: 'transparent'\n    };\n\n    public minorTicks: Object = {\n        width: 0, height: 0\n    };\n\n    public labelStyleOne: Object = {\n        position: 'Outside',\n        format:'Germany Gauge {value} %',\n        font: { size: '0', color: 'transparent' }\n    };\n\n    public labelStyleTwo: Object = {\n        position: 'Outside',\n        format:'USA {value} %',\n        font: { size: '0', color: 'transparent' }\n    };\n\n    public labelStyleThree: Object = {\n        position: 'Outside',\n        format:'UK {value} %',\n        font: { size: '0', color: 'transparent' }\n    };\n\n    public germanyAnnotation: Object[] = [{\n        content: \"<div id='germanyTemplateWrap'>\"\n            + \"<img style='width: 16px;height: 16px;margin-top: 4px;' src='./assets/circular-gauge/images/positive.png' />\"\n            + \"<div style='float: right;color: #424242;font-size: 20px;'>${pointers[0].value}%</div></div></div>\",\n        angle: 180,\n        radius: '30%'\n    }, {\n        content: '<div style=\"color:#9E9E9E;font-size:16px;font-family:Roboto\">Germany</div>',\n        angle: 180,\n        radius: '65%'\n    }];\n\n    public usaAnnotation: Object[] = [{\n        content: \"<div id='usaTemplateWrap'>\"\n            + \"<img style='width: 16px;height: 16px;margin-top: 4px;' src='./assets/circular-gauge/images/positive.png' />\"\n            + \"<div style='float: right;color: #424242;font-size: 20px;'>${pointers[0].value}%</div></div></div>\",\n        angle: 180,\n        radius: '30%'\n    }, {\n        content: '<div style=\"color:#9E9E9E;font-size:16px;font-family:Roboto\">USA</div>',\n        angle: 180,\n        radius: '65%'\n    }];\n\n    public ukAnnotation: Object[] = [{\n        content: \"<div id='ukTemplateWrap'>\"\n            + \"<img style='width: 16px;height: 16px;margin-top: 4px;' src='./assets/circular-gauge/images/negative.png' />\"\n            + \"<div style='float: right;color: #424242;font-size: 20px;'>${pointers[0].value}%</div></div></div>\",\n        angle: 180,\n        radius: '30%'\n    }, {\n        content: '<div style=\"color:#9E9E9E;font-size:16px;font-family:Roboto\">UK</div>',\n        angle: 180,\n        radius: '65%'\n    }];\n\n    public ranges: Object = [{\n        start: -100, end: 0,\n        startWidth: 15, endWidth: 15,\n        color: '#EC121C'\n    }, {\n        start: 0, end: 100,\n        startWidth: 15, endWidth: 15,\n        color: '#45EA0C'\n    }];\n\n    public germanyPointer: Object = [{\n        value: 75, radius: '60%',\n        color: '#777777',\n        animation: { enable: false, duration: 900 },\n        pointerWidth: 5,\n        cap: {\n            radius: 6, color: '#777777',\n            border: { width: 0 }\n        },\n        needleTail: {\n            length: '25%', color: '#777777'\n        }\n    }];\n\n    public usaPointer: Object = [{\n        value: 60, radius: '60%',\n        animation: { enable: false, duration: 900 },\n        pointerWidth: 5,\n        cap: {\n            radius: 6, color: '#777777',\n            border: { width: 0 }\n        },\n        needleTail: {\n            length: '25%', color: '#777777'\n        }\n    }];\n\n    public ukPointer: Object = [{\n        value: 25, radius: '60%', color: '#777777',\n        animation: { enable: false, duration: 900 },\n        pointerWidth: 5,\n        cap: {\n            radius: 6, color: '#777777',\n            border: { width: 0 }\n        },\n        needleTail: {\n            length: '25%', color: '#777777'\n        }\n    }];\n\n    ngOnInit(): void {\n        this.data = [\n            {\n                'Country': 'Germany',\n                'Sales': 500,\n                'Target': 400,\n                'vsTarget': 300\n            }, {\n                'Country': 'USA',\n                'Sales': 1000,\n                'Target': 600,\n                'vsTarget': 360\n            }, {\n                'Country': 'UK',\n                'Sales': 600,\n                'Target': 700,\n                'vsTarget': -100\n            }\n        ];\n    }\n\n    ngAfterViewInit(): void {\n        this.tooltipInterval1 = window.setInterval(\n            (): void => {\n                if (document.getElementById('sample-data')) {\n                    let randomValue: number = Math.random();\n                    let value1: number = Math.round((randomValue * 35) + 55);\n                    let value2: number = Math.round((randomValue * 15) + 60);\n                    let value3: number = Math.round((randomValue * 30) + 10);\n                    let gridData1: number = 4 * value1;\n                    let gridData2: number = 6 * value2;\n                    let gridData3: number = -7 * value3;\n                    let orderData: Object[] = [\n                        {\n                            'Country': 'Germany',\n                            'Sales': 500,\n                            'Target': 400,\n                            'vsTarget': gridData1\n                        }, {\n                            'Country': 'USA',\n                            'Sales': 1000,\n                            'Target': 600,\n                            'vsTarget': gridData2\n                        }, {\n                            'Country': 'UK',\n                            'Sales': 600,\n                            'Target': 700,\n                            'vsTarget': gridData3\n                        }\n                    ];\n\n                    this.grid.dataSource = orderData;\n                    this.grid.refresh();\n\n                    this.germany.axes[0].pointers[0].animation.enable = true;\n                    this.usa.axes[0].pointers[0].animation.enable = true;\n                    this.uk.axes[0].pointers[0].animation.enable = true;\n                    this.germany.setPointerValue(0, 0, value1);\n                    this.usa.setPointerValue(0, 0, value2);\n                    this.uk.setPointerValue(0, 0, -value3);\n                    this.germany.setAnnotationValue(0, 0, this.germany.axes[0].annotations[0].content);\n                    this.usa.setAnnotationValue(0, 0, this.usa.axes[0].annotations[0].content);\n                    this.uk.setAnnotationValue(0, 0, this.uk.axes[0].annotations[0].content);\n                } else {\n                    clearInterval(this.tooltipInterval1);\n                }\n            },\n            2000);\n    }\n\n    constructor() {\n        // code\n    };\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<main>\n    <section id=\"action-description\" aria-label=\"Description of Circular Gauge sample\">\n        <p>\n            This sample shows live stock price data displayed in multiple circular gauges.\n        </p>\n    </section>\n    <div class=\"control-section\">\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"row\">\n                    <div class=\"col-sm-4\">\n                        <ejs-circulargauge (load)='load($event)' background='transparent' #germanyGauge id=\"sample-data\"\n                            style='display: block; height:250px;'>\n                            <e-axes>\n                                <e-axis startAngle=230 endAngle=130 [majorTicks]=\"majorTicks\" [minorTicks]=\"minorTicks\"\n                                    minimum=-100 maximum=100 [labelStyle]=\"labelStyleOne\" [lineStyle]=\"lineStyle\"\n                                    [ranges]=\"ranges\" [pointers]=\"germanyPointer\">\n                                    <e-annotations>\n                                        <e-annotation description=\"positive value gauge one image\" [content]=\"annotation1\" angle=180 radius='30%' zIndex='1'>\n                                        </e-annotation>\n                                        <e-annotation description=\"Germany\" [content]=\"annotation2\" angle=180 radius='65%' zIndex='1'>\n                                        </e-annotation>\n                                    </e-annotations>\n                                </e-axis>\n                            </e-axes>\n                        </ejs-circulargauge>\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <ejs-circulargauge (load)='load($event)' background='transparent' #usaGauge id=\"container2\"\n                            style='display: block; height:250px;'>\n                            <e-axes>\n                                <e-axis startAngle=230 endAngle=130 [majorTicks]=\"majorTicks\" [minorTicks]=\"minorTicks\"\n                                    minimum=-100 maximum=100 [labelStyle]=\"labelStyleTwo\" [lineStyle]=\"lineStyle\"\n                                    [ranges]=\"ranges\" [pointers]=\"usaPointer\">\n                                    <e-annotations>\n                                        <e-annotation description=\"positive value gauge two image\" [content]=\"annotation6\" angle=180 radius='30%' zIndex='1'>\n                                        </e-annotation>\n                                        <e-annotation description=\"USA\" [content]=\"annotation3\" angle=180 radius='65%' zIndex='1'>\n                                        </e-annotation>\n                                    </e-annotations>\n                                </e-axis>\n                            </e-axes>\n                        </ejs-circulargauge>\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <ejs-circulargauge (load)='load($event)' background='transparent' #ukGauge id=\"container3\"\n                            style='display: block; height:250px;'>\n                            <e-axes>\n                                <e-axis startAngle=230 endAngle=130 [majorTicks]=\"majorTicks\" [minorTicks]=\"minorTicks\"\n                                    minimum=-100 maximum=100 [labelStyle]=\"labelStyleThree\" [lineStyle]=\"lineStyle\"\n                                    [ranges]=\"ranges\" [pointers]=\"ukPointer\">\n                                    <e-annotations>\n                                        <e-annotation description=\"negative value gauge three image\" [content]=\"annotation5\" angle=180 radius='30%' zIndex='1'>\n                                        </e-annotation>\n                                        <e-annotation description=\"UK\" [content]=\"annotation4\" angle=180 radius='65%' zIndex='1'>\n                                        </e-annotation>\n                                    </e-annotations>\n                                </e-axis>\n                            </e-axes>\n                        </ejs-circulargauge>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-sm-12\">\n                <div class=\"row\">\n                    <ejs-grid #dataGrid [dataSource]='data'>\n                        <e-columns>\n                            <e-column field='Country' headerText='Country' width='80'></e-column>\n                            <e-column field='Sales' headerText='Sales $' width='80'></e-column>\n                            <e-column field='Target' headerText='Target $' width='80'></e-column>\n                            <e-column field='vsTarget' headerText='vs Target' width='80'></e-column>\n                        </e-columns>\n                    </ejs-grid>\n                </div>\n            </div>\n        </div>\n    </div>\n    <section id=\"description\" aria-label=\"Description of the Circular Gauge features demonstrated in this sample\">\n        <p>\n            The pointer value in the circular gauge can be dynamically updated using the <a target=\"_blank\"\n                href=\"https://ej2.syncfusion.com/angular/documentation/api/circular-gauge/#setpointervalue\">setPointerValue</a>\n            method. In this example, the stock price changes across countries are displayed in multiple circular gauges.\n        </p>\n        <p>\n            More information on the circular gauge can be found in this <a target=\"_blank\"\n                href=\"https://ej2.syncfusion.com/angular/documentation/circular-gauge/getting-started/\"> documentation\n                section</a>.\n        </p>\n    </section>\n    <style>\n        .control-section {\n            min-height: 450px;\n        }\n    \n        .imageStyle {\n            width: 16px;\n            height: 16px;\n            margin-top: 4px;\n        }\n    \n        .fontDes {\n            float: right;\n            padding-left: 5px;\n            font-size: 20px;\n        }\n    \n        .fontDes1 {\n            color: #9E9E9E;\n            font-size: 16px;\n        }\n    </style>\n</main>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-circulargauge\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-grids\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}