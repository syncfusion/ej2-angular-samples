{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { ILoadedEventArgs, GaugeTheme, IPointerDragEventArgs, CircularGaugeComponent, CircularGaugeModule, AnnotationsService } from '@syncfusion/ej2-angular-circulargauge';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [CircularGaugeModule],\n    providers: [AnnotationsService]\n})\n\nexport class AppComponent {\n\n    @ViewChild('gauge')\n    public gauge: CircularGaugeComponent;\n\n    public pointerValue?: number;\n\n    public ticks: Object = {\n        height: 0\n    };\n\n    public lineStyle: Object = {\n        width: 0\n    };\n\n    public labelStyle: Object = {\n        font: {\n            size: '0px'\n        },\n        offset: -1\n    };\n\n    public animation: Object = {\n        enable: false\n    };\n\n    public load(args: ILoadedEventArgs): void {\n        /* custom code start */\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.gauge.theme = <GaugeTheme>(selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n        /* custom code end */\n    }\n\n    public dragMove(args: IPointerDragEventArgs): void {\n        this.pointerValue = args.currentValue;\n        if (this.pointerValue != null) {\n            this.gauge.setPointerValue(0, 0, this.pointerValue);\n            this.gauge.setRangeValue(0, 0, 0, this.pointerValue);\n            this.gauge.setRangeValue(0, 1, this.pointerValue, 100);\n            this.gauge.setAnnotationValue(0, 0, '<div style=\"font-style: oblique; margin-left: 8px;font-size: 20px;\"><span>' + Math.ceil(this.pointerValue) + '%</span></div>');\n        }\n    }\n\n    constructor() {\n        // code\n    };\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<main>\n    <section id=\"action-description\" aria-label=\"Description of Circular Gauge sample\">\n        <p>\n            This sample demonstrates how to create a range slider component by utilizing the functions available in the circular\n            gauge.\n        </p>\n    </section>\n    <div class=\"control-section\">\n        <ejs-circulargauge style='display:block;' #gauge (load)='load($event)' background='transparent' (dragMove)='dragMove($event)'\n            enablePointerDrag='true'>\n            <e-axes>\n                <e-axis radius='80%' startAngle=0 endAngle=0 [majorTicks]='ticks' [minorTicks]='ticks'\n                    [lineStyle]='lineStyle' [labelStyle]=\"labelStyle\">\n                    <e-pointers>\n                        <e-pointer type=\"Marker\" value=30 markerShape=\"Circle\" color=\"#2C75DC\" radius='97%' markerWidth=25\n                            markerHeight=25 [animation]=\"animation\">\n                        </e-pointer>\n                    </e-pointers>\n                    <e-ranges>\n                        <e-range start=0 end=30 color='#2C75DC' startWidth=12 endWidth=12 radius='100%'></e-range>\n                        <e-range start=30 end=100 color='#BFD6F5' startWidth=12 endWidth=12 radius='100%'></e-range>\n                    </e-ranges>\n                    <e-annotations>\n                        <e-annotation\n                            content='<div style=\"font-style: oblique; margin-left: 8px;font-size: 20px;\"><span>30%</span></div>'\n                            angle=180 radius='0%' zIndex='1'>\n                        </e-annotation>\n                    </e-annotations>\n                </e-axis>\n            </e-axes>\n        </ejs-circulargauge>\n    </div>\n    <section id=\"description\" aria-label=\"Description of the Circular Gauge features demonstrated in this sample\">\n        <p>\n            In this example, you can see how to render and configure a new range slider in the circular gauge. It is\n            possible to achieve this by combining ranges and a marker pointer. The marker pointer has been made interactive,\n            so the value changes as you drag it.\n        </p>\n        <p>\n            More information on the circular gauge can be found in this <a target=\"_blank\"\n                href=\"https://ej2.syncfusion.com/angular/documentation/circular-gauge/getting-started/\">documentation\n                section</a>.\n        </p>\n    </section>\n    <!-- custom code start -->\n    <style>\n        .control-section {\n            min-height: 450px;\n        }\n    </style>\n    <!-- custom code end -->\n</main>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-circulargauge\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-grids\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}