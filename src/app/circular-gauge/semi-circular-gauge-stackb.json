{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { CircularGaugeComponent, ILoadedEventArgs, GaugeTheme, CircularGaugeModule } from '@syncfusion/ej2-angular-circulargauge';\nimport { CheckBox, ChangeEventArgs as CheckBoxChangeEvents } from '@syncfusion/ej2-buttons';\nimport { EmitType } from '@syncfusion/ej2-base';\n\n/* custom code start */\n// tslint:disable\n/* custom code end */\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [CircularGaugeModule]\n})\n\nexport class AppComponent {\n\n    @ViewChild('circulargauge')\n    public circulargauge: CircularGaugeComponent;\n\n    public lineStyle: Object = {\n        width: 3\n    };\n\n    public labelStyle: Object = {\n        position: 'Outside', autoAngle: true,\n        font: { fontWeight: 'normal', fontFamily: 'inherit' },\n        format: '{value}%'\n    };\n\n    public majorTicks: Object = {\n        position: 'Inside', width: 2, height: 15, interval: 10\n    };\n\n    public minorTicks: Object = {\n        position: 'Inside', height: 8, width: 1, interval: 2\n    };\n\n    public tail: Object = {\n        length: '13%'\n    };\n\n    public pointerCap: Object = {\n        radius: 8, border: { width: 0 }\n    };\n\n    public animation: Object = {\n        enable: false\n    };\n\n    public load(args: ILoadedEventArgs): void {\n        /* custom code start */\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.gauge.theme = <GaugeTheme>(selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n        /* custom code end */\n    }\n\n    ngAfterViewInit(): void {\n\n        let removeIntersectLable: EmitType<CheckBoxChangeEvents>;\n        let opacity: EmitType<CheckBoxChangeEvents>;\n\n        let highlightCheckBox: CheckBox = new CheckBox(\n            {\n                change: opacity, checked: false,\n            }, '#angle');\n\n        let labelRemoveCheckbox: CheckBox = new CheckBox(\n            {\n                change: removeIntersectLable, checked: true\n            }, '#hidelabel');\n\n        document.getElementById('start').onchange = () => {\n            let min: number = parseInt((<HTMLInputElement>document.getElementById('start')).value, 10);\n            document.getElementById('rangeStart').innerHTML = min + '°';\n            this.circulargauge.axes[0].startAngle = min;\n            this.circulargauge.refresh();\n        };\n\n        document.getElementById('end').onpointermove = document.getElementById('end').ontouchmove =\n            document.getElementById('end').onchange = () => {\n                let max: number = parseInt((<HTMLInputElement>document.getElementById('end')).value, 10);\n                document.getElementById('rangeEnd').innerHTML = max + '°';\n                this.circulargauge.axes[0].endAngle = max;\n                this.circulargauge.refresh();\n            };\n\n        document.getElementById('radius').onpointermove = document.getElementById('radius').ontouchmove =\n            document.getElementById('radius').onchange = () => {\n                let max: number = parseInt((<HTMLInputElement>document.getElementById('radius')).value, 10);\n                document.getElementById('radius1').innerHTML = max + '%';\n                this.circulargauge.axes[0].radius = '' + max + '%';\n                this.circulargauge.refresh();\n            };\n\n        document.getElementById('centerX').onpointermove = document.getElementById('centerX').ontouchmove =\n            document.getElementById('centerX').onchange = () => {\n                if (!highlightCheckBox.checked) {\n                    let max: number = parseInt((<HTMLInputElement>document.getElementById('centerX')).value, 10);\n                    document.getElementById('centerx').innerHTML = max + '%';\n                    this.circulargauge.centerX = '' + max + '%';\n                    this.circulargauge.refresh();\n                }\n            };\n\n        document.getElementById('centerY').onpointermove = document.getElementById('centerY').ontouchmove =\n            document.getElementById('centerY').onchange = () => {\n                if (!highlightCheckBox.checked) {\n                    let max: number = parseInt((<HTMLInputElement>document.getElementById('centerY')).value, 10);\n                    document.getElementById('centery').innerHTML = max + '%';\n                    this.circulargauge.centerY = '' + max + '%';\n                    this.circulargauge.refresh();\n                }\n            };\n\n        highlightCheckBox.change = opacity = (e: CheckBoxChangeEvents) => {\n            let centerX: HTMLInputElement = document.getElementById('centerX') as HTMLInputElement;\n            let centerY: HTMLInputElement = document.getElementById('centerY') as HTMLInputElement;\n            if (e.checked) {\n                this.circulargauge.centerX = null;\n                this.circulargauge.centerY = null;\n                this.circulargauge.moveToCenter = true;\n                centerX.disabled = true;\n                centerY.disabled = true;\n            } else {\n                this.circulargauge.centerX = centerX.value + '%';\n                this.circulargauge.centerY = centerY.value + '%';\n                centerX.disabled = false;\n                centerY.disabled = false;\n                this.circulargauge.moveToCenter = false;\n            }\n            this.circulargauge.refresh();\n        };\n\n        labelRemoveCheckbox.change = removeIntersectLable = (e: CheckBoxChangeEvents) => {\n            this.circulargauge.axes[0].hideIntersectingLabel = e.checked;\n            this.circulargauge.refresh();\n        }\n    }\n\n    constructor() {\n        // code\n    };\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<main>\n    <section id=\"action-description\" aria-label=\"Description of Circular Gauge sample\">\n        <p>\n            This sample shows how to create semi-circular or quarter-circular gauges by modifying a circular gauge with\n            different start and end angles.\n        </p>\n    </section>\n    <div class=\"control-section\">\n        <div class=\"col-md-8 control-section\">\n            <ejs-circulargauge (load)='load($event)' background='transparent' centerX='50%' centerY='50%' moveToCenter=false\n                style='display:block;' id='semi-circle' #circulargauge=''>\n                <e-axes>\n                    <e-axis minimum=0 radius='100%' hideIntersectingLabel=true maximum=100 startAngle=270 endAngle=90\n                        [majorTicks]='majorTicks' [labelStyle]='labelStyle' [lineStyle]='lineStyle'\n                        [minorTicks]='minorTicks'>\n                        <e-pointers>\n                            <e-pointer value=30 radius='75%' [animation]='animation' pointerWidth=7 [needleTail]='tail'\n                                [cap]=\"pointerCap\">\n                            </e-pointer>\n                        </e-pointers>\n                    </e-axis>\n                </e-axes>\n            </ejs-circulargauge>\n        </div>\n    \n        <div class=\"col-md-4 property-section\">\n            <div class=\"property-panel-section\">\n                <div class=\"property-panel-header\">Properties</div>\n                <div class=\"property-panel-content\">\n                    <table title=\"Properties\" style=\"width: 100%\" role=\"none\">\n                        <colgroup>\n                            <col span=\"1\" style=\"width: 45%;\">\n                            <col span=\"1\" style=\"width: 35%;\">\n                            <col span=\"1\" style=\"width: 20%;\">\n                        </colgroup>\n                        <tr style=\"height: 50px\">\n                            <td>\n                                <div style=\"font-size:14px\">Start Angle </div>\n                            </td>\n                            <td>\n                                <div>\n                                    <input type=\"range\" id=\"start\" min=\"0\" max=\"360\" value=\"270\" />\n                                </div>\n                            </td>\n                            <td style=\"text-align: center; padding-left: 5px\">\n                                <span id='rangeStart' style=\"font-size:14px\">270°&nbsp;</span>\n                            </td>\n                        </tr>\n                    </table>\n                    <table title=\"Properties\" style=\"width: 100%\" role=\"none\">\n                        <colgroup>\n                            <col span=\"1\" style=\"width: 45%;\">\n                            <col span=\"1\" style=\"width: 35%;\">\n                            <col span=\"1\" style=\"width: 20%;\">\n                        </colgroup>\n                        <tr style=\"height: 50px\">\n                            <td>\n                                <div style=\"font-size:14px\">End Angle</div>\n                            </td>\n                            <td>\n                                <div>\n                                    <input type=\"range\" id=\"end\" min=\"0\" max=\"360\" value=\"90\" />\n                                </div>\n                            </td>\n                            <td style=\"text-align: center; padding-left: 5px\">\n                                <span id='rangeEnd' style=\"font-size:14px\">90°&nbsp;</span>\n                            </td>\n                        </tr>\n                    </table>\n                    <table title=\"Properties\" style=\"width: 100%\" role=\"none\">\n                        <colgroup>\n                            <col span=\"1\" style=\"width: 45%;\">\n                            <col span=\"1\" style=\"width: 35%;\">\n                            <col span=\"1\" style=\"width: 20%;\">\n                        </colgroup>\n                        <tr style=\"height: 50px\">\n                            <td>\n                                <div style=\"font-size:14px\">Radius</div>\n                            </td>\n                            <td>\n                                <div>\n                                    <input type=\"range\" id=\"radius\" min=\"30\" max=\"100\" value=\"100\" />\n                                </div>\n                            </td>\n                            <td style=\"text-align: center; padding-left: 5px\">\n                                <span id='radius1' style=\"font-size:14px\">100%&nbsp;</span>\n                            </td>\n                        </tr>\n                    </table>\n                    <table id=\"property\" title=\"Properties\" style=\"width: 100%\" role=\"none\">\n                        <colgroup>\n                            <col span=\"1\" style=\"width: 50%;\">\n                            <col span=\"1\" style=\"width: 50%;\">\n                        </colgroup>\n                        <tr style=\"height: 50px;\">\n                            <td>\n                                <div class=\"property-text\" style=\"width: 80%;font-size: 14px\"> Radius based on angle</div>\n                            </td>\n                            <td style=\"width: 40%;\">\n                                <div class=\"semiCircleCheckBox\">\n                                    <input type=\"checkbox\" id=\"angle\" checked />\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                    <table title=\"Properties\" style=\"width: 100%\" role=\"none\">\n                        <colgroup>\n                            <col span=\"1\" style=\"width: 45%;\">\n                            <col span=\"1\" style=\"width: 35%;\">\n                            <col span=\"1\" style=\"width: 20%;\">\n                        </colgroup>\n                        <tr style=\"height: 50px\">\n                            <td>\n                                <div style=\"font-size:14px\">Center X</div>\n                            </td>\n                            <td>\n                                <div>\n                                    <input type=\"range\" id=\"centerX\" min=\"0\" max=\"100\" value=\"50\" />\n                                </div>\n                            </td>\n                            <td style=\"text-align: center; padding-left: 5px\">\n                                <span id='centerx' style=\"font-size:14px\">50%&nbsp;</span>\n                            </td>\n                        </tr>\n                    </table>\n                    <table title=\"Properties\" style=\"width: 100%\" role=\"none\">\n                        <colgroup>\n                            <col span=\"1\" style=\"width: 45%;\">\n                            <col span=\"1\" style=\"width: 35%;\">\n                            <col span=\"1\" style=\"width: 20%;\">\n                        </colgroup>\n                        <tr style=\"height: 50px\">\n                            <td>\n                                <div style=\"font-size:14px\">Center Y </div>\n                            </td>\n                            <td>\n                                <div>\n                                    <input type=\"range\" id=\"centerY\" min=\"0\" max=\"100\" value=\"50\" />\n                                </div>\n                            </td>\n                            <td style=\"text-align: center; padding-left: 5px\">\n                                <span id='centery' style=\"font-size:14px\">50%&nbsp;</span>\n                            </td>\n                        </tr>\n                    </table>\n                    <table id=\"property\" title=\"Properties\" style=\"width: 100%\" role=\"none\">\n                        <colgroup>\n                            <col span=\"1\" style=\"width: 50%;\">\n                            <col span=\"1\" style=\"width: 50%;\">\n                        </colgroup>\n                        <tr style=\"height: 50px;\">\n                            <td>\n                                <div class=\"property-text\" style=\"width: 80%;font-size: 14px\">Hide Intersecting Labels</div>\n                            </td>\n                            <td style=\"width: 40%;\">\n                                <div class=\"semiCircleCheckBox\">\n                                    <input type=\"checkbox\" id=\"hidelabel\" checked />\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n    <style>\n        .semiCircleCheckBox {\n            margin-left: -11%;\n        }\n        .e-view.fluent2-dark #property .semiCircleCheckBox {\n            margin-left: -13%;\n        }\n        .e-view.fluent2-highcontrast #property .semiCircleCheckBox {\n            margin-left: -14%;\n        }\n    </style>\n    <section id=\"description\" aria-label=\"Description of the Circular Gauge features demonstrated in this sample\">\n        <p>\n            In this example, a circular gauge is rendered with different start and end angles to create semi-circular or\n            quarter-circular gauges. The radius, start angle, end angle, and center position of the circular gauge can all\n            be customized using the options in the properties panel.\n        </p>\n        <p>\n            More information on the semi-circular or quarter-circular gauges can be found in this <a target=\"_blank\"\n                href=\"https://ej2.syncfusion.com/angular/documentation/circular-gauge/gauge-appearance/#radius-calculation-based-on-angles\">documentation\n                section</a> .\n        </p>\n    </section>\n</main>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-circulargauge\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-grids\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}