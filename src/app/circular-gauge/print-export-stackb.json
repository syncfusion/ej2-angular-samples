{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { ILoadedEventArgs, GaugeTheme, ExportType, CircularGaugeComponent, CircularGauge, CircularGaugeModule } from '@syncfusion/ej2-angular-circulargauge';\nimport { PrintService, PdfExportService, ImageExportService } from '@syncfusion/ej2-angular-circulargauge';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { ButtonModule } from '@syncfusion/ej2-angular-buttons';\nimport { TextBoxModule } from '@syncfusion/ej2-angular-inputs';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    providers: [PrintService, PdfExportService, ImageExportService],\n    standalone: true,\n    imports: [CircularGaugeModule, ButtonModule, TextBoxModule]\n})\nexport class AppComponent {\n\n    @ViewChild('gauge')\n    public gauge: CircularGauge;\n    public exportType: DropDownList;\n    public allowPrint: boolean = true;\n    public allowPdfExport: boolean = true;\n    public allowImageExport: boolean = true;\n    public downloadFileName: string = 'Circular Gauge';\n\n    public minorTicks: Object = {\n        position: 'Outside',\n        width: 1,\n        height: 8,\n        interval: 2,\n        useRangeColor: true\n    };\n\n    public majorTicks: Object = {\n        position: 'Outside',\n        width: 1,\n        height: 25,\n        interval: 10,\n        useRangeColor: true\n    };\n\n    public lineStyle: Object = {\n        width: 0\n    };\n\n    public labelStyle: Object = {\n        hiddenLabel: 'Last', offset: 2,\n        font: { fontFamily: 'inherit' },\n        position: 'Outside',\n        useRangeColor: true\n    };\n\n    public pointers: Object[] = [{\n        radius: '0%', cap: {\n            radius: 0\n        }\n    }];\n\n    public ranges: object[] = [\n        {\n            start: 0, end: 32,\n            radius: '90%',\n            startWidth: 10, endWidth: 35,\n            color: '#F8A197',\n        },\n        {\n            start: 32, end: 70,\n            radius: '90%',\n            startWidth: 10, endWidth: 35,\n            color: '#C45072',\n        },\n        {\n            start: 70, end: 100,\n            radius: '90%',\n            startWidth: 10, endWidth: 35,\n            color: '#1B679F',\n        }];\n\n    public load(args: ILoadedEventArgs): void {\n        /* custom code start */\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.gauge.theme = <GaugeTheme>(selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n        /* custom code end */\n    }\n\n    public onClickPrint(e: Event): void {\n        this.gauge.print();\n    }\n    public change(target: any): void {\n        this.downloadFileName = target.value;\n    }\n    public onClickExport(e: Event): void {\n        this.gauge.export(<ExportType>this.exportType.value, this.downloadFileName);\n    }\n\n    ngOnInit(): void {\n        this.exportType = new DropDownList({\n            index: 0,\n            width: '90%',\n        });\n        this.exportType.appendTo('#exporttype');\n    }\n\n    constructor() {\n        // code\n    };\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<main>\n    <div class=\"control-section\">\n        <div class=\"col-lg-8\">\n            <ejs-circulargauge id='gauge' style='display:block;' #gauge='' [allowPrint]='allowPrint'\n                background='transparent' [allowPdfExport]='allowPdfExport' [allowImageExport]='allowImageExport'\n                (load)='load($event)'>\n                <e-axes>\n                    <e-axis radius='80%' startAngle=0 endAngle=0 [majorTicks]='majorTicks' [minorTicks]='minorTicks'\n                        [lineStyle]='lineStyle' [labelStyle]=\"labelStyle\" [ranges]=\"ranges\" direction=\"AntiClockWise\"\n                        [pointers]='pointers'>\n                    </e-axis>\n                </e-axes>\n            </ejs-circulargauge>\n        </div>\n        <div class=\"col-lg-4 property-section\">\n            <div class=\"property-panel-section\">\n                <div class=\"property-panel-header\">Properties</div>\n                <div class=\"property-panel-content\">\n                    <table id=\"property\" title=\"Properties\" style=\"width: 100%\" role=\"none\">\n                        <colgroup>\n                            <col span=\"1\" style=\"width: 50%;\">\n                            <col span=\"1\" style=\"width: 50%;\">\n                        </colgroup>\n                        <tr style=\"height: 50px;\">\n                            <td>\n                                <div style=\"font-size:14px\">Export Type</div>\n                            </td>\n                            <td>\n                                <div>\n                                    <select name=\"selectIndex\" autocomplete=\"off\" id=\"exporttype\" style=\"width: 90%\">\n                                        <option value=\"JPEG\">JPEG</option>\n                                        <option value=\"PNG\">PNG</option>\n                                        <option value=\"SVG\">SVG</option>\n                                        <option value=\"PDF\">PDF</option>\n                                    </select>\n                                </div>\n                            </td>\n                        </tr>\n                        <tr style=\"height: 50px;\">\n                            <td>\n                                <div style=\"font-size:14px\">File Name</div>\n                            </td>\n                            <td>\n                                <div style='margin-top: 0px; width: 90%'>\n                                    <ejs-textbox\n                                        id=\"fileName\"\n                                        value=\"Circular Gauge\"\n                                        style=\"width: 90%\"\n                                        (change)=\"change($event)\"\n                                        ></ejs-textbox>\n                                </div>\n                            </td>\n                        </tr>\n                        <tr style=\"height: 70px;\">\n                            <td align=\"right\" style=\"padding-right:5%\">\n                                <button ejs-button isPrimary=true (click)='onClickExport($event)' content=\"Export\"\n                                        id=\"export\">EXPORT</button>\n                            </td>\n                            <td align=\"left\" style=\"padding-left:5%\">\n                                <button ejs-button isPrimary=true (click)='onClickPrint($event)' content=\"Print\"\n                                        id=\"print\">PRINT</button>\n                            </td>\n                        </tr>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- custom code start -->\n    <style>\n        .control-section {\n            min-height: 450px;\n        }\n    </style>\n    <!-- custom code end -->\n    <section id=\"action-description\" aria-label=\"Description of Circular Gauge sample\">\n        <p>\n            This sample demonstrates the print and export functionalities of the circular gauge.\n        </p>\n    </section>\n    <section id=\"description\" aria-label=\"Description of the Circular Gauge features demonstrated in this sample\">\n        <p>\n            In this example, you can see how to print and export the rendered circular gauge. You can add print\n            functionality by using the <a target=\"_blank\"\n                href=\"https://ej2.syncfusion.com/angular/documentation/api/circular-gauge/#print\">print</a> method when <a\n                target=\"_blank\" href=\"https://ej2.syncfusion.com/angular/documentation/api/circular-gauge/#allowprint\">\n                allowPrint</a> is set as <b>true</b>. Also, you can add export functionality by using the <a target=\"_blank\"\n                href=\"https://ej2.syncfusion.com/angular/documentation/api/circular-gauge/#export\">export</a> method when <a\n                target=\"_blank\"\n                href=\"https://ej2.syncfusion.com/angular/documentation/api/circular-gauge/#allowimageexport\">\n                allowImageExport</a> and <a target=\"_blank\"\n                href=\"https://ej2.syncfusion.com/angular/documentation/api/circular-gauge/#allowpdfexport\">allowPdfExport</a>\n            are set as <b>true</b>. The circular gauge can be exported to JPEG, PNG, SVG, and PDF formats.\n        </p>\n        <p>\n            More information about print and export can be found in this <a target=\"_blank\"\n                href=\"https://ej2.syncfusion.com/angular/documentation/circular-gauge/gauge-print-and-export/\">documentation\n                section</a>.\n        </p>\n    </section>\n</main>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-circulargauge\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-grids\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}