{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { CircularGaugeComponent, ILoadedEventArgs, GaugeTheme, CircularGaugeModule, AnnotationsService } from '@syncfusion/ej2-angular-circulargauge';\nimport { Position, TickModel } from '@syncfusion/ej2-circulargauge';\nimport { CheckBox, ChangeEventArgs as CheckBoxChangeEvents } from '@syncfusion/ej2-buttons';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { EmitType } from '@syncfusion/ej2-base';\n\n/* custom code start */\n// tslint:disable\n/* custom code end */\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [CircularGaugeModule],\n    providers: [AnnotationsService]\n})\n\nexport class AppComponent {\n\n    @ViewChild('label')\n    public circulargauge: CircularGaugeComponent;\n    public isMajorTicks: boolean = true;\n    public ticks: DropDownList;\n    public tickPosition: DropDownList;\n    public labelPosition: DropDownList;\n\n    public margin: Object = {\n        left: 0, right: 0, top: 0, bottom: 0\n    };\n\n    public lineStyle: Object = {\n        width: 2, color: '#9E9E9E'\n    };\n\n    public labelStyle: Object = {\n        position: 'Outside', autoAngle: true, offset: 0,\n        font: {\n            fontFamily: 'inherit',\n            size: '10px'\n        }\n    };\n\n    public majorTicks: Object = {\n        position: 'Inside', color: '#757575', width: 2, height: 10, interval: 20, offset: 0\n    };\n\n    public minorTicks: Object = {\n        position: 'Inside', color: '#757575', height: 5, width: 2, interval: 10, offset: 0\n    };\n\n    public pointers: Object[] = [{\n        value: 145, type: 'RangeBar', roundedCornerRadius: 10, animation: { enable: false },\n        pointerWidth: 7, color: '#8BC34A', radius: '60%'\n    }];\n\n    public load(args: ILoadedEventArgs): void {\n        /* custom code start */\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.gauge.theme = <GaugeTheme>(selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n        /* custom code end */\n    }\n\n    ngOnInit(): void {\n        let label: CheckBox = new CheckBox(\n            {\n                checked: false,\n                change: (args: CheckBoxChangeEvents) => {\n                    let showLastLabel: boolean = args.checked;\n                    this.circulargauge.axes[0].showLastLabel = showLastLabel;\n                    this.circulargauge.refresh();\n                }\n            }, '#enable');\n\n        this.ticks = new DropDownList({\n            index: 0, width: '100%',\n            change: () => {\n                let value: string = this.ticks.value.toString();\n                let tick: TickModel; this.isMajorTicks = value === 'major';\n                if (this.isMajorTicks) {\n                    tick = this.circulargauge.axes[0].majorTicks;\n                } else {\n                    tick = this.circulargauge.axes[0].minorTicks;\n                }\n                this.tickPosition.value = tick.position;\n                (<HTMLInputElement>document.getElementById('tickOffset')).value = tick.offset.toString();\n                (<HTMLInputElement>document.getElementById('tickHeight')).value = tick.height.toString();\n                document.getElementById('offset').innerHTML = tick.offset.toString();\n                document.getElementById('height').innerHTML = tick.height.toString();\n            }\n        });\n        this.ticks.appendTo('#Ticks');\n\n        this.tickPosition = new DropDownList({\n            index: 0, width: '100%',\n            change: () => {\n                let value: string = this.tickPosition.value.toString();\n                if (this.isMajorTicks) {\n                    this.circulargauge.axes[0].majorTicks.position = <Position>value;\n                } else {\n                    this.circulargauge.axes[0].minorTicks.position = <Position>value;\n                }\n                this.circulargauge.refresh();\n            }\n        });\n        this.tickPosition.appendTo('#tickposition');\n\n        this.labelPosition = new DropDownList({\n            index: 0, width: '100%',\n            change: () => {\n                this.circulargauge.axes[0].labelStyle.position = <Position>this.labelPosition.value.toString();\n                this.circulargauge.refresh();\n            }\n        });\n        this.labelPosition.appendTo('#labelposition');\n    }\n\n    ngAfterViewInit(): void {\n\n        document.getElementById('tickOffset').onpointermove = document.getElementById('tickOffset').ontouchmove =\n            document.getElementById('tickOffset').onchange = () => {\n                let value: number = parseInt((<HTMLInputElement>document.getElementById('tickOffset')).value, 10);\n                if (this.isMajorTicks) {\n                    this.circulargauge.axes[0].majorTicks.offset = value;\n                } else {\n                    this.circulargauge.axes[0].minorTicks.offset = value;\n                }\n                document.getElementById('offset').innerHTML = value.toString();\n                this.circulargauge.refresh();\n            };\n\n        document.getElementById('tickHeight').onpointermove = document.getElementById('tickHeight').ontouchmove =\n            document.getElementById('tickHeight').onchange = () => {\n                let value: number = parseInt((<HTMLInputElement>document.getElementById('tickHeight')).value, 10);\n                if (this.isMajorTicks) {\n                    this.circulargauge.axes[0].majorTicks.height = value;\n                } else {\n                    this.circulargauge.axes[0].minorTicks.height = value;\n                }\n                document.getElementById('height').innerHTML = value.toString();\n                this.circulargauge.refresh();\n            };\n\n        document.getElementById('labelOffset').onpointermove = document.getElementById('labelOffset').ontouchmove =\n            document.getElementById('labelOffset').onchange = () => {\n                let value: number = parseInt((<HTMLInputElement>document.getElementById('labelOffset')).value, 10);\n                this.circulargauge.axes[0].labelStyle.offset = value;\n                document.getElementById('labelOffsetValue').innerHTML = value.toString();\n                this.circulargauge.refresh();\n            };\n    }\n\n    constructor() {\n        // code\n    };\n}\n\n\n\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<main>\n    <section id=\"action-description\" aria-label=\"Description of Circular Gauge sample\"> \n        <p>\n            This sample demonstrates how to customize the ticks and labels on an axis. The position, offset, and height of\n            the ticks and labels can be changed.\n        </p>\n    </section>\n    <div class=\"control-section\">\n        <div class=\"col-md-8\">\n            <ejs-circulargauge (load)='load($event)' background=\"transparent\" #label='' id='container1' [margin]='margin'\n                style='display:block;' [margin]='margin'>\n                <e-axes>\n                    <e-axis [lineStyle]='lineStyle' radius='80%' [labelStyle]='labelStyle' [majorTicks]='majorTicks'\n                        [minorTicks]='minorTicks' minimum=0 maximum=170 startAngle=210 endAngle=150 [pointers]='pointers'>\n                        <e-annotations>\n                            <e-annotation zIndex='1'\n                                content='<div id=\"content\" style=\"color:#518C03;font-size:20px;font-family:Segoe UI;font-weight:semibold;\">145</div>'\n                                angle=0 radius='0%'>\n                            </e-annotation>\n                        </e-annotations>\n                    </e-axis>\n                </e-axes>\n            </ejs-circulargauge>\n        </div>\n        <div class=\"col-md-4 property-section\">\n            <div class=\"property-panel-section\">\n                <div class=\"property-panel-header\">Properties</div>\n                <div class=\"property-panel-content\">\n                    <table class=\"property-panel-table\" title=\"Properties\" role=\"none\"\n                        style=\"width: 100%; margin-left: -11px;\">\n                        <colgroup>\n                            <col span=\"1\" style=\"width: 50%;\">\n                            <col span=\"1\" style=\"width: 50%;\">\n                        </colgroup>\n                        <tr style=\"height: 50px\">\n                            <td>\n                                <div style=\"font-size:14px\"> Ticks </div>\n                            </td>\n                            <td>\n                                <div>\n                                    <select id=\"Ticks\" class=\"form-control\" style=\"width:90%\">\n                                        <option value=\"major\" selected=true>Major Ticks</option>\n                                        <option value=\"minor\">Minor Ticks</option>\n                                    </select>\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                    <table class=\"property-panel-table\" title=\"Properties\" role=\"none\"\n                        style=\"width: 100%; margin-left: -11px;\">\n                        <colgroup>\n                            <col span=\"1\" style=\"width: 50%;\">\n                            <col span=\"1\" style=\"width: 50%;\">\n                        </colgroup>\n                        <tr style=\"height: 50px\">\n                            <td>\n                                <div style=\"font-size:14px\"> Tick Position </div>\n                            </td>\n                            <td>\n                                <div>\n                                    <select id=\"tickposition\" class=\"form-control\" style=\"width:90%\">\n                                        <option value=\"Inside\" selected=true>Inside</option>\n                                        <option value=\"Cross\">Cross</option>\n                                        <option value=\"Outside\">Outside</option>\n                                    </select>\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                    <table class=\"property-panel-table\" title=\"Properties\" role=\"none\"\n                        style=\"width: 100%; margin-left: -11px;\">\n                        <colgroup>\n                            <col span=\"1\" style=\"width: 50%;\">\n                            <col span=\"1\" style=\"width: 50%;\">\n                        </colgroup>\n                        <tr style=\"height: 50px\">\n                            <td>\n                                <div style=\"font-size:14px\"> Label Position </div>\n                            </td>\n                            <td>\n                                <div>\n                                    <select id=\"labelposition\" class=\"form-control\" style=\"width:90%\">\n                                        <option value=\"Outside\">Outside</option>\n                                        <option value=\"Cross\">Cross</option>\n                                        <option value=\"Inside\">Inside</option>\n    \n                                    </select>\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                    <table class=\"property-panel-table\" title=\"Properties\" role=\"none\"\n                        style=\"width: 100%; margin-left: -11px;\">\n                        <colgroup>\n                            <col span=\"1\" style=\"width: 45%;\">\n                            <col span=\"1\" style=\"width: 35%;\">\n                            <col span=\"1\" style=\"width: 20%;\">\n                        </colgroup>\n                        <tr style=\"height: 50px\">\n                            <td>\n                                <div style=\"font-size:14px\">Tick Offset</div>\n                            </td>\n                            <td style=\"width: 40%;\">\n                                <div>\n                                    <input type=\"range\" id=\"tickOffset\" value=\"0\" min=\"0\" max=\"50\" />\n                                </div>\n                            </td>\n                            <td style=\"text-align: center; padding-top: 10px; padding-left: -4%\">\n                                <span id='offset'>0</span>\n                            </td>\n                        </tr>\n                    </table>\n                    <table class=\"property-panel-table\" title=\"Properties\" role=\"none\"\n                        style=\"width: 100%; margin-left: -11px;\">\n                        <colgroup>\n                            <col span=\"1\" style=\"width: 45%;\">\n                            <col span=\"1\" style=\"width: 35%;\">\n                            <col span=\"1\" style=\"width: 20%;\">\n                        </colgroup>\n                        <tr style=\"height: 50px\">\n                            <td>\n                                <div style=\"font-size:14px\">Tick Height</div>\n                            </td>\n                            <td style=\"width: 40%;\">\n                                <div>\n                                    <input type=\"range\" id=\"tickHeight\" value=\"10\" min=\"1\" max=\"50\" />\n                                </div>\n                            </td>\n                            <td style=\"text-align: center; padding-top: 10px; padding-left: -4%\">\n                                <span id='height'>10</span>\n                            </td>\n                        </tr>\n                    </table>\n                    <table class=\"property-panel-table\" title=\"Properties\" role=\"none\"\n                        style=\"width: 100%; margin-left: -11px;\">\n                        <colgroup>\n                            <col span=\"1\" style=\"width: 45%;\">\n                            <col span=\"1\" style=\"width: 35%;\">\n                            <col span=\"1\" style=\"width: 20%;\">\n                        </colgroup>\n                        <tr style=\"height: 50px\">\n                            <td>\n                                <div style=\"font-size:14px\">Label Offset</div>\n                            </td>\n                            <td style=\"width: 40%;\">\n                                <div>\n                                    <input type=\"range\" id=\"labelOffset\" value=\"0\" min=\"0\" max=\"50\" />\n                                </div>\n                            </td>\n                            <td style=\"text-align: center; padding-top: 10px; padding-left: -4%\">\n                                <span id='labelOffsetValue'>0</span>\n                            </td>\n                        </tr>\n                    </table>\n                    <table id=\"property\" class=\"property-panel-table\" title=\"Properties\" role=\"none\"\n                        style=\"width: 100%; margin-left: -11px;\">\n                        <tr style=\"height: 50px\">\n                            <td>\n                                <div id='enablePointer' style=\"margin-top: 10px;font-size:14px\">Show Last Label </div>\n                            </td>\n                            <td>\n                                <div class=\"tickCheckBox\">\n                                    <input type=\"checkbox\" id=\"enable\" />\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n    \n    <section id=\"description\" aria-label=\"Description of the Circular Gauge features demonstrated in this sample\">\n        <p>\n            In this example, you can see how to render and configure the ticks and labels of an axis in the circular gauge.\n            Labels are units that are used to display the values on the axis. Labels can be customized using <a\n                target=\"_blank\"\n                href=\"https://ej2.syncfusion.com/angular/documentation/api/circular-gauge/labelModel/\">labelStyle</a>. Ticks\n            are used to represent values on the axis. Ticks can be customized using <a target=\"_blank\"\n                href=\"https://ej2.syncfusion.com/angular/documentation/api/circular-gauge/tickModel/\">majorTicks</a> and <a\n                target=\"_blank\"\n                href=\"https://ej2.syncfusion.com/angular/documentation/api/circular-gauge/tickModel/\">minorTicks</a>.\n        </p>\n        <p>\n            More information on the ticks and labels can be found in this <a target=\"_blank\"\n                href=\"https://ej2.syncfusion.com/angular/documentation/circular-gauge/gauge-axes/\">documentation\n                section</a>.\n        </p>\n    </section>\n    <!-- custom code start -->\n    <style>\n        .control-section {\n            min-height: 450px;\n        }\n        .tickCheckBox {\n            margin-left: -4%;\n        }\n        .e-view.fluent2-dark #property .tickCheckBox {\n            margin-left: -8%;\n        }\n        .e-view.fluent2-highcontrast #property .tickCheckBox {\n            margin-left: -10%;\n        }\n    </style>\n    <!-- custom code end -->\n</main>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-circulargauge\":\"*\",\"@syncfusion/ej2-pdf-export\":\"*\",\"@syncfusion/ej2-svg-base\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-grids\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}