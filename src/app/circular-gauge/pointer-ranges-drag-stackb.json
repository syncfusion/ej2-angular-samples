{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { IPointerDragEventArgs, CircularGaugeComponent, ILoadedEventArgs, GaugeTheme, CircularGaugeModule, AnnotationsService } from '@syncfusion/ej2-angular-circulargauge';\nimport { CheckBox, ChangeEventArgs as CheckBoxChangeEvents } from '@syncfusion/ej2-buttons';\nimport { getRangeColor, Range } from '@syncfusion/ej2-circulargauge';\nimport { EmitType } from '@syncfusion/ej2-base';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [CircularGaugeModule],\n    providers: [AnnotationsService]\n})\n\nexport class AppComponent {\n\n    @ViewChild('circulargauge')\n    public circulargauge: CircularGaugeComponent;\n\n    public content: string = '<div style=\"font-size: 14px;color:#E5C31C;font-weight: lighter;font-style: oblique;\"><span>';\n    public contentOne: string = '<div style=\"font-size: 14px;color:#E5C31C;font-weight: lighter;font-style: oblique;\"><span>70 MPH</span></div>';\n    public pointerValue: number;\n    public markerHeight: number = 20;\n    public markerWidth: number = 20;\n    public rangeWidth: number = 8;\n\n    public lineStyle: Object = { width: 0 };\n    public labelStyle: Object = {\n        useRangeColor: true,\n        font: {\n            fontFamily: 'inherit'\n        }\n    };\n\n    public majorTicks: Object = {\n        useRangeColor: true\n    };\n\n    public minorTicks: Object = {\n        useRangeColor: true\n    };\n\n\n    public cap: Object = {\n        radius: 10, border: { width: 5, color: '#E5C31C' }\n    };\n\n    public tail: Object = {\n        length: '0%', color: '#E5C31C'\n    };\n\n    public animation: Object = {\n        enable: true, duration: 500\n    };\n\n    public dragMove(args: IPointerDragEventArgs): void {\n        if (args.type.indexOf('pointer') > -1) {\n            this.pointerValue = Math.round(args.currentValue);\n            document.getElementById('pointerValue').innerHTML = this.pointerValue.toString();\n            (<HTMLInputElement>document.getElementById('value')).value = this.pointerValue.toString();\n            this.circulargauge.setAnnotationValue(0, 0, this.content + this.pointerValue + ' MPH</span></div>');\n        }\n\n    };\n\n    public dragEnd(args: IPointerDragEventArgs): void {\n        if (isNaN(args.rangeIndex)) {\n            this.setPointersValue(this.circulargauge, Math.round(args.currentValue));\n        }\n    };\n\n    public load(args: ILoadedEventArgs): void {\n        /* custom code start */\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.gauge.theme = <GaugeTheme>(selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n        /* custom code end */\n    }\n\n    public setPointersValue(circulargauge: CircularGaugeComponent, pointerValue: number): void {\n        let color: string = getRangeColor(pointerValue, <Range[]>(circulargauge.axes[0].ranges), circulargauge.axes[0].pointers[0].color);\n        circulargauge.axes[0].pointers[0].color = color;\n        circulargauge.axes[0].pointers[1].color = color;\n        circulargauge.axes[0].pointers[0].animation.enable = false;\n        circulargauge.axes[0].pointers[1].animation.enable = false;\n        circulargauge.axes[0].pointers[0].needleTail.color = color;\n        circulargauge.axes[0].pointers[1].needleTail.color = color;\n        circulargauge.axes[0].pointers[0].cap.border.color = color;\n        circulargauge.axes[0].pointers[1].cap.border.color = color;\n        circulargauge.setPointerValue(0, 1, pointerValue);\n        circulargauge.setPointerValue(0, 0, pointerValue);\n        this.content = '<div style=\"font-size: 14px;color:' + color + ';font-weight: lighter;font-style: oblique;\"><span>';\n        circulargauge.setAnnotationValue(0, 0, this.content + pointerValue + ' MPH</span></div>');\n    }\n\n    ngAfterViewInit(): void {\n        let pointerDragChange: EmitType<CheckBoxChangeEvents>;\n        let rangeDragChange: EmitType<CheckBoxChangeEvents>;\n        document.getElementById('value').onpointermove = document.getElementById('value').ontouchmove =\n            document.getElementById('value').onchange = () => {\n                let value: number = parseInt((<HTMLInputElement>document.getElementById('value')).value, 10);\n                document.getElementById('pointerValue').innerHTML = value.toString();\n                this.setPointersValue(this.circulargauge, value);\n            };\n\n        let pointerDragCheckBox: CheckBox = new CheckBox({\n            change: pointerDragChange, checked: true,\n        }, '#enable');\n\n        let rangeDragCheckBox: CheckBox = new CheckBox({\n            change: rangeDragChange, checked: false\n        }, '#rangedrag');\n\n        pointerDragCheckBox.change = pointerDragChange = () => {\n            let value: boolean = (<HTMLInputElement>document.getElementById('enable')).checked;\n            this.circulargauge.enablePointerDrag = value;\n        };\n        rangeDragCheckBox.change = rangeDragChange = () => {\n            let value: boolean = (<HTMLInputElement>document.getElementById('rangedrag')).checked;\n            this.circulargauge.enableRangeDrag = value;\n        };\n    }\n\n    constructor() {\n        // code\n    };\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<main>\n    <div class=\"control-section\">\n        <div class=\"col-md-8\">\n            <ejs-circulargauge (load)='load($event)' id='gauge' style='display:block;' background='transparent'\n                #circulargauge enablePointerDrag=true (dragMove)='dragMove($event)' (dragEnd)='dragEnd($event)'\n                background='transparent'>\n                <e-axes>\n                    <e-axis startAngle=220 endAngle=140 [lineStyle]=lineStyle [labelStyle]=labelStyle\n                        [majorTicks]=majorTicks [minorTicks]=minorTicks radius='80%' minimum=0 maximum=120>\n                        <e-annotations>\n                            <e-annotation [content]='contentOne' radius='45%' angle=180 zIndex='1'>\n                            </e-annotation>\n                        </e-annotations>\n                        <e-ranges>\n                            <e-range start=0 end=40 [startWidth]=\"rangeWidth\" [endWidth]=\"rangeWidth\" radius='108%'\n                                color=\"#30B32D\">\n                            </e-range>\n                            <e-range start=40 end=100 [startWidth]=\"rangeWidth\" [endWidth]=\"rangeWidth\" radius='108%'\n                                color=\"#E5C31C\">\n                            </e-range>\n                            <e-range start=100 end=120 [startWidth]=\"rangeWidth\" [endWidth]=\"rangeWidth\" radius='108%'\n                                color=\"#F03E3E\">\n                            </e-range>\n                        </e-ranges>\n                        <e-pointers>\n                            <e-pointer description='Marker pointer value : 70' value=70 radius='60%' color='#E5C31C' [cap]='cap' [needleTail]='tail' markerWidth=5>\n                            </e-pointer>\n                            <e-pointer description='Needle pointer value : 70' type='Marker' value=70 markerShape='InvertedTriangle' radius='110%'\n                                [markerHeight]='markerHeight' color='#E5C31C' [markerWidth]='markerWidth'>\n                            </e-pointer>\n                        </e-pointers>\n                    </e-axis>\n                </e-axes>\n            </ejs-circulargauge>\n        </div>\n        <div class=\"col-md-4 property-section\">\n            <div class=\"property-panel-section\">\n                <div class=\"property-panel-header\">Properties</div>\n                <div class=\"property-panel-content\">\n                    <table title=\"Properties\" class=\"property-panel-table\" role=\"none\"\n                        style=\"width: 100%; margin-left: -10px;\">\n                        <colgroup>\n                            <col span=\"1\" style=\"width: 45%;\">\n                            <col span=\"1\" style=\"width: 35%;\">\n                            <col span=\"1\" style=\"width: 20%;\">\n                        </colgroup>\n                        <tr style=\"height: 50px\">\n                            <td>\n                                <div style=\"font-size: 14px;\">Pointer Value</div>\n                            </td>\n                            <td style=\"width: 40%;\">\n                                <div>\n                                    <input type=\"range\" id=\"value\" value=\"70\" min=\"0\" max=\"180\" />\n                                </div>\n                            </td>\n                            <td style=\"text-align: center; padding-top: 10px; padding-left: 2%\">\n                                <span id='pointerValue' style=\"font-size: 14px;\">70</span>\n                            </td>\n                        </tr>\n                    </table>\n                    <table id=\"property\" title=\"Properties\" class=\"property-panel-table\" role=\"none\"\n                        style=\"width: 100%; margin-left: -10px;\">\n                        <colgroup>\n                            <col span=\"1\" style=\"width: 50%;\">\n                            <col span=\"1\" style=\"width: 50%;\">\n                        </colgroup>\n                        <tr style=\"height: 50px\">\n                            <td style=\"width: 20%\">\n                                <div id='enablePointer' style=\"font-size: 14px;width: 90%;\">Allow Pointer Drag</div>\n                            </td>\n                            <td style=\"width: 40%;\">\n                                <div class=\"pointerCheckbox\" style=\"padding-top: 0px;padding-left: 0px\">\n                                    <input type=\"checkbox\" id=\"enable\" checked=\"true\" class=\"drag\" />\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                    <table id=\"property\" title=\"Properties\" class=\"property-panel-table\" role=\"none\"\n                        style=\"width: 100%; margin-left: -10px;\">\n                        <colgroup>\n                            <col span=\"1\" style=\"width: 50%;\">\n                            <col span=\"1\" style=\"width: 50%;\">\n                        </colgroup>\n                        <tr style=\"height: 50px\">\n                            <td>\n                                <div id='enableRange' style=\"font-size: 14px;width: 90%;\">Allow Ranges Drag</div>\n                            </td>\n                            <td style=\"width: 40%;\">\n                                <div class=\"pointerCheckbox\" style=\"padding-top: 0px;padding-left: 0px\">\n                                    <input type=\"checkbox\" id=\"rangedrag\" class=\"drag\" />\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n    <section id=\"action-description\" aria-label=\"Description of Circular Gauge sample\">\n        <p>\n            This sample illustrates dragging a pointer and a range in a circular gauge. End-user can drag the pointer and\n            the range by enabling the pointer drag and range drag options.\n        </p>\n    </section>\n    <section id=\"description\" aria-label=\"Description of the Circular Gauge features demonstrated in this sample\">\n        <p>\n            In this example, you can see how to move the pointer and range in the circular gauge via drag action. The <a\n                target=\"_blank\"\n                href=\"https://ej2.syncfusion.com/angular/documentation/api/circular-gauge#enablepointerdrag\">enablePointerDrag</a>\n            property can be used to enable or disable the pointer drag functionality. Similarly, the <a target=\"_blank\"\n                href=\"https://ej2.syncfusion.com/angular/documentation/api/circular-gauge#enablerangedrag\">enableRangeDrag</a>\n            property can be used to enable or disable the range drag functionality.\n        </p>\n        <p>\n            More information on the pointer drag can be found in this <a target=\"_blank\"\n                href=\"https://ej2.syncfusion.com/angular/documentation/circular-gauge/gauge-user-interaction/#pointer-drag\">documentation\n                section</a>. Likewise, the range drag information can be found in this <a target=\"_blank\"\n                href=\"https://ej2.syncfusion.com/angular/documentation/circular-gauge/gauge-ranges/#dragging-range\">documentation\n                section</a>.\n        </p>\n    </section>\n    <!-- custom code start -->\n    <style>\n        .control-section {\n            min-height: 450px;\n        }\n    \n        .e-view.fabric .drag {\n            margin-top: 10px;\n        }\n        .fluent2-dark #property .pointerCheckbox {\n            margin-left: -6px !important;\n        }\n        .e-view.fluent2-highcontrast #property .pointerCheckbox {\n            margin-left: -7px;\n        }\n    </style>\n    <!-- custom code end -->\n</main>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-circulargauge\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-pdf-export\":\"*\",\"@syncfusion/ej2-svg-base\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-grids\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}