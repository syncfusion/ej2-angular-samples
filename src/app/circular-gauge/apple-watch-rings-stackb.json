{"dependencies.json":"{\"@syncfusion/ej2-base\": \"*\", \"@syncfusion/ej2-buttons\": \"*\", \"@syncfusion/ej2-splitbuttons\": \"*\", \"@syncfusion/ej2-calendars\": \"*\", \"@syncfusion/ej2-charts\": \"*\", \"@syncfusion/ej2-diagrams\": \"*\", \"@syncfusion/ej2-maps\": \"*\", \"@syncfusion/ej2-treemap\": \"*\", \"@syncfusion/ej2-circulargauge\": \"*\", \"@syncfusion/ej2-data\": \"*\", \"@syncfusion/ej2-dropdowns\": \"*\", \"@syncfusion/ej2-grids\": \"*\", \"@syncfusion/ej2-inputs\": \"*\", \"@syncfusion/ej2-lists\": \"*\", \"@syncfusion/ej2-navigations\": \"*\", \"@syncfusion/ej2-popups\": \"*\", \"@syncfusion/ej2-lineargauge\": \"*\", \"@syncfusion/ej2-pdf-export\": \"*\", \"@syncfusion/ej2-compression\": \"*\", \"@syncfusion/ej2-excel-export\": \"*\", \"@syncfusion/ej2-file-utils\": \"*\", \"@syncfusion/ej2-svg-base\": \"*\", \"@syncfusion/ej2-documenteditor\": \"*\", \"@syncfusion/ej2-richtexteditor\": \"*\", \"@syncfusion/ej2-notifications\": \"*\", \"@syncfusion/ej2-heatmap\": \"*\", \"@syncfusion/ej2-pivotview\": \"*\", \"@syncfusion/ej2-schedule\": \"*\", \"@syncfusion/ej2-layouts\": \"*\", \"@syncfusion/ej2-angular-base\": \"*\", \"@syncfusion/ej2-angular-buttons\": \"*\", \"@syncfusion/ej2-angular-splitbuttons\": \"*\", \"@syncfusion/ej2-angular-calendars\": \"*\", \"@syncfusion/ej2-angular-charts\": \"*\", \"@syncfusion/ej2-angular-diagrams\": \"*\", \"@syncfusion/ej2-angular-maps\": \"*\", \"@syncfusion/ej2-angular-treemap\": \"*\", \"@syncfusion/ej2-angular-circulargauge\": \"*\", \"@syncfusion/ej2-angular-dropdowns\": \"*\", \"@syncfusion/ej2-angular-grids\": \"*\", \"@syncfusion/ej2-angular-inputs\": \"*\", \"@syncfusion/ej2-angular-lists\": \"*\", \"@syncfusion/ej2-angular-navigations\": \"*\", \"@syncfusion/ej2-angular-popups\": \"*\", \"@syncfusion/ej2-angular-lineargauge\": \"*\", \"@syncfusion/ej2-angular-documenteditor\": \"*\", \"@syncfusion/ej2-angular-richtexteditor\": \"*\", \"@syncfusion/ej2-angular-notifications\": \"*\", \"@syncfusion/ej2-angular-heatmap\": \"*\", \"@syncfusion/ej2-angular-pivotview\": \"*\", \"@syncfusion/ej2-angular-schedule\": \"*\", \"@syncfusion/ej2-angular-layouts\": \"*\" , \"@angular/http\": \"*\", \"rxjs-compat\":\"*\"}","main.ts":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n","polyfills.ts":"/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol';\n// import 'core-js/es6/object';\n// import 'core-js/es6/function';\n// import 'core-js/es6/parse-int';\n// import 'core-js/es6/parse-float';\n// import 'core-js/es6/number';\n// import 'core-js/es6/math';\n// import 'core-js/es6/string';\n// import 'core-js/es6/date';\n// import 'core-js/es6/array';\n// import 'core-js/es6/regexp';\n// import 'core-js/es6/map';\n// import 'core-js/es6/weak-map';\n// import 'core-js/es6/set';\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect';\n\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\nimport 'core-js/es7/reflect';\n\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n **/\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n */\n\n // (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n // (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n // (window as any).__zone_symbol__BLACK_LISTED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n\n /*\n * in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n * with the following flag, it will bypass `zone.js` patch for IE/Edge\n */\n// (window as any).__Zone_enable_cross_context_check = true;\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n<link href=\"../styles/OpenNew.css\" rel=\"stylesheet\">\n  <link href=\"//cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\" />\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body class=\"ej2-new\"> \n\n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WLQL39J\"height=\"0\"width=\"0\"style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app/app.module.ts":"import { GridModule } from '@syncfusion/ej2-angular-grids';\n\nimport { CircularGaugeAllModule } from '@syncfusion/ej2-angular-circulargauge';\n\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from '../app.component';\n\n@NgModule({ declarations: [   AppComponent ], imports: [ CircularGaugeAllModule, GridModule, BrowserModule], providers: [], bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","app.component.html":"<div class=\"control-section\" align=\"center\">\n    <div id=\"gauge\" class=\"row\">\n        <div class=\"cols-sample-area\" align=\"center\">\n            <div align=\"center\" class=\"col-lg-9 col-md-9\" style=\"margin-left: -5%\">\n                <div>\n                    <ejs-circulargauge (load)='load($event)'  style='display:block;' id='gauge1' #circulargauge='' width= '400px' height= '400px'>\n                        <e-axes>\n                            <e-axis minimum=0 maximum=100 startAngle=0 endAngle=360 [majorTicks]='majorTicks' [labelStyle]='labelStyle'\n                                [lineStyle]='lineStyle' [minorTicks]='minorTicks' [annotations]='annotaions' [ranges] ='ranges' [pointers] ='pointers'>\n                            </e-axis>\n                        </e-axes>\n                    </ejs-circulargauge>\n                </div>\n            </div>\n            <div align=\"center\" class=\"col-lg-3 col-md-3\" style=\"margin-left: -9%\">\n                <div class=\"panel\" align=\"center\" >\n                    <div class=\"subgauge\" style=\"float: left;margin-top: 3%\">\n                        <ejs-circulargauge (load)='load1($event)'  style='display:block;' id='gauge2' #circulargauge='' width= '65px' height= '65px'>\n                            <e-axes>\n                                <e-axis minimum=0 maximum=100 startAngle=0 endAngle=360 [majorTicks]='majorTicks' [labelStyle]='labelStyle'\n                                    [lineStyle]='lineStyle' [minorTicks]='minorTicks' [annotations]='annotaions1' [ranges] ='ranges1' [pointers] ='pointers1'>\n                                </e-axis>\n                            </e-axes>\n                        </ejs-circulargauge>\n                    </div>                    \n                    <div class=\"content\">\n                        <span class=\"firstcontent\" style=\"font-size: 18px;\">MOVE</span>\n                        <span class=\"firstcontent\" style=\"font-size: 18px;color: #f4104d\">65%</span><br/>\n                        <span class=\"secondcontent\" style=\"color: #f4104d; font-size: 19px\">338/520 CAL</span>\n                    </div>\n                </div>\n                <div class=\"panel\" align=\"center\" >\n                    <div class=\"subgauge\" style=\"float: left;margin-top: 3%\">\n                        <ejs-circulargauge (load)='load2($event)'  style='display:block;' id='gauge3' #circulargauge='' width= '65px' height= '65px'>\n                            <e-axes>\n                                <e-axis minimum=0 maximum=100 startAngle=0 endAngle=360 [majorTicks]='majorTicks' [labelStyle]='labelStyle'\n                                    [lineStyle]='lineStyle' [minorTicks]='minorTicks' [annotations]='annotaions2' [ranges] ='ranges2' [pointers] ='pointers2'>\n                                </e-axis>\n                            </e-axes>\n                        </ejs-circulargauge>\n                    </div>\n                    <div class=\"content\">\n                        <span class=\"firstcontent\" style=\"font-size: 18px;\">EXERCISE</span>\n                        <span class=\"firstcontent\" style=\"font-size: 18px;color: #a6ff00\">43%</span><br/>\n                        <span class=\"secondcontent\" style=\"color: #a6ff00; font-size: 19px\">13/30 MIN</span>\n                    </div>\n                </div>\n                <div class=\"panel\" align=\"center\" >\n                    <div class=\"subgauge\"  style=\"float: left;margin-top: 3%\">\n                        <ejs-circulargauge (load)='load3($event)'  style='display:block;' id='gauge4' #circulargauge='' width= '65px' height= '65px'>\n                            <e-axes>\n                                <e-axis minimum=0 maximum=100 startAngle=0 endAngle=360 [majorTicks]='majorTicks' [labelStyle]='labelStyle'\n                                    [lineStyle]='lineStyle' [minorTicks]='minorTicks' [annotations]='annotaions3' [ranges] ='ranges3' [pointers] ='pointers3'>\n                                </e-axis>\n                            </e-axes>\n                        </ejs-circulargauge>\n                    </div>\n                    <div class=\"content\">\n                        <span class=\"firstcontent\" style=\"font-size: 18px;\">STAND</span>\n                        <span class=\"firstcontent\" style=\"font-size: 18px;color: #29a5a2\">58%</span><br/>\n                        <span class=\"secondcontent\" style=\"color: #29a5a2; font-size: 19px\">7/12 HR</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- custom code start -->\n<style>\n    .panel {\n        width: 105% !important;\n        height: 80px !important;\n        margin-left: 5% !important;\n        margin-top: 15% !important;\n        border-color: lightgray;\n        float: left;\n        background-color: transparent;\n    }\n\n    .content {\n        float: left !important;\n        margin-left: 62px !important;\n        margin-top: 6% !important;\n        text-align: left !important;\n        position: absolute;\n    }\n\n    @media screen and (max-width: 1160px) {\n        .panel {\n            width: 115% !important;\n        }\n\n        .firstcontent {\n            font-size: 13px !important;\n        }\n\n        .secondcontent {\n            font-size: 15px !important;\n        }\n    }\n\n    @media screen and (max-width: 990px) {\n        .panel {\n            width: 50% !important;\n            height: 80px !important;\n            margin-left: 27% !important;\n            margin-top: 0% !important;\n        }\n\n        .subgauge {\n            margin-left: 8% !important;\n            margin-top: 1% !important;\n        }\n\n        .content {\n            margin-left: 18% !important;\n            margin-top: 2% !important;\n        }\n\n        .firstcontent {\n            font-size: 16px !important;\n        }\n\n        .secondcontent {\n            font-size: 18px !important;\n        }\n    }    \n\n    @media screen and (max-width: 410px) {\n        #column1 {\n            margin-left: -9% !important;\n        }\n\n        .subgauge {\n            margin-left: 3% !important;\n        }\n\n        .panel {\n            width: 52% !important;\n        }\n\n        .content {\n            margin-top: 3% !important;\n        }\n    }\n</style>\n<!-- custom code end -->","app.component.css":"","app.component.ts":"// custom code start\n//tslint:disable\n// custom code end\nimport { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { CircularGaugeComponent, ILoadedEventArgs, GaugeTheme } from '@syncfusion/ej2-angular-circulargauge';\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class AppComponent {\n\n    @ViewChild('circulargauge')\n    public circulargauge: CircularGaugeComponent;\n\n    public lineStyle: Object = {\n        width: 0\n    };\n    //Initializing LabelStyle\n    public labelStyle: Object = {\n        position: 'Inside', useRangeColor: true,\n        font: { size: '0px', color: 'white', fontFamily: 'Roboto', fontStyle: 'Regular' }\n    };\n    // custom code start\n    public load(args: ILoadedEventArgs): void {\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.gauge.theme = <GaugeTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));\n    }\n    public load1(args: ILoadedEventArgs): void {\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.gauge.theme = <GaugeTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));\n        if (selectedTheme === 'highcontrast') {\n            args.gauge.axes[0].annotations[0].content = '<div id=\"annotation5\"><img style=\"width:17px;height:17px;\" src=\"./assets/circular-gauge/images/image4.svg\" /></div>';\n        }\n    }\n    public load2(args: ILoadedEventArgs): void {\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.gauge.theme = <GaugeTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));\n        if (selectedTheme === 'highcontrast') {\n            args.gauge.axes[0].annotations[0].content = '<div id=\"annotation5\"><img style=\"width:15px;height:15px;\" src=\"./assets/circular-gauge/images/image5.svg\" /></div>';\n        }\n    }\n    public load3(args: ILoadedEventArgs): void {\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.gauge.theme = <GaugeTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));\n        if (selectedTheme === 'highcontrast') {\n            args.gauge.axes[0].annotations[0].content = '<div id=\"annotation5\"><img style=\"width:17px;height:17px;\" src=\"./assets/circular-gauge/images/image6.svg\" /></div>';\n        }\n    }\n    // custom code end\n    public ranges: Object[] = [\n        {\n            start: 0, end: 100,\n            radius: '90%',\n            startWidth: 40, endWidth: 40,\n            color: '#E30219', opacity: 0.2\n        },\n        {\n            start: 0, end: 100,\n            radius: '68%',\n            startWidth: 40, endWidth: 40,\n            color: '#3EDE00', opacity: 0.2\n        },\n        {\n            start: 0, end: 100,\n            radius: '46%',\n            startWidth: 40, endWidth: 40,\n            color: '#18F8F6', opacity: 0.2\n        }\n    ];\n    public pointers: Object[] = [{\n        roundedCornerRadius: 25,\n        value: 65,\n        type: 'RangeBar',\n        radius: '90%',\n        color: '#E2011A',\n        animation: { enable: true },\n        pointerWidth: 40\n    },\n    {\n        roundedCornerRadius: 25,\n        value: 43,\n        type: 'RangeBar',\n        radius: '68%',\n        color: '#3FE000',\n        animation: { enable: true },\n        pointerWidth: 40\n    },\n    {\n        roundedCornerRadius: 25,\n        value: 58,\n        type: 'RangeBar',\n        radius: '46%',\n        color: '#00C9E6',\n        animation: { enable: true },\n        pointerWidth: 40\n    }];\n    public majorTicks: Object = {\n        height: 0, \n    };\n    public minorTicks: Object = {\n        height: 0\n    };\n    public annotaions: Object = [{\n          angle: 8, radius: '80%', zIndex: '1',\n        content: '<div id=\"annotation1\"><img style=\"width:22px;height:22px;\" src=\"./assets/circular-gauge/images/image1.svg\" /></div>'\n    },{\n        angle: 11, radius: '58%', zIndex: '1',\n        content: '<div id=\"annotation2\"><img style=\"width:20px;height:20px;\" src=\"./assets/circular-gauge/images/image2.svg\" /></div>'\n    },{\n        angle: 16, radius: '36%', zIndex: '1',\n        content: '<div id=\"annotation3\"><img style=\"width:22px;height:22px;\" src=\"./assets/circular-gauge/images/image3.svg\" /></div>'\n    }];\n    public ranges1: Object[] = [\n        {\n            start: 0, end: 100,\n            radius: '100%',\n            startWidth: 8, endWidth: 8,\n            color: '#E30219', opacity: 0.2\n        }];\n        public pointers1: Object[] = [{\n            roundedCornerRadius: 5,\n            value: 65,\n            type: 'RangeBar',\n            radius: '100%',\n            color: '#E2011A',\n            animation: { enable: true },\n            pointerWidth: 8\n        }];\n        public annotaions1: Object = [{\n            angle: 0, radius: '0%', zIndex: '1',\n            content: '<div id=\"annotation4\"><img style=\"width:17px;height:17px;\" src=\"./assets/circular-gauge/images/image1.svg\" /></div>'\n        }];\n        public ranges2: Object[] = [\n            {\n                start: 0, end: 100,\n                radius: '100%',\n                startWidth: 8, endWidth: 8,\n                color: '#3EDE00', opacity: 0.2\n            }];\n            public pointers2: Object[] = [{\n                roundedCornerRadius: 5,\n                value: 43,\n                type: 'RangeBar',\n                radius: '100%',\n                color: '#3FE000',\n                animation: { enable: true },\n                pointerWidth: 8\n            }];\n            public annotaions2: Object = [{\n                angle: 0, radius: '0%', zIndex: '1',\n                content: '<div id=\"annotation6\"><img style=\"width:15px;height:15px;\" src=\"./assets/circular-gauge/images/image2.svg\" /></div>'\n            }];\n            public ranges3: Object[] = [\n                {\n                    start: 0, end: 100,\n                    radius: '100%',\n                    startWidth: 8, endWidth: 8,\n                    color: '#18F8F6', opacity: 0.2\n                }];\n                public pointers3: Object[] = [{\n                    roundedCornerRadius: 5,\n                    value: 58,\n                    type: 'RangeBar',\n                    radius: '100%',\n                    color: '#00C9E6',\n                    animation: { enable: true },\n                    pointerWidth: 8\n                }];\n                public annotaions3: Object = [{\n                    angle: 0, radius: '0%', zIndex: '1',\n                    content: '<div id=\"annotation6\"><img style=\"width:20px;height:20px;\" src=\"./assets/circular-gauge/images/image3.svg\" /></div>'\n                }];\n        \n    \n    constructor() {\n        //\n    };\n}"}