{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, OnInit, ViewChild } from '@angular/core';\nimport { PdfViewerComponent, LinkAnnotationService, BookmarkViewService, MagnificationService, ThumbnailViewService, ToolbarService, NavigationService, TextSearchService, TextSelectionService, PrintService, AnnotationService, FormFieldsService, FormDesignerService, PageOrganizerService, PdfViewerModule, TextFieldSettings } from '@syncfusion/ej2-angular-pdfviewer';\nimport { ButtonModel} from '@syncfusion/ej2-angular-buttons';\n\n\nimport { DropDownListComponent, DropDownListModule } from '@syncfusion/ej2-angular-dropdowns';\nimport { ButtonModule } from '@syncfusion/ej2-angular-buttons';\nimport { ToolbarModule, SidebarModule } from '@syncfusion/ej2-angular-navigations';\nimport { CommonModule } from '@angular/common';\nimport { DialogComponent, AnimationSettingsModel, DialogModule } from '@syncfusion/ej2-angular-popups';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  encapsulation: ViewEncapsulation.None,\n  providers: [LinkAnnotationService, BookmarkViewService, MagnificationService, ThumbnailViewService, ToolbarService, NavigationService,\n    TextSearchService, TextSelectionService, PrintService, AnnotationService, FormFieldsService, FormDesignerService, PageOrganizerService],\n  styleUrls: ['app.component.css'],\n  standalone: true,\n  imports: [\n    \n    PdfViewerModule,\n    \n    DropDownListModule,\n    DialogModule,\n    ButtonModule, ToolbarModule,\n    CommonModule, SidebarModule\n  ],\n})\n\nexport class AppComponent {\n  @ViewChild('pdfviewer') public pdfviewerControl: PdfViewerComponent;\n  @ViewChild('userMenu') public userMenu: DropDownListComponent;\n  @ViewChild('modalDialog', { static: false }) public modalDialog: DialogComponent;\n\n  public fileName: string = \"eSign_designMode.pdf\";\n  public document: string = 'https://cdn.syncfusion.com/content/pdf/eSign_filling.pdf';\n  public resource: string = \"https://cdn.syncfusion.com/ej2/27.2.2/dist/ej2-pdfviewer-lib\";\n  public zoomMode = \"FitToPage\";\n  public currentUser: string = 'andrew@mycompany.com';\n  public currentUserBorderColor: string = 'red';\n  public andrewBackground: string = '#ffefef';\n  public anneBackground: string = '#eff7ef';\n  public finishedBackground: string = '#daeaf7ff';\n  public fields: Object = { text: 'Mail', value: 'Id', id: 'fieldIds' };\n  public height: string = '220px';\n  public pdfViewer = document.getElementById(\"pdfViewer\") as HTMLElement;\n  public status: boolean = false;\n  public preventChange: boolean = false;\n  public header: string = 'Dialog Header';\n  public width: string = '350px';\n  public buttons: { [key: string]: ButtonModel }[] = [{ click: this.dlgButtonClick.bind(this), buttonModel: { content: 'OK', isPrimary: true } }];\n  public animationSettings: AnimationSettingsModel = { effect: 'None' };\n  public content: string = '';\n  public userDetails: { [key: string]: Object }[] = [\n    { Name: 'Andrew Fuller', Eimg: 'profile2', Id: \"ff0000\", Mail: \"andrew@mycompany.com\", fieldIds: [] },\n    { Name: 'Anne Dodsworth', Eimg: 'profile1', Id: \"00ff00\", Mail: \"anne@mycompany.com\", fieldIds: [] }\n  ];\n\n  constructor() { }\n  ngOnInit(): void {\n\n  }\n\n  public userChange = (args: any) => {\n    this.currentUser = args.itemData.Mail;\n    if (args.itemData.Mail === 'andrew@mycompany.com') {\n      this.currentUserBorderColor = 'red';\n    } else {\n      this.currentUserBorderColor = 'green';\n    }\n    this.updateUserFormField();\n    if (this.preventChange) {\n      this.currentUserBorderColor = 'red';\n      args.cancel = true;\n    }\n  }\n\n  public updateUserFormField = () => {\n    const otherFormFieldDetails = [];\n    const currentFormFieldDetails = [];\n    \n    for (const formField of this.pdfviewerControl.formFieldCollections) {\n        if ((formField as any).customData.author === 'anne') {\n            otherFormFieldDetails.push(formField);\n        } else if ((formField as any).customData.author === 'andrew') {\n            currentFormFieldDetails.push(formField);\n        }\n    }\n\n    if (this.currentUser === 'andrew@mycompany.com') {\n      otherFormFieldDetails.forEach(field => {\n        if (field.value !== '') {\n          const mainFieldUpdateData = {\n              backgroundColor: this.finishedBackground,\n              isReadOnly: true\n          };\n      \n          this.pdfviewerControl.formDesigner.updateFormField(field, mainFieldUpdateData as any);\n      \n          currentFormFieldDetails.forEach(currentField => {\n              const currentFieldUpdateData = {\n                  backgroundColor: this.andrewBackground,\n                  isReadOnly: true\n              };\n      \n              this.pdfviewerControl.formDesigner.updateFormField(currentField, currentFieldUpdateData as any);\n          });\n        }else{\n          currentFormFieldDetails.forEach(currentField => {\n            const currentFieldUpdateData = {\n                backgroundColor: this.andrewBackground\n            };\n    \n            this.pdfviewerControl.formDesigner.updateFormField(currentField, currentFieldUpdateData as any);\n          });\n        }\n       const otherUserField = document.getElementById(field.id + '_content_html_element');\n       if (otherUserField) {\n          const currentFormField = this.pdfviewerControl.formFieldCollections.find(formField => formField.id === field.id);\n          if (currentFormField.type !== 'DropDown' && otherUserField) {\n              if (!currentFormField.value) {\n                this.pdfviewerControl.formDesignerModule.updateFormField(currentFormField, { visibility:'hidden'} as any);\n              }\n          } else {\n              if (currentFormField.value.length !== 0 && otherUserField) {\n                this.pdfviewerControl.formDesignerModule.updateFormField(currentFormField, { visibility:'hidden'} as any);\n              }\n          }\n       }\n      });\n    } else {\n      this.validation(currentFormFieldDetails);\n      if (!this.status) {\n        currentFormFieldDetails.forEach(field => {\n          const currentFieldUpdateData = {\n              backgroundColor: this.finishedBackground,\n              isReadOnly: true\n          };\n          this.pdfviewerControl.formDesigner.updateFormField(field, currentFieldUpdateData as any);\n      \n          otherFormFieldDetails.forEach(otherField => {\n              const otherFieldUpdateData = {\n                  backgroundColor: this.anneBackground,                  \n                  isReadOnly: false\n              };\n\n              this.pdfviewerControl.formDesigner.updateFormField(otherField, otherFieldUpdateData as any);\n          });\n        });\n        otherFormFieldDetails.forEach(field => {\n          this.pdfviewerControl.formDesignerModule.updateFormField(field, { visibility:'visible'} as any);\n      });      \n      }\n    }\n  }\n\n  public validation(forms: any[]): void {\n    let errorMessage = \"Required Field(s): \";\n    let flag = false;\n    let radioGroupName = \"\";\n\n    for (let i = 0; i < forms.length; i++) {\n      let text = \"\";\n\n      if (forms[i].isRequired) {\n        switch (forms[i].type.toString()) {\n          case \"Checkbox\":\n            if (!forms[i].isChecked) {\n              text = forms[i].name;\n            }\n            break;\n\n          case \"RadioButton\":\n            if (!flag) {\n              radioGroupName = forms[i].name;\n              if (forms[i].isSelected) {\n                flag = true;\n              }\n            }\n            break;\n\n          case \"DropdownList\":\n            if (forms[i].value.length === 0) {\n              text = forms[i].name;\n            }\n            break;\n\n          default:\n            if (!forms[i].value || (typeof forms[i].newValue === 'string' && forms[i].newValue === \"\")) {\n              text = forms[i].name;\n            }\n            break;\n        }\n\n        if (text) {\n          errorMessage = errorMessage === \"Required Field(s): \" ? errorMessage + text : errorMessage + \", \" + text;\n        }\n      }\n    }\n\n    if (!flag && radioGroupName) {\n      errorMessage = errorMessage === \"Required Field(s): \" ? errorMessage + radioGroupName : errorMessage + \", \" + radioGroupName;\n    }\n\n    if (errorMessage !== \"Required Field(s): \") {\n      this.status = true;\n      this.modalDialog.content = errorMessage;\n      this.modalDialog.show();\n      this.preventChange = true;\n    } else {\n      this.status = false;\n      this.preventChange = false;\n    }\n  }\n\n\n  public fieldChange = (args: any) => {\n    let errorMessage = \"Required Field(s): \";\n    const forms = this.pdfviewerControl.formFieldCollections;\n    let flag = false;\n    let radioGroupName = \"\";\n    let allFieldsValid = true;\n\n    forms.forEach(form => {\n        let text = \"\";\n\n        if (form.isRequired) {\n            if (form.type.toString() === \"Checkbox\" && !form.isChecked) {\n                text = form.name;\n                allFieldsValid = false;\n            } else if (form.type === \"RadioButton\" && !flag) {\n                radioGroupName = form.name;\n                if (form.isSelected) {\n                    flag = true;\n                }\n            } else if (form.type.toString() !== \"Checkbox\" && form.type !== \"RadioButton\" && (!form.value || (typeof args.newValue === 'string' && args.newValue === \"\"))) {\n                text = form.name;\n                allFieldsValid = false;\n            } else if (form.type.toString() === \"DropdownList\" && form.value.length === 0) {\n                text = form.name;\n                allFieldsValid = false;\n            }\n\n            if (text) {\n                errorMessage = errorMessage === \"Required Field(s): \" ? errorMessage + text : errorMessage + \", \" + text;\n            }\n        }\n    });\n\n    if (!flag && radioGroupName) {\n        errorMessage = errorMessage === \"Required Field(s): \" ? errorMessage + radioGroupName : errorMessage + \", \" + radioGroupName;\n        allFieldsValid = false;\n    }\n\n    if (allFieldsValid) {\n        (document.getElementById('e-pv-e-sign-finishSigning') as any).disabled = false;\n    } else {\n        (document.getElementById('e-pv-e-sign-finishSigning') as any).disabled = true;\n    }\n  }\n\n  public dlgButtonClick(): void {\n    this.status = false;\n    if (this.modalDialog) {\n      this.modalDialog.hide();\n    }\n  }\n\n  public documentLoad = (args: any) => {\n    this.pdfviewerControl.designerMode = false;\n    this.updateUserFormField();\n  }\n\n  public finishSigning(args: any): void {\n    for (const formField of this.pdfviewerControl.formFieldCollections) {\n      this.pdfviewerControl?.formDesignerModule.updateFormField(formField, { backgroundColor: this.finishedBackground } as TextFieldSettings);\n    }\n    const url: string = \"https://ej2services.syncfusion.com/angular/development/api/pdfviewer/FlattenDownload\";\n    this.pdfviewerControl.saveAsBlob().then((blob) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(blob);\n      reader.onload = (e: ProgressEvent<FileReader>) => {\n        const base64String = e.target?.result;\n        const xhr = new XMLHttpRequest();\n        xhr.open('POST', url, true);\n        xhr.setRequestHeader('Content-type', 'application/json; charset=UTF-8');\n        const requestData = JSON.stringify({ base64String });\n        xhr.onload = () => {\n          if (xhr.status === 200) {\n            const responseBase64 = xhr.responseText.split('base64,')[1];\n            if (responseBase64) {\n              const blob = this.createBlobFromBase64(responseBase64, 'application/pdf');\n              const blobUrl = URL.createObjectURL(blob);\n              this.downloadDocument(blobUrl);\n              this.pdfviewerControl.load(xhr.responseText, null);\n              (document.getElementById('e-pv-e-sign-finishSigning') as any).disabled = true;\n              this.userMenu.enabled = false;\n            } else {\n              console.error('Invalid base64 response.');\n            }\n          } else {\n            console.error('Download failed:', xhr.statusText);\n          }\n        };\n        xhr.onerror = () => {\n          console.error('An error occurred during the download:', xhr.statusText);\n        };\n        xhr.send(requestData);\n      };\n    }).catch((error) => {\n      console.error('Error saving Blob:', error);\n    });\n  }\n\n  public createBlobFromBase64(base64String: string, contentType: string): Blob {\n    const sliceSize = 512;\n    const byteCharacters = atob(base64String);\n    const byteArrays: Uint8Array[] = [];\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      const slice = byteCharacters.slice(offset, offset + sliceSize);\n      const byteNumbers = Array.from(slice, char => char.charCodeAt(0));\n      byteArrays.push(new Uint8Array(byteNumbers));\n    }\n    return new Blob(byteArrays, { type: contentType });\n  }\n\n  public downloadDocument(blobUrl: string): void {\n    const anchorElement = document.createElement('a');\n    anchorElement.href = blobUrl;\n    anchorElement.target = '_parent';\n    const downloadFileName = this.pdfviewerControl.fileName || 'downloadedFile.pdf';\n    anchorElement.download = downloadFileName.endsWith('.pdf') ? downloadFileName : `${downloadFileName}.pdf`;\n    document.body.appendChild(anchorElement);\n    anchorElement.click();\n    document.body.removeChild(anchorElement);\n    URL.revokeObjectURL(blobUrl);\n  }\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div id=\"e-pv-e-sign-control\" class=\"e-pv-e-sign-control control-section\">\n    <ejs-toolbar class=\"e-pv-e-sign-toolbar-section\">\n        <e-items>\n            <e-item tooltipText=\"User-dropdown\" align=\"Left\">\n                <ng-template #template>\n                    <ejs-dropdownlist #userMenu id=\"e-pv-e-sign-employees\" [dataSource]=\"userDetails\" index = 0\n                        [fields]=\"fields\" (select)=\"userChange($event)\" [popupHeight]=\"height\">\n                        <ng-template #itemTemplate let-data>\n                            <div style=\"display: flex; height: 50px; width: 200px;\">\n                                <img class=\"e-pv-e-sign-empImage\" height=\"30px\" width=\"30px\"\n                                    style=\"margin: 10px 6px; border-radius: 50%\"\n                                    [ngStyle]=\"{'border': '1px solid ' + (data.Mail === 'andrew@mycompany.com' ? 'red' : 'green')}\"\n                                    src=\"https://ej2.syncfusion.com/angular/demos/assets/pdf-viewer/employees/{{data.Eimg}}.png\"\n                                    alt=\"{{data.Eimg}}\" />\n                                <div>\n                                    <div class=\"e-pv-e-sign-ename\">{{data.Name}}</div>\n                                    <div class=\"e-pv-e-sign-ejob\">{{data.Mail}}</div>\n                                </div>\n                            </div>\n                        </ng-template>\n                        <ng-template #valueTemplate let-data>\n                            <div style=\"display: flex;\">\n                                <img id=\"user-img\" class=\"e-pv-e-sign-valueTemp\" style=\"margin: 3px 6px; border-radius: 50%\"\n                                    [ngStyle]=\"{'border': '1px solid ' + currentUserBorderColor}\"\n                                    src=\"https://ej2.syncfusion.com/angular/demos/assets/pdf-viewer/employees/{{data.Eimg}}.png\"\n                                    height=\"30px\" width=\"30px\" alt=\"{{data.Eimg}}\" />\n                                <div>\n                                    <div class=\"e-pv-e-sign-name\" style=\"margin-top: 3px;\">\n                                        {{data.Name}}\n                                    </div>\n                                    <div class=\"e-pv-e-sign-job\">{{data.Mail}}</div>\n                                </div>\n                            </div>\n                        </ng-template>\n                    </ejs-dropdownlist>\n                </ng-template>\n            </e-item>\n            <e-item tooltipText=\"Finish Signing\" showTextOn=\"Overflow\" align=\"Right\">\n                <ng-template #template>\n                    <button ejs-button #btnElement cssClass=\"e-outline\" id=\"e-pv-e-sign-finishSigning\"\n                        disabled=\"true\" (click)=\"finishSigning($event)\">\n                        Finish Signing\n                    </button>\n                </ng-template>\n            </e-item>\n        </e-items>\n    </ejs-toolbar>\n    <ejs-pdfviewer #pdfviewer id=\"pdfViewer\" [enableNavigationToolbar]=\"false\" [enableToolbar]=\"false\" [enableAnnotationToolbar]=\"false\"\n        [documentPath]='document' [zoomMode] = \"zoomMode\" (documentLoad)=\"documentLoad($event)\"    \n        (formFieldPropertiesChange)=\"fieldChange($event)\" [resourceUrl]='resource' [downloadFileName]=\"fileName\"\n      style=\"height:640px;display:block\">\n    </ejs-pdfviewer>\n    <div id='dialog-target'>\n        <ejs-dialog id=\"modalDialog\" #modalDialog [minHeight]=\"'50px'\" [isModal]=\"true\"\n            [width]=\"width\" [buttons]=\"buttons\" [animationSettings]=\"animationSettings\"\n            [content]=\"content\" [visible]=\"status\">\n        </ejs-dialog>\n    </div>\n</div>\n\n\n<style>\n    #e-pv-e-sign-control {\n        font-family: Roboto;\n        font-size: 14px;\n        font-style: normal;\n        font-weight: 400;\n        letter-spacing: 0.24px;\n    }\n\n    .e-pv-e-sign-toolbar-section {\n        z-index: 1001;\n        width: 100% !important;\n        height: 48px !important;\n        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15), 0px 1px 2px 0px rgba(0, 0, 0, 0.30);\n    }\n\n    #e-pv-e-sign-finishSigning {\n        width: 115px !important;\n        height: 28px;\n        min-height: 0;\n        padding: 0;\n        font-size: 12px;\n        flex-shrink: 0;\n        border-radius: 16px;\n        border: 1px solid;\n    }\n\n    #e-pv-e-sign-employees {\n        width: 185px;\n        position: absolute;\n        left: 0px;\n    }\n\n    #e-pv-e-sign-employees .e-input-group {\n        border: none;\n    }\n\n    #e-pv-e-sign-employees .e-input-group:not(.e-float-icon-left):not(.e-float-input).e-input-focus::before,\n    #e-pv-e-sign-employees .e-input-group:not(.e-float-icon-left):not(.e-float-input).e-input-focus::after {\n        width: 0px;\n    }\n\n    .e-pv-e-sign-name,\n    .e-pv-e-sign-ename {\n        margin-top: 10px;\n        font-size: 14px;\n        font-family: Roboto;\n        font-style: normal;\n        font-weight: 400;\n        line-height: 18px;\n    }\n\n    .e-pv-e-sign-job,\n    .e-pv-e-sign-ejob {\n        font-size: 12px;\n        font-family: Roboto;\n        font-style: normal;\n        font-weight: 400;\n        line-height: 12px;\n        letter-spacing: 0.2px;\n    }\n\n    .e-pv-e-sign-ename,\n    .e-pv-e-sign-ejob {\n        position: relative;\n        right: 15px;\n    }\n\n    #e-pv-e-sign-employees .e-input-group .e-control-wrapper .e-ddl e-lib .-keyboard .e-valid-input {\n        border: none !important;\n    }\n\n    #e-pv-e-sign-employees_popup {\n        width: 200px !important;\n        margin-top: 8px;\n    }\n</style>","app.component.css":"/* custom code start*/\n#magnificationToolbar {\n    background: transparent;\n    height: auto;\n    min-height: 56px;\n    width: 200px;\n    border: none;\n    position: absolute;\n    z-index: 1001;\n    bottom: 58px;\n    right: 16px;\n    transform: rotate(90deg);\n}\n\n@font-face {\n    font-family: \"e-icons-pv\";\n    font-style: normal;\n    font-weight: normal;\n    src: url(data:application/x-font-ttf;charset=utf-8;base64,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ZWd1bGFyY3VzdG9tLXRvb2xiYXJbMTkwOF1jdXN0b20tdG9vbGJhclsxOTA4XVZlcnNpb24gMS4wY3VzdG9tLXRvb2xiYXJbMTkwOF1Gb250IGdlbmVyYXRlZCB1c2luZyBTeW5jZnVzaW9uIE1ldHJvIFN0dWRpb3d3dy5zeW5jZnVzaW9uLmNvbQAgAGMAdQBzAHQAbwBtAC0AdABvAG8AbABiAGEAcgBbADEAOQAwADgAXQBSAGUAZwB1AGwAYQByAGMAdQBzAHQAbwBtAC0AdABvAG8AbABiAGEAcgBbADEAOQAwADgAXQBjAHUAcwB0AG8AbQAtAHQAbwBvAGwAYgBhAHIAWwAxADkAMAA4AF0AVgBlAHIAcwBpAG8AbgAgADEALgAwAGMAdQBzAHQAbwBtAC0AdABvAG8AbABiAGEAcgBbADEAOQAwADgAXQBGAG8AbgB0ACAAZwBlAG4AZQByAGEAdABlAGQAIAB1AHMAaQBuAGcAIABTAHkAbgBjAGYAdQBzAGkAbwBuACAATQBlAHQAcgBvACAAUwB0AHUAZABpAG8AdwB3AHcALgBzAHkAbgBjAGYAdQBzAGkAbwBuAC4AYwBvAG0AAAAAAgAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAQIBAwEEAQUBBgEHAQgBCQEKAQsBDAENAQ4BDwAIVG9wLWljb24LZG93bi1hcnJvdzIKUFZfWm9vbW91dAlQVl9ab29taW4LUFZfRG93bmxvYWQLUFZfQm9va21hcmsJUFZfU2VhcmNoCFBWX1ByaW50C1BWX1ByZXZpb3VzB1BWX05leHQIUFZfQ2xvc2UMUFZfRml0VG9QYWdlB1BWX09wZW4AAA==) format('truetype');\n}\n\n.e-pv-fit-page-icon::before {\n    content: '\\e91b';\n    font-family: \"e-icons-pv\";\n}\n\n#magnificationToolbar.e-toolbar .e-toolbar-items {\n    background: transparent;\n}\n\n#magnificationToolbar.e-toolbar .e-tbar-btn {\n    border-radius: 50%;\n    min-height: 30px;\n    min-width: 30px;\n    border: 1px solid #c8c8c8;\n    transform: rotate(90deg);\n}\n\n#topToolbar {\n    top: 0px;\n    z-index: 1001;\n}\n\n.e-tbar-section .e-sample-resize-container {\n    height: 46px;\n}\n\n.e-bookmark-popup {\n    height: 200px;\n    max-width: 250px;\n}\n\n.e-text-search-popup {\n    height: 104px;\n    max-width: 348px;\n}\n\n.e-custom-search-input {\n    width: 234px;\n}\n\n.e-text-search-popup .e-footer-content, .e-bookmark-popup .e-footer-content {\n    padding: 0;\n    height: 0;\n}\n\n.search-button, .search-button:disabled, .search-button:focus, .search-button:hover  {\n    background: transparent;\n    box-shadow: none;\n}\n\n#popup .e-dlg-content {\n    padding-left: 0;\n    padding-bottom: 0;\n}\n\n.e-pv-bookmarks {\n    min-width: 234px;\n}\n\n.e-pv-current-page-number {\n    width: 46px;\n    height: 28px;\n    text-align: center;\n}\n\n.material .e-pv-current-page-number {\n    border-width: 1px;\n}\n.e-pv-zoom-out-sample {    \n    transform: rotate(90deg);\n    padding-right: 2px;\n}\n.customtoolbar.e-toolbar {\n background-color: #3f51b5;\nwidth: 50px;\n}\n.customtoolbar.e-toolbar .e-toolbar-items{\n    background-color: #3f51b5;\n    height: 40px;  \n    display: flex;\n    flex-wrap: wrap;\n    \n}\n.e-pv-icon-search::before {\n    font-size: 12px;\n}\n.e-pv-search-input.e-input-group .e-input-search-group-icon.e-input-group-icon {\n    background: rgba(0,0,0,0);\n}\n\n/* custom code end*/\n\n/* style for slider button*/\n\n.flex-container {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n}\n\n.render-mode-info {\n    background: none;\n    border: none;\n    padding-left: 0px;\n}\n\n.render-mode-info .render-mode-info-icon {\n    height: 16px;\n    width: 16px;\n}\n\n.switchLabel {\n    font-family: \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", sans-serif;        \n    font-weight: 400;\n    line-height: 20px;\n    letter-spacing: 0.24px;\n    text-align: right;\n    font-size: 14px;\n    margin-bottom: 3px;\n}\n\n.render-mode-info .render-mode-info-icon::before {\n    line-height: normal;\n}\n\n.buttonSwitch {\n    Width: 40px;\n    Height: 24px;\n}\n\n.pdfviewer-property-section{\n    padding: 20px 15px;\n}\n\n.pdfviewer-contextmenu-checkbox-label{\n    padding: 10px;\n}\n\n.pdfviewer-control-section {\n    border-right: 1px solid #D7D7D7;\n}\n\n.pdfviewer-property-container{\n    padding-bottom: 30px;\n}\n\n.header-pdfviewer {\n    font-weight: 600;\n    padding: 20px 2px;\n}\n/*redaction style*/\n#e-pv-redact-sb-panel.control-section .e-appbar {\n    height: 36px;\n    font-size: 14px !important;\n}\n\n#e-pv-redact-sb-toolbar.e-toolbar .e-toolbar-item .e-tbar-btn {\n    flex-direction: column;\n}  \n#e-pv-redact-sb-toolbar.e-toolbar .e-toolbar-item .e-tbar-btn .e-icons.e-btn-icon \n{\n    font-size: 18px;\n}\n#e-pv-redact-sb-toolbar\n{\n    padding: 0 9px;\n}\n#e-pv-redact-sb-toolbar .e-toolbar-items\n{\n    gap: 5px;\n}\n\n#e-pv-redact-sb-toolbar .e-toolbar-item.e-separator\n{\n    height: 48px !important;\n}\n#e-pv-redact-sb-toolbar , .e-toolbar\n{\n    border-left-width: 1px !important;\n    border-right-width: 1px !important;\n}\n\n#e-pv-redact-sb-toolbar-secondary .e-toolbar\n{\n    border-top-width: 1px !important;\n    border: 0 solid var(--color-sf-border-light);\n    --color-sf-border-light: #e0e0e0;\n}\n\n#e-pv-redact-sb-currentPage\n{\n    font-size: 12px;\n}\n#e-pv-redact-sb-totalPage \n{\n    font-weight: 400;\n} \n\n.e-pv-redact-sb-black-out-container .black-out {\n    background-color: black;\n    width: 18px !important;\n    height: 18px !important;\n    border: 1px solid white;\n    border-radius: 3px;\n    margin:4px !important;\n    }\n.e-pv-redact-sb-white-out-container .white-out {\n    background-color: white;\n    width: 18px !important;\n    height: 18px !important;\n    border: 1px solid black;\n    border-radius: 3px;\n    margin:4px !important;\n}\n.e-bigger .e-pv-redact-sb-black-out-container .black-out,\n    .e-bigger .e-pv-redact-sb-white-out-container.white-out {\n        position: relative;\n        top: -4px;\n}\n.e-bigger .e-toolbar .e-toolbar-item.e-pv-redact-sb-black-out-container .e-tbar-btn.e-btn,\n    .e-bigger .e-toolbar .e-toolbar-item.e-pv-redact-sb-white-out-container .e-tbar-btn.e-btn {\n        padding-top : 5px !important;\n}\n.e-bigger .e-pv-redact-sb-black-out-container .e-tbar-btn .e-tbar-btn-text,\n     .e-bigger .e-pv-redact-sb-white-out-container .e-tbar-btn .e-tbar-btn-text{\n         padding: 2px 4px 7px 4px !important;\n}\n/*upload image*/\n#e-pv-redact-sb-dialog.e-dialog #e-pv-redact-sb-defaultfileupload.e-upload-files {\n        border: none !important;\n    }\n#e-pv-redact-sb-panel.control-section #file-uploader\n{\n    display: flex;\n    border: 1px dashed #c8c6c4;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 12px;\n    padding: 16px;\n    border-radius: 6px;\n}\n#e-pv-redact-sb-dialog.e-dialog .e-dlg-header-content\n{\n    border-bottom:1px solid #C4C7C5 !important;\n}\n\n#e-pv-redact-sb-dialog.e-dialog .e-footer-content\n{\n    border-top:1px solid #C4C7C5 !important;\n}\n\n#e-pv-redact-sb-dialog.e-dialog .e-dlg-header-content+.e-dlg-content\n{\n    padding: 20px !important;\n}\n\n#e-pv-redact-sb-panel.control-section .e-file-select-wrap\n{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n#e-pv-redact-sb-dialog.e-dialog .e-footer-content .e-btn\n{\n    background: rgba(0, 0, 0, 0);\n    border-color: rgba(0, 0, 0, 0);\n    box-shadow: none;\n    color: #242424;\n}\n\n#e-pv-redact-sb-drop-area-wrap .e-upload-file-list {\n    display: none;\n}\n#e-pv-redact-sb-defaultfileupload .e-upload-files {\n    border: none !important;\n}\n.e-pv-redact-sb-image-source {\n    width: 70px;\n    height: 70px;\n}\n.e-pv-redact-sb-image-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 4px;\n    gap: 5px;\n    border-radius: 4px;\n    position: relative;\n}\n\n.e-pv-redact-sb-image-list {\n    display: flex;\n    justify-content: center;\n    padding: 24px 15px;\n    gap: 35px;\n}\n\n.e-pv-redact-sb-image-container-selected {\n    border: 1px solid #757575 !important;\n}\n\n#e-pv-redact-sb-drop-area-wrap {\n    display: flex;\n    border: 1px dashed #c8c6c4;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 12px;\n    padding: 16px;\n    border-radius: 6px;\n}\n\n#e-pv-redact-sb-defaultfileupload .e-upload {\n    border: none;\n    margin-top: 10px;\n    width: 100%;\n    height:100%;\n}\n\n#e-pv-redact-sb-panel .e-dlg-container\n{\n    --color-sf-overlay-bg-color: none !important;\n}\n\n.e-icons.e-redaction:before\n{\n  content:\"\\e740\";\n}\n\n#e-pv-redact-sb-defaultfileupload .e-file-drop\n{\n    position: relative;\n    left: 9rem;\n    bottom: 17px;\n    color: #616161;\n}\n\n#e-pv-redact-sb-panel.control-section .e-dlg-overlay\n{\n    background: none;\n    backdrop-filter: blur(2px) !important;\n}\n\n#e-pv-redact-sb-dialog\n{\n    top: -152px;\n}\n\n#e-pv-redact-sb-panel .control-section\n{\n    min-height: 0px !important;\n}\n\n#e-pv-redact-sb-toolbar-secondary .e-input-group {\n    border: none !important;\n}\n\n#e-pv-redact-sb-toolbar #e-pv-redact-sb-toolbar_popup\n{\n    max-height: 500px !important;\n}\n\n#e-pv-redact-sb-toolbar #e-pv-redact-sb-toolbar_popup .e-toolbar-item\n{\n    min-height: 70px !important;\n}\n\n#e-pv-redact-sb-toolbar-secondary .e-toolbar-items .e-template \n{\n    min-width: 0px !important;\n}\n\n.pdfviewer-input-title\n{\n    margin-top: 12px;\n    font-size: 12px;\n}\n\n.pdfviewer-text-content\n{\n    font-size: 12px;\n}\n.pdfviewer-table-input-title\n{\n    margin-top: 6px;\n    font-size: 11px;\n}\n","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-pdfviewer\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-pdfviewer\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-angular-popups\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-grids\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-angular-notifications\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}