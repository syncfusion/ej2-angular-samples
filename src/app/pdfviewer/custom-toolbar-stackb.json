{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, OnInit, ViewChild, Inject } from '@angular/core';\nimport { PdfViewerComponent, LinkAnnotationService, BookmarkViewService, MagnificationService, ToolbarService, NavigationService, TextSelectionService, PrintService, DynamicStampItem, SignStampItem, StandardBusinessStampItem, PageChangeEventArgs, LoadEventArgs, AnnotationService, FormDesignerService, FormFieldsService, PageOrganizerService, TextSearchService, TextSelection, PdfViewerModule } from '@syncfusion/ej2-angular-pdfviewer';\nimport { ToolbarComponent, MenuItemModel, ToolbarModule, MenuModule } from '@syncfusion/ej2-angular-navigations';\nimport { DialogComponent } from '@syncfusion/ej2-angular-popups';\nimport { ClickEventArgs } from '@syncfusion/ej2-buttons';\nimport { SwitchComponent, SwitchModule } from '@syncfusion/ej2-angular-buttons';\n\n\n\n\n/**\n * Default PdfViewer Controller\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    providers: [LinkAnnotationService, BookmarkViewService, TextSearchService, TextSelectionService, MagnificationService, ToolbarService, NavigationService, TextSelectionService, PrintService, AnnotationService, FormFieldsService, FormDesignerService,PageOrganizerService],\n    styleUrls: ['app.component.css'],\n    standalone: true,\n    imports: [\n        SwitchModule,\n        ToolbarModule,\n        MenuModule,\n        PdfViewerModule,\n        \n        \n    ],\n})\n\nexport class AppComponent {\n    @ViewChild('pdfviewer')\n    public pdfviewerControl: PdfViewerComponent;\n    @ViewChild('customToolbar')\n    public customToolbar: ToolbarComponent;\n    @ViewChild('zoomToolbar')\n    public zoomToolbar: ToolbarComponent;\n    @ViewChild('switch')\n    public switch: SwitchComponent;\n\n    public document: string = 'https://cdn.syncfusion.com/content/pdf/hive-succinctly.pdf';\n    public resource: string ='https://cdn.syncfusion.com/ej2/23.2.6/dist/ej2-pdfviewer-lib';\n    public selectedFormField: any;\n    public matchCase = false;\n    public isInkEnabled = false;\n    public searchActive = false;\n\n    public menuItems: MenuItemModel[] = [{\n        iconCss: 'e-icons e-stamp',\n        items: [\n          {\n            text: 'Dynamic',\n            items: [\n              { text: 'Revised', id: 'Dynamic' },\n              { text: 'Reviewed', id: 'Dynamic' },\n              { text: 'Received', id: 'Dynamic' },\n              { text: 'Confidential', id: 'Dynamic' },\n              { text: 'Approved', id: 'Dynamic' },\n              { text: 'Not Approved', id: 'Dynamic' },\n            ],\n          },\n          {\n            text: 'Sign Here',\n            items: [\n              { text: 'Witness', id: 'Sign Here' },\n              { text: 'Initial Here', id: 'Sign Here' },\n              { text: 'Sign Here', id: 'Sign Here' },\n              { text: 'Accepted', id: 'Sign Here' },\n              { text: 'Rejected', id: 'Sign Here' }\n            ],\n          },\n          {\n            text: 'Standard Business',\n            items: [\n              { text: 'Approved', id: 'Standard Business' },\n              { text: 'Not Approved', id: 'Standard Business' },\n              { text: 'Draft', id: 'Standard Business' },\n              { text: 'Final', id: 'Standard Business' },\n              { text: 'Completed', id: 'Standard Business' },\n              { text: 'Confidential', id: 'Standard Business' },\n              { text: 'For Public Release', id: 'Standard Business' },\n              { text: 'Not For Public Release', id: 'Standard Business' },\n              { text: 'For Comment', id: 'Standard Business' },\n              { text: 'Void', id: 'Standard Business' },\n              { text: 'Preliminary Results', id: 'Standard Business' },\n              { text: 'Information Only', id: 'Standard Business' }\n            ],\n          },\n        ],\n      },\n      ];\n\n      public signatureMenuItems: MenuItemModel[] = [{\n        iconCss: 'e-icons e-signature',\n        items: [\n          {\n            text: 'ADD SIGNATURE'\n          },\n          {\n            text: 'ADD INITIAL'\n          }\n        ],\n      },\n      ];\n\n    constructor() {\n        \n    }\n    ngOnInit(): void {\n        // ngOnInit function\n        document.getElementById('fileUpload').addEventListener('change', this.readFile.bind(this));\n    }\n\n    public openDocument(e: ClickEventArgs): void {\n      this.disableInkAnnotation(); \n      document.getElementById('fileUpload').click();\n    }\n\n    public previousClicked(e: ClickEventArgs): void {\n      this.disableInkAnnotation(); \n        this.pdfviewerControl.navigation.goToPreviousPage();\n    }\n\n    public nextClicked(e: ClickEventArgs): void {\n      this.disableInkAnnotation(); \n        this.pdfviewerControl.navigation.goToNextPage();\n    }\n\n    public printClicked(e: ClickEventArgs): void {\n      this.disableInkAnnotation(); \n        this.pdfviewerControl.print.print();\n    }\n\n    public saveClicked(e: ClickEventArgs): void {\n      this.disableInkAnnotation(); \n        let fileName: string = (document.getElementById('fileUpload') as HTMLInputElement).value.split('\\\\').pop();\n        if (fileName !== '') {\n            this.pdfviewerControl.fileName = fileName;\n        }\n        this.pdfviewerControl.download();\n    }\n\n    public pageFitClicked(e: ClickEventArgs): void {\n        this.pdfviewerControl.magnification.fitToPage();\n        this.updateZoomButtons();\n        this.customToolbar.enableItems(document.getElementById('fitPage'), false);\n    }\n\n    public zoomInClicked(e: ClickEventArgs): void {\n        this.pdfviewerControl.magnification.zoomIn();\n        this.updateZoomButtons();\n    }\n\n    public zoomOutClicked(e: ClickEventArgs): void {\n        this.pdfviewerControl.magnification.zoomOut();\n        this.updateZoomButtons();\n    }\n\n    public pageChanged(e: PageChangeEventArgs): void {\n        (document.getElementById('currentPage') as HTMLInputElement).value = this.pdfviewerControl.currentPageNumber.toString();\n        this.updatePageNavigation();\n    }\n\n    fileNameTemplate(): any {\n      return `<div ><label id=\"documentFileName\" style=\"color: white;font-size: 20px;\"></label></div>`;\n    }\n    contentTemplate(): any {\n      return `<ejs-menu #menu  (select)=\"select($event)\" [items]='menuItems'></ejs-menu> `;\n    }\n  \n    public select(args: any): void {\n      this.disableInkAnnotation(); \n      const stampText = args.element.innerText;\n      const stampId = args.element.id;\n      const textSearchToolbarElement = document.getElementById('textSearchToolbar');\n      if (textSearchToolbarElement !== null && textSearchToolbarElement.style.display === 'block') {\n        textSearchToolbarElement.style.display = 'none';\n      }\n  \n      const formFieldToolbarElement = document.getElementById('formFieldToolbar');\n      if (formFieldToolbarElement !== null && formFieldToolbarElement.style.display === 'block') {\n        formFieldToolbarElement.style.display = 'none';\n        this.pdfviewerControl.designerMode = false;\n      }\n      if (stampId === 'Dynamic' && stampText != null) {\n        if(this.pdfviewerControl.tool == 'Ink'){\n          this.pdfviewerControl.annotation.setAnnotationMode('Ink');\n        }\n        if (stampText === 'Revised') {\n          this.pdfviewerControl.annotation.setAnnotationMode('Stamp', DynamicStampItem.Revised);\n        } else if (stampText === 'Reviewed') {\n          this.pdfviewerControl.annotation.setAnnotationMode('Stamp', DynamicStampItem.Reviewed);\n        } else if (stampText === 'Received') {\n          this.pdfviewerControl.annotation.setAnnotationMode('Stamp', DynamicStampItem.Received);\n        } else if (stampText === 'Confidential') {\n          this.pdfviewerControl.annotation.setAnnotationMode('Stamp', DynamicStampItem.Confidential);\n        } else if (stampText === 'Approved') {\n          this.pdfviewerControl.annotation.setAnnotationMode('Stamp', DynamicStampItem.Approved);\n        } else if (stampText === 'Not Approved') {\n          this.pdfviewerControl.annotation.setAnnotationMode('Stamp', DynamicStampItem.NotApproved);\n        }\n      }\n  \n      if (stampId === 'Sign Here' && stampText != null) {\n        if(this.pdfviewerControl.tool == 'Ink'){\n          this.pdfviewerControl.annotation.setAnnotationMode('Ink');\n        }\n        if (stampText === 'Witness') {\n          this.pdfviewerControl.annotation.setAnnotationMode('Stamp', null, SignStampItem.Witness);\n        } else if (stampText === 'Initial Here') {\n          this.pdfviewerControl.annotation.setAnnotationMode('Stamp', null, SignStampItem.InitialHere);\n        } else if (stampText === 'Sign Here') {\n          this.pdfviewerControl.annotation.setAnnotationMode('Stamp', null, SignStampItem.SignHere);\n        } else if (stampText === 'Accepted') {\n          this.pdfviewerControl.annotation.setAnnotationMode('Stamp', null, SignStampItem.Accepted);\n        } else if (stampText === 'Rejected') {\n          this.pdfviewerControl.annotation.setAnnotationMode('Stamp', null, SignStampItem.Rejected);\n        }\n      }\n  \n      if (stampId === 'Standard Business' && stampText != null) {\n        if(this.pdfviewerControl.tool == 'Ink'){\n          this.pdfviewerControl.annotation.setAnnotationMode('Ink');\n        }\n        if (stampText === 'Approved') {\n          this.pdfviewerControl.annotation.setAnnotationMode('Stamp', null, null, StandardBusinessStampItem.Approved);\n        } else if (stampText === 'Not Approved') {\n          this.pdfviewerControl.annotation.setAnnotationMode('Stamp', null, null, StandardBusinessStampItem.NotApproved);\n        } else if (stampText === 'Draft') {\n          this.pdfviewerControl.annotation.setAnnotationMode('Stamp', null, null, StandardBusinessStampItem.Draft);\n        } else if (stampText === 'Final') {\n          this.pdfviewerControl.annotation.setAnnotationMode('Stamp', null, null, StandardBusinessStampItem.Final);\n        } else if (stampText === 'Completed') {\n          this.pdfviewerControl.annotation.setAnnotationMode('Stamp', null, null, StandardBusinessStampItem.Completed);\n        } else if (stampText === 'Confidential') {\n          this.pdfviewerControl.annotation.setAnnotationMode('Stamp', null, null, StandardBusinessStampItem.Confidential);\n        } else if (stampText === 'For Public Release') {\n          this.pdfviewerControl.annotation.setAnnotationMode('Stamp', null, null, StandardBusinessStampItem.ForPublicRelease);\n        } else if (stampText === 'Not For Public Release') {\n          this.pdfviewerControl.annotation.setAnnotationMode('Stamp', null, null, StandardBusinessStampItem.NotForPublicRelease);\n        } else if (stampText === 'For Comment') {\n          this.pdfviewerControl.annotation.setAnnotationMode('Stamp', null, null, StandardBusinessStampItem.ForComment);\n        } else if (stampText === 'Void') {\n          this.pdfviewerControl.annotation.setAnnotationMode('Stamp', null, null, StandardBusinessStampItem.Void);\n        } else if (stampText === 'Preliminary Results') {\n          this.pdfviewerControl.annotation.setAnnotationMode('Stamp', null, null, StandardBusinessStampItem.PreliminaryResults);\n        } else if (stampText === 'Information Only') {\n          this.pdfviewerControl.annotation.setAnnotationMode('Stamp', null, null, StandardBusinessStampItem.InformationOnly);\n        }\n      }\n    }\n\n    public documentLoaded(e: LoadEventArgs): void {\n        document.addEventListener('click', this.checkSearchActive.bind(this));\n        document.getElementById('totalPage').textContent = 'of ' + this.pdfviewerControl.pageCount;\n        (document.getElementById('currentPage') as HTMLInputElement).value = this.pdfviewerControl.currentPageNumber.toString();\n        this.updatePageNavigation();\n    }\n\n    public textSelection(e: ClickEventArgs) {\n      this.disableInkAnnotation(); \n        if(this.pdfviewerControl.tool == 'Ink'){\n          this.pdfviewerControl.annotation.setAnnotationMode('Ink');\n        }\n        this.pdfviewerControl.interactionMode = 'TextSelection';\n        this.pdfviewerControl.enableTextSelection = true;\n    \n        const editAnnotationToolbarElement = document.getElementById('editAnnotationToolbar');\n        if (editAnnotationToolbarElement?.style.display === 'block') {\n          editAnnotationToolbarElement.style.display = 'none';\n        }\n    \n        const textSearchToolbarElement = document.getElementById('textSearchToolbar');\n        if (textSearchToolbarElement?.style.display === 'block') {\n          textSearchToolbarElement.style.display = 'none';\n        }\n    \n        const formFieldToolbarElement = document.getElementById('formFieldToolbar');\n        if (formFieldToolbarElement?.style.display === 'block') {\n          formFieldToolbarElement.style.display = 'none';\n          this.pdfviewerControl.designerMode = false;\n        }\n      }\n    \n      public panMode(e: ClickEventArgs) {\n        this.disableInkAnnotation(); \n        if(this.pdfviewerControl.tool == 'Ink'){\n          this.pdfviewerControl.annotation.setAnnotationMode('Ink');\n        }\n        this.pdfviewerControl.interactionMode = 'Pan';\n        \n    \n        const editAnnotationToolbarElement = document.getElementById('editAnnotationToolbar');\n        if (editAnnotationToolbarElement?.style.display === 'block') {\n          editAnnotationToolbarElement.style.display = 'none';\n        }\n    \n        const textSearchToolbarElement = document.getElementById('textSearchToolbar');\n        if (textSearchToolbarElement?.style.display === 'block') {\n          textSearchToolbarElement.style.display = 'none';\n        }\n    \n        const formFieldToolbarElement = document.getElementById('formFieldToolbar');\n        if (formFieldToolbarElement?.style.display === 'block') {\n          formFieldToolbarElement.style.display = 'none';\n          this.pdfviewerControl.designerMode = false;\n        }\n      }\n      public openEditAnnotation(e: ClickEventArgs): void {\n        this.disableInkAnnotation(); \n        const textSearchToolbarElement = document.getElementById('textSearchToolbar');\n        if (textSearchToolbarElement !== null && textSearchToolbarElement.style.display === 'block') {\n          textSearchToolbarElement.style.display = 'none';\n        }\n    \n        const formFieldToolbarElement = document.getElementById('formFieldToolbar');\n        if (formFieldToolbarElement !== null && formFieldToolbarElement.style.display === 'block') {\n          formFieldToolbarElement.style.display = 'none';\n          this.pdfviewerControl.designerMode = false;\n        }\n        const editAnnotationToolbarElement = document.getElementById('editAnnotationToolbar');\n        if (editAnnotationToolbarElement !== null) {\n          if (editAnnotationToolbarElement.style.display === 'block') {\n            editAnnotationToolbarElement.style.display = 'none';\n          } else {\n            editAnnotationToolbarElement.style.display = 'block';\n          }\n        }\n    \n      }\n      public highlight(e: ClickEventArgs) {\n        this.disableInkAnnotation(); \n        if(this.pdfviewerControl.tool == 'Ink'){\n          this.pdfviewerControl.annotation.setAnnotationMode('Ink');\n        }\n        this.pdfviewerControl.annotation.setAnnotationMode('Highlight');\n      }\n    \n      public underLine(e: ClickEventArgs) {\n        this.disableInkAnnotation(); \n        if(this.pdfviewerControl.tool == 'Ink'){\n          this.pdfviewerControl.annotation.setAnnotationMode('Ink');\n        }\n        this.pdfviewerControl.annotation.setAnnotationMode('Underline');\n      }\n    \n      public strikeThrough(e: ClickEventArgs) {\n        this.disableInkAnnotation(); \n        if(this.pdfviewerControl.tool == 'Ink'){\n          this.pdfviewerControl.annotation.setAnnotationMode('Ink');\n        }\n        this.pdfviewerControl.annotation.setAnnotationMode('Strikethrough');\n      }\n    \n      public addLine(e: ClickEventArgs) {\n        this.disableInkAnnotation(); \n        if(this.pdfviewerControl.tool == 'Ink'){\n          this.pdfviewerControl.annotation.setAnnotationMode('Ink');\n        }\n        this.pdfviewerControl.annotation.setAnnotationMode('Line');\n      }\n    \n      public addArrow(e: ClickEventArgs) {\n        this.disableInkAnnotation(); \n        if(this.pdfviewerControl.tool == 'Ink'){\n          this.pdfviewerControl.annotation.setAnnotationMode('Ink');\n        }\n        this.pdfviewerControl.annotation.setAnnotationMode('Arrow')\n      }\n    \n      public addRectangle(e: ClickEventArgs) {\n        this.disableInkAnnotation(); \n        if(this.pdfviewerControl.tool == 'Ink'){\n          this.pdfviewerControl.annotation.setAnnotationMode('Ink');\n        }\n        this.pdfviewerControl.annotation.setAnnotationMode('Rectangle');\n      }\n    \n      public addCircle(e: ClickEventArgs) {\n        this.disableInkAnnotation(); \n        if(this.pdfviewerControl.tool == 'Ink'){\n          this.pdfviewerControl.annotation.setAnnotationMode('Ink');\n        }\n        this.pdfviewerControl.annotation.setAnnotationMode('Circle');\n      }\n    \n      public addPoligon(e: ClickEventArgs) {\n        this.disableInkAnnotation(); \n        if(this.pdfviewerControl.tool == 'Ink'){\n          this.pdfviewerControl.annotation.setAnnotationMode('Ink');\n        }\n        this.pdfviewerControl.annotation.setAnnotationMode('Polygon');\n      }\n    \n      public distance(e: ClickEventArgs) {\n        this.disableInkAnnotation(); \n        if(this.pdfviewerControl.tool == 'Ink'){\n          this.pdfviewerControl.annotation.setAnnotationMode('Ink');\n        }\n        this.pdfviewerControl.annotation.setAnnotationMode('Distance');\n      }\n    \n      public perimeter(e: ClickEventArgs) {\n        this.disableInkAnnotation(); \n        if(this.pdfviewerControl.tool == 'Ink'){\n          this.pdfviewerControl.annotation.setAnnotationMode('Ink');\n        }\n        this.pdfviewerControl.annotation.setAnnotationMode('Perimeter');\n      }\n    \n      public area(e: ClickEventArgs) {\n        this.disableInkAnnotation(); \n        if(this.pdfviewerControl.tool == 'Ink'){\n          this.pdfviewerControl.annotation.setAnnotationMode('Ink');\n        }\n        this.pdfviewerControl.annotation.setAnnotationMode('Area');\n      }\n    \n      public radius(e: ClickEventArgs) {\n        this.disableInkAnnotation(); \n        if(this.pdfviewerControl.tool == 'Ink'){\n          this.pdfviewerControl.annotation.setAnnotationMode('Ink');\n        }\n        this.pdfviewerControl.annotation.setAnnotationMode('Radius');\n      }\n    \n      public volume(e: ClickEventArgs) {\n        this.disableInkAnnotation(); \n        if(this.pdfviewerControl.tool == 'Ink'){\n          this.pdfviewerControl.annotation.setAnnotationMode('Ink');\n        }\n        this.pdfviewerControl.annotation.setAnnotationMode('Volume');\n      }\n    \n      public freeText(e: ClickEventArgs) {\n        this.disableInkAnnotation(); \n        if(this.pdfviewerControl.tool == 'Ink'){\n          this.pdfviewerControl.annotation.setAnnotationMode('Ink');\n        }\n        this.pdfviewerControl.annotation.setAnnotationMode('FreeText');\n      }\n    \n      public addEditFormFields(e: ClickEventArgs): void {\n        this.disableInkAnnotation(); \n        if(this.pdfviewerControl.tool == 'Ink'){\n          this.pdfviewerControl.annotation.setAnnotationMode('Ink');\n        }\n        const formFieldToolbarElement = document.getElementById('formFieldToolbar');\n        if (formFieldToolbarElement !== null) {\n          if (formFieldToolbarElement.style.display === 'block') {\n            formFieldToolbarElement.style.display = 'none';\n            this.pdfviewerControl.designerMode = false;\n          } else {\n            formFieldToolbarElement.style.display = 'block';\n            this.pdfviewerControl.designerMode = true;\n          }\n        }\n    \n        const editAnnotationToolbarElement = document.getElementById('editAnnotationToolbar');\n        if (editAnnotationToolbarElement !== null && editAnnotationToolbarElement.style.display === 'block') {\n          editAnnotationToolbarElement.style.display = 'none';\n        }\n    \n        const textSearchToolbarElement = document.getElementById('textSearchToolbar');\n        if (textSearchToolbarElement !== null && textSearchToolbarElement.style.display === 'block') {\n          textSearchToolbarElement.style.display = 'none';\n        }\n      }\n      \n      public ink(e: ClickEventArgs) {\n        if(!this.isInkEnabled)\n          {\n            this.pdfviewerControl.annotation.setAnnotationMode(\"Ink\");\n            this.isInkEnabled=true;\n          }\n          else\n          {\n            this.pdfviewerControl.annotation.setAnnotationMode(\"None\");\n            this.isInkEnabled =false;\n          }\n      }\n      public disableInkAnnotation() {\n        if (this.isInkEnabled) {\n          this.pdfviewerControl.annotation.setAnnotationMode(\"None\");\n            this.isInkEnabled = false;\n        }\n      }\n    \n      public textBox(e: ClickEventArgs) {\n        this.pdfviewerControl.formDesignerModule.setFormFieldMode('Textbox');\n      }\n    \n      public passWord(e: ClickEventArgs) {\n        this.pdfviewerControl.formDesignerModule.setFormFieldMode('Password');\n      }\n    \n      public checkBox(e: ClickEventArgs) {\n        this.pdfviewerControl.formDesignerModule.setFormFieldMode('CheckBox');\n      }\n    \n      public radioButton(e: ClickEventArgs) {\n        this.pdfviewerControl.formDesignerModule.setFormFieldMode('RadioButton');\n      }\n    \n      public dropDown(e: ClickEventArgs) {\n        this.pdfviewerControl.formDesignerModule.setFormFieldMode('DropDown');\n      }\n    \n      public listBox(e: ClickEventArgs) {\n        this.pdfviewerControl.formDesignerModule.setFormFieldMode('ListBox');\n      }\n\n      onSignatureClick(event: any): void {\n        const editAnnotationToolbarElement = document.getElementById('editAnnotationToolbar');\n        if (editAnnotationToolbarElement?.style.display === 'block') {\n          if (event.element instanceof HTMLElement) {\n            if (event.element.innerText === 'ADD SIGNATURE') {\n              this.pdfviewerControl.annotationModule.setAnnotationMode('HandWrittenSignature');\n            } else if (event.element.innerText === 'ADD INITIAL') {\n              this.pdfviewerControl.annotationModule.setAnnotationMode('Initial');\n            }\n          }\n        }\n    \n        const formFieldToolbarElement = document.getElementById('formFieldToolbar');\n        if (formFieldToolbarElement?.style.display === 'block') {\n          if (event.element instanceof HTMLElement) {\n            if (event.element.innerText === 'ADD SIGNATURE') {\n              this.pdfviewerControl.formDesignerModule.setFormFieldMode('SignatureField');\n            } else if (event.element.innerText === 'ADD INITIAL') {\n              this.pdfviewerControl.formDesignerModule.setFormFieldMode('InitialField');\n            }\n          }\n        }\n      }\n    \n  public findText(e: ClickEventArgs): void {\n    if(this.pdfviewerControl.tool == 'Ink'){\n      this.pdfviewerControl.annotation.setAnnotationMode('Ink');\n    }\n    const editAnnotationToolbarElement = document.getElementById('editAnnotationToolbar');\n    if (editAnnotationToolbarElement !== null && editAnnotationToolbarElement.style.display === 'block') {\n      editAnnotationToolbarElement.style.display = 'none';\n    }\n\n    const textSearchToolbarElement = document.getElementById('textSearchToolbar');\n    if (textSearchToolbarElement !== null) {\n      if (textSearchToolbarElement.style.display === 'block') {\n        textSearchToolbarElement.style.display = 'none';\n      } else {\n        textSearchToolbarElement.style.display = 'block';\n      }\n    }\n\n    const formFieldToolbarElement = document.getElementById('formFieldToolbar');\n    if (formFieldToolbarElement !== null && formFieldToolbarElement.style.display === 'block') {\n      formFieldToolbarElement.style.display = 'none';\n      this.pdfviewerControl.designerMode = false;\n    }\n  }\n  \n  public searchInputKeypressed(event: KeyboardEvent): void {\n    if (event.key === 'Enter') {\n      this.initiateTextSearch();\n    }\n  }\n\n  public searchText: string = '';\n  public prevMatchCase = false;\n  public initiateTextSearch(): void {\n    const textsearchPrevElement = document.getElementById('container_prev_occurrence') as HTMLButtonElement;\n    const textsearchNextElement = document.getElementById('container_next_occurrence') as HTMLButtonElement;\n    const textsearchcloseElement = document.getElementById('container_close_search_box-icon') as HTMLElement;\n    const textsearchElement = document.getElementById('container_search_box-icon') as HTMLElement;\n\n    if (textsearchPrevElement && textsearchNextElement && textsearchcloseElement && textsearchElement) {\n      textsearchPrevElement.disabled = false;\n      textsearchNextElement.disabled = false;\n      textsearchcloseElement.style.display = 'block';\n      textsearchElement.style.display = 'none';\n\n      if (this.searchText !== (document.getElementById('container_search_input') as HTMLInputElement).value || this.prevMatchCase !== this.matchCase) {\n        this.pdfviewerControl.textSearchModule.cancelTextSearch();\n        this.searchText = (document.getElementById('container_search_input') as HTMLInputElement).value;\n        this.searchActive = true;\n        this.pdfviewerControl.textSearchModule.searchText(this.searchText, this.matchCase);\n        this.prevMatchCase = this.matchCase;\n      }\n      else{\n        this.nextTextSearch();\n      }\n    }\n  }\n\n  public clearTextSearch(): void {\n    const textsearchcloseElement = document.getElementById('container_close_search_box-icon') as HTMLElement;\n    const textsearchElement = document.getElementById('container_search_box-icon') as HTMLElement;\n    textsearchcloseElement.style.display = 'none';\n    textsearchElement.style.display = 'block';\n    this.pdfviewerControl.textSearchModule.cancelTextSearch();\n    const searchTextElement = document.getElementById('container_search_input') as HTMLInputElement;\n    searchTextElement.value = '';\n  }\n\n  public previousTextSearch(): void {\n    this.pdfviewerControl.textSearchModule.searchPrevious();\n    this.searchActive = true;\n  }\n\n  public checkSearchActive() {\n    if(!this.searchActive) {\n      this.pdfviewerControl.textSearchModule.clearAllOccurrences();\n    }\n  }\n\n  public inputChange(): void {\n    this.pdfviewerControl.textSearchModule.clearAllOccurrences();\n    this.searchActive = false;\n    if((document.getElementById('container_search_input') as HTMLInputElement).value == '') {\n      const textsearchcloseElement = document.getElementById('container_close_search_box-icon') as HTMLElement;\n      const textsearchElement = document.getElementById('container_search_box-icon') as HTMLElement;\n      textsearchcloseElement.style.display = 'none';\n      textsearchElement.style.display = 'block';\n    }\n  }\n\n  public nextTextSearch(): void {\n    this.pdfviewerControl.textSearchModule.searchNext();\n    this.searchActive = true;\n  }\n\n  public checkBoxChanged(event: Event): void {\n    const target = event.target as HTMLInputElement;\n\n    if (target.checked) {\n      const matchcaseElement = document.getElementById('container_match_case') as HTMLInputElement;\n      if (matchcaseElement) {\n        matchcaseElement.checked = true;\n      }\n      this.matchCase = true;\n      const checkboxSpanElement = document.getElementById('checkboxSpan');\n      if (checkboxSpanElement) {\n        checkboxSpanElement.classList.add('e-check');\n      }\n    } else {\n      this.matchCase = false;\n      const checkboxSpanElement = document.getElementById('checkboxSpan');\n      if (checkboxSpanElement) {\n        checkboxSpanElement.classList.remove('e-check');\n      }\n    }\n  }\n    \n\n    public onCurrentPageBoxClicked(e: ClickEventArgs): void {\n        (document.getElementById('currentPage') as HTMLInputElement).select();\n    }    \n\n    public onCurrentPageBoxKeypress(e: KeyboardEvent): boolean {\n        if ((e.which < 48 || e.which > 57) && e.which !== 8 && e.which !== 13) {\n            e.preventDefault();\n            return false;\n        } else {\n            // tslint:disable-next-line:radix\n            const currentPageNumber: number = parseInt((document.getElementById('currentPage') as HTMLInputElement).value);\n            if (e.which === 13) {\n                if (currentPageNumber > 0 && currentPageNumber <= this.pdfviewerControl.pageCount) {\n                    this.pdfviewerControl.navigation.goToPage(currentPageNumber);\n                } else {\n                    // tslint:disable-next-line:max-line-length\n                    (document.getElementById('currentPage') as HTMLInputElement).value = this.pdfviewerControl.currentPageNumber.toString();\n                }\n            }\n            return true;\n        }\n    }\n\n    private updatePageNavigation(): void {\n        if (this.pdfviewerControl.currentPageNumber === 1) {\n            this.customToolbar.enableItems(document.getElementById('previousPage'), false);\n            this.customToolbar.enableItems(document.getElementById('nextPage'), true);\n        } else if (this.pdfviewerControl.currentPageNumber === this.pdfviewerControl.pageCount) {\n            this.customToolbar.enableItems(document.getElementById('previousPage'), true);\n            this.customToolbar.enableItems(document.getElementById('nextPage'), false);\n        } else {\n            this.customToolbar.enableItems(document.getElementById('previousPage'), true);\n            this.customToolbar.enableItems(document.getElementById('nextPage'), true);\n        }\n    }\n\n    private updateZoomButtons(): void {\n        if (this.pdfviewerControl.zoomPercentage <= 50) {\n            this.zoomToolbar.enableItems(document.getElementById('zoomIn'), true);\n            this.zoomToolbar.enableItems(document.getElementById('zoomOut'), false);\n            this.zoomToolbar.enableItems(document.getElementById('fitPage'), true);\n        } else if (this.pdfviewerControl.zoomPercentage >= 400) {\n            this.zoomToolbar.enableItems(document.getElementById('zoomIn'), false);\n            this.zoomToolbar.enableItems(document.getElementById('zoomOut'), true);\n            this.zoomToolbar.enableItems(document.getElementById('fitPage'), true);\n        } else {\n            this.zoomToolbar.enableItems(document.getElementById('zoomIn'), true);\n            this.zoomToolbar.enableItems(document.getElementById('zoomOut'), true);\n            this.zoomToolbar.enableItems(document.getElementById('fitPage'), true);\n        }\n    }\n\n    // tslint:disable-next-line\n    private readFile(args: any): void {\n        // tslint:disable-next-line\n        let upoadedFiles: any = args.target.files;\n        if (args.target.files[0] !== null) {\n            let uploadedFile: File = upoadedFiles[0];\n            let filename = upoadedFiles[0].name;\n            if (uploadedFile) {\n                let reader: FileReader = new FileReader();\n                reader.readAsDataURL(uploadedFile);\n                // tslint:disable-next-line\n                let proxy: any = this;\n                // tslint:disable-next-line\n                reader.onload = (e: any): void => {\n                    let uploadedFileUrl: string = e.currentTarget.result;\n                    proxy.pdfviewerControl.documentPath = uploadedFileUrl;\n                    proxy.pdfviewerControl.fileName = filename;\n                    proxy.pdfviewerControl.downloadFileName = filename;\n                };\n            }\n        }\n    }\n    public change(e: any): void {\n        if (e.checked) {\n            this.pdfviewerControl.serviceUrl = '';\n        }\n        else {\n            this.pdfviewerControl.serviceUrl = 'https://services.syncfusion.com/angular/production/api/pdfviewer';\n        }\n        this.pdfviewerControl.dataBind();\n        this.pdfviewerControl.load(this.pdfviewerControl.documentPath, null);\n    }\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class='control-section'>\n  <div class=\"flex-container\">\n      <label class=\"switchLabel\" for=\"checked\">Standalone PDF Viewer</label>\n      <div class=\"e-message render-mode-info\">\n          <span class=\"e-msg-icon render-mode-info-icon\" title=\"Turn OFF to render the PDF Viewer as server-backed\"></span>\n      </div>\n      <div>\n          <ejs-switch cssClass=\"buttonSwitch\" id=\"checked\" (change)=\"change($event)\" [checked]=\"true\"></ejs-switch>\n      </div>\n  </div>\n  <div class='content-wrapper e-tbar-section'>\n      <div class='e-sample-resize-container'>\n          <ejs-toolbar id='topToolbar' #customToolbar>\n              <e-items>\n                  <e-item prefixIcon='e-icons e-folder' id='openDocument' tooltipText='Open' (click)='openDocument($event)'>\n                  </e-item>\n                  <e-item prefixIcon='e-icons e-save' tooltipText='Save' (click)='saveClicked($event)'></e-item>    \n                  <e-item prefixIcon='e-icons e-chevron-left' id='previousPage' tooltipText='Previous Page' (click)='previousClicked($event)'\n                      align='Center'></e-item>\n                  <e-item prefixIcon='e-icons e-chevron-right' id='nextPage' tooltipText='Next Page' (click)='nextClicked($event)' align='Center'></e-item>\n                  <e-item align='Center'>\n                      <ng-template #template>\n                          <div class=''><input type='text' class='e-input-group e-pv-current-page-number' id='currentPage' value=\"0\"\n                                  (keypress)='onCurrentPageBoxKeypress($event)' (click)='onCurrentPageBoxClicked($event)' /></div>\n                          <div [style.margin]=\"'0px 6px'\"><span class='e-pv-total-page-number' id='totalPage'>of 0</span></div>\n                      </ng-template>\n                  </e-item>\n                  <e-item type=\"Separator\" tooltipText=\"separator\" align=\"Center\"></e-item>\n                  <e-item prefixIcon='e-icons e-mouse-pointer' (click)='textSelection($event)'  id='text_selection_tool'  tooltipText='Text Selection tool' align=\"Center\"></e-item>\n                  <e-item prefixIcon='e-icons e-pan' (click)='panMode($event)'  id='pan_mode' tooltipText='Pan Mode'  align='Center'></e-item>\n                  <e-item type=\"Separator\" tooltipText=\"separator\" align=\"Center\"></e-item>\n                  <e-item prefixIcon=\"e-icons e-annotation-edit\" (click)='openEditAnnotation($event)' tooltipText=\"Edit Annotation\" id=\"edit_annotation\"  align=\"Center\" ></e-item>\n                  <e-item type=\"Separator\" tooltipText=\"separator\" align=\"Center\"></e-item>\n                  <e-item prefixIcon=\"e-icons e-split-vertical\" (click)='addEditFormFields($event)' tooltipText=\"Add and Edit Form Fields\" id=\"add_form_field\"  align=\"Center\" ></e-item>                    \n                  <e-item prefixIcon=\"e-icons e-search\" (click)='findText($event)' tooltipText=\"Find Text\" id=\"find_text\"  align=\"Right\" ></e-item>\n                  <e-item prefixIcon='e-icons e-print' tooltipText='Print' (click)='printClicked($event)' align='Right'></e-item>\n              </e-items>\n          </ejs-toolbar>\n      </div>\n      <div id=\"editAnnotationToolbar\"  [style.display]=\"'none'\">\n          <ejs-toolbar #toolbar >\n            <e-items>\n              <e-item prefixIcon=\"e-icons e-highlight-color\" (click)='highlight($event)' tooltipText=\"Highlight\" id=\"highlight\" align=\"Center\"></e-item>\n              <e-item prefixIcon=\"e-icons e-underline\" (click)='underLine($event)' tooltipText=\"Underline\" id=\"underline\" align=\"Center\"></e-item>\n              <e-item prefixIcon=\"e-icons e-strikethrough\" (click)='strikeThrough($event)' tooltipText=\"Strikethrough\" id=\"strikethrough\" align=\"Center\"></e-item>\n              <e-item type=\"Separator\" tooltipText=\"separator\" align=\"Center\"></e-item>\n              <e-item prefixIcon=\"e-icons e-line\" (click)='addLine($event)'tooltipText=\"Add Line\" id=\"line\" align=\"Center\"></e-item>\n              <e-item prefixIcon=\"e-icons e-arrow-right-up\" (click)='addArrow($event)' tooltipText=\"Add Arrow\" id=\"arrow\" align=\"Center\"></e-item>\n              <e-item prefixIcon=\"e-icons e-rectangle\" (click)='addRectangle($event)' tooltipText=\"Add Rectangle\" id=\"rectangle\" align=\"Center\"></e-item>\n              <e-item prefixIcon=\"e-icons e-circle\" (click)='addCircle($event)' tooltipText=\"Add Circle\" id=\"circle\" align=\"Center\"></e-item>\n              <e-item prefixIcon=\"e-icons e-pentagon\" (click)='addPoligon($event)' tooltipText=\"Add Polygon\" id=\"polygon\" align=\"Center\"></e-item>\n              <e-item type=\"Separator\" tooltipText=\"separator\" align=\"Center\"></e-item>\n              <e-item prefixIcon=\"e-icons e-length\" (click)='distance($event)'  tooltipText=\"Calibrate Distance\" id=\"calibrate_distance\" align=\"Center\"></e-item>\n              <e-item prefixIcon=\"e-icons e-perimeter\" (click)='perimeter($event)' tooltipText=\"Calibrate Perimeter\" id=\"calibrate_perimeter\" align=\"Center\"></e-item>\n              <e-item prefixIcon=\"e-icons e-area\" (click)='area($event)' tooltipText=\"Calibrate Area\" id=\"calibrate_area\" align=\"Center\"></e-item>\n              <e-item prefixIcon=\"e-icons e-radius\" (click)='radius($event)' tooltipText=\"Calibrate Radius\" id=\"calibrate_radius\" align=\"Center\"></e-item>\n              <e-item prefixIcon=\"e-icons e-volume\" (click)='volume($event)' tooltipText=\"Calibrate Volume\" id=\"calibrate_volume\" align=\"Center\"></e-item>\n              <e-item type=\"Separator\" tooltipText=\"separator\" align=\"Center\"></e-item>\n              <e-item prefixIcon=\"e-icons e-text-annotation\" (click)='freeText($event)'  tooltipText=\"Free Text\" id=\"freeText\" align=\"Center\"></e-item>\n              <e-item type=\"Separator\" tooltipText=\"separator\" align=\"Center\"></e-item>\n              <e-item type=\"Separator\" tooltipText=\"separator\" align=\"Center\"></e-item>\n              <e-item  tooltipText=\"Add Stamp\" id=\"stamp\" align=\"Center\"><ng-template #template>\n                <ejs-menu #menu showItemOnClick='true' (select)='select($event)' [items]='menuItems'></ejs-menu>\n                </ng-template></e-item>\n              <e-item type=\"Separator\" tooltipText=\"separator\" align=\"Center\"></e-item>\n              <e-item id=\"signature\" tooltipText=\"Add Signature\" align=\"Center\"><ng-template #template>\n                <ejs-menu #menu showItemOnClick='true' (select)='onSignatureClick($event)' [items]='signatureMenuItems'></ejs-menu>\n                </ng-template>\n              </e-item>\n              <e-item type=\"Separator\" tooltipText=\"separator\" align=\"Center\"></e-item>\n              <e-item prefixIcon=\"e-icons e-style\"  (click)='ink($event)' id=\"ink\" align=\"Center\"></e-item>\n            </e-items>\n          </ejs-toolbar>\n      </div>\n      <div><div id=\"textSearchToolbar\" [style.display]=\"'none'\"> \n          <div class=\"e-pv-search-bar\" id=\"container_search_box\" [style.top]=\"'97px'\" [style.right]=\"'0px'\">\n            <div class=\"e-pv-search-bar-elements\" id=\"container_search_box_elements\">\n              <div class=\"e-input-group e-pv-search-input\" id=\"container_search_input_container\">\n                <input class=\"e-input\" id=\"container_search_input\" type=\"text\" placeholder=\"Find in document\" (keypress)=\"searchInputKeypressed($event)\" (input)=\"inputChange()\" />\n                <span class=\"e-input-group-icon e-input-search-group-icon e-icons e-search\" id=\"container_search_box-icon\" style=\"top: 4px;\" (click)=\"initiateTextSearch()\"></span>\n                <span class=\"e-input-group-icon e-input-search-group-icon e-icons e-close\" id=\"container_close_search_box-icon\" [style.display]=\"'none'\" style=\"top: 4px;\" (click)=\"clearTextSearch()\" ></span>\n              </div>\n              <button class=\"e-btn e-icon-btn e-pv-search-btn e-icons e-chevron-left\" id=\"container_prev_occurrence\" (click)=\"previousTextSearch()\" type=\"button\" [disabled]=\"true\" aria-label=\"Previous Search text\">\n              </button>\n              <button class=\"e-btn e-icon-btn e-pv-search-btn e-icons e-chevron-right\" id=\"container_next_occurrence\" type=\"button\" (click)=\"nextTextSearch()\" [disabled]=\"true\" aria-label=\"Next Search text\">\n              </button>\n            </div>\n            <div class=\"e-pv-match-case-container\" id=\"container_match_case_container\">\n              <div class=\"e-checkbox-wrapper e-wrapper e-pv-match-case\">\n                <label for=\"container_match_case\">\n                  <input id=\"container_match_case\" type=\"checkbox\" class=\"e-control e-checkbox e-lib\" (click)=\"checkBoxChanged($event)\"/>\n                  <span class=\"e-ripple-container\" data-ripple=\"true\"></span>\n                  <span id=\"checkboxSpan\" class=\"e-icons e-frame\"></span>\n                  <span class=\"e-label\">Match case</span>\n                </label>\n              </div>\n            </div>\n          </div>\n      </div>\n        \n        \n      <div id=\"formFieldToolbar\" [style.display]=\"'none'\">\n        <ejs-toolbar #toolbar >\n          <e-items>\n            <e-item id=\"textbox\" prefixIcon=\"e-icons e-text-form\" (click)='textBox($event)' tooltipText=\"Textbox\" align=\"Center\"></e-item>\n            <e-item id=\"password\" prefixIcon=\"e-icons e-password\"  (click)='passWord($event)' tooltipText=\"Password\" align=\"Center\"></e-item>\n            <e-item id=\"checkbox\" prefixIcon=\"e-icons e-check-box\" (click)='checkBox($event)' tooltipText=\"Checkbok\" align=\"Center\"></e-item>\n            <e-item id=\"radio_button\" prefixIcon=\"e-icons e-radio-button\" (click)='radioButton($event)' tooltipText=\"Radio Button\" align=\"Center\"></e-item>\n            <e-item id=\"drop_down\" prefixIcon=\"e-icons e-drop-down\" (click)='dropDown($event)' tooltipText=\"Drop Down\" align=\"Center\"></e-item>\n            <e-item id=\"list_box\" prefixIcon=\"e-icons e-list-unordered\" (click)='listBox($event)'  tooltipText=\"List Box\" align=\"Center\"></e-item>\n            <e-item id=\"formField_signature\" tooltipText=\"Add Signature\" align=\"Center\"><ng-template #template>\n              <ejs-menu #menu showItemOnClick='true' (select)='onSignatureClick($event)' [items]='signatureMenuItems'></ejs-menu>\n              </ng-template>\n            </e-item>\n            <e-item id=\"separator\" type=\"Separator\" tooltipText=\"separator\" align=\"Center\"></e-item>\n          </e-items>\n        </ejs-toolbar>\n      </div>\n      <ejs-toolbar id='magnificationToolbar' #zoomToolbar>\n          <e-items>\n              <e-item prefixIcon='e-pv-fit-page-icon' id='fitPage' tooltipText='Fit to page' (click)='pageFitClicked($event)'></e-item>\n              <e-item prefixIcon='e-icons e-circle-add' id='zoomIn' tooltipText='Zoom in' (click)='zoomInClicked($event)'></e-item>\n              <e-item prefixIcon='e-icons e-circle-remove' id='zoomOut' tooltipText='Zoom out' (click)='zoomOutClicked($event)'></e-item>\n          </e-items>\n      </ejs-toolbar>\n      <ejs-pdfviewer #pdfviewer id='pdfViewer' [documentPath]='document' [resourceUrl]='resource' [enableAnnotationToolbar] =\"false\" [enableCommentPanel] = \"false\" [enableToolbar]=false\n        [enableNavigationToolbar]=false (pageChange)='pageChanged($event)'\n        (documentLoad)='documentLoaded($event)'  style=\"height:640px; display: block\">\n      </ejs-pdfviewer>\n      <input type=\"file\" id=\"fileUpload\" accept=\".pdf\" style=\"display:block;visibility:hidden;width:0;height:0;\">\n  </div>\n\n</div>\n","app.component.css":"/* custom code start*/\n#magnificationToolbar {\n    background: transparent;\n    height: auto;\n    min-height: 56px;\n    width: 200px;\n    border: none;\n    position: absolute;\n    z-index: 1001;\n    bottom: 58px;\n    right: 16px;\n    transform: rotate(90deg);\n}\n\n@font-face {\n    font-family: \"e-icons-pv\";\n    font-style: normal;\n    font-weight: normal;\n    src: url(data:application/x-font-ttf;charset=utf-8;base64,AAEAAAAKAIAAAwAgT1MvMj8wS0QAAAEoAAAAVmNtYXDSeNLMAAABuAAAAFZnbHlmok0NtwAAAjAAAAPkaGVhZBN3pEcAAADQAAAANmhoZWEHrwNhAAAArAAAACRobXR4NsgAAAAAAYAAAAA4bG9jYQdkBmQAAAIQAAAAHm1heHABHAAwAAABCAAAACBuYW1lD0oZXgAABhQAAALBcG9zdFG4mE4AAAjYAAAAyAABAAADUv9qAFoEAAAA/+gEAAABAAAAAAAAAAAAAAAAAAAADgABAAAAAQAAxsly1F8PPPUACwPoAAAAANgsr7EAAAAA2CyvsQAAAAAEAAQAAAAACAACAAAAAAAAAAEAAAAOACQABAAAAAAAAgAAAAoACgAAAP8AAAAAAAAAAQPqAZAABQAAAnoCvAAAAIwCegK8AAAB4AAxAQIAAAIABQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGZFZABA6RDpHQNS/2oAWgQAAJYAAAABAAAAAAAABAAAAAPoAAAD6AAAA+gAAAPoAAAD6AAAA+gAAAPoAAAD6AAAA+gAAAPoAAAD6AAAA+gAAAPoAAAAAAACAAAAAwAAABQAAwABAAAAFAAEAEIAAAAGAAQAAQAC6RLpHf//AADpEOkU//8AAAAAAAEABgAKAAAAAQACAAMABQAGAAcACAAJAAoACwAMAA0ABAAAAAAAAAAUACoAZACkAL4A7gEuAVwBcAGEAZ4ByAHyAAAAAQAAAAAD6gMuAAUAAAkBBwkBJwIAAet0/on+iXQDL/4VcwF3/olzAAEAAAAAA+oDLgAFAAATCQEXCQGJAXcBd3T+Ff4VAy/+iQF3c/4VAesAAAAAAwAAAAAEAAQAAAMADwAbAAABITUhBQ4BBy4BJz4BNx4BBRYAFzYANyYAJwYAAQACAP4AAoAE2aOj2QQE2aOj2fyEBgEh2dkBIQYG/t/Z2f7fAcCAQKPZBATZo6PZBATZo9n+3wYGASHZ2QEhBgb+3wAAAAADAAAAAAQABAAACwAXACMAAAEjFTMVMzUzNSM1IwEOAQcuASc+ATceAQUWABc2ADcmACcGAAHAwMCAwMCAAcAE2aOj2QQE2aOj2fyEBgEh2dkBIQYG/t/Z2f7fAkCAwMCAwP8Ao9kEBNmjo9kEBNmj2f7fBgYBIdnZASEGBv7fAAIAAAAAAwAEAAADAAoAADEhNSEBIQkBIREhAwD9AAEA/wABgAGA/wD/AIACAP6AAYABgAACAAAAAANABAAADgAaAAABMh4CFRElBRE0Nz4BMycGFRElBRE0JiMhIgKdCwwHBf7g/uAJBAwKdC8BoAGgX0T+BkQDgAYGCwr9YHZ2AqAOCQQGUS9D/KGrqwNfRlsAAAACAAAAAAP/BAAACwAjAAABDgEHLgEnPgE3HgEFHgEXMjY/ARcVATcBIyc3PgE1LgEnDgECgAOQbW2QAwOQbW2Q/YME2aNGfDIDJAEEYf78MyMCKi4E2aOj2QKAbZADA5BtbZADA5Bto9kELioDJDP+/GEBBCQDMnxGo9kEBNkAAAQAAAAABAAEAAADAAcAFQAZAAABFSE1JRUjNSERMxUhNTMRLgEnIQ4BNyE1IQLA/oACQID9AMACgMABSDf9ADdIvwKA/YABwMDAwICA/sDAwAFAN0gBAUmKwAAAAQAAAAACQAQAAAUAABEBNwkBJwHsU/6HAXpSAmD+YGIBPgE+YgAAAAEAAAAAAkAEAAAFAAARCQEXCQEBev6HUwHs/hMDnv7C/sJiAaABoAABAAAAAAKABAAACwAAERcHFzcXNyc3Jwcn9fVM9PVL9PRL9fQDtfX0TPX1TPT0TPT0AAAABAAAAAAD8APwAAUACwARABcAACEzNTM1IQUzFTMRISUhNSM1IwUjFSERIwJ2fvz+hv2K/H7+hgJ2AXr8fv6G/AF6fvx+fvwBevx+/Px+AXoAAAAAAgAAAAAEAAQAAAMAFgAAAREhEScGFREUFhchPgE1ETQmIyEnIQYDgP0AYh48LQMuLTw8Lf5pa/7ULQMA/gACAN8eLf1YLTwDAzwtAigvPYACAAAAAAASAN4AAQAAAAAAAAABAAAAAQAAAAAAAQAUAAEAAQAAAAAAAgAHABUAAQAAAAAAAwAUABwAAQAAAAAABAAUADAAAQAAAAAABQALAEQAAQAAAAAABgAUAE8AAQAAAAAACgAsAGMAAQAAAAAACwASAI8AAwABBAkAAAACAKEAAwABBAkAAQAoAKMAAwABBAkAAgAOAMsAAwABBAkAAwAoANkAAwABBAkABAAoAQEAAwABBAkABQAWASkAAwABBAkABgAoAT8AAwABBAkACgBYAWcAAwABBAkACwAkAb8gY3VzdG9tLXRvb2xiYXJbMTkwOF1SZWd1bGFyY3VzdG9tLXRvb2xiYXJbMTkwOF1jdXN0b20tdG9vbGJhclsxOTA4XVZlcnNpb24gMS4wY3VzdG9tLXRvb2xiYXJbMTkwOF1Gb250IGdlbmVyYXRlZCB1c2luZyBTeW5jZnVzaW9uIE1ldHJvIFN0dWRpb3d3dy5zeW5jZnVzaW9uLmNvbQAgAGMAdQBzAHQAbwBtAC0AdABvAG8AbABiAGEAcgBbADEAOQAwADgAXQBSAGUAZwB1AGwAYQByAGMAdQBzAHQAbwBtAC0AdABvAG8AbABiAGEAcgBbADEAOQAwADgAXQBjAHUAcwB0AG8AbQAtAHQAbwBvAGwAYgBhAHIAWwAxADkAMAA4AF0AVgBlAHIAcwBpAG8AbgAgADEALgAwAGMAdQBzAHQAbwBtAC0AdABvAG8AbABiAGEAcgBbADEAOQAwADgAXQBGAG8AbgB0ACAAZwBlAG4AZQByAGEAdABlAGQAIAB1AHMAaQBuAGcAIABTAHkAbgBjAGYAdQBzAGkAbwBuACAATQBlAHQAcgBvACAAUwB0AHUAZABpAG8AdwB3AHcALgBzAHkAbgBjAGYAdQBzAGkAbwBuAC4AYwBvAG0AAAAAAgAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAQIBAwEEAQUBBgEHAQgBCQEKAQsBDAENAQ4BDwAIVG9wLWljb24LZG93bi1hcnJvdzIKUFZfWm9vbW91dAlQVl9ab29taW4LUFZfRG93bmxvYWQLUFZfQm9va21hcmsJUFZfU2VhcmNoCFBWX1ByaW50C1BWX1ByZXZpb3VzB1BWX05leHQIUFZfQ2xvc2UMUFZfRml0VG9QYWdlB1BWX09wZW4AAA==) format('truetype');\n}\n\n.e-pv-fit-page-icon::before {\n    content: '\\e91b';\n    font-family: \"e-icons-pv\";\n}\n\n#magnificationToolbar.e-toolbar .e-toolbar-items {\n    background: transparent;\n}\n\n#magnificationToolbar.e-toolbar .e-tbar-btn {\n    border-radius: 50%;\n    min-height: 30px;\n    min-width: 30px;\n    border: 1px solid #c8c8c8;\n    transform: rotate(90deg);\n}\n\n#topToolbar {\n    top: 0px;\n    z-index: 1001;\n}\n\n.e-tbar-section .e-sample-resize-container {\n    height: 46px;\n}\n\n.e-bookmark-popup {\n    height: 200px;\n    max-width: 250px;\n}\n\n.e-text-search-popup {\n    height: 104px;\n    max-width: 348px;\n}\n\n.e-custom-search-input {\n    width: 234px;\n}\n\n.e-text-search-popup .e-footer-content, .e-bookmark-popup .e-footer-content {\n    padding: 0;\n    height: 0;\n}\n\n.search-button, .search-button:disabled, .search-button:focus, .search-button:hover  {\n    background: transparent;\n    box-shadow: none;\n}\n\n#popup .e-dlg-content {\n    padding-left: 0;\n    padding-bottom: 0;\n}\n\n.e-pv-bookmarks {\n    min-width: 234px;\n}\n\n.e-pv-current-page-number {\n    width: 46px;\n    height: 28px;\n    text-align: center;\n}\n\n.material .e-pv-current-page-number {\n    border-width: 1px;\n}\n.e-pv-zoom-out-sample {    \n    transform: rotate(90deg);\n    padding-right: 2px;\n}\n.customtoolbar.e-toolbar {\n background-color: #3f51b5;\nwidth: 50px;\n}\n.customtoolbar.e-toolbar .e-toolbar-items{\n    background-color: #3f51b5;\n    height: 40px;  \n    display: flex;\n    flex-wrap: wrap;\n    \n}\n.e-pv-icon-search::before {\n    font-size: 12px;\n}\n.e-pv-search-input.e-input-group .e-input-search-group-icon.e-input-group-icon {\n    background: rgba(0,0,0,0);\n}\n\n/* custom code end*/\n\n/* style for slider button*/\n\n.flex-container {\n    display: flex;\n    justify-content: flex-end;\n}\n\n.render-mode-info {\n    background: none;\n    border: none;\n    padding-left: 0px;\n}\n\n.render-mode-info .render-mode-info-icon {\n    height: 16px;\n    width: 16px;\n}\n\n.switchLabel {\n    font-family: \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", sans-serif;        \n    font-weight: 400;\n    line-height: 20px;\n    letter-spacing: 0.24px;\n    text-align: right;\n    font-size: 14px;\n}\n\n.render-mode-info .render-mode-info-icon::before {\n    line-height: 0.5rem;\n}\n\n.buttonSwitch {\n    Width: 40px;\n    Height: 24px;\n}\n\n.pdfviewer-property-section{\n    padding: 20px 15px;\n}\n\n.pdfviewer-contextmenu-checkbox-label{\n    padding: 10px;\n}\n\n.pdfviewer-control-section {\n    border-right: 1px solid #D7D7D7;\n}\n\n.pdfviewer-property-container{\n    padding-bottom: 30px;\n}\n\n.header-pdfviewer {\n    font-weight: 600;\n    padding: 20px 2px;\n}\n/*redaction style*/\n#e-pv-redact-sb-panel.control-section .e-appbar {\n    height: 36px;\n    font-size: 14px !important;\n}\n\n#e-pv-redact-sb-toolbar.e-toolbar .e-toolbar-item .e-tbar-btn {\n    flex-direction: column;\n}  \n#e-pv-redact-sb-toolbar.e-toolbar .e-toolbar-item .e-tbar-btn .e-icons.e-btn-icon \n{\n    font-size: 18px;\n}\n#e-pv-redact-sb-toolbar\n{\n    padding: 0 9px;\n}\n#e-pv-redact-sb-toolbar .e-toolbar-items\n{\n    gap: 5px;\n}\n\n#e-pv-redact-sb-toolbar .e-toolbar-item.e-separator\n{\n    height: 48px !important;\n}\n#e-pv-redact-sb-toolbar , .e-toolbar\n{\n    border-left-width: 1px !important;\n    border-right-width: 1px !important;\n}\n\n#e-pv-redact-sb-toolbar-secondary .e-toolbar\n{\n    border-top-width: 1px !important;\n    border: 0 solid var(--color-sf-border-light);\n    --color-sf-border-light: #e0e0e0;\n}\n\n#e-pv-redact-sb-currentPage\n{\n    font-size: 12px;\n}\n#e-pv-redact-sb-totalPage \n{\n    font-weight: 400;\n} \n\n.e-pv-redact-sb-black-out-container .black-out {\n    background-color: black;\n    width: 18px !important;\n    height: 18px !important;\n    border: 1px solid white;\n    border-radius: 3px;\n    margin:4px !important;\n    }\n.e-pv-redact-sb-white-out-container .white-out {\n    background-color: white;\n    width: 18px !important;\n    height: 18px !important;\n    border: 1px solid black;\n    border-radius: 3px;\n    margin:4px !important;\n}\n.e-bigger .e-pv-redact-sb-black-out-container .black-out,\n    .e-bigger .e-pv-redact-sb-white-out-container.white-out {\n        position: relative;\n        top: -4px;\n}\n.e-bigger .e-toolbar .e-toolbar-item.e-pv-redact-sb-black-out-container .e-tbar-btn.e-btn,\n    .e-bigger .e-toolbar .e-toolbar-item.e-pv-redact-sb-white-out-container .e-tbar-btn.e-btn {\n        padding-top : 5px !important;\n}\n.e-bigger .e-pv-redact-sb-black-out-container .e-tbar-btn .e-tbar-btn-text,\n     .e-bigger .e-pv-redact-sb-white-out-container .e-tbar-btn .e-tbar-btn-text{\n         padding: 2px 4px 7px 4px !important;\n}\n/*upload image*/\n#e-pv-redact-sb-dialog.e-dialog #e-pv-redact-sb-defaultfileupload.e-upload-files {\n        border: none !important;\n    }\n#e-pv-redact-sb-panel.control-section #file-uploader\n{\n    display: flex;\n    border: 1px dashed #c8c6c4;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 12px;\n    padding: 16px;\n    border-radius: 6px;\n}\n#e-pv-redact-sb-dialog.e-dialog .e-dlg-header-content\n{\n    border-bottom:1px solid #C4C7C5 !important;\n}\n\n#e-pv-redact-sb-dialog.e-dialog .e-footer-content\n{\n    border-top:1px solid #C4C7C5 !important;\n}\n\n#e-pv-redact-sb-dialog.e-dialog .e-dlg-header-content+.e-dlg-content\n{\n    padding: 20px !important;\n}\n\n#e-pv-redact-sb-panel.control-section .e-file-select-wrap\n{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n#e-pv-redact-sb-dialog.e-dialog .e-footer-content .e-btn\n{\n    background: rgba(0, 0, 0, 0);\n    border-color: rgba(0, 0, 0, 0);\n    box-shadow: none;\n    color: #242424;\n}\n\n#e-pv-redact-sb-drop-area-wrap .e-upload-file-list {\n    display: none;\n}\n#e-pv-redact-sb-defaultfileupload .e-upload-files {\n    border: none !important;\n}\n.e-pv-redact-sb-image-source {\n    width: 70px;\n    height: 70px;\n}\n.e-pv-redact-sb-image-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 4px;\n    gap: 5px;\n    border-radius: 4px;\n    position: relative;\n}\n\n.e-pv-redact-sb-image-list {\n    display: flex;\n    justify-content: center;\n    padding: 24px 15px;\n    gap: 35px;\n}\n\n.e-pv-redact-sb-image-container-selected {\n    border: 1px solid #757575 !important;\n}\n\n#e-pv-redact-sb-drop-area-wrap {\n    display: flex;\n    border: 1px dashed #c8c6c4;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 12px;\n    padding: 16px;\n    border-radius: 6px;\n}\n\n#e-pv-redact-sb-defaultfileupload .e-upload {\n    border: none;\n    margin-top: 10px;\n    width: 100%;\n    height:100%;\n}\n\n#e-pv-redact-sb-panel .e-dlg-container\n{\n    --color-sf-overlay-bg-color: none !important;\n}\n\n.e-icons.e-redaction:before\n{\n  content:\"\\e740\";\n}\n\n#e-pv-redact-sb-defaultfileupload .e-file-drop\n{\n    position: relative;\n    left: 9rem;\n    bottom: 17px;\n    color: #616161;\n}\n\n#e-pv-redact-sb-panel.control-section .e-dlg-overlay\n{\n    background: none;\n    backdrop-filter: blur(2px) !important;\n}\n\n#e-pv-redact-sb-dialog\n{\n    top: -152px;\n}\n\n#e-pv-redact-sb-panel .control-section\n{\n    min-height: 0px !important;\n}\n\n#e-pv-redact-sb-toolbar-secondary .e-input-group {\n    border: none !important;\n}\n\n#e-pv-redact-sb-toolbar #e-pv-redact-sb-toolbar_popup\n{\n    max-height: 500px !important;\n}\n\n#e-pv-redact-sb-toolbar #e-pv-redact-sb-toolbar_popup .e-toolbar-item\n{\n    min-height: 70px !important;\n}\n\n#e-pv-redact-sb-toolbar-secondary .e-toolbar-items .e-template \n{\n    min-width: 0px !important;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-pdfviewer\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-pdfviewer\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-angular-popups\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-grids\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-angular-notifications\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}