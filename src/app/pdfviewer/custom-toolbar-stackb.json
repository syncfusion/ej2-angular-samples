{"dependencies.json":"{\"@syncfusion/ej2-base\": \"*\", \"@syncfusion/ej2-buttons\": \"*\", \"@syncfusion/ej2-splitbuttons\": \"*\", \"@syncfusion/ej2-calendars\": \"*\", \"@syncfusion/ej2-charts\": \"*\", \"@syncfusion/ej2-diagrams\": \"*\", \"@syncfusion/ej2-maps\": \"*\", \"@syncfusion/ej2-treemap\": \"*\", \"@syncfusion/ej2-circulargauge\": \"*\", \"@syncfusion/ej2-data\": \"*\", \"@syncfusion/ej2-dropdowns\": \"*\", \"@syncfusion/ej2-grids\": \"*\", \"@syncfusion/ej2-inputs\": \"*\", \"@syncfusion/ej2-lists\": \"*\", \"@syncfusion/ej2-navigations\": \"*\", \"@syncfusion/ej2-popups\": \"*\", \"@syncfusion/ej2-lineargauge\": \"*\", \"@syncfusion/ej2-pdf-export\": \"*\", \"@syncfusion/ej2-compression\": \"*\", \"@syncfusion/ej2-excel-export\": \"*\", \"@syncfusion/ej2-file-utils\": \"*\", \"@syncfusion/ej2-svg-base\": \"*\", \"@syncfusion/ej2-documenteditor\": \"*\", \"@syncfusion/ej2-richtexteditor\": \"*\", \"@syncfusion/ej2-notifications\": \"*\", \"@syncfusion/ej2-heatmap\": \"*\", \"@syncfusion/ej2-pivotview\": \"*\", \"@syncfusion/ej2-schedule\": \"*\", \"@syncfusion/ej2-layouts\": \"*\", \"@syncfusion/ej2-angular-base\": \"*\", \"@syncfusion/ej2-angular-buttons\": \"*\", \"@syncfusion/ej2-angular-splitbuttons\": \"*\", \"@syncfusion/ej2-angular-calendars\": \"*\", \"@syncfusion/ej2-angular-charts\": \"*\", \"@syncfusion/ej2-angular-diagrams\": \"*\", \"@syncfusion/ej2-angular-maps\": \"*\", \"@syncfusion/ej2-angular-treemap\": \"*\", \"@syncfusion/ej2-angular-circulargauge\": \"*\", \"@syncfusion/ej2-angular-dropdowns\": \"*\", \"@syncfusion/ej2-angular-grids\": \"*\", \"@syncfusion/ej2-angular-inputs\": \"*\", \"@syncfusion/ej2-angular-lists\": \"*\", \"@syncfusion/ej2-angular-navigations\": \"*\", \"@syncfusion/ej2-angular-popups\": \"*\", \"@syncfusion/ej2-angular-lineargauge\": \"*\", \"@syncfusion/ej2-angular-documenteditor\": \"*\", \"@syncfusion/ej2-angular-richtexteditor\": \"*\", \"@syncfusion/ej2-angular-notifications\": \"*\", \"@syncfusion/ej2-angular-heatmap\": \"*\", \"@syncfusion/ej2-angular-pivotview\": \"*\", \"@syncfusion/ej2-angular-schedule\": \"*\", \"@syncfusion/ej2-angular-layouts\": \"*\" , \"@angular/http\": \"*\", \"rxjs-compat\":\"*\"}","main.ts":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n","polyfills.ts":"/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol';\n// import 'core-js/es6/object';\n// import 'core-js/es6/function';\n// import 'core-js/es6/parse-int';\n// import 'core-js/es6/parse-float';\n// import 'core-js/es6/number';\n// import 'core-js/es6/math';\n// import 'core-js/es6/string';\n// import 'core-js/es6/date';\n// import 'core-js/es6/array';\n// import 'core-js/es6/regexp';\n// import 'core-js/es6/map';\n// import 'core-js/es6/weak-map';\n// import 'core-js/es6/set';\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect';\n\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\nimport 'core-js/es7/reflect';\n\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n **/\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n */\n\n // (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n // (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n // (window as any).__zone_symbol__BLACK_LISTED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n\n /*\n * in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n * with the following flag, it will bypass `zone.js` patch for IE/Edge\n */\n// (window as any).__Zone_enable_cross_context_check = true;\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n<link href=\"../styles/OpenNew.css\" rel=\"stylesheet\">\n  <link href=\"//cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\" />\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body class=\"ej2-new\"> \n\n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WLQL39J\"height=\"0\"width=\"0\"style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app/app.module.ts":"import { ButtonModule, CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\n\nimport { ToolbarModule } from '@syncfusion/ej2-angular-navigations';\n\nimport { DialogModule } from '@syncfusion/ej2-angular-popups';\n\nimport { PdfViewerModule } from '@syncfusion/ej2-angular-pdfviewer';\n\nimport { HttpModule } from '@angular/http';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { RouterModule } from '@angular/router';\n\nimport { CommonModule } from '@angular/common';\n\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from '../app.component';\n@NgModule({ declarations: [   AppComponent ], imports: [ PdfViewerModule, ToolbarModule, DialogModule, BrowserModule], providers: [], bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","app.component.html":"<div class='control-section'>\n    <div class='content-wrapper e-tbar-section'>\n        <div class='e-sample-resize-container'>\n            <ejs-toolbar id='topToolbar' #customToolbar>\n                <e-items>\n                    <e-item prefixIcon='e-pv-open-document-icon' id='openDocument' tooltipText='Open' (click)='openDocument($event)'>\n                    </e-item>\n                    <e-item prefixIcon='e-pv-previous-page-navigation-icon' id='previousPage' tooltipText='Previous Page' (click)='previousClicked($event)'\n                        align='Center'></e-item>\n                    <e-item prefixIcon='e-pv-next-page-navigation-icon' id='nextPage' tooltipText='Next Page' (click)='nextClicked($event)' align='Center'></e-item>\n                    <e-item align='Center'>\n                        <ng-template #template>\n                            <div class=''><input type='text' class='e-input-group e-pv-current-page-number' id='currentPage' value=\"0\"\n                                    (keypress)='onCurrentPageBoxKeypress($event)' (click)='onCurrentPageBoxClicked($event)' /></div>\n                            <div style='margin-left: 6px'><span class='e-pv-total-page-number' id='totalPage'>of 0</span></div>\n                        </ng-template>\n                    </e-item>\n                    <e-item prefixIcon='e-pv-print-document-icon' tooltipText='Print' (click)='printClicked($event)' align='Right'></e-item>\n                    <e-item prefixIcon='e-pv-download-document-icon' tooltipText='Download' (click)='downloadClicked($event)' align='Right'></e-item>\n                </e-items>\n            </ejs-toolbar>\n        </div>\n        <ejs-toolbar id='magnificationToolbar' #zoomToolbar>\n            <e-items>\n                <e-item prefixIcon='e-pv-fit-page-icon' id='fitPage' tooltipText='Fit to page' (click)='pageFitClicked($event)'></e-item>\n                <e-item prefixIcon='e-pv-zoom-in-icon' id='zoomIn' tooltipText='Zoom in' (click)='zoomInClicked($event)'></e-item>\n                <e-item prefixIcon='e-pv-zoom-out-sample' id='zoomOut' tooltipText='Zoom out' (click)='zoomOutClicked($event)'></e-item>\n            </e-items>\n        </ejs-toolbar>\n        <ejs-pdfviewer #pdfviewer id='pdfViewer' [serviceUrl]='service' [documentPath]='document' [enableToolbar]=false (pageChange)='pageChanged($event)'\n            (documentLoad)='documentLoaded($event)'  style=\"height:640px; display: block\">\n        </ejs-pdfviewer>\n        <input type=\"file\" id=\"fileUpload\" accept=\".pdf\" style=\"display:block;visibility:hidden;width:0;height:0;\">\n    </div>\n</div>\n\n","app.component.css":"/* custom code start*/\n#magnificationToolbar {\n    background: transparent;\n    height: auto;\n    min-height: 56px;\n    width: 200px;\n    border: none;\n    position: absolute;\n    z-index: 1001;\n    bottom: 58px;\n    right: 16px;\n    transform: rotate(90deg);\n}\n\n#magnificationToolbar.e-toolbar .e-toolbar-items {\n    background: transparent;\n}\n\n#magnificationToolbar.e-toolbar .e-tbar-btn {\n    border-radius: 50%;\n    min-height: 30px;\n    min-width: 30px;\n    border: 1px solid #c8c8c8;\n}\n\n#topToolbar {\n    top: 0px;\n    z-index: 1001;\n}\n\n.e-tbar-section .e-sample-resize-container {\n    height: 46px;\n}\n\n.e-bookmark-popup {\n    height: 200px;\n    max-width: 250px;\n}\n\n.e-text-search-popup {\n    height: 104px;\n    max-width: 348px;\n}\n\n.e-custom-search-input {\n    width: 234px;\n}\n\n.e-text-search-popup .e-footer-content, .e-bookmark-popup .e-footer-content {\n    padding: 0;\n    height: 0;\n}\n\n.search-button, .search-button:disabled, .search-button:focus, .search-button:hover  {\n    background: transparent;\n    box-shadow: none;\n}\n\n#popup .e-dlg-content {\n    padding-left: 0;\n    padding-bottom: 0;\n}\n\n.e-pv-bookmarks {\n    min-width: 234px;\n}\n\n.e-pv-current-page-number {\n    width: 46px;\n    height: 28px;\n    text-align: center;\n}\n\n.material .e-pv-current-page-number {\n    border-width: 1px;\n}\n\n.e-icons {\n    font-family: \"e-icons\";\n    font-style: normal;\n    font-variant: normal;\n    font-weight: normal;\n    line-height: 1;\n    text-transform: none;\n}\n\n.e-pv-icon::before {\n    font-family: 'e-icons';\n}\n\n.e-pv-icon-search::before {\n    font-family: 'e-icons';\n    font-size: 12px;\n}\n\n.e-pv-download-document-icon::before {\n    content: '\\e914';\n}\n\n.e-pv-print-document-icon::before {\n    content: '\\e917';\n}\n\n.e-pv-previous-page-navigation-icon::before {\n    content: '\\e910';\n}\n\n.e-pv-next-page-navigation-icon::before {\n    content: '\\e911';\n}\n\n.e-pv-zoom-out-sample::before {\n    content: '\\e912';\n}\n\n.e-pv-zoom-out-sample {    \n    transform: rotate(90deg);\n    padding-right: 2px;\n}\n\n.e-pv-zoom-in-icon::before {\n    content: '\\e91d';\n}\n\n.e-pv-fit-page-icon::before {\n    content: '\\e91b';\n}\n\n.e-pv-open-document-icon::before {\n    content: '\\e91c';\n}\n\n@font-face {\n    font-family: \"e-icons\";\n    font-style: normal;\n    font-weight: normal;\n    src: url(data:application/x-font-ttf;charset=utf-8;base64,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ZWd1bGFyY3VzdG9tLXRvb2xiYXJbMTkwOF1jdXN0b20tdG9vbGJhclsxOTA4XVZlcnNpb24gMS4wY3VzdG9tLXRvb2xiYXJbMTkwOF1Gb250IGdlbmVyYXRlZCB1c2luZyBTeW5jZnVzaW9uIE1ldHJvIFN0dWRpb3d3dy5zeW5jZnVzaW9uLmNvbQAgAGMAdQBzAHQAbwBtAC0AdABvAG8AbABiAGEAcgBbADEAOQAwADgAXQBSAGUAZwB1AGwAYQByAGMAdQBzAHQAbwBtAC0AdABvAG8AbABiAGEAcgBbADEAOQAwADgAXQBjAHUAcwB0AG8AbQAtAHQAbwBvAGwAYgBhAHIAWwAxADkAMAA4AF0AVgBlAHIAcwBpAG8AbgAgADEALgAwAGMAdQBzAHQAbwBtAC0AdABvAG8AbABiAGEAcgBbADEAOQAwADgAXQBGAG8AbgB0ACAAZwBlAG4AZQByAGEAdABlAGQAIAB1AHMAaQBuAGcAIABTAHkAbgBjAGYAdQBzAGkAbwBuACAATQBlAHQAcgBvACAAUwB0AHUAZABpAG8AdwB3AHcALgBzAHkAbgBjAGYAdQBzAGkAbwBuAC4AYwBvAG0AAAAAAgAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAQIBAwEEAQUBBgEHAQgBCQEKAQsBDAENAQ4BDwAIVG9wLWljb24LZG93bi1hcnJvdzIKUFZfWm9vbW91dAlQVl9ab29taW4LUFZfRG93bmxvYWQLUFZfQm9va21hcmsJUFZfU2VhcmNoCFBWX1ByaW50C1BWX1ByZXZpb3VzB1BWX05leHQIUFZfQ2xvc2UMUFZfRml0VG9QYWdlB1BWX09wZW4AAA==) format('truetype');\n}\n/* custom code end*/","app.component.ts":"import { Component, ViewEncapsulation, OnInit, ViewChild, Inject } from '@angular/core';\nimport {\n    PdfViewerComponent, LinkAnnotationService, BookmarkViewService, MagnificationService,\n    ToolbarService, NavigationService, TextSelectionService, PrintService,\n    IPageChangeEventArgs,\n    ILoadEventArgs\n} from '@syncfusion/ej2-angular-pdfviewer';\nimport { ToolbarComponent } from '@syncfusion/ej2-angular-navigations';\nimport { DialogComponent } from '@syncfusion/ej2-angular-popups';\nimport { ClickEventArgs } from '@syncfusion/ej2-buttons';\n\n/**\n * Default PdfViewer Controller\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    providers: [LinkAnnotationService, BookmarkViewService, MagnificationService, ToolbarService, NavigationService, TextSelectionService, PrintService],\n    styleUrls: ['app.component.css'],\n})\n\nexport class AppComponent {\n    @ViewChild('pdfviewer')\n    public pdfviewerControl: PdfViewerComponent;\n    @ViewChild('customToolbar')\n    public customToolbar: ToolbarComponent;\n    @ViewChild('zoomToolbar')\n    public zoomToolbar: ToolbarComponent;\n    public service: string = 'https://ej2services.syncfusion.com/production/web-services/api/pdfviewer';\n    public document: string = 'Hive_Succinctly.pdf';\n    constructor() {\n        \n    }\n    ngOnInit(): void {\n        // ngOnInit function\n        document.getElementById('fileUpload').addEventListener('change', this.readFile.bind(this));\n    }\n\n    public openDocument(e: ClickEventArgs): void {\n        document.getElementById('fileUpload').click();\n    }\n\n    public previousClicked(e: ClickEventArgs): void {\n        this.pdfviewerControl.navigation.goToPreviousPage();\n    }\n\n    public nextClicked(e: ClickEventArgs): void {\n        this.pdfviewerControl.navigation.goToNextPage();\n    }\n\n    public printClicked(e: ClickEventArgs): void {\n        this.pdfviewerControl.print.print();\n    }\n\n    public downloadClicked(e: ClickEventArgs): void {\n        let fileName: string = (document.getElementById('fileUpload') as HTMLInputElement).value.split('\\\\').pop();\n        if (fileName !== '') {\n            this.pdfviewerControl.fileName = fileName;\n        }\n        this.pdfviewerControl.download();\n    }\n\n    public pageFitClicked(e: ClickEventArgs): void {\n        this.pdfviewerControl.magnification.fitToPage();\n        this.updateZoomButtons();\n        this.customToolbar.enableItems(document.getElementById('fitPage'), false);\n    }\n\n    public zoomInClicked(e: ClickEventArgs): void {\n        this.pdfviewerControl.magnification.zoomIn();\n        this.updateZoomButtons();\n    }\n\n    public zoomOutClicked(e: ClickEventArgs): void {\n        this.pdfviewerControl.magnification.zoomOut();\n        this.updateZoomButtons();\n    }\n\n    public pageChanged(e: IPageChangeEventArgs): void {\n        (document.getElementById('currentPage') as HTMLInputElement).value = this.pdfviewerControl.currentPageNumber.toString();\n        this.updatePageNavigation();\n    }\n\n    public documentLoaded(e: ILoadEventArgs): void {\n        document.getElementById('totalPage').textContent = 'of ' + this.pdfviewerControl.pageCount;\n        (document.getElementById('currentPage') as HTMLInputElement).value = this.pdfviewerControl.currentPageNumber.toString();\n        this.updatePageNavigation();\n    }\n\n    public onCurrentPageBoxClicked(e: ClickEventArgs): void {\n        (document.getElementById('currentPage') as HTMLInputElement).select();\n    }\n\n    public onCurrentPageBoxKeypress(e: KeyboardEvent): boolean {\n        if ((e.which < 48 || e.which > 57) && e.which !== 8 && e.which !== 13) {\n            e.preventDefault();\n            return false;\n        } else {\n            // tslint:disable-next-line:radix\n            const currentPageNumber: number = parseInt((document.getElementById('currentPage') as HTMLInputElement).value);\n            if (e.which === 13) {\n                if (currentPageNumber > 0 && currentPageNumber <= this.pdfviewerControl.pageCount) {\n                    this.pdfviewerControl.navigation.goToPage(currentPageNumber);\n                } else {\n                    // tslint:disable-next-line:max-line-length\n                    (document.getElementById('currentPage') as HTMLInputElement).value = this.pdfviewerControl.currentPageNumber.toString();\n                }\n            }\n            return true;\n        }\n    }\n\n    private updatePageNavigation(): void {\n        if (this.pdfviewerControl.currentPageNumber === 1) {\n            this.customToolbar.enableItems(document.getElementById('previousPage'), false);\n            this.customToolbar.enableItems(document.getElementById('nextPage'), true);\n        } else if (this.pdfviewerControl.currentPageNumber === this.pdfviewerControl.pageCount) {\n            this.customToolbar.enableItems(document.getElementById('previousPage'), true);\n            this.customToolbar.enableItems(document.getElementById('nextPage'), false);\n        } else {\n            this.customToolbar.enableItems(document.getElementById('previousPage'), true);\n            this.customToolbar.enableItems(document.getElementById('nextPage'), true);\n        }\n    }\n\n    private updateZoomButtons(): void {\n        if (this.pdfviewerControl.zoomPercentage <= 50) {\n            this.zoomToolbar.enableItems(document.getElementById('zoomIn'), true);\n            this.zoomToolbar.enableItems(document.getElementById('zoomOut'), false);\n            this.zoomToolbar.enableItems(document.getElementById('fitPage'), true);\n        } else if (this.pdfviewerControl.zoomPercentage >= 400) {\n            this.zoomToolbar.enableItems(document.getElementById('zoomIn'), false);\n            this.zoomToolbar.enableItems(document.getElementById('zoomOut'), true);\n            this.zoomToolbar.enableItems(document.getElementById('fitPage'), true);\n        } else {\n            this.zoomToolbar.enableItems(document.getElementById('zoomIn'), true);\n            this.zoomToolbar.enableItems(document.getElementById('zoomOut'), true);\n            this.zoomToolbar.enableItems(document.getElementById('fitPage'), true);\n        }\n    }\n\n    // tslint:disable-next-line\n    private readFile(args: any): void {\n        // tslint:disable-next-line\n        let upoadedFiles: any = args.target.files;\n        if (args.target.files[0] !== null) {\n            let uploadedFile: File = upoadedFiles[0];\n            if (uploadedFile) {\n                let reader: FileReader = new FileReader();\n                reader.readAsDataURL(uploadedFile);\n                // tslint:disable-next-line\n                let proxy: any = this;\n                // tslint:disable-next-line\n                reader.onload = (e: any): void => {\n                    let uploadedFileUrl: string = e.currentTarget.result;\n                    proxy.pdfviewerControl.load(uploadedFileUrl, null);\n                };\n            }\n        }\n    }\n}\n"}