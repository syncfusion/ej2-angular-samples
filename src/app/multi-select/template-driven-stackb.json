{"dependencies.json":"{\"@syncfusion/ej2-base\": \"*\", \"@syncfusion/ej2-buttons\": \"*\", \"@syncfusion/ej2-splitbuttons\": \"*\", \"@syncfusion/ej2-calendars\": \"*\", \"@syncfusion/ej2-charts\": \"*\", \"@syncfusion/ej2-diagrams\": \"*\", \"@syncfusion/ej2-maps\": \"*\", \"@syncfusion/ej2-treemap\": \"*\", \"@syncfusion/ej2-circulargauge\": \"*\", \"@syncfusion/ej2-data\": \"*\", \"@syncfusion/ej2-dropdowns\": \"*\", \"@syncfusion/ej2-grids\": \"*\", \"@syncfusion/ej2-inputs\": \"*\", \"@syncfusion/ej2-lists\": \"*\", \"@syncfusion/ej2-navigations\": \"*\", \"@syncfusion/ej2-popups\": \"*\", \"@syncfusion/ej2-lineargauge\": \"*\", \"@syncfusion/ej2-pdf-export\": \"*\", \"@syncfusion/ej2-compression\": \"*\", \"@syncfusion/ej2-excel-export\": \"*\", \"@syncfusion/ej2-file-utils\": \"*\", \"@syncfusion/ej2-svg-base\": \"*\", \"@syncfusion/ej2-documenteditor\": \"*\", \"@syncfusion/ej2-richtexteditor\": \"*\", \"@syncfusion/ej2-notifications\": \"*\", \"@syncfusion/ej2-heatmap\": \"*\", \"@syncfusion/ej2-pivotview\": \"*\", \"@syncfusion/ej2-schedule\": \"*\", \"@syncfusion/ej2-layouts\": \"*\", \"@syncfusion/ej2-angular-base\": \"*\", \"@syncfusion/ej2-angular-buttons\": \"*\", \"@syncfusion/ej2-angular-splitbuttons\": \"*\", \"@syncfusion/ej2-angular-calendars\": \"*\", \"@syncfusion/ej2-angular-charts\": \"*\", \"@syncfusion/ej2-angular-diagrams\": \"*\", \"@syncfusion/ej2-angular-maps\": \"*\", \"@syncfusion/ej2-angular-treemap\": \"*\", \"@syncfusion/ej2-angular-circulargauge\": \"*\", \"@syncfusion/ej2-angular-dropdowns\": \"*\", \"@syncfusion/ej2-angular-grids\": \"*\", \"@syncfusion/ej2-angular-inputs\": \"*\", \"@syncfusion/ej2-angular-lists\": \"*\", \"@syncfusion/ej2-angular-navigations\": \"*\", \"@syncfusion/ej2-angular-popups\": \"*\", \"@syncfusion/ej2-angular-lineargauge\": \"*\", \"@syncfusion/ej2-angular-documenteditor\": \"*\", \"@syncfusion/ej2-angular-richtexteditor\": \"*\", \"@syncfusion/ej2-angular-notifications\": \"*\", \"@syncfusion/ej2-angular-heatmap\": \"*\", \"@syncfusion/ej2-angular-pivotview\": \"*\", \"@syncfusion/ej2-angular-schedule\": \"*\", \"@syncfusion/ej2-angular-layouts\": \"*\" , \"@angular/http\": \"*\", \"rxjs-compat\":\"*\"}","main.ts":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n","polyfills.ts":"/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol';\n// import 'core-js/es6/object';\n// import 'core-js/es6/function';\n// import 'core-js/es6/parse-int';\n// import 'core-js/es6/parse-float';\n// import 'core-js/es6/number';\n// import 'core-js/es6/math';\n// import 'core-js/es6/string';\n// import 'core-js/es6/date';\n// import 'core-js/es6/array';\n// import 'core-js/es6/regexp';\n// import 'core-js/es6/map';\n// import 'core-js/es6/weak-map';\n// import 'core-js/es6/set';\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect';\n\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\nimport 'core-js/es7/reflect';\n\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n **/\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n */\n\n // (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n // (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n // (window as any).__zone_symbol__BLACK_LISTED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n\n /*\n * in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n * with the following flag, it will bypass `zone.js` patch for IE/Edge\n */\n// (window as any).__Zone_enable_cross_context_check = true;\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n<link href=\"../styles/OpenNew.css\" rel=\"stylesheet\">\n  <link href=\"//cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\" />\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body class=\"ej2-new\"> \n\n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WLQL39J\"height=\"0\"width=\"0\"style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app/app.module.ts":"import { MultiSelectAllModule } from '@syncfusion/ej2-angular-dropdowns';\n\nimport { NumericTextBoxModule } from '@syncfusion/ej2-angular-inputs';\n\nimport { CheckBoxModule, ButtonModule } from '@syncfusion/ej2-angular-buttons';\n\nimport { HttpModule } from '@angular/http';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { RouterModule } from '@angular/router';\n\nimport { CommonModule } from '@angular/common';\n\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from '../app.component';\n@NgModule({ declarations: [   AppComponent ], imports: [ MultiSelectAllModule, BrowserModule, ButtonModule, CheckBoxModule, NumericTextBoxModule, FormsModule,             ReactiveFormsModule,BrowserModule], providers: [], bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","app.component.html":"\n<div class=\"control-section\">\n    <div class=\"col-lg-8  content-wrapper\">\n        <div id='content' class='box-form' style=\"margin: 0 auto; width:250px; padding:30px\">\n            <form #form=\"ngForm\">\n                <div class=\"form-group\">\n                    <ejs-multiselect name=\"skillname\" required #book='ngModel' [(ngModel)]='autoskillname' allowCustom=false [dataSource]='autoSkillsetData' [placeholder]='autoDrivenPlaceholder'>\n                    </ejs-multiselect>\n                    <div *ngIf=\"book.invalid && book.touched\"\n                     class=\"alert alert-danger\">\n                        <div *ngIf=\"book.errors.required\">\n                        Book Name is required.\n                        </div>\n                    </div>\n\n                </div>\n                <div class=\"form-group\" style=\"padding-top:10px;\">\n                    <div class=\"e-float-input\">\n                        <input type=\"text\" autocomplete=\"off\" required #sname='ngModel' (focus)=\"onfocus($event)\" (blur)=\"onblur($event)\" [(ngModel)]=\"autosname\" name=\"sname\" maxlength=\"10\"\n                        />\n                        <span class=\"e-float-line\"></span>\n                        <label class=\"e-float-text e-label-bottom\">Name:</label>\n                    </div>\n                    <div *ngIf=\"sname.invalid && (sname.dirty || sname.touched)\"\n                    class=\"alert alert-danger\">\n                       <div *ngIf=\"sname.errors.required\">\n                           Name is required.\n                       </div>\n                   </div>\n                </div>\n                <div class=\"form-group\" style=\"padding-top:10px;\">\n                    <div class=\"e-float-input\">\n                        <input type=\"text\" autocomplete=\"off\" required email #smail='ngModel' (focus)=\"onfocus($event)\" (blur)=\"onblur($event)\" [(ngModel)]=\"autosmail\" name=\"smail\" maxlength=\"15\"\n                        />\n                        <span class=\"e-float-line\"></span>\n                        <label class=\"e-float-text e-label-bottom\">Email:</label>\n                    </div>\n                    <div *ngIf=\"smail.invalid && (smail.dirty || smail.touched)\"\n                    class=\"alert alert-danger\">\n                       <div *ngIf=\"smail.errors.required\">\n                           Email is required.\n                       </div>\n                       <div *ngIf=\"smail.errors.email\">  \n                            Enter a valid email address\n                        </div>\n                   </div>\n                </div>\n                <div class=\"form-group\" style=\"padding:10px;\">\n                    <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6\">\n                        <button ejs-button [disabled]=\"!form.valid\">Submit</button>\n                    </div>\n                    <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6\">\n                        <button ejs-button (click)=\"onreset($event)\" type=\"reset\" [disabled]=\"!(book.valid || sname.valid || smail.valid)\">Reset</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n    <div class=\"col-lg-4 property-section\">\n        <div class=\"property-panel-section\">\n            <div class=\"property-panel-header\">Properties</div>\n            <div class=\"property-panel-content\" style=\"padding: 10px;\">\n                <table id=\"property\" title=\"Properties\" class=\"box-table\" style=\"width: 100%;\">\n                    <tr>\n                        <td style=\"width:50%\">Selected Book: </td>\n                        <td class=\"formtext\">{{ autoskillname }}</td>\n                    </tr>\n                    <tr>\n                        <td style=\"width:50%\">Buyer Name: </td>\n                        <td class=\"formtext\">{{ autosname }}</td>\n                    </tr>\n                    <tr>\n                        <td style=\"width:50%\">Buyer Mail ID: </td>\n                        <td class=\"formtext\">{{ autosmail }}</td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","app.component.css":".box-form {\n    webkit-box-shadow: 0 2px 2px 0 rgba(0,0,0,0.14), 0 3px 1px -2px rgba(0,0,0,0.12), 0 1px 5px 0 rgba(0,0,0,0.2);\n    box-shadow: 0 2px 2px 0 rgba(0,0,0,0.14), 0 3px 1px -2px rgba(0,0,0,0.12), 0 1px 5px 0 rgba(0,0,0,0.2);\n}\ntable.box-table td {\n    padding-top: 10px;\n}\n.highcontrast .box-form {\n    webkit-box-shadow: 0 2px 2px 0 rgb(255, 217, 57), 0 3px 1px -2px rgb(255, 217, 57), 0 1px 5px 0 rgb(255, 217, 57);\n    box-shadow: 0 2px 2px 0 rgb(255, 217, 57), 0 3px 1px -2px rgb(255, 217, 57), 0 1px 5px 0 rgb(255, 217, 57);\n}\ntable.box-table td.formtext {\n    color:#8a2be2;\n    word-break: break-all;\n}\n.highcontrast table.box-table td.formtext {\n    color:#f8fc08;\n}","app.component.ts":"/**\n * MultiSelect Template Driven Sample\n */\nimport { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n    public autoSkillsetData: string[] = [\n        'ASP.NET', 'ActionScript', 'Basic',\n        'C++' , 'C#' , 'dBase' , 'Delphi' ,\n        'ESPOL' , 'F#' , 'FoxPro' , 'Java',\n        'J#' , 'Lisp' , 'Logo' , 'PHP'\n    ];\n    public autoDrivenPlaceholder: String = 'Select book';\n\n    public autoskillname: string =  null;\n\n    public autosname: string = '';\n\n    public autosmail: string =  '';\n\n    onfocus(element: FocusEvent) : void {\n        let target: HTMLInputElement = element.target as HTMLInputElement;\n        let parentNode: HTMLElement = target.parentNode as HTMLElement;\n        if (parentNode.classList.contains('e-input-in-wrap')) {\n            parentNode = (parentNode.parentNode as HTMLElement);\n        }\n        parentNode.classList.add('e-input-focus');\n        parentNode.querySelector('.e-float-text').classList.add('e-label-top');\n        parentNode.querySelector('.e-float-text').classList.remove('e-label-bottom');\n    }\n    onblur(element: FocusEvent) : void {\n        let target: HTMLInputElement = element.target as HTMLInputElement;\n        let parentNode: HTMLElement = target.parentNode as HTMLElement;\n        if (parentNode.classList.contains('e-input-in-wrap')) {\n            (parentNode.parentNode as HTMLElement).classList.remove('e-input-focus');\n        }\n        parentNode.classList.remove('e-input-focus');\n        if (target.value === null || target.value === '') {\n            parentNode.querySelector('.e-float-text').classList.remove('e-label-top');\n            parentNode.querySelector('.e-float-text').classList.add('e-label-bottom');\n        }else {\n            parentNode.querySelector('.e-float-text').classList.add('e-label-top');\n            parentNode.querySelector('.e-float-text').classList.remove('e-label-bottom');\n        }\n    }\n    onreset(element: MouseEvent) : void {\n        let parentNode: NodeListOf<HTMLElement> = document.getElementsByClassName('box-form')[0].querySelectorAll('.e-float-text');\n        for (let i: number = 0; i < parentNode.length; i++) {\n            parentNode[i].classList.remove('e-label-top');\n            parentNode[i].classList.add('e-label-bottom');\n        }\n    }\n}\n","data.ts":""}