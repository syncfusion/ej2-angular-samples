{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation } from '@angular/core';\nimport { TaggingEventArgs, MultiSelectModule } from '@syncfusion/ej2-angular-dropdowns';\n\n\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ MultiSelectModule, ]\n})\nexport class AppComponent {\n    // define the JSON of data\n    public colorsData: { [key: string]: Object }[] = [\n        { Color: 'Chocolate', Code: '#75523C' },\n        { Color: 'CadetBlue', Code: '#3B8289' },\n        { Color: 'DarkOrange', Code: '#FF843D' },\n        { Color: 'DarkRed', Code: '#CA3832' },\n        { Color: 'Fuchsia', Code: '#D44FA3' },\n        { Color: 'HotPink', Code: '#F23F82' },\n        { Color: 'Indigo', Code: '#2F5D81' },\n        { Color: 'LimeGreen', Code: '#4CD242' },\n        { Color: 'OrangeRed', Code: '#FE2A00' },\n        { Color: 'Tomato', Code: '#FF745C' }\n    ];\n\n    // map the appropriate columns to fields property\n    public fields: { [key: string]: string } = { text: 'Color', value: 'Code' };\n    // set the value to MultiSelect\n    public colorValues: string[] = ['#75523C', '#4CD242', '#FF745C', '#3B8289', '#CA3832'];\n    // set the placeholder to MultiSelect input element\n    public waterMark: string = 'Favorite Colors';\n    // set the type of mode for how to visualized the selected items in input element.\n    public box: string = 'Box';\n    // bind the tagging event\n    public onTagging = (e: TaggingEventArgs) => {\n        // set the current selected item text as class to chip element.\n        e.setClass((e.itemData as any)[this.fields.text].toLowerCase());\n      }\n\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n\n<div id=\"multiselect-chip-customization\" class=\"control-section\">\n    <div class=\"control-styles ms-chip-customize\">\n        <label class=\"h4\">Chip Customization</label>\n        <ejs-multiselect id='chip-customization' [value]='colorValues' [dataSource]='colorsData' (tagging)='onTagging($event)' [mode]='box'\n            [placeholder]='waterMark' [fields]='fields'></ejs-multiselect>\n    </div>\n</div>\n\n<style>\n    .control-styles {\n        padding-top: 30px;\n    }\n\n    .control-styles.ms-chip-customize .h4 {\n        font-size: 16px;\n        margin: 0 0 10px;\n        font-weight: bold;\n    }\n\n</style>","app.component.css":"#multiselect-chip-customization.control-section {\n    width: 80%;\n    margin: 0 auto;\n    min-width: 185px;\n}\n\n.e-bigger #multiselect-chip-customization.control-section {\n    width: 100%;\n}\n\n#multiselect-chip-customization.control-section .e-multi-select-wrapper .e-chips{\n  opacity: 0.9;\n}\n\n#multiselect-chip-customization.control-section .e-multi-select-wrapper .e-chips:hover{\n  opacity: 1;\n}\n\n#multiselect-chip-customization.control-section .e-multi-select-wrapper .e-chips .e-chips-close.e-icon::before,\n#multiselect-chip-customization.control-section .e-multi-select-wrapper .e-chips .e-chipcontent,\n#multiselect-chip-customization.control-section .e-multi-select-wrapper .e-chips .e-chipcontent:hover {\n    color: #ffffff;\n}\n\n.e-chips.chocolate,\n.e-chips.chocolate:hover {\n    background-color: #75523C;\n}\n\n.e-chips.darkorange,\n.e-chips.darkorange:hover {\n    background-color: #FF843D;\n}\n\n.e-chips.darkred,\n.e-chips.darkred:hover {\n    background-color: #CA3832;\n}\n\n.e-chips.fuchsia,\n.e-chips.fuchsia:hover {\n    background-color: #D44FA3;\n}\n\n.e-chips.cadetblue,\n.e-chips.cadetblue:hover {\n    background-color: #3B8289;\n}\n\n.e-chips.hotpink,\n.e-chips.hotpink:hover {\n    background-color: #F23F82;\n}\n\n.e-chips.indigo,\n.e-chips.indigo:hover {\n    background-color: #2F5D81;\n}\n\n.e-chips.limegreen,\n.e-chips.limegreen:hover {\n    background-color: #4CD242;\n}\n\n.e-chips.orangered,\n.e-chips.orangered:hover {\n    background-color: #FE2A00;\n}\n\n.e-chips.tomato,\n.e-chips.tomato:hover {\n    background-color: #FF745C;\n}\n\n.fabric .e-chips.chocolate,\n.fabric .e-chips.chocolate:hover {\n    background-color: #3c2f27;\n}\n\n.fabric .e-chips.darkred,\n.fabric .e-chips.darkred:hover {\n    background-color: #960f0a;\n}\n\n.fabric .e-chips.cadetblue,\n.fabric .e-chips.cadetblue:hover {\n    background-color: #36bac7;\n}\n\n.fabric .e-chips.indigo,\n.fabric .e-chips.indigo:hover {\n    background-color: #58a4df;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}