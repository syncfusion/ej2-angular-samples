{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"/**\n * MultiSelect Virtualization Sample\n */\nimport { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MultiSelectComponent, VirtualScroll, MultiSelectModule, DropDownListComponent, DropDownListModule, visualMode } from '@syncfusion/ej2-angular-dropdowns';\nimport { Query, DataManager, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { CheckBoxComponent, CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\n\n\n\nMultiSelectComponent.Inject(VirtualScroll);\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ MultiSelectModule, DropDownListModule, CheckBoxModule, ]\n})\nexport class AppComponent {\n    @ViewChild('local')\n    public local: MultiSelectComponent;\n    @ViewChild('remote')\n    public remote: MultiSelectComponent;\n    @ViewChild('default')\n    public default: MultiSelectComponent;\n    @ViewChild('group')\n    public group: MultiSelectComponent;\n    @ViewChild('template')\n    public template: MultiSelectComponent;\n    @ViewChild('allowFiltering')\n    public allowFiltering: CheckBoxComponent;\n    @ViewChild('allowCustomValue')\n    public allowCustomValue: CheckBoxComponent;\n    @ViewChild('hideSelectedItem')\n    public hideSelectedItem: CheckBoxComponent;\n    @ViewChild('closePopupOnSelect')\n    public closePopupOnSelect: CheckBoxComponent;\n    @ViewChild('mode')\n    // country DropDownList instance\n    public mode: DropDownListComponent;\n    // defined the array of data\n    public records: { [key: string]: Object }[] = [];\n    constructor() {\n        for (let i = 1; i <= 150; i++) {\n            let item: { [key: string]: Object } = {};\n            item.id = 'id' + i;\n            item.text = `Item ${i}`;\n        \n            // Generate a random number between 1 and 4 to determine the group\n            const randomGroup = Math.floor(Math.random() * 4) + 1;\n            switch (randomGroup) {\n                case 1:\n                    item.group = 'Group A';\n                    break;\n                case 2:\n                    item.group = 'Group B';\n                    break;\n                case 3:\n                    item.group = 'Group C';\n                    break;\n                case 4:\n                    item.group = 'Group D';\n                    break;\n                default:\n                    break;\n            }\n            this.records.push(item);\n        }\n    }\n    public defaultMode : string = 'Default';\n    public box : string = 'Box';\n    public delimiter : string = 'Delimiter';\n    public checkBox : string = 'CheckBox';\n    // bind the DataManager instance to dataSource property\n    public customerData: DataManager = new DataManager({\n        url: 'https://services.syncfusion.com/angular/production/api/VirtualDropdownData',\n        adaptor: new UrlAdaptor,\n        crossDomain: true\n    });\n    public onChange(): void {\n        // enable or disable the select all in Multiselect based on CheckBox checked state\n        this.local.allowFiltering = this.allowFiltering.checked;\n        this.remote.allowFiltering = this.allowFiltering.checked;\n        this.group.allowFiltering = this.allowFiltering.checked;\n        this.default.allowFiltering = this.allowFiltering.checked;\n        this.template.allowFiltering = this.allowFiltering.checked;\n    }\n    public onChangeCustom(): void {\n        // enable or disable the select all in Multiselect based on CheckBox checked state\n        this.local.allowCustomValue = this.allowCustomValue.checked;\n        this.remote.allowCustomValue = this.allowCustomValue.checked;\n        this.group.allowCustomValue = this.allowCustomValue.checked;\n        this.default.allowCustomValue = this.allowCustomValue.checked;\n        this.template.allowCustomValue = this.allowCustomValue.checked;\n    }\n    public onChangeHide(): void {\n        // enable or disable the select all in Multiselect based on CheckBox checked state\n        this.local.hideSelectedItem = this.hideSelectedItem.checked;\n        this.remote.hideSelectedItem = this.hideSelectedItem.checked;\n        this.default.hideSelectedItem = this.hideSelectedItem.checked;\n        this.template.hideSelectedItem = this.hideSelectedItem.checked;\n    }\n    public onChangeClose(): void {\n        // enable or disable the select all in Multiselect based on CheckBox checked state\n        this.local.closePopupOnSelect = this.closePopupOnSelect.checked;\n        this.remote.closePopupOnSelect = this.closePopupOnSelect.checked;\n        this.default.closePopupOnSelect = this.closePopupOnSelect.checked;\n        this.template.closePopupOnSelect = this.closePopupOnSelect.checked;\n    }\n    // maps the appropriate column to fields property\n    public fields: { [key: string]: string } = { text: 'text', value: 'id' };\n    public value = ['id10', 'id50', 'id100', \"custom\"];\n    public customerField: { [key: string]: string } = { text: 'OrderID', value: 'OrderID' };\n    public groupField: { [key: string]: string } = { groupBy: 'group', text: 'text', value: 'id' };\n    public waterMark: string = 'e.g. Item 1';\n    public customerWaterMark: string = 'e.g OrderId';\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n\n<div class=\"control-section col-lg-8\">\n    <div class=\"control-wrapper\">\n      <label class=\"h4\">Local Data</label>\n      <ejs-multiselect id='local' #local [dataSource]='records' [mode]='box' [fields]='fields' [allowFiltering]='true' [hideSelectedItem] ='true' [closePopupOnSelect]='true' [allowCustomValue]=\"true\" [enableVirtualization]='true' [placeholder]='waterMark' [showDropDownIcon]='true' popupHeight='200px'></ejs-multiselect>\n    </div>\n    <div class=\"control-wrapper\">\n      <label class=\"h4\">Remote Data</label>\n      <ejs-multiselect id='remote' #remote [dataSource]='customerData' [mode]='delimiter' [fields]='customerField' [allowFiltering]='true' [hideSelectedItem] ='true' [closePopupOnSelect]='true' [allowCustomValue]=\"true\" [enableVirtualization]='true' [placeholder]='customerWaterMark' [showDropDownIcon]='true' popupHeight='200px'></ejs-multiselect>\n    </div>\n    <div class=\"control-wrapper\">\n      <label class=\"h4\">Default Values</label>\n      <ejs-multiselect id='default' #default [dataSource]='records' [value]='value' [mode]='defaultMode' [fields]='fields' [allowFiltering]='true' [hideSelectedItem] ='true' [closePopupOnSelect]='true' [allowCustomValue]=\"true\" [enableVirtualization]='true' [placeholder]='waterMark' [showDropDownIcon]='true' popupHeight='200px'></ejs-multiselect>\n    </div>\n    <div class=\"control-wrapper\">\n      <label class=\"h4\">Grouping</label>\n      <ejs-multiselect id='group' #group [dataSource]='records' [mode]='checkBox' [fields]='groupField' [allowFiltering]='true' [allowCustomValue]=\"true\" [enableSelectionOrder]='false' [enableVirtualization]='true' [placeholder]='waterMark' [showDropDownIcon]='true' popupHeight='200px'></ejs-multiselect>\n    </div>\n    <div class=\"control-wrapper\">\n      <label class=\"h4\">Template</label>\n      <ejs-multiselect id='template' #template [dataSource]='records' [mode]='defaultMode' [fields]='fields' [allowFiltering]='true' [hideSelectedItem] ='true' [closePopupOnSelect]='true' [allowCustomValue]=\"true\" [enableVirtualization]='true' [placeholder]='waterMark' [showDropDownIcon]='true' popupHeight='200px'>\n        <ng-template #headerTemplate>\n          <div class=\"header\"><span style=\"margin-left:17px\">Items Info</span></div>\n        </ng-template>\n        <ng-template #itemTemplate let-data>\n          <div class=\"ename\" style=\"height: 40px\"> {{data.text}} </div>\n        </ng-template>\n        <ng-template #valueTemplate let-data>\n          <div class=\"name\"> {{data.text}} </div>\n        </ng-template>\n      </ejs-multiselect>\n    </div>\n  </div>\n  <div class=\"col-lg-4 property-section\">\n    <div class=\"property-panel-section\">\n      <div class=\"property-panel-header\">Properties</div>\n      <div class=\"property-panel-content\">\n        <table id=\"property\" class=\"property-panel-table\" title=\"Properties\">\n          <tr>\n            <td style=\"width: 50%;\">\n              <div>\n                <ejs-checkbox #allowFiltering label=\"AllowFiltering\" [checked]=\"true\"\n                  (change)=\"onChange()\"></ejs-checkbox>\n              </div>\n            </td>\n          </tr>\n          <tr>\n            <td style=\"width: 50%;\">\n              <div>\n                <ejs-checkbox #allowCustomValue label=\"AllowCustomValue\" [checked]=\"true\"\n                  (change)=\"onChangeCustom()\"></ejs-checkbox>\n              </div>\n            </td>\n          </tr>\n          <tr>\n            <td style=\"width: 50%;\">\n              <div>\n                <ejs-checkbox #hideSelectedItem label=\"HideSelectedItem\" [checked]=\"true\"\n                  (change)=\"onChangeHide()\"></ejs-checkbox>\n              </div>\n            </td>\n          </tr>\n          <tr>\n            <td style=\"width: 50%;\">\n              <div>\n                <ejs-checkbox #closePopupOnSelect label=\"ClosePopupOnSelect\" [checked]=\"true\"\n                  (change)=\"onChangeClose()\"></ejs-checkbox>\n              </div>\n            </td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  </div>\n\n<style>\n  .control-wrapper .h4 {\n      font-size: 16px;\n      margin: 0 0 10px;\n      font-weight: bold;\n  }\n\n</style>","app.component.css":".control-section .control-wrapper {\n    width: 80%;\n    margin: 0 auto;\n    width: 250px;\n    padding-top: 15px\n}\n\n.e-list-icon {\n    font-family: 'e-icons' !important;\n    color: rgba(0, 0, 0, .57);\n}\n\n.header {\n    font-weight: 600;\n    color: rgba(0, 0, 0, .54);\n    height: 48px;\n    padding: 15px 0 0 16px;\n    font-size: 16px;\n    background-color: #f5f5f5;\n}\n\n/* custom code start*/\n.fabric .header {\n    background-color: #fff;\n    border-bottom: 1px solid #ccc;\n    color: #0078d7;\n    font-weight: 400;\n}\n\n.fluent-dark .header,\n.fluent2-dark .header,\n.fluent2-highcontrast .header {\n    background: #252423;\n    color: #2899F5;\n}\n\n.bootstrap5-dark .header {\n    background: #343A40;\n    color: #7B848D;\n}\n\n.fluent .header {\n    color: #2899F5;\n}\n\n.tailwind-dark .header,\n.tailwind3-dark .header{\n    background: #374151;\n    color: rgb(255, 255, 255);\n}\n\n.material3-dark .header,\n.material-dark .header {\n    background: rgb(66, 66, 66);\n    color: rgb(255, 255, 255);\n}\n\n.fabric-dark .header {\n    background: rgb(40, 39, 39);\n    color: rgb(255, 255, 255);\n}\n\n.bootstrap-dark .header {\n    background: rgb(49, 49, 49);\n    color: rgb(255, 255, 255);\n}\n\n.bootstrap .header {\n    background-color: #f5f5f5;\n    border-bottom: 1px solid #ccc;\n    color: #777;\n    font-family: \"Helvetica Neue\", \"Helvetica\", \"Arial\", \"sans-serif\";\n    font-weight: 600;\n    font-size: 15px;\n    height: 48px;\n    padding: 15px 0 0 16px;\n}\n\n.highcontrast .header {\n    color: #fff;\n    background-color: #000;\n}\n\n.bootstrap4 .header {\n    color: #6c757d;\n}\n\n.e-bigger.bootstrap .header {\n    height: 44px;\n    font-size: 13px;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}