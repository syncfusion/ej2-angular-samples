{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewChild, OnInit } from '@angular/core';\nimport { ChangeEventArgs } from '@syncfusion/ej2-dropdowns';\nimport { GridComponent, FilterService, FilterType, SortService, GridModule, PageService } from '@syncfusion/ej2-angular-grids';\nimport { CheckBoxComponent, CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\nimport { Query, DataManager, UrlAdaptor } from '@syncfusion/ej2-data';\n\n\nimport { DropDownListModule } from '@syncfusion/ej2-angular-dropdowns';\n\nconst SERVICE_URI: string = 'https://services.syncfusion.com/angular/production/';\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    providers: [FilterService, SortService, PageService],\n    standalone: true,\n    imports: [DropDownListModule, CheckBoxModule, GridModule,  ]\n})\nexport class AppComponent {\n    public data: DataManager;\n    public query: Query;\n    public ddldata: Object[];\n    public pageSettings: Object;\n    public filterSettings: Object;\n    public filteringType: Object[] = [\n        { Id: 'Menu', type: 'Menu' },\n        { Id: 'CheckBox', type: 'Checkbox' },\n        { Id: 'Excel', type: 'Excel' }\n    ];\n    public ddlfields: Object = { text: 'type', value: 'Id' };\n\n    @ViewChild('grid')\n    public grid: GridComponent;\n\n    @ViewChild('checkbox')\n    public checkBoxInstance: CheckBoxComponent;\n\n    ngOnInit(): void {\n        this.data = new DataManager({ url: SERVICE_URI + 'api/UrlDataSource', adaptor: new UrlAdaptor });\n        this.query = new Query().addParams('dataCount', '10000');\n        this.pageSettings = { pageCount: 5 };\n        this.filterSettings = { type: 'Menu' };\n        this.ddldata = this.filteringType;\n    }\n    public onChange(e: ChangeEventArgs): void {\n        this.checkBoxInstance.checked = false;\n        this.grid.filterSettings.enableInfiniteScrolling = false;\n        this.grid.filterSettings.type = <FilterType>e.value;\n        this.grid.clearFiltering();\n        if (this.grid.filterSettings.type === 'Excel' || this.grid.filterSettings.type === 'CheckBox') {\n            this.checkBoxInstance.disabled = false;\n        } else {\n            this.checkBoxInstance.disabled = true;\n        }\n    }\n    public changeHandler(e: any): void {\n        this.grid.filterSettings.enableInfiniteScrolling = e.checked;\n    }\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section\">\n    <div class=\"select-wrap\">\n        <ejs-dropdownlist id='ddlelement' [dataSource]='ddldata' value='Menu' [fields]='ddlfields' (change)=\"onChange($event)\"></ejs-dropdownlist>\n    </div>\n    <ejs-checkbox #checkbox label='Enable OnDemand: ' labelPosition='Before' disabled=\"true\" (change)=\"changeHandler($event)\"></ejs-checkbox>\n    <ejs-grid #grid [dataSource]='data' [query]='query' allowSorting='true' allowPaging='true' allowFiltering='true' [pageSettings]='pageSettings' [filterSettings]='filterSettings'>\n        <e-columns>\n            <e-column field='EmployeeID' headerText='Employee ID' width='120' textAlign='Right' ></e-column>\n            <e-column field='Employees' headerText='Employee Name' width='150'></e-column>\n            <e-column field='Designation' headerText='Designation' width='130' textAlign='Right'></e-column>\n            <e-column field='CurrentSalary' headerText='CurrentSalary' width='120' format='C2' textAlign='Right'></e-column>\n        </e-columns>\n    </ejs-grid>\n\n\n","app.component.css":".select-wrap {\n    padding: 0 0 10px 0;\n    font-family: Roboto;\n    padding: 1em;\n    display: inline-block;\n}\n\n.select-wrap .e-ddl.e-input-group .e-ddl-hidden {\n    width: 0;\n}\n\n.select-wrap select {\n    height: 28px;\n    width: 100%;\n    border-width: 0 0 2px 0;\n    background: transparent;\n}\n\n.select-wrap select:focus {\n    border-bottom-style: solid;\n    border-color: #ff4081;\n}\n\n.select-wrap select,\n.select-wrap select option {\n    outline: none;\n    font-size: 14px;\n    padding: .2em;\n    height: 30px;\n}\n\n@media (min-width: 480px) and (max-width:639px) {\n    .select-wrap {\n        width: 40%\n    }\n}\n\n@media (min-width:640px) {\n    .select-wrap {\n        width: 25%\n    }\n}\n\n\n\n\n","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-grids\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-angular-popups\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-angular-calendars\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}