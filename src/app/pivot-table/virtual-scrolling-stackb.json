{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, OnInit, ViewChild } from '@angular/core';\nimport { IDataOptions, PivotView, IDataSet, PivotViewModule, VirtualScrollService, VirtualScrollSettings } from '@syncfusion/ej2-angular-pivotview';\nimport { GridSettings } from '@syncfusion/ej2-pivotview/src/pivotview/model/gridsettings';\nimport { Browser, enableRipple } from '@syncfusion/ej2-base';\nimport { Button } from '@syncfusion/ej2-buttons';\nimport { ButtonModule } from '@syncfusion/ej2-angular-buttons';\n\n\nenableRipple(false);\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['app.component.css'],\n    providers: [VirtualScrollService],\n    standalone: true,\n    imports: [PivotViewModule,   ButtonModule]\n})\nexport class AppComponent {\n    public gridSettings: GridSettings;\n    public dataSourceSettings: IDataOptions;\n    public virtualScrollSettings: VirtualScrollSettings;\n    public customername: string[] = ['TOM', 'Hawk', 'Jon', 'Chandler', 'Monica', 'Rachel', 'Phoebe', 'Gunther',\n        'Ross', 'Geller', 'Joey', 'Bing', 'Tribbiani', 'Janice', 'Bong', 'Perk', 'Green', 'Ken', 'Adams'];\n    public city: string[] = ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Philadelphia', 'Phoenix', 'San Antonio', 'Austin',\n        'San Francisco', 'Columbus', 'Washington', 'Portland', 'Oklahoma', 'Las Vegas', 'Virginia', 'St. Louis', 'Birmingham'];\n    public date1: number;\n    public date2: number;\n    public isInit: boolean;\n    @ViewChild('pivotview')\n    public pivotObj: PivotView;\n    @ViewChild('loadbtn')\n    public applyBtn: Button;\n    public width: string | number;\n\n    data(count: number): Object[] {\n        let result: Object[] = [];\n        let dt: number = 0;\n        for (let i: number = 1; i < (count + 1); i++) {\n            dt++;\n            let round: string;\n            let toString: string = i.toString();\n            if (toString.length === 1) {\n                round = '0000' + (i);\n            }\n            else if (toString.length === 2) {\n                round = '000' + i;\n            }\n            else if (toString.length === 3) {\n                round = '00' + i;\n            } else if (toString.length === 4) {\n                round = '0' + i;\n            } else {\n                round = toString;\n            }\n            result.push({\n                ProductID: 'PRO-' + round,\n                City: this.city[Math.round(Math.random() * this.city.length)] || this.city[0],\n                Year: \"FY \" + (dt + 2013),\n                CustomerName: this.customername[Math.round(Math.random() * this.customername.length)] || this.customername[0],\n                Price: Math.round(Math.random() * 5000) + 5000,\n                Sold: Math.round(Math.random() * 80) + 10,\n            });\n            if (dt / 2 == 1) {\n                dt = 0;\n            }\n        }\n        return result;\n    };\n\n    show(): void {\n        document.getElementById('popup').style.display = 'inline-block';\n    }\n\n    applyData(e: Event): void {\n        this.show();\n        this.isInit = true;\n        this.pivotObj.dataSourceSettings.dataSource = this.data(100000) as IDataSet[];\n        this.date1 = new Date().getTime();\n    }\n\n    ondataBound(args: any): void {\n\t if((this.pivotObj.dataSourceSettings.dataSource as IDataSet[]).length > 0) {\n        if (this.date1 && this.isInit) {\n            this.date2 = new Date().getTime();\n            document.getElementById('performanceTime').innerHTML = 'Time Taken: ' + (this.date2 - this.date1) / 1000 + ' sec';\n        }\n        this.isInit = false;\n        this.applyBtn.disabled = true;\n        document.getElementById('popup').style.display = 'none';\n\t  }\n      if (Browser.isDevice && this.pivotObj && this.pivotObj.enableRtl) {\n        document.querySelector('.control-section').classList.add('e-rtl');\n       }\n    }\n\n    ngOnInit(): void {\n        this.virtualScrollSettings = {\n            allowSinglePage: true\n        } as VirtualScrollSettings;\n        \n        this.dataSourceSettings = {\n            dataSource: [],\n            enableSorting: false,\n            expandAll: true,\n            formatSettings: [{ name: 'Price', format: 'C0' }],\n            rows: [{ name: 'ProductID' }],\n            columns: [{ name: 'Year' }],\n            values: [{ name: 'Price', caption: 'Unit Price' }, { name: 'Sold', caption: 'Unit Sold' }]\n        };\n        \n        this.width = '100%';\n    }\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section\">\n    <div id=\"btn-control\" style=\"margin-bottom:5px;\">\n        <button #loadbtn id=\"load-btn\" ejs-button class=\"e-primary e-info\" (click)='applyData($event)'>Load 100K Data</button>\n        <span id=\"popup\">\n            <span id=\"gif\" className=\"image\"></span>\n        </span>\n        <span id=\"performanceTime\">Time Taken: 0 sec</span>\n    </div>\n    <ejs-pivotview #pivotview id='PivotView' [dataSourceSettings]=dataSourceSettings [width]='width' height='300' enableVirtualization='true'\n        [gridSettings]='gridSettings' (dataBound)='ondataBound($event)' [virtualScrollSettings]='virtualScrollSettings'>\n    </ejs-pivotview>\n</div>\n<style>\n    .image {\n       position: absolute;\n       background-repeat: no-repeat;\n       background-image: url('src/grid/images/spinner.gif');\n       background-position: center;\n       width: 16px;\n       height: 28px;\n   }\n\n   .e-bigger .image {\n       height: 36px;\n   }\n   \n   #popup {\n       position: absolute;\n       background-color: transparent;\n       display: none;\n       z-index: 100;\n   }\n   .div-button{\n       margin: 5px 5px 5px 0;\n   }\n   #performanceTime {\n       float: right;\n       margin-top: 3px;\n       margin-right: 27px;\n   }\n\n   .e-bigger #performanceTime{\n       margin-top: 8px;\n   }\n</style>","app.component.css":"#PivotView {\n    width: 100%;\n    height: 100%;\n    display: block;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-pivotview\":\"*\",\"@syncfusion/ej2-pivotview/src/pivotview/model/gridsettings\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}