{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, OnInit, ViewEncapsulation, ViewChild } from '@angular/core';\nimport {\n    IDataOptions, IDataSet, PivotViewModule, PivotView, GroupingBarService, FieldListService,\n    VirtualScrollService, ToolbarService, ExcelExportService, DisplayOption\n} from '@syncfusion/ej2-angular-pivotview';\nimport { ChartSettings } from '@syncfusion/ej2-pivotview/src/pivotview/model/chartsettings';\nimport { GridSettings } from '@syncfusion/ej2-pivotview/src/pivotview/model/gridsettings';\nimport { enableRipple, Browser } from '@syncfusion/ej2-base';\n\n\nimport { Menu } from '@syncfusion/ej2-navigations';\n\nenableRipple(false);\n\n/**\n * Pivot Table Exporting Its Own Format Sample.\n */\n@Component({\n    selector: 'app-root',\n    styleUrls: ['app.component.css'],\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    providers: [ToolbarService, FieldListService, GroupingBarService, VirtualScrollService, ExcelExportService],\n    standalone: true,\n    imports: [PivotViewModule,  ]\n})\n\nexport class AppComponent {\n    public dataSourceSettings: IDataOptions;\n    public gridSettings: GridSettings;\n    public toolbarOptions: string[] = ['Chart', 'FieldList'];\n    public chartSettings: ChartSettings;\n    public displayOption: DisplayOption;\n\n    @ViewChild('pivotview')\n    public pivotObj: PivotView;\n\n    toolbarClicked() {\n        this.pivotObj.exportAsPivot();\n    }\n    gridToolbarClicked(args: any) {\n        if (this.pivotObj && this.pivotObj.gridSettings && this.pivotObj.gridSettings.layout !== args.item.id && (args.item.id == 'Compact' || args.item.id == 'Tabular')) {\n            this.pivotObj.setProperties({\n                gridSettings: {\n                    layout: args.item.id\n                },\n                displayOption: {\n                    view: 'Both', primary: 'Table'\n                },\n            }, true);\n            this.pivotObj.refresh();\n        }\n    }\n\n    beforeToolbarRender(args: any) {\n        args.customToolbar.splice(0, 0, {\n            prefixIcon: 'e-menu-icon e-pivotview-excel-export e-icons',\n            tooltipText: 'Excel Export as Pivot',\n            click: this.toolbarClicked.bind(this),\n        });\n        args.customToolbar.splice(1, 0, {\n            type: 'Separator'\n        });\n        args.customToolbar.splice(2, 0, {\n            template: '<ul id=\"grid_menu\"></ul>',\n            id: 'custom_toolbar'\n        });\n        args.customToolbar.splice(3, 0, {\n            type: 'Separator'\n        });\n    };\n    onDataBound() {\n        if (Browser.isDevice && this.pivotObj && this.pivotObj.enableRtl) {\n            document.querySelector('.control-section').classList.add('e-rtl');\n        }\n        if (document.querySelector('#grid_menu .e-menu-item') == null) {\n            var menuItems = [\n                {\n                    iconCss: 'e-toolbar-grid e-icons',\n                    items: [\n                        { text: 'Compact Layout', id: 'Compact' },\n                        { text: 'Tabular Layout', id: 'Tabular' },\n                    ],\n                },\n            ];\n            new Menu(\n                { items: menuItems, select: this.gridToolbarClicked.bind(this) }, '#grid_menu'\n            );\n        }\n    };\n\n    ngOnInit(): void {\n        this.displayOption = { view: 'Both' } as DisplayOption;\n        this.chartSettings = {\n            title: 'Sales Analysis',\n            primaryYAxis: { border: { width: 0 } },\n            legendSettings: { visible: false },\n            chartSeries: { type: 'Bar', animation: { enable: false } }\n        } as ChartSettings;\n\n        this.gridSettings = {\n            columnWidth: Browser.isDevice ? 100 : 120\n        } as GridSettings;\n\n        this.dataSourceSettings = {\n            url: 'https://ej2services.syncfusion.com/js/development/api/pivot/post',\n            mode: 'Server',\n            expandAll: true,\n            enableSorting: true,\n            columns: [ { name: 'Year', caption: 'Production Year' },\n            ],\n            values: [\n                { name: 'Sold', caption: 'Units Sold' },\n                { name: 'Amount', caption: 'Sold Amount' }\n            ],\n            rows: [{ name: 'Country' }, {name: 'Products'}],\n            formatSettings: [{ name: 'Amount', format: 'C0' }, { name: 'Sold', format: 'N0' }],\n            filters: []\n        };\n    }\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<!-- custom code start -->\n<!-- custom code end -->\n\n\n<div class=\"control-section\">\n    <div class=\"content-wrapper\">\n        <ejs-pivotview\n            #pivotview id='PivotView'\n            [dataSourceSettings]=dataSourceSettings\n            [height]='450'\n            [showFieldList]='true'\n            [showGroupingBar]='true'\n            [displayOption]='displayOption'\n            [allowExcelExport]='true'\n            [allowPdfExport]='true'\n            [showToolbar]='true'\n            [toolbar]='toolbarOptions'\n            [chartSettings]='chartSettings'\n            [gridSettings]='gridSettings'\n            (dataBound)='onDataBound()'\n            (toolbarRender)='beforeToolbarRender($event)'>\n        </ejs-pivotview>\n    </div>\n</div>","app.component.css":".e-pivotview {\n    width: 100%;\n    height: 100%;\n}\n\n.sb-sample-content-area {\n    min-height: 255px !important;\n}\n\n.control-section {\n    min-height: 255px !important;\n}\n\n.tabular-layout-switch {\n    display: flex;\n    align-items: center;\n    margin-bottom: 20px;\n}\n\n.pivot-layout-switch {\n    margin-left: 10px;\n}\n\n.e-tool-grid {\n    content: \"\\e705\";\n}","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-pivotview\":\"*\",\"@syncfusion/ej2-pivotview/src/pivotview/model/chartsettings\":\"*\",\"@syncfusion/ej2-pivotview/src/pivotview/model/gridsettings\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}