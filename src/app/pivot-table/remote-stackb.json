{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, OnInit, ViewChild } from '@angular/core';\nimport { IDataOptions, PivotView, PivotViewModule } from '@syncfusion/ej2-angular-pivotview';\nimport { DataManager, WebApiAdaptor } from '@syncfusion/ej2-data';\nimport { GridSettings } from '@syncfusion/ej2-pivotview/src/pivotview/model/gridsettings';\nimport { ChangeEventArgs, DropDownListModule } from '@syncfusion/ej2-angular-dropdowns';\nimport { enableRipple } from '@syncfusion/ej2-base';\n\n\nenableRipple(false);\n\n/**\n * Pivot Table sample for Remote data source.\n */\n\n@Component({\n    selector: 'app-root',\n    styleUrls: ['app.component.css'],\n    templateUrl: 'app.component.html',\n    standalone: true,\n    imports: [PivotViewModule,   DropDownListModule]\n})\n\nexport class AppComponent {\n    public jsonReport: IDataOptions;\n    public csvReport: IDataOptions;\n    public gridSettings: GridSettings;\n    public remoteData: DataManager;\n\n    @ViewChild('pivotview')\n    public pivotObj: PivotView;\n\n    public dropDownData: Object[] = [\n        { Id: 'JSON', Data: 'JSON' },\n        { Id: 'CSV', Data: 'CSV' }\n      ];\n    public fields: Object = { text: 'Data', value: 'Id' };\n    public waterMark: string = 'Select a Data type';\n    public value: string = 'JSON';\n\n    onChange(args: ChangeEventArgs): void {\n        if (args.value === 'JSON') {\n            this.pivotObj.dataSourceSettings = this.jsonReport;\n        } else if (args.value === 'CSV') {\n            this.pivotObj.dataSourceSettings = this.csvReport;\n        }\n    }\n\n    ngOnInit(): void {\n        this.gridSettings = {\n            columnWidth: 120\n        } as GridSettings;\n\n        this.remoteData = new DataManager({\n            url: 'https://ej2services.syncfusion.com/angular/development/api/order',\n            adaptor: new WebApiAdaptor,\n            crossDomain: true\n        });\n        this.jsonReport = {\n            url: '',\n            dataSource: this.remoteData,\n            type: 'JSON',\n            expandAll: true,\n            filters: [],\n            columns: [{ name: 'ProductName', caption: 'Product Name' }],\n            rows: [{ name: 'ShipCountry', caption: 'Ship Country' }, { name: 'ShipCity', caption: 'Ship City' }],\n            formatSettings: [{ name: 'UnitPrice', format: 'C0' }],\n            values: [{ name: 'Quantity' }, { name: 'UnitPrice', caption: 'Unit Price' }]\n        };\n\n        this.csvReport = {\n            url: 'https://ej2services.syncfusion.com/angular/development/api/product',\n            type: 'CSV',\n            expandAll: false,\n            enableSorting: true,\n            formatSettings: [\n                { name: 'Total Cost', format: 'C0' },\n                { name: 'Total Revenue', format: 'C0' },\n                { name: 'Total Profit', format: 'C0' }\n            ],\n            drilledMembers: [{ name: 'Item Type', items: ['Baby Food'] }],\n            rows: [\n                { name: 'Region' },\n                { name: 'Country' }\n            ],\n            columns: [\n                { name: 'Item Type' },\n                { name: 'Sales Channel' }\n            ],\n            values: [\n                { name: 'Total Cost' },\n                { name: 'Total Revenue' },\n                { name: 'Total Profit' }\n            ],\n            filters: []\n        };\n    }\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section\">\n    <div id=\"dropdown-control\" style=\"margin-bottom:5px;\">\n        <table style=\"max-width: 330px;\">\n            <tbody>\n                <tr style=\"height: 50px\">\n                    <td>\n                        <div><b>Content Type:</b>\n                        </div>\n                    </td>\n                    <td>\n                        <div style=\"padding-left: 5px;\">\n                            <ejs-dropdownlist id='contenttype' #dropdown [dataSource]='dropDownData' (change)='onChange($event)' [value]='value' [fields]='fields' [placeholder]='waterMark'></ejs-dropdownlist>\n                        </div>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <div class=\"content-wrapper\">\n        <ejs-pivotview #pivotview id='PivotView' [dataSourceSettings]=jsonReport width='100%' height='300' [gridSettings]='gridSettings'>\n        </ejs-pivotview>\n    </div>\n</div>","app.component.css":"#PivotView {\n    width: 100%;\n    height: 100%;\n    display: block;\n}\n\n.control-section {\n    padding-top: 5px;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-pivotview\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-pivotview/src/pivotview/model/gridsettings\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}