{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, OnInit, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { IDataOptions, FieldListService, PivotView, PivotViewModule, GroupingBarService, VirtualScrollService,\n    ToolbarArgs, BeforeExportEventArgs, ToolbarService, ExcelExportService, PDFExportService } from '@syncfusion/ej2-angular-pivotview';\nimport { GridSettings } from '@syncfusion/ej2-pivotview/src/pivotview/model/gridsettings';\nimport { Browser, enableRipple } from '@syncfusion/ej2-base';\n\n\nimport { ItemModel, Menu } from '@syncfusion/ej2-navigations';\nimport { ExcelExportProperties, PdfExportProperties } from '@syncfusion/ej2-grids';\nenableRipple(false);\n\n/**\n * Pivot Table Server Side Aggregation Sample.\n */\n@Component({\n    selector: 'app-root',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    templateUrl: 'app.component.html',\n    providers: [FieldListService, GroupingBarService, ToolbarService, ExcelExportService, PDFExportService],\n    standalone: true,\n    imports: [PivotViewModule,  ]\n})\n\nexport class AppComponent {\n\n    public dataSourceSettings: IDataOptions;\n    public gridSettings: GridSettings;\n    public toolbarOptions: ItemModel[];\n\n    @ViewChild('pivotview')\n    public pivotObj: PivotView;\n\n    onDataBound(): void {\n        if (Browser.isDevice && this.pivotObj && this.pivotObj.enableRtl) {\n            document.querySelector('.control-section').classList.add('e-rtl');\n        }\n         if (document.querySelector('#grid_menu .e-menu-item') == null) {\n            var menuItems = [\n                {\n                    iconCss: 'e-toolbar-grid e-icons',\n                    items: [\n                        { text: 'Compact Layout', id: 'Compact' },\n                        { text: 'Tabular Layout', id: 'Tabular' },\n                    ],\n                },\n            ];\n            new Menu(\n                { items: menuItems, select: this.gridToolbarClicked.bind(this) },\n                '#grid_menu'\n            );\n        }\n    }\n\n    gridToolbarClicked(args: any): void {\n        if (this.pivotObj && this.pivotObj.gridSettings && this.pivotObj.gridSettings.layout !== args.item.id &&\n            (args.item.id == 'Compact' || args.item.id == 'Tabular')) {\n            this.pivotObj.setProperties({\n                gridSettings: {\n                    layout: args.item.id\n                },\n                displayOption: {\n                    view: 'Both', primary: 'Table'\n                },\n            }, true);\n            this.pivotObj.refresh();\n        }\n    }\n\n    getExcelExportProperties(excelExportProperties: ExcelExportProperties): void {\n        excelExportProperties.header = {\n            headerRows: 7,\n            rows: [\n                {\n                    index: 1,\n                    cells: [\n                        { index: 1, colSpan: 13, value: 'INVOICE', style: { fontColor: '#C25050', fontSize: 25, hAlign: 'Center', bold: true } }\n                    ]\n                },\n                {\n                    index: 3,\n                    cells: [\n                        { index: 1, colSpan: 3, value: 'Adventure Traders', style: { fontColor: '#C67878', fontSize: 15, bold: true } },\n                        { index: 10, colSpan: 2, value: 'INVOICE NUMBER', style: { fontColor: '#C67878', bold: true } },\n                        { index: 12, colSpan: 2, value: 'DATE', style: { fontColor: '#C67878', bold: true } }\n                    ]\n                },\n                {\n                    index: 4,\n                    cells: [\n                        { index: 1, colSpan: 3, value: '2501 Aerial Center Parkway' },\n                        { index: 10, colSpan: 2, value: 2034 },\n                        { index: 12, colSpan: 2, value: new Date() }\n                    ]\n                },\n                {\n                    index: 5,\n                    cells: [\n                        { index: 1, colSpan: 3, value: 'Tel +1 888.936.8638 Fax +1 919.573.0306' },\n                        { index: 10, colSpan: 2, value: 'CUSTOMER ID', style: { fontColor: '#C67878', bold: true } },\n                        { index: 12, colSpan: 2, value: 'TERMS', style: { fontColor: '#C67878', bold: true } }\n                    ]\n                },\n                {\n                    index: 6,\n                    cells: [\n                        { index: 10, colSpan: 2, value: 564 },\n                        { index: 12, colSpan: 2, value: 'Net 30 days' }\n                    ]\n                }\n            ]\n        };\n        excelExportProperties.footer = {\n            footerRows: 3,\n            rows: [\n                {\n                    index: 2,\n                    cells: [\n                        { colSpan: 13, value: 'Thank you for your business!', style: { fontColor: '#C67878', hAlign: 'Center', bold: true } }\n                    ]\n                },\n                {\n                    index: 3,\n                    cells: [\n                        { colSpan: 13, value: '!Visit Again!', style: { fontColor: '#C67878', hAlign: 'Center', bold: true } }\n                    ]\n                }\n            ]\n        };\n    }\n    \n    getPdfExportProperties(pdfExportProperties: PdfExportProperties): void {\n        pdfExportProperties.header = {\n            fromTop: 0,\n            height: 130,\n            contents: [\n                {\n                    type: 'Text',\n                    value: 'INVOICE',\n                    position: { x: 250, y: 50 },\n                    style: { textBrushColor: '#C25050', fontSize: 19 },\n                },\n            ],\n        };\n        pdfExportProperties.footer = {\n            fromBottom: 0,\n            height: 130,\n            contents: [\n                {\n                    type: 'Text',\n                    value: 'Thank you for your business!',\n                    position: { x: 250, y: 50 },\n                    style: { textBrushColor: '#C67878', fontSize: 13 },\n                },\n            ],\n        };\n    }\n\n    beforeToolbarRender(args: ToolbarArgs): void {\n        args.customToolbar.splice(2, 0, {\n            template: '<ul id=\"grid_menu\"></ul>',\n            id: 'custom_toolbar'\n        });\n        args.customToolbar.splice(1, 0, {\n            type: 'Separator'\n        });\n    }\n\n    beforeExport(args: BeforeExportEventArgs) {\n        if (args.excelExportProperties) {\n            this.getExcelExportProperties(args.excelExportProperties);\n        } else if (args.pdfExportProperties) {\n            this.getPdfExportProperties(args.pdfExportProperties);\n        }\n    }\n\n    ngOnInit(): void {\n        this.gridSettings = {\n            columnWidth: Browser.isDevice ? 100 : 120, layout: 'Tabular'\n        } as GridSettings;\n\n        this.toolbarOptions = ['Export', 'FieldList'] as ItemModel[];\n\n        this.dataSourceSettings = {\n            url: 'https://ej2services.syncfusion.com/angular/development/api/pivot/post',\n            mode: 'Server',\n            expandAll: false,\n            enableSorting: true,\n            columns: [ { name: 'Year', caption: 'Production Year' },\n            ],\n            values: [\n                { name: 'Sold', caption: 'Units Sold' },\n                { name: 'Amount', caption: 'Sold Amount' }\n            ],\n            rows: [{ name: 'Country' }, {name: 'Products'}],\n            drilledMembers: [{ name: 'Country', items: ['France', 'Germany'] }],\n            formatSettings: [{ name: 'Amount', format: 'C0' }, { name: 'Sold', format: 'N0' }],\n            filters: [],\n            fieldMapping: [\n                { name: 'Product_Categories', groupName: 'Product Details'},\n                { name: 'Products', groupName: 'Product Details' }\n            ]\n        };\n    }\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section\">\n    <ejs-pivotview #pivotview id='PivotView' showFieldList='true' showGroupingBar='true' width='100%' height='450'\n        [dataSourceSettings]=dataSourceSettings (dataBound)='onDataBound()'\n        allowDataCompression='true' allowExcelExport='true' allowPdfExport='true' showToolbar='true' [gridSettings]='gridSettings'\n        [toolbar]='toolbarOptions' (toolbarRender)='beforeToolbarRender($event)' (beforeExport)='beforeExport($event)'>\n    </ejs-pivotview>\n</div>","app.component.css":"#PivotView {\n    width: 100%;\n    height: 100%;\n    display: block;\n}\n\n.sb-sample-content-area {\n    min-height: 255px !important;\n}\n\n.control-section {\n    min-height: 255px !important;\n}\n\n#PivotViewcontainerwrapper {\n    height: auto !important;\n}\n\n.e-bigger .e-float-input.e-control-wrapper {\n    width: 100% !important;\n}","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-pivotview\":\"*\",\"@syncfusion/ej2-pivotview/src/pivotview/model/gridsettings\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-compression\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-excel-export\":\"*\",\"@syncfusion/ej2-file-utils\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-pdf-export\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}