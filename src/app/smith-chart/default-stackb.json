{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","theme-color.ts":"import { EmitType } from '@syncfusion/ej2-base';\nimport { SmithchartTheme, ISmithchartLoadEventArgs } from '@syncfusion/ej2-angular-charts';\n\nexport let loadSmithChartTheme: EmitType<ISmithchartLoadEventArgs> = (args: ISmithchartLoadEventArgs): void => {\n    let theme: string = location.hash.split('/')[1];\n    theme = theme ? theme : 'Tailwind3';\n    args.smithchart.theme = <SmithchartTheme>(theme.charAt(0).toUpperCase() + theme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n};","app.component.ts":"/**\n * default sample\n */\nimport { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { SmithchartTheme, ISmithchartLoadEventArgs, Smithchart, RenderType, SmithchartAllModule } from '@syncfusion/ej2-angular-charts';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\n\n\nimport { loadSmithChartTheme } from './theme-color';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [SmithchartAllModule,  ]\n})\nexport class AppComponent {\n    @ViewChild('smithchart')\n    public smithchart: Smithchart;\n    public data: Object[] = [\n        { resistance: 10, reactance: 25 }, { resistance: 8, reactance: 6 },\n                    { resistance: 6, reactance: 4.5 }, { resistance: 4.5, reactance: 2 },\n                    { resistance: 3.5, reactance: 1.6 }, { resistance: 2.5, reactance: 1.3 },\n                    { resistance: 2, reactance: 1.2 }, { resistance: 1.5, reactance: 1 },\n                    { resistance: 1, reactance: 0.8 }, { resistance: 0.5, reactance: 0.4 },\n                    { resistance: 0.3, reactance: 0.2 }, { resistance: 0, reactance: 0.15 }\n    ];\n    public data1: Object[] = [\n       { resistance: 20, reactance: -50 }, { resistance: 10, reactance: -10 },\n                    { resistance: 9, reactance: -4.5 }, { resistance: 8, reactance: -3.5 },\n                    { resistance: 7, reactance: -2.5 }, { resistance: 6, reactance: -1.5 },\n                    { resistance: 5, reactance: -1 }, { resistance: 4.5, reactance: -0.5 },\n                    { resistance: 3.5, reactance: 0 }, { resistance: 2.5, reactance: 0.4 },\n                    { resistance: 2, reactance: 0.5 }, { resistance: 1.5, reactance: 0.5 },\n                    { resistance: 1, reactance: 0.4 }, { resistance: 0.5, reactance: 0.2 },\n                    { resistance: 0.3, reactance: 0.1 }, { resistance: 0, reactance: 0.05 }\n    ];\n    public marker: Object = {\n        shape: 'Circle',\n        visible: true,\n        border: {\n            width: 2,\n        }\n    };\n    title: object = {\n        visible: true,\n        text: 'Transmission details'\n    };\n    public legend: Object = {\n         visible: true,\n         shape: 'Circle'\n    };\n    public tooltip: Object = {\n        visible: true\n    };\n    public renderType: string = 'Impedance';\n    // custom code start\n    public load = (args: ISmithchartLoadEventArgs) => {\n        loadSmithChartTheme(args);\n    }\n    // custom code end\n    public mode: DropDownList;\n    ngOnInit(): void {\n    this.mode = new DropDownList({\n        index: 0,\n        width: 90,\n        change: () => {\n            let element: RenderType = this.mode.value as RenderType;\n            this.smithchart.renderType = element;\n            this.smithchart.refresh();\n        }\n    });\n    this.mode.appendTo('#rendering');\n    }\n    constructor() {\n        //code\n    };\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section\">\n    <div class=\"col-lg-9\">\n        <ejs-smithchart style='display:block' align='center' id='container' #smithchart\n            [legendSettings]='legend' [title]='title' (load)='load($event)' [renderType]='renderType'>\n            <e-seriesCollection>\n                <e-series [points]='data' name='Transmission1' [enableAnimation]=false [marker]='marker'\n                    [tooltip]='tooltip'> </e-series>\n                <e-series [points]='data1' name='Transmission2' [enableAnimation]=false [marker]='marker'\n                    [tooltip]='tooltip'> </e-series>\n            </e-seriesCollection>\n        </ejs-smithchart>\n\n    </div>\n    <div class=\"col-lg-3 property-section\">\n        <div class=\"property-panel-section\">\n            <div class=\"property-panel-header\">Properties</div>\n            <div class=\"property-panel-content\">\n                <table id=\"property\" style=\"width:100%\" title=\"Properties\">\n                    <tbody>\n                        <tr style=\"height: 30px\">\n                            <td style=\"width: 50%\">\n                                Render Type\n                            </td>\n                            <td style=\"width: 50%\">\n                                <select id=\"rendering\" style=\"width: 90px; height: 20px\">\n                                    <option value=\"Impedance\">Impedance</option>\n                                    <option value=\"Admittance\">Admittance</option>\n                                </select>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- custom code start -->\n<style>\n    .control-section {\n        min-height: 450px;\n    }\n</style>\n<!-- custom code end -->","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}