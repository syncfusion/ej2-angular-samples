{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","theme-color.ts":"import { EmitType } from '@syncfusion/ej2-base';\nimport { SmithchartTheme, ISmithchartLoadEventArgs } from '@syncfusion/ej2-angular-charts';\n\nexport let loadSmithChartTheme: EmitType<ISmithchartLoadEventArgs> = (args: ISmithchartLoadEventArgs): void => {\n    let theme: string = location.hash.split('/')[1];\n    theme = theme ? theme : 'Tailwind3';\n    args.smithchart.theme = <SmithchartTheme>(theme.charAt(0).toUpperCase() + theme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n};","app.component.ts":"/**\n * Customization Sample\n */\nimport { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { SmithchartTheme, ISmithchartLoadEventArgs, Smithchart, SmithchartAllModule } from '@syncfusion/ej2-angular-charts';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { Slider, SliderChangeEventArgs } from '@syncfusion/ej2-inputs';\nimport { EmitType } from '@syncfusion/ej2-base';\nimport {  ChangeEventArgs as CheckBoxChangeEvents} from '@syncfusion/ej2-buttons';\nimport { SliderComponent, SliderModule } from '@syncfusion/ej2-angular-inputs';\n\n\nimport { CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\nimport { loadSmithChartTheme } from './theme-color';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [SmithchartAllModule, SliderModule, CheckBoxModule,  ]\n})\nexport class AppComponent {\n    @ViewChild('smithchart')\n    //@ViewChild('slide')\n    //public slide : Slider;\n    public smithchart: Smithchart;\n    public horizontalAxis: Object = {\n            minorGridLines: {\n                visible: true\n            }\n        };\n    public radialAxis: Object = {\n            minorGridLines: {\n                visible: true\n            }\n        };\n    public data: Object[] = [\n       { resistance: 10, reactance: 25 }, { resistance: 8, reactance: 6 },\n                    { resistance: 6, reactance: 4.5 }, { resistance: 4.5, reactance: 4 },\n                    { resistance: 3.5, reactance: 3 }, { resistance: 2.5, reactance: 2 },\n                    { resistance: 2, reactance: 1.5 }, { resistance: 1.5, reactance: 1.25 },\n                    { resistance: 1, reactance: 0.9 }, { resistance: 0.5, reactance: 0.6 },\n                    { resistance: 0.3, reactance: 0.4 }, { resistance: 0, reactance: 0.15 }\n    ];\n    public data1: Object[] = [\n      { resistance: 20, reactance: -50 }, { resistance: 10, reactance: -10 },\n                    { resistance: 9, reactance: -4.5 }, { resistance: 8, reactance: -3.5 },\n                    { resistance: 7, reactance: -2.5 }, { resistance: 6, reactance: -1.5 },\n                    { resistance: 5, reactance: -1 }, { resistance: 4.5, reactance: -0.8 },\n                    { resistance: 3.5, reactance: -0.8 }, { resistance: 2.5, reactance: -0.4 },\n                    { resistance: 2, reactance: -0.2 }, { resistance: 1.5, reactance: 0 },\n                    { resistance: 1, reactance: 0.1 }, { resistance: 0.5, reactance: 0.2 },\n                    { resistance: 0.3, reactance: 0.15 }, { resistance: 0, reactance: 0.05 },\n    ];\n    // custom code start\n     // tslint:disable\n     // custom code end\n    public radius: number = 1;\n    public marker: Object = {\n        shape: 'Rectangle',\n        visible: true,\n        border: {\n            width: 2,\n        }\n    };\n    public title: Object = {\n     text: 'Impedance Transmission', enableTrim: true, maximumWidth: 200,\n            visible: true\n    };\n    public legend: Object = {\n         visible: true,\n         position: 'Top',\n         shape: 'Circle'\n    };\n    public tooltip: Object = {\n        visible: true\n    };\n    public value: number = 1;\n    public min: number = 0.1;\n    public max: number = 1;\n    // custom code start\n    public load = (args: ISmithchartLoadEventArgs) => {\n        loadSmithChartTheme(args);\n    }\n    // custom code end\n    public setRadius(e: SliderChangeEventArgs): void {\n        let slider: Element = document.getElementById('radius');\n        let slider1: SliderComponent = <SliderComponent>slider['ej2_instances'][0];\n        let smith: Element = document.getElementById('container');\n        let smith1: Smithchart = <Smithchart>smith['ej2_instances'][0];\n        smith1.radius = slider1.value as number;\n        document.getElementById('radius1').innerHTML = 'Radius <span> ' + (slider1.value as number);\n        smith1.refresh();\n    }\n    public setMarker(e: CheckBoxChangeEvents): void {\n        let boolean: boolean = e.checked;\n        let smith: Smithchart = <Smithchart>document.getElementById('container')['ej2_instances'][0];\n        if (boolean) {\n            smith.series[0].marker.visible = true;\n            smith.series[1].marker.visible = true;\n        } else {\n            smith.series[0].marker.visible = false;\n            smith.series[1].marker.visible = false;\n        }\n        smith.refresh();\n    }\n    public setDataLabel(e: CheckBoxChangeEvents): void {\n        let boolean: boolean = e.checked;\n        let smith: Smithchart = <Smithchart>document.getElementById('container')['ej2_instances'][0];\n        if (boolean) {\n            smith.series[0].marker.dataLabel.visible = true;\n            smith.series[1].marker.dataLabel.visible = true;\n        } else {\n            smith.series[0].marker.dataLabel.visible = false;\n            smith.series[1].marker.dataLabel.visible = false;\n        }\n        smith.refresh();\n    }\n    public setAnimation(e: CheckBoxChangeEvents): void {\n        let boolean: boolean = e.checked;\n        let smith: Smithchart = <Smithchart>document.getElementById('container')['ej2_instances'][0];\n        if (boolean) {\n            smith.series[0].enableAnimation = true;\n            smith.series[1].enableAnimation = true;\n        } else {\n            smith.series[0].enableAnimation = false;\n            smith.series[1].enableAnimation = false;\n        }\n        smith.refresh();\n    }\n\n    public setTooltip(e: CheckBoxChangeEvents): void {\n        let boolean: boolean = e.checked;\n        let smith: Smithchart = <Smithchart>document.getElementById('container')['ej2_instances'][0];\n        if (boolean) {\n            smith.series[0].tooltip.visible = true;\n            smith.series[1].tooltip.visible = true;\n        } else {\n            smith.series[0].tooltip.visible = false;\n            smith.series[1].tooltip.visible = false;\n        }\n        this.smithchart.refresh();\n    }\n    public setLegend(e: CheckBoxChangeEvents): void {\n        let boolean: boolean = e.checked;\n        let smith: Smithchart = <Smithchart>document.getElementById('container')['ej2_instances'][0];\n        if (boolean) {\n            smith.legendSettings.visible = true;\n        } else {\n            smith.legendSettings.visible = false;\n        }\n        smith.refresh();\n    }\n    ngOnInit(): void {\n        let mode: DropDownList = new DropDownList({\n        index: 0,\n        width: 90,\n        change: () => {\n            let element: string = mode.value.toString();\n            let smith: Smithchart = <Smithchart>document.getElementById('container')['ej2_instances'][0];\n           smith.legendSettings.position = element;\n            smith.refresh();\n        }\n    });\n        mode.appendTo('#legend1');\n    }\n    constructor() {\n        //code\n    };\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section\">\n    <div class=\"col-lg-9\">\n        <ejs-smithchart style='display:block' align='center' id='container' #smithchart\n            [horizontalAxis]='horizontalAxis' [radialAxis]='radialAxis' [title]='title' [radius]='radius'\n            [legendSettings]='legend' (load)='load($event)'>\n            <e-seriesCollection>\n                <e-series [points]='data' name='Transmission1' [marker]='marker' fill='#0F94C4' [tooltip]='tooltip'>\n                </e-series>\n                <e-series [points]='data1' name='Transmission2' [marker]='marker' fill='#EE0C88' [tooltip]='tooltip'>\n                </e-series>\n            </e-seriesCollection>\n        </ejs-smithchart>\n\n    </div>\n    <div class=\"col-lg-3 property-section\">\n        <div class=\"property-panel-section\">\n            <div class=\"property-panel-header\">Properties</div>\n            <div class=\"property-panel-content\">\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br>\n                <table id=\"property\" style=\"width:100%\" title=\"Properties\">\n                    <tbody>\n                        <tr style=\"height: 35px\">\n                            <td style=\"width: 70%\" id=\"radius1\">\n                                Radius<span>&nbsp;&nbsp;&nbsp;1</span>\n                            </td>\n                            <td style=\"width: 70%\">\n                                <div class='sliderwrap'>\n                                    <ejs-slider #slide id='radius' [value]='value' [min]='min' [max]='max' step=0.1\n                                        (change)='setRadius($event)' (touchmove)='setRadius($event)'\n                                        (pointermove)='setRadius($event)'></ejs-slider>\n                                </div>\n                            </td>\n                        </tr>\n                        <tr style=\"height: 35px\">\n                            <td style=\"width: 70%\">\n                                Marker\n                            </td>\n                            <td style=\"width: 50%\">\n                                <ejs-checkbox [checked]=\"true\" class=\"smithinput\" (change)='setMarker($event)'\n                                    name=\"marker\" id=\"marker\" checked>\n                                </ejs-checkbox>\n                            </td>\n                        </tr>\n                        <tr style=\"height: 35px\">\n                            <td style=\"width: 70%\">\n                                Data Label\n                            </td>\n                            <td style=\"width: 50%\">\n                                <ejs-checkbox class=\"smithinput\" (change)='setDataLabel($event)' name=\"datalabel\"\n                                    id=\"datalabel\">\n                                </ejs-checkbox>\n                            </td>\n                        </tr>\n                        <tr style=\"height: 35px\">\n                            <td style=\"width: 70%\">\n                                Animation\n                            </td>\n                            <td style=\"width: 50%\">\n                                <ejs-checkbox class=\"smithinput\" (change)='setAnimation($event)' name=\"high\"\n                                    id=\"animate\">\n                                </ejs-checkbox>\n                            </td>\n                        </tr>\n                        <tr style=\"height: 35px\">\n                            <td style=\"width: 70%\">\n                                Tooltip\n                            </td>\n                            <td style=\"width: 50%\">\n                                <ejs-checkbox [checked]=\"true\" class=\"smithinput\" (change)='setTooltip($event)'\n                                    name=\"high\" id=\"tooltip\" checked>\n                                </ejs-checkbox>\n                            </td>\n                        </tr>\n                        <tr style=\"height: 35px\">\n                            <td style=\"width: 70%\">\n                                Legend\n                            </td>\n                            <td style=\"width: 50%\">\n                                <ejs-checkbox [checked]=\"true\" class=\"smithinput\" (change)='setLegend($event)'\n                                    name=\"high\" id=\"legend\" checked>\n                                </ejs-checkbox>\n\n                            </td>\n                        </tr>\n                        <tr style=\"height: 35px\">\n                            <td style=\"width: 70%\">\n                                Legend Position\n                            </td>\n                            <td style=\"width: 50%\">\n                                <select id=\"legend1\" style=\"width: 50px; height: 20px\">\n                                    <option value=\"top\">Top</option>\n                                    <option value=\"bottom\">Bottom</option>\n                                    <option value=\"right\">Right</option>\n                                    <option value=\"left\">Left</option>\n                                </select>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n<style>\n    .control-section {\n        min-height: 450px;\n    }\n\n    .property-text {\n        font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\" !important;\n        font-size: 13px !important;\n        font-weight: 400 !important;\n    }\n\n    #radius>* {\n        padding: 0px !important;\n    }\n\n    label {\n        height: 32px !important;\n    }\n</style>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}