{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","messageData.ts":"let communityMessageAdmin = {\n    user: 'Alice Brown',\n    id: 'admin',\n    statusIconCss: 'e-icons e-user-busy'\n};\n\nlet communityMessageUser1 = {\n    user: 'Michale Suyama',\n    id: 'user1',\n    avatarBgColor: \"#87cefa\",\n    statusIconCss: 'e-icons e-user-online'\n};\n\nlet communityMessageUser2 = {\n    user: 'Charlie',\n    id: 'user2',\n    avatarUrl: \"https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/charlie.png\",\n    statusIconCss: 'e-icons e-user-away'\n};\n\nlet communityMessageUser3 = {\n    user: 'Janet',\n    id: 'user3',\n    avatarBgColor: \"#dec287\",\n    avatarUrl: 'https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/janet.png',\n    statusIconCss: 'e-icons e-user-offline'\n};\n\nlet communityMessageUser4 = {\n    user: 'Jordan Peele',\n    id: 'user4',\n    statusIconCss: 'e-icons e-user-busy'\n};\n\nlet chatMessageUser1 = {\n    user: 'Albert',\n    id: 'user1',\n    avatarUrl: 'https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/andrew.png'\n};\n\nlet chatMessageUser2 = {\n    user: 'Reena',\n    id: 'user2',\n    avatarUrl: 'https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/reena.png'\n};\n\nlet integrationMessageUser1 = {\n    user: 'Reena',\n    id: 'user1',\n    avatarUrl: 'https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/reena.png'\n};\n\nlet integrationMessageUser2 = {\n    user: 'Albert',\n    id: 'user2',\n    avatarUrl: 'https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/andrew.png'\n};\n\nlet botMessage = {\n    user: 'Bot',\n    id: 'bot',\n    avatarUrl: 'https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/bot.png'\n};\n\nlet walterMessageUser1 = {\n    user: 'Sam',\n    id: 'user2',\n    avatarUrl: 'https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/laura.png'\n};\n\nlet walterMessageUser2 = {\n    user: 'Charlie',\n    id: 'user5',\n    avatarUrl: \"https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/charlie.png\",\n};\n\nlet lauraMessageUser1 = {\n    user: 'Laura Callahan',\n    id: 'user1',\n    avatarUrl: 'https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/laura.png'\n};\n\nlet lauraMessageUser2 = {\n    user: 'Sam',\n    id: 'user3',\n    avatarUrl: 'https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/laura.png'\n};\n\nlet teamsMessageUser1 = {\n    user: 'Admin',\n    id: 'team'\n};\n\nlet teamsMessageUser2= {\n    user: 'Janet',\n    id: 'user2',\n    avatarUrl: 'https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/janet.png'\n};\n\nexport const communityMessagedata = [\n    {\n        author: communityMessageAdmin,\n        text: 'Hey Michale, Charlie! Seen the latest posts in the Design Community? Amazing projects!',\n        timeStamp: new Date(\"October 25, 2024 07:30\")\n    },\n    {\n        author: communityMessageUser1,\n        text: 'Hi Alice! Yes, Dana’s new UI design is incredible.',\n        timeStamp: new Date(\"October 25, 2024 08:00\")\n    },\n    {\n        author: communityMessageUser2,\n        text: 'Hey! I loved Dana’s use of color. Frank’s typography guide was great too.',\n        timeStamp: new Date(\"October 25, 2024 11:00\")\n    },\n    {\n        author: communityMessageUser4,\n        text: 'Dana’s work is so inspiring!',\n        timeStamp: new Date(\"October 25, 2024 11:30\")\n    },\n    {\n        author: communityMessageAdmin,\n        text: 'Absolutely! Any new community events planned?',\n        timeStamp: new Date(\"October 26, 2024 11:00\")\n    },\n    {\n        author: communityMessageUser1,\n        text: 'We should organize a design challenge.',\n        timeStamp: new Date(\"October 26, 2024 12:15\")\n    },\n    {\n        author: communityMessageUser3,\n        text: 'I am excited to see the new projects.',\n        timeStamp: new Date(\"October 26, 2024 12:17\")\n    },\n    {\n        author: communityMessageUser2,\n        text: 'Great idea! Let’s discuss it in the next meeting.',\n        timeStamp: new Date(\"October 26, 2024 12:30\")\n    },\n    {\n        author: communityMessageAdmin,\n        text: 'Sounds good! This community is so inspiring.',\n        timeStamp: new Date()\n    },\n    {\n        author: communityMessageUser1,\n        text: 'Agreed! Excited to see everyone’s ideas.',\n        timeStamp: new Date()\n    },\n    {\n        author: communityMessageUser2,\n        text: 'I am looking forward to the design challenge.',\n        timeStamp: new Date()\n    }\n];\n\nexport const chatMessagedata = [\n    {\n        author: chatMessageUser1,\n        text: \"Hi there! How's it going?\"\n    },\n    {\n        author: chatMessageUser2,\n        text: \"Hey! I'm doing well, thanks. How about you?\"\n    },\n    {\n        author: chatMessageUser1,\n        text: \"Mostly the usual stuff. I did start a new hobby - painting!\"\n    },\n];\n\nexport const integrationMessagedata = [\n    {\n        author: integrationMessageUser1,\n        text: \"Hey, I'm having trouble with my computer. It keeps freezing.\"\n    },\n    {\n        author: integrationMessageUser2,\n        text: \"Oh, that's annoying. Have you tried restarting it?\"\n    },\n    {\n        author: integrationMessageUser1,\n        text: \"Yeah, I did, but it didn't help.\"\n    },\n    {\n        author: integrationMessageUser2,\n        text: \"Sometimes, outdated software or malware can cause issues.\"\n    },\n    {\n        author: integrationMessageUser1,\n        text: \"Okay, I'll try that. Thanks for the help!\"\n    }\n];\n\nexport const botMessagedata = [\n    {\n        author: botMessage,\n        text: \"Hello Sam, I am a virtual assitant.\"\n    },\n    {\n        author: botMessage,\n        text: \"Which room are you looking to decorate?\"\n    }\n];\n\nexport const botData = [\n    {\n        text: \"Bedroom\",\n        reply: \"For a bedroom, we can create a serene and calm atmosphere with neutral colors and comfortable bedding.\",\n        suggestions: [\"Garden\", \"Balcony\"]\n    },\n    {\n        text: \"Kitchen\",\n        reply: \"For a kitchen, we can go for a modern, sleek look with stainless steel appliances and minimalist cabinetry. </br> <p>Any other home decor suggestions you'd like to explore ?</p>\",\n        suggestions: [\"Wall art\", \"Plants\"]\n    }\n    \n];\n\nexport const chatSuggestions = [\"Bedroom\", \"Kitchen\"];\n\nexport const walterMessagedata = [\n    {\n        author: walterMessageUser1,\n        text: \"Hey Charlie, have you thought about where you want to go for our vacation?\"\n    },\n    {\n        author: walterMessageUser2,\n        text: \"Hi Sam! I was thinking about going to Bali. I've heard the beaches are beautiful and there's so much to do.\"\n    },\n    {\n        author: walterMessageUser1,\n        text: \"Bali sounds amazing! I've always wanted to try surfing. Do you know any good places to stay?\"\n    },\n    {\n        author: walterMessageUser2,\n        text: \"Yes, I found a few nice resorts and some budget-friendly options too. I'll send you the links.\"\n    },\n    {\n        author: walterMessageUser1,\n        text: \"Great! Let's finalize our plans this weekend.\"\n    }\n];\n\nexport const lauraMessagedata = [\n    {\n        author: lauraMessageUser1,\n        text: \"Hey Sam, can we have a quick meeting tomorrow morning to discuss the new project?\"\n    },\n    {\n        author: lauraMessageUser2,\n        text: \"Sure, what time works best for you?\"\n    },\n    {\n        author: lauraMessageUser1,\n        text: \"10 AM?\"\n    },\n    {\n        author: lauraMessageUser2,\n        text: \"10 AM works for me.\"\n    }\n];\n\nexport const teamsMessagedate = [\n    {\n        author: teamsMessageUser1,\n        text: \"Hi, everyone!, welcome to the new web team\"\n    },\n    {\n        author: teamsMessageUser2,\n        text: \"Hi Sir, excited about the new team.\"\n    },\n    {\n        author: {\n            user: 'Margaret Peacock',\n            id: 'user3'\n        },\n        text: \"Good morning ! suprised with the new team message.\"\n    },\n    {\n        author: communityMessageUser2,\n        text: \"Hi all, what's the purpose of this new team formation ?\"\n    },\n    {\n        author: teamsMessageUser1,\n        text: \"Charlie, we are planning for a new portal launch hence, grouping all in one place.\"\n    }\n];\n\nexport const suyamaMessagedata = [\n    { \n        author: {\n            id: 'user4',\n            user: 'Reena'\n        },\n        text: \"Hi, are you available ?\"\n    }\n];\n\nexport const templateMessagedata = [\n    {\n        text: \"Hello! I'm the Order tracking bot. how can I help you today?\",\n        suggestions: [\"Track an order\", \"Cancel an order\"]\n    },\n    {\n        text: \"Track an order\",\n        reply: 'Please select the order you want to track.',\n        suggestions: [\"Order #67890\", \"Order #53461\"]\n    },\n    {\n        text: \"Order #67890\",\n        reply: \"Fetching details for order <b>#67890</b> </br></br> Your order is currently being processed and will ship in 2-3 days.\",\n        suggestions: [\"Back to main menu\", \"Need help with something else\"]\n    },\n    {\n        text: \"Order #53461\",\n        reply: \"Fetching details for order <b>#53461</b> </br></br> Your order is currently being processed and will ship in 2-3 days.\",\n        suggestions: [\"Back to main menu\", \"Need help with something else\"]\n    },\n    {\n        text: \"Order #87890\",\n        reply: \"Your order <b>#87890</b> has been cancelled.\",\n        suggestions: [\"Back to main menu\", \"Need help with something else\"]\n    },\n    {\n        text: \"Order #90910\",\n        reply: \"Your order <b>#90910</b> has been cancelled.\",\n        suggestions: [\"Back to main menu\", \"Need help with something else\"]\n    },\n    {\n        text: \"Cancel an order\",\n        reply: 'Pick the order you need to cancel.',\n        suggestions: [\"Order #87890\", \"Order #90910\"]\n    },\n    {\n        text: \"Back to main menu\",\n        reply: \"You have returned to the main menu. What would you like to do next?\",\n        suggestions: [\"Track an order\", \"Cancel an order\"]\n    },\n    {\n        text: \"Need help with something else\",\n        reply: \"Please hold while we connect you to a support agent. You can chat with them for any additional queries.\",\n        suggestions: []\n    }\n];\n\nexport const defaultChatSuggestions = [ \"Awesome!\", \"What kind of painting ?\" ];\n\nexport const integrationListTemplateData = [\n    {\n        id: '01',\n        title: 'Albert',\n        imgSrc: 'andrew', message: \"Okay, I'll try that. Thanks for the help!\"\n    },\n    {\n        id: '02',\n        title: 'Bot',\n        imgSrc: 'bot', message: 'Personal decor assistant'\n    },\n    {\n        id: '03',\n        title: 'Charlie',\n        imgSrc: 'charlie', message: \"Great! Let's finalize our plans this weekend.\"\n    },\n    {\n        id: '04',\n        title: 'Laura',\n        imgSrc: 'laura', message: '10 AM works for me.'\n    },\n    {\n        id: '05',\n        title: 'New Dev Team',\n        imgSrc: 'calendar', message: 'User added'\n    },\n    {\n        id: '06',\n        title: 'Reena',\n        imgSrc: 'reena', message: 'You: Hi, are you available ?'\n    },\n];\n\n","app.component.ts":"import { Component, ViewChild, ViewEncapsulation, AfterViewInit } from '@angular/core';\nimport { ChatUIComponent, ChatUIModule, UserModel, MessageSendEventArgs } from '@syncfusion/ej2-angular-interactive-chat';\nimport { templateMessagedata } from './messageData';\n\n\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.css'],\n  encapsulation: ViewEncapsulation.None,\n  standalone: true,\n  imports: [ChatUIModule,   CommonModule],\n})\nexport class AppComponent {\n  @ViewChild('chatTemplate') public chatTemplate: ChatUIComponent;\n\n  public user: UserModel = { id: 'admin', user: 'Admin', avatarUrl: 'https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/bot.png' };\n\n  public templateMessagedata = templateMessagedata;\n\n  ngAfterViewInit() {\n    this.bindInitialBotMessage();\n  }\n\n  onMessageSend(args: MessageSendEventArgs) {\n    setTimeout(() => {\n      const defaultResponse = \"Unfortunately, I don't have information on that. Use any real-time data streaming service to provide chat updates.\";\n      const message = {\n        author: { id: 'bot', user: 'Bot', avatarUrl: 'https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/bot.png' },\n        text: defaultResponse\n      };\n      this.chatTemplate.addMessage(message);\n    }, 500);\n  }\n\n  private bindClickAction() {\n    this.chatTemplate.element.querySelectorAll('.suggestion-button').forEach(suggestion => {\n      suggestion.addEventListener('click', () => this.handleSuggestionClick(suggestion as HTMLElement));\n    });\n  }\n\n  private handleSuggestionClick(suggestion: HTMLElement) {\n    const message = this.templateMessagedata.find(m => m.text === suggestion.innerText);\n    if (message) {\n      this.chatTemplate.addMessage(message.text);\n      setTimeout(() => {\n        const messageModel = {\n          author: { id: 'bot', user: 'Bot', avatarUrl: 'https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/bot.png' },\n          text: message.reply,\n          suggestions: message.suggestions\n        };\n        this.chatTemplate.addMessage(messageModel);\n        setTimeout(() => {\n            this.bindClickAction();\n            if (message.suggestions.length === 0) { \n              this.chatTemplate.showFooter = true; \n            }\n          }, 0);\n        if (message.suggestions.length === 0) { this.chatTemplate.showFooter = true; }\n      }, 500);\n      suggestion.parentElement.innerHTML = '';\n    }\n  }\n\n  private bindInitialBotMessage() {\n    setTimeout(() => {\n      const message = {\n        author: { id: 'bot', user: 'Bot', avatarUrl: 'https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/bot.png' },\n        text: this.templateMessagedata[0].text,\n        suggestions: this.templateMessagedata[0].suggestions\n      };\n      this.chatTemplate.addMessage(message);\n      setTimeout(() => {\n        this.bindClickAction();\n      }, 0);\n    }, 1500);\n  }\n  public formatDate(messageDate: Date): string {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const dateToCompare = new Date(messageDate);\n    dateToCompare.setHours(0, 0, 0, 0);\n    \n    return dateToCompare.getTime() === today.getTime() ? 'Today' : messageDate.toDateString();\n  }\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section\">\n    <div class=\"template-chatui\">\n      <div id=\"chatTemplate\" ejs-chatui #chatTemplate [user]=\"user\" headerText=\"Order Assistant\" headerIconCss=\"chat-bot\"\n           showTimeBreak=\"true\" autoScrollToBottom=\"true\" [showFooter]=\"false\" (messageSend)=\"onMessageSend($event)\">\n           <ng-template #emptyChatTemplate>\n            <div class=\"emptychat-content\">\n                <h3><span class=\"e-icons e-comment-show\"></span></h3>\n                <div class=\"emptyChatText\">Just a second, we're preparing your chat...</div>\n            </div>\n        </ng-template>\n        <ng-template #messageTemplate let-data>\n            <div class=\"message-wrapper\">\n              <div class=\"message-template\">\n                <img *ngIf=\"data.message.author.id !== 'admin'\" class=\"message-user\" [src]=\"data.message.author.avatarUrl\" [alt]=\"data.message.author.user\">\n                <div class=\"message-items e-card\">\n                  <div class=\"message-text\" [innerHTML]='data.message.text'></div>\n                </div>\n              </div>\n              <div class=\"suggestion-container\" *ngIf=\"data.message.suggestions && data.message.suggestions.length > 0 && data.message.author.id !== 'admin'\">\n                <div class=\"message-suggestions\">\n                  <button *ngFor=\"let suggestion of data.message.suggestions\" class=\"suggestion-button e-btn e-primary e-outline\">{{suggestion}}</button>\n                </div>\n              </div>\n            </div>\n          </ng-template>\n          \n          <ng-template #timeBreakTemplate let-data>\n            <div class=\"timebreak-template\">\n              {{ formatDate(data.messageDate) }}\n            </div>\n          </ng-template>\n      </div>\n    </div>\n  </div>\n  \n  ","app.component.css":".template-chatui {\n    height: 500px;\n    width: 40%;\n    margin: 0 auto;\n}\n\n.template-chatui .chat-bot {\n    background-image: url('/assets/chat-ui/images/bot.png');\n    background-color: unset;\n}\n\n.template-chatui .emptyChatText {\n    font-size: 16px;\n    font-style: italic;\n}\n\n.template-chatui .emptychat-content {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n    align-items: center;\n    padding: 10px;\n}\n\n.template-chatui .e-right .message-items {\n    border-radius: 16px 16px 2px 16px;\n}\n\n.template-chatui .e-left .message-items {\n    border-radius: 16px 16px 16px 2px;\n}\n\n.template-chatui .message-user {\n    height: 30px;\n    width: 30px;\n    margin-right: 3px;\n}\n\n.template-chatui .e-left .message-template,\n.template-chatui .e-right .message-template {\n    display: flex;\n    align-items: flex-end;\n}\n.template-chatui .message-items.e-card {\n    line-height: 20px;\n    box-shadow: none;\n    background: none;\n}\n\nbody[class*=\"material3\"] .template-chatui .message-items.e-card {\n    border: 1px solid rgb(230, 227, 227);\n}\n\n.template-chatui .message-items.e-card:hover {\n    background-color: unset;\n}\n.template-chatui .e-left .message-template {\n    flex-direction: row;\n    margin-top: 10px;\n}\n\n.template-chatui .e-right .message-template {\n    flex-direction: column;\n    padding: 5px;\n}\n\n.template-chatui .message-text {\n    margin: 5px;\n    padding: 4px;\n    font-size: 14px;\n}\n\n.template-chatui .message-suggestions {\n    margin: 10px 30px;\n    display: flex;\n    gap: 5px;\n}\n\n.template-chatui .suggestion-button {\n    border-radius: 8px;\n    cursor: pointer;\n    padding: 5px 12px;\n    font-size: 13px;\n}\n\n@media only screen and (max-width: 850px) {\n    .template-chatui {\n        width: 70%;\n    }\n    .template-chatui .message-suggestions {\n        flex-direction: column;\n        width: 80%;\n    }\n    .template-chatui .message-suggestions .suggestion-button {\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-interactive-chat\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-interactive-chat\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}