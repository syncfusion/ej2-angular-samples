{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","messageData.ts":"export let communityMessageAdmin = {\n    user: 'Alice Brown',\n    id: 'admin',\n    statusIconCss: 'e-icons e-user-busy'\n};\n\nexport let communityMessageUser1 = {\n    user: 'Michale Suyama',\n    id: 'user1',\n    avatarBgColor: \"#87cefa\",\n    statusIconCss: 'e-icons e-user-online'\n};\n\nexport  let communityMessageUser2 = {\n    user: 'Charlie',\n    id: 'user2',\n    avatarUrl: \"https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/charlie.png\",\n    statusIconCss: 'e-icons e-user-away'\n};\n\nexport let communityMessageUser3 = {\n    user: 'Janet',\n    id: 'user3',\n    avatarBgColor: \"#dec287\",\n    avatarUrl: 'https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/janet.png',\n    statusIconCss: 'e-icons e-user-offline'\n};\n\nexport let communityMessageUser4 = {\n    user: 'Jordan Peele',\n    id: 'user4',\n    statusIconCss: 'e-icons e-user-busy'\n};\n\nlet chatMessageUser1 = {\n    user: 'Albert',\n    id: 'user1',\n    avatarUrl: 'https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/andrew.png'\n};\n\nlet chatMessageUser2 = {\n    user: 'Reena',\n    id: 'user2',\n    avatarUrl: 'https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/reena.png'\n};\n\nlet integrationMessageUser1 = {\n    user: 'Reena',\n    id: 'user1',\n    avatarUrl: 'https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/reena.png'\n};\n\nlet integrationMessageUser2 = {\n    user: 'Albert',\n    id: 'user2',\n    avatarUrl: 'https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/andrew.png'\n};\n\nlet botMessage = {\n    user: 'Bot',\n    id: 'bot',\n    avatarUrl: 'https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/bot.png'\n};\n\nlet walterMessageUser1 = {\n    user: 'Sam',\n    id: 'user2',\n    avatarUrl: 'https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/laura.png'\n};\n\nlet walterMessageUser2 = {\n    user: 'Charlie',\n    id: 'user5',\n    avatarUrl: \"https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/charlie.png\",\n};\n\nlet lauraMessageUser1 = {\n    user: 'Laura Callahan',\n    id: 'user1',\n    avatarUrl: 'https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/laura.png'\n};\n\nlet lauraMessageUser2 = {\n    user: 'Sam',\n    id: 'user3',\n    avatarUrl: 'https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/laura.png'\n};\n\nlet teamsMessageUser1 = {\n    user: 'Admin',\n    id: 'team'\n};\n\nlet teamsMessageUser2= {\n    user: 'Janet',\n    id: 'user2',\n    avatarUrl: 'https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/janet.png'\n};\n\nexport const communityMessagedata = [\n    {\n        author: communityMessageAdmin,\n        text: 'Hey Michale, Charlie! Seen the latest posts in the Design Community? Amazing projects!',\n        timeStamp: new Date(\"October 25, 2024 07:30\")\n    },\n    {\n        author: communityMessageUser1,\n        text: 'Hi Alice! Yes, Dana’s new UI design is incredible.',\n        timeStamp: new Date(\"October 25, 2024 08:00\")\n    },\n    {\n        author: communityMessageUser2,\n        text: 'Hey! I loved Dana’s use of color. Frank’s typography guide was great too.',\n        timeStamp: new Date(\"October 25, 2024 11:00\")\n    },\n    {\n        author: communityMessageUser4,\n        text: 'Dana’s work is so inspiring!',\n        timeStamp: new Date(\"October 25, 2024 11:30\")\n    },\n    {\n        author: communityMessageAdmin,\n        text: 'Absolutely! Any new community events planned?',\n        timeStamp: new Date(\"October 26, 2024 11:00\")\n    },\n    {\n        author: communityMessageUser1,\n        text: 'We should organize a design challenge.',\n        timeStamp: new Date(\"October 26, 2024 12:15\")\n    },\n    {\n        author: communityMessageUser3,\n        text: 'I am excited to see the new projects.',\n        timeStamp: new Date(\"October 26, 2024 12:17\")\n    },\n    {\n        author: communityMessageUser2,\n        text: 'Great idea! Let’s discuss it in the next meeting.',\n        timeStamp: new Date(\"October 26, 2024 12:30\")\n    },\n    {\n        author: communityMessageAdmin,\n        text: 'Sounds good! This community is so inspiring.',\n        timeStamp: new Date()\n    },\n    {\n        author: communityMessageUser1,\n        text: 'Agreed! Excited to see everyone’s ideas.',\n        timeStamp: new Date()\n    },\n    {\n        author: communityMessageUser2,\n        text: 'I am looking forward to the design challenge.',\n        timeStamp: new Date()\n    }\n];\n\nexport const chatMessagedata = [\n    {\n        author: chatMessageUser1,\n        text: \"Hi there! How's it going?\"\n    },\n    {\n        author: chatMessageUser2,\n        text: \"Hey! I'm doing well, thanks. How about you?\"\n    },\n    {\n        author: chatMessageUser1,\n        text: \"Mostly the usual stuff. I did start a new hobby - painting!\"\n    },\n];\n\nexport const integrationMessagedata = [\n    {\n        author: integrationMessageUser1,\n        text: \"Hey, I'm having trouble with my computer. It keeps freezing.\"\n    },\n    {\n        author: integrationMessageUser2,\n        text: \"Oh, that's annoying. Have you tried restarting it?\"\n    },\n    {\n        author: integrationMessageUser1,\n        text: \"Yeah, I did, but it didn't help.\"\n    },\n    {\n        author: integrationMessageUser2,\n        text: \"Sometimes, outdated software or malware can cause issues.\"\n    },\n    {\n        author: integrationMessageUser1,\n        text: \"Okay, I'll try that. Thanks for the help!\"\n    }\n];\n\nexport const botMessagedata = [\n    {\n        author: botMessage,\n        text: \"Hello Sam, I am a virtual assitant.\"\n    },\n    {\n        author: botMessage,\n        text: \"Which room are you looking to decorate?\"\n    }\n];\n\nexport const botData = [\n    {\n        text: \"Bedroom\",\n        reply: \"For a bedroom, we can create a serene and calm atmosphere with neutral colors and comfortable bedding.\",\n        suggestions: [\"Garden\", \"Balcony\"]\n    },\n    {\n        text: \"Kitchen\",\n        reply: \"For a kitchen, we can go for a modern, sleek look with stainless steel appliances and minimalist cabinetry. </br> <p>Any other home decor suggestions you'd like to explore ?</p>\",\n        suggestions: [\"Wall art\", \"Plants\"]\n    }\n    \n];\n\nexport const chatSuggestions = [\"Bedroom\", \"Kitchen\"];\n\nexport const walterMessagedata = [\n    {\n        author: walterMessageUser1,\n        text: \"Hey Charlie, have you thought about where you want to go for our vacation?\"\n    },\n    {\n        author: walterMessageUser2,\n        text: \"Hi Sam! I was thinking about going to Bali. I've heard the beaches are beautiful and there's so much to do.\"\n    },\n    {\n        author: walterMessageUser1,\n        text: \"Bali sounds amazing! I've always wanted to try surfing. Do you know any good places to stay?\"\n    },\n    {\n        author: walterMessageUser2,\n        text: \"Yes, I found a few nice resorts and some budget-friendly options too. I'll send you the links.\"\n    },\n    {\n        author: walterMessageUser1,\n        text: \"Great! Let's finalize our plans this weekend.\"\n    }\n];\n\nexport const lauraMessagedata = [\n    {\n        author: lauraMessageUser1,\n        text: \"Hey Sam, can we have a quick meeting tomorrow morning to discuss the new project?\"\n    },\n    {\n        author: lauraMessageUser2,\n        text: \"Sure, what time works best for you?\"\n    },\n    {\n        author: lauraMessageUser1,\n        text: \"10 AM?\"\n    },\n    {\n        author: lauraMessageUser2,\n        text: \"10 AM works for me.\"\n    }\n];\n\nexport const teamsMessagedate = [\n    {\n        author: teamsMessageUser1,\n        text: \"Hi, everyone!, welcome to the new web team\"\n    },\n    {\n        author: teamsMessageUser2,\n        text: \"Hi Sir, excited about the new team.\"\n    },\n    {\n        author: {\n            user: 'Margaret Peacock',\n            id: 'user3'\n        },\n        text: \"Good morning ! suprised with the new team message.\"\n    },\n    {\n        author: communityMessageUser2,\n        text: \"Hi all, what's the purpose of this new team formation ?\"\n    },\n    {\n        author: teamsMessageUser1,\n        text: \"Charlie, we are planning for a new portal launch hence, grouping all in one place.\"\n    }\n];\n\nexport const suyamaMessagedata = [\n    { \n        author: {\n            id: 'user4',\n            user: 'Reena'\n        },\n        text: \"Hi, are you available ?\"\n    }\n];\n\nexport const templateMessagedata = [\n    {\n        text: \"Hello! I'm the Order tracking bot. how can I help you today?\",\n        suggestions: [\"Track an order\", \"Cancel an order\"]\n    },\n    {\n        text: \"Track an order\",\n        reply: 'Please select the order you want to track.',\n        suggestions: [\"Order #67890\", \"Order #53461\"]\n    },\n    {\n        text: \"Order #67890\",\n        reply: \"Fetching details for order <b>#67890</b> </br></br> Your order is currently being processed and will ship in 2-3 days.\",\n        suggestions: [\"Back to main menu\", \"Need help with something else\"]\n    },\n    {\n        text: \"Order #53461\",\n        reply: \"Fetching details for order <b>#53461</b> </br></br> Your order is currently being processed and will ship in 2-3 days.\",\n        suggestions: [\"Back to main menu\", \"Need help with something else\"]\n    },\n    {\n        text: \"Order #87890\",\n        reply: \"Your order <b>#87890</b> has been cancelled.\",\n        suggestions: [\"Back to main menu\", \"Need help with something else\"]\n    },\n    {\n        text: \"Order #90910\",\n        reply: \"Your order <b>#90910</b> has been cancelled.\",\n        suggestions: [\"Back to main menu\", \"Need help with something else\"]\n    },\n    {\n        text: \"Cancel an order\",\n        reply: 'Pick the order you need to cancel.',\n        suggestions: [\"Order #87890\", \"Order #90910\"]\n    },\n    {\n        text: \"Back to main menu\",\n        reply: \"You have returned to the main menu. What would you like to do next?\",\n        suggestions: [\"Track an order\", \"Cancel an order\"]\n    },\n    {\n        text: \"Need help with something else\",\n        reply: \"Please hold while we connect you to a support agent. You can chat with them for any additional queries.\",\n        suggestions: []\n    }\n];\n\nexport const defaultChatSuggestions = [ \"Awesome!\", \"What kind of painting ?\" ];\n\nexport const integrationListTemplateData = [\n    {\n        id: '01',\n        title: 'Albert',\n        imgSrc: 'andrew', message: \"Okay, I'll try that. Thanks for the help!\"\n    },\n    {\n        id: '02',\n        title: 'Bot',\n        imgSrc: 'bot', message: 'Personal decor assistant'\n    },\n    {\n        id: '03',\n        title: 'Charlie',\n        imgSrc: 'charlie', message: \"Great! Let's finalize our plans this weekend.\"\n    },\n    {\n        id: '04',\n        title: 'Laura',\n        imgSrc: 'laura', message: '10 AM works for me.'\n    },\n    {\n        id: '05',\n        title: 'New Dev Team',\n        imgSrc: 'calendar', message: 'User added'\n    },\n    {\n        id: '06',\n        title: 'Reena',\n        imgSrc: 'reena', message: 'You: Hi, are you available ?'\n    },\n];\n\n","app.component.ts":"import { Component, ViewChild, OnInit,ViewEncapsulation } from '@angular/core';\nimport { ChatUIComponent, ChatUIModule, ToolbarSettingsModel, MessageSendEventArgs } from '@syncfusion/ej2-angular-interactive-chat';\nimport { ListViewComponent, ListViewModule, SelectEventArgs } from '@syncfusion/ej2-angular-lists';\nimport { SplitterComponent, SplitterModule } from '@syncfusion/ej2-angular-layouts';\nimport { ButtonModule } from '@syncfusion/ej2-angular-buttons'\nimport { integrationMessagedata, integrationListTemplateData, botData, chatSuggestions, botMessagedata, walterMessagedata, lauraMessagedata, teamsMessagedate, suyamaMessagedata } from './messageData';\n\n\nimport { CommonModule } from '@angular/common';\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.css'],\n  encapsulation: ViewEncapsulation.None,\n  standalone: true,\n  imports: [ChatUIModule, ButtonModule, CommonModule, ListViewModule,SplitterModule,  ]\n})\nexport class AppComponent {\n  @ViewChild('chatUI') public chatUI: ChatUIComponent;\n  @ViewChild('listView') public listView: ListViewComponent;\n\n  public data = integrationListTemplateData;\n  public chatMessages = {\n    user1: integrationMessagedata,\n    admin: botMessagedata,\n    user2: walterMessagedata,\n    user3: lauraMessagedata,\n    team: teamsMessagedate,\n    user4: suyamaMessagedata,\n  };\n  public currentUser = { id: 'user1', user: 'Albert', avatarUrl: 'https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/andrew.png' };\n  public currentMessages = this.chatMessages.user1;\n  public currentSuggestions = [];\n  public headerText = 'Albert';\n  public headerIconCss = 'chat_user1_avatar';\n\n  public headerToolbar: ToolbarSettingsModel = {\n    items: [ { iconCss: 'sf-icon-phone-call', align: 'Right', tooltip: 'Audio call' }]\n  };\n  ngOnInit(): void {\n    this.selectChatUser(0);\n  }\n  onChatItemSelected(args: SelectEventArgs): void {\n    this.chatMessages[this.chatUI.user.id] = this.chatUI.messages;\n    this.chatUI.suggestions = [];\n    this.selectChatUser(args.index);\n    if(args.index >= 0) this.toggleListView();\n  }\n  onActionComplete(): void {\n    this.listView.selectItem(integrationListTemplateData[0]);\n    const chatBtn: HTMLElement = document.getElementById('chatbtn');\n    if (chatBtn) {\n      chatBtn.addEventListener('click', this.toggleListView);\n    }\n  }\n  private selectChatUser(index: number): void {\n    if (!this.chatUI) {\n      return;\n    }\n    const userSettings = [\n      { headerText: 'Albert', headerIconCss: 'chat_user1_avatar', user: { id: 'user1', user: 'Albert', avatarUrl: 'https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/andrew.png' }, messages: this.chatMessages.user1 },\n      { headerText: 'Decor bot', headerIconCss: 'chat_bot_avatar', user: { id: 'admin', user: 'Admin', avatarUrl: 'https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/bot.png' }, messages: this.chatMessages.admin, suggestions: chatSuggestions },\n      { headerText: 'Charlie', headerIconCss: 'chat_user2_avatar', user: { id: 'user2', user: 'Charlie', avatarUrl: 'https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/charlie.png' }, messages: this.chatMessages.user2 },\n      { headerText: 'Laura Callahan', headerIconCss: 'chat_user3_avatar', user: { id: 'user3', user: 'Laura', avatarUrl: 'https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/laura.png' }, messages: this.chatMessages.user3 },\n      { headerText: 'New Dev Team', headerIconCss: 'chat_team_avatar', user: { id: 'team', user: 'Admin', avatarUrl: 'https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/calendar.png' }, messages: this.chatMessages.team },\n      { headerText: 'Reena', headerIconCss: 'chat_user4_avatar', user: { id: 'user4', user: 'Albert' }, messages: this.chatMessages.user4 }\n    ];\n\n    const selectedUser = userSettings[index];\n    Object.assign(this.chatUI, selectedUser);\n    this.chatUI.dataBind();\n  }\n  private toggleListView(): void {\n    const listPopup: HTMLElement = document.getElementById('toggle-chat-list');\n    if (window.innerWidth < 1200) listPopup.style.display = listPopup.style.display === 'none' || listPopup.style.display === '' ? 'block' : 'none';\n  }\n  onMessageSend(args: MessageSendEventArgs): void {\n    this.chatUI.suggestions = [];\n    setTimeout(() => {\n      if (args.message.author.id === 'admin') {\n        const foundMessage = botData.find(m => m.text === args.message.text);\n        const defaultResponse = 'Your message text: ' + args.message.text + '</br></br>' + 'For real-time message processing, connect the Chat UI control to your preferred AI service, such as OpenAI or Azure Cognitive Services.';\n        const message = {\n          author: { id: !foundMessage ? 'default' : 'bot', user: !foundMessage ? 'Default' : 'Bot', avatarUrl: !foundMessage ? '' : 'https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/bot.png' },\n          text: foundMessage?.reply || defaultResponse\n        };\n        this.chatUI.addMessage(message);\n        this.chatUI.suggestions = foundMessage?.suggestions || [];\n      }\n    }, 500);\n  }\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section chat-integration\">\n    <div class=\"integration-chatui\">\n        <ejs-splitter id=\"splitter\" height='100%' width='100%'>\n            <e-panes>\n                <e-pane size=\"auto\" [resizable]='false' cssClass=\"chat-leftContent\">\n                    <ng-template #content>\n                                <div class=\"chat-options-container\">\n                                    <button ejs-button id=\"activitybtn\" cssClass=\"e-flat\" iconCss=\"e-icons e-stamp\" class=\"chat_options\" iconPosition=\"Top\"><span>Activity</span></button>\n                                    <button ejs-button id=\"chatbtn\" cssClass=\"e-flat\" iconCss=\"e-icons e-comment-show\" class=\"chat_options chat_interactable\" iconPosition=\"Top\"><span>Chat</span></button>\n                                    <button ejs-button id=\"calendarbtn\" cssClass=\"e-flat\" iconCss=\"e-icons e-month\" class=\"chat_options\" iconPosition=\"Top\"><span>Calendar</span></button>\n                                    <button ejs-button id=\"teamsbtn\" cssClass=\"e-flat\" iconCss=\"e-icons e-people\" class=\"chat_options\" iconPosition=\"Top\"><span>Teams</span></button>\n                                </div>\n                                <div id=\"toggle-chat-list\" class=\"toggle-chat-listview e-card\">\n                                    <ejs-listview id=\"listview_template\" #listView [dataSource]='data' cssClass=\"e-list-template\" headerTitle='Chats' showHeader='true' (actionComplete)=\"onActionComplete()\" (select)=\"onChatItemSelected($event)\">\n                                        <ng-template #template let-item>\n                                            <div class=\"clearfix desc e-list-wrapper e-list-multi-line e-list-avatar\">\n                                              <img *ngIf=\"item.imgSrc\" class=\"e-avatar\" src=\"https://ej2.syncfusion.com/angular/demos/assets/chat-ui/images/{{item.imgSrc}}.png\" alt=\"image\" style=\"border-radius: 50%;\" />\n                                              <span class=\"e-list-item-header\">{{ item.title }}</span>\n                                              <div *ngIf=\"item.message\" class=\"chat_message\" style=\"font-size: 12px;\">\n                                                {{ item.message }}\n                                              </div>\n                                            </div>\n                                        </ng-template>\n                                    </ejs-listview>\n                                </div>\n                        </ng-template>\n                </e-pane>\n                <e-pane size=\"80%\" [resizable]='false' cssClass=\"chat-rightContent\">\n                    <ng-template #content>\n                            <div id=\"integration-chat\" ejs-chatui #chatUI [user]=\"currentUser\" [messages]=\"currentMessages\" [headerText]=\"headerText\" [headerIconCss]=\"headerIconCss\" [headerToolbar]=\"headerToolbar\" (messageSend)=\"onMessageSend($event)\">\n                                <ng-template #emptyChatTemplate>\n                                    <div class=\"emptychat-content\">\n                                        <h3><span class=\"e-icons e-comment-show\"></span></h3>\n                                        <div class=\"emptyChatText\">No conversations yet</div>\n                                    </div>\n                                </ng-template>\n                            </div>\n                    </ng-template>\n                </e-pane>\n            </e-panes>\n        </ejs-splitter>\n    </div>\n</div>\n","app.component.css":".integration-chatui {\n    width: 85%;\n    height: 600px;\n    margin: 0 auto;\n}\n\n.integration-chatui .chat-leftContent {\n    display: flex;\n}\n.integration-chatui .chat-options-container {\n    display: flex;\n    flex-direction: column;\n    background: whitesmoke;\n    overflow: hidden;\n}\n.integration-chatui .toggle-chat-listview.e-card:hover {\n    background: none;\n}\n\n.integration-chatui .toggle-chat-listview {\n    border: none;\n    justify-content: flex-start;\n    border-radius: unset;\n    line-height: 20px;\n    box-shadow: none;\n}\n.integration-chatui .chat_options {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border: none;\n    border-radius: 0;\n    pointer-events: none;\n}\n\n.integration-chatui .chat_options .e-icon-top,\n.integration-chatui .e-headertext {\n    font-size: 20px !important;\n}\n\n.integration-chatui .e-list-header {\n    font-size: 25px;\n    margin: 8px 0 8px 5px;\n    border-bottom: 0;\n    background: unset;\n}\n.integration-chatui .e-list-container li {\n    border: none;\n}\n.integration-chatui .e-list-container {\n    border-top: 1px solid #d0d0d0;\n}\n\n.integration-chatui .e-splitter .e-split-bar.e-split-bar-horizontal:not(.e-resizable-split-bar), \n.integration-chatui .e-splitter .e-split-bar-horizontal.e-last-bar,\n.integration-chatui .e-list-template li {\n    margin: 0;\n    border-radius: 0;\n}\n\n.integration-chatui .chat_message {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n.integration-chatui .chat_user1_avatar {\n    background-image: url('/assets/chat-ui/images/andrew.png');\n}\n\n.integration-chatui .chat_user2_avatar {\n    background-image: url('/assets/chat-ui/images/charlie.png');\n}\n\n.integration-chatui .chat_user3_avatar {\n    background-image: url('/assets/chat-ui/images/laura.png');\n}\n\n.integration-chatui .chat_user4_avatar {\n    background-image: url('/assets/chat-ui/images/reena.png');\n}\n\n.integration-chatui .chat_team_avatar {\n    background-image: url('/assets/chat-ui/images/calendar.png');\n}\n\n.integration-chatui .chat_bot_avatar {\n    background-image: url('/assets/chat-ui/images/bot.png');\n}\n.integration-chatui .e-header-icon {\n    background-color: unset;\n}\n.integration-chatui #listview_template {\n    border-right: 0;\n    border-bottom: 0;\n    border-top: 0;\n    border-radius: 0;\n    height: 100%;\n}\n\n#chatbtn {\n    border-left: 2px solid #0f6cbd;\n}\n#integration-chat {\n    border: none;\n}\n@font-face {\n    font-family: 'Chatdemo';\n    src:\n    url(data:application/x-font-ttf;charset=utf-8;base64,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) format('truetype');\n    font-weight: normal;\n    font-style: normal;\n}\n\n[class^=\"sf-icon-\"], [class*=\" sf-icon-\"] {\n    font-family: 'Chatdemo' !important;\n}\n\n.integration-chatui .sf-icon-phone-call:before { content: \"\\e703\"; }\nbody[class*=\"-dark\"] .integration-chatui .chat-options-container,\nbody[class*=\"high\"] .integration-chatui .chat-options-container {\n    background: #000;\n}\n@media only screen and (max-width: 1200px) {\n    .integration-chatui {\n        height: 600px;\n        width: 100%;\n    }\n    .integration-chatui .chat_options .e-btn-icon + span {\n        display: none;\n    }\n    .chat-integration.control-section {\n        height: 650px;\n    }\n    .integration-chatui .toggle-chat-listview {\n        position: absolute;\n        top: 0;\n        width: 300px;\n        left: 46px;\n        height: 100%;\n        z-index: 2000;\n        border: none;\n        border-radius: unset;\n        display: none;\n    }\n    .integration-chatui .chat_options.chat_interactable {\n        pointer-events: auto;\n    }\n    .integration-chatui .toggle-chat-listview.e-card:hover {\n        background: #f6f6f6;\n    }\n}\n","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-interactive-chat\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-interactive-chat\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-angular-lists\":\"*\",\"@syncfusion/ej2-layouts\":\"*\",\"@syncfusion/ej2-angular-layouts\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}