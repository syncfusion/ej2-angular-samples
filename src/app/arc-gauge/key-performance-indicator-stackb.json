{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"/**\n * Sample for Circular Gauge default functionalities\n */\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { ILoadedEventArgs, GaugeTheme, CircularGaugeModule, AnnotationsService, GradientService } from '@syncfusion/ej2-angular-circulargauge';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [CircularGaugeModule],\n    providers: [AnnotationsService, GradientService]\n})\n\nexport class AppComponent {\n\n  public selectedTheme: string = location.hash.split('/')[1];\n  public annotations: Object = [\n    {\n      description:'Triangle',\n      content: '<div class=\"triangle-up\"></div>',\n      angle: 270,\n      zIndex: '1',\n      radius: '33%',\n    },\n    {\n      description:'Current',\n      content:\n        '<div class=\"text\" style=\"color:#84cbb5;\">Current</div>',\n      angle: 0,\n      zIndex: '1',\n      radius: '25%',\n    },\n    {\n      description:'76.6%',\n      content:\n        '<div class=\"percentage\" style=\"color:#84cbb5;\">76.6%</div>',\n      angle: 105,\n      zIndex: '1',\n      radius: '9%',\n    },\n    {\n      description:'0',\n      content:\n        '<div style=\"font-size:22px;\">0</div>',\n      angle: 213,\n      zIndex: '1',\n      radius: '83%',\n    },\n    {\n      description:'100',\n      content:\n        '<div style=\"font-size:22px;\">100</div>',\n      angle: 150,\n      zIndex: '1',\n      radius: '83%',\n    },\n  ];\n\n  public animation: Object = {\n    enable: false\n  };\n\n  public ticks: Object = {\n    height: 0\n  };\n\n  public lineStyle: Object = {\n    width: 0\n  };\n\n  public linearGradient: Object = {\n    startValue: '0%',\n    endValue: '60%',\n    colorStop: [\n      { color: 'white', offset: '10%', opacity: 0.9 },\n      { color: '#84cbb5', offset: '90%', opacity: 0.9 },\n    ],\n  };\n\n  public labelStyle: Object = {\n    format:'{value} %',\n    font: {\n      size: '0px',\n    },\n  };\n\n  public loadGauge(args: ILoadedEventArgs): void {\n    // custom code start\n    this.selectedTheme = this.selectedTheme ? this.selectedTheme : 'Material';\n    args.gauge.theme = <GaugeTheme>(this.selectedTheme.charAt(0).toUpperCase() +\n      this.selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n      if (this.selectedTheme.indexOf('dark') > -1 || this.selectedTheme.indexOf('contrast') > -1) {\n        args.gauge.axes[0].annotations[3].content = '<div style=\"font-size:22px;color:white;\">0</div>';\n        args.gauge.axes[0].annotations[4].content = '<div style=\"font-size:22px;color:white;\">100</div>';\n      }\n      else {\n        args.gauge.axes[0].annotations[3].content = '<div style=\"font-size:22px;\">0</div>';\n        args.gauge.axes[0].annotations[4].content = '<div style=\"font-size:22px;\">100</div>';\n      }\n    // custom code end\n  }\n\n  constructor() {\n    // code\n  };\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<main>\n    <section id=\"action-description\" aria-label=\"Description of Circular Gauge sample\">\n        <p>\n            This sample shows an arc gauge with a key performance indicator (KPI), which is a measurable value that shows\n            how an organization meets key business objectives.\n        </p>\n    </section>\n    <div class=\"control-section\">\n        <ejs-circulargauge id=\"keyperform\" style='display:block;' background='transparent' (load)='loadGauge($event)'>\n            <e-axes>\n                <e-axis radius='90%' minimum=0 maximum=100 startAngle=220 endAngle=140 [majorTicks]='ticks'\n                    [minorTicks]='ticks' [lineStyle]='lineStyle' [labelStyle]=\"labelStyle\" [annotations]=\"annotations\">\n                    <e-pointers>\n                        <e-pointer type=\"Marker\" markerShape=\"Circle\" [animation]=\"animation\" markerWidth=30 markerHeight=30\n                            radius=82% color='#bdbdbf' value=30>\n                        </e-pointer>\n                        <e-pointer type=\"Marker\" markerShape=\"Circle\" [animation]=\"animation\" markerWidth=30 markerHeight=30\n                            radius=82% color='#626866' value=50>\n                        </e-pointer>\n                        <e-pointer type=\"Marker\" markerShape=\"InvertedTriangle\" markerWidth=30\n                            markerHeight=30 radius=92% color='#b6b6b6' value=76.6>\n                        </e-pointer>\n                    </e-pointers>\n                    <e-ranges>\n                        <e-range start=0 end=100 startWidth=30 endWidth=30 color=\"#e3e3e3\" radius=\"90%\"\n                            roundedCornerRadius=20>\n                        </e-range>\n                        <e-range start=30 end=50 startWidth=30 endWidth=30 [linearGradient]=\"linearGradient\" radius=\"90%\">\n                        </e-range>\n                    </e-ranges>\n                </e-axis>\n            </e-axes>\n        </ejs-circulargauge>\n    </div>\n    <section id=\"description\" aria-label=\"Description of the Circular Gauge features demonstrated in this sample\">\n        <p>\n            In this example, you can see how to render an arc gauge showing key performance indicator (KPI). You can use <a\n                target=\"_blank\"\n                href=\"https://ej2.syncfusion.com/angular/documentation/api/circular-gauge/axisModel/\">axes</a>, <a\n                target=\"_blank\"\n                href=\"https://ej2.syncfusion.com/angular/documentation/api/circular-gauge/rangeModel/\">ranges</a>, <a\n                target=\"_blank\"\n                href=\"https://ej2.syncfusion.com/angular/documentation/api/circular-gauge/pointerModel/\">pointers</a> and <a\n                target=\"_blank\"\n                href=\"https://ej2.syncfusion.com/angular/documentation/api/circular-gauge/annotationModel/\">annotations</a>\n            oriented properties to customize the appearance of the arc gauge, in order to achieve the desired outcome.\n        </p>\n        <p>\n            More information on the gauge can be found in this\n            <a target=\"_blank\"\n                href=\"https://ej2.syncfusion.com/angular/documentation/circular-gauge/getting-started/\">documentation\n                section</a>.\n        </p>\n    </section>\n    <!-- custom code start -->\n    <style>\n        #keyperform_Annotations_0 {\n                    line-height: 0.7;\n        }\n        .control-section {\n            min-height: 450px;\n        }\n    \n        .triangle-up {\n          width: 20;\n          height: 20;\n          border-left: 10px solid transparent;\n          border-right: 10px solid transparent;\n          border-bottom: 20px solid #84cbb5;\n          margin-top: -18px;\n        }\n        .text {\n          font-family: inherit;\n          font-size:30px;\n          text-align:center;\n        }\n      .percentage {\n          font-family: inherit;\n          font-size:44px;\n          text-align:center;\n          margin-left:-8px;\n      }\n      .e-view.fabric div.triangle-up, .e-view.fabric-dark div.triangle-up {\n        margin-top: -18px;\n      }\n      .e-view.material div.triangle-up, .e-view.material-dark div.triangle-up, .e-view.bootstrap-dark div.triangle-up,\n      .e-view.bootstrap div.triangle-up, .e-view.bootstrap4 div.triangle-up {\n          width: 20;\n          height: 20;\n          border-left: 10px solid transparent;\n          border-right: 10px solid transparent;\n          border-bottom: 20px solid #84cbb5;\n          margin-top: -22px;\n      }\n      @media screen and (max-width: 420px) {\n          .text {\n            font-size:20px;\n            text-align:center;\n            margin-left: 10px;\n          }\n          .percentage {\n              font-size:30px;\n              text-align:center;\n          }\n          .triangle-up {\n              width: 20;\n              height: 20;\n              border-left: 10px solid transparent;\n              border-right: 10px solid transparent;\n              border-bottom: 20px solid #84cbb5;\n              margin-top: -2px;\n          }\n          .e-view.fabric div.triangle-up, .e-view.fabric-dark div.triangle-up {\n              margin-top: -2px;\n           }\n          .e-view.material div.triangle-up, .e-view.material-dark div.triangle-up, .e-view.bootstrap-dark div.triangle-up,\n          .e-view.bootstrap div.triangle-up, .e-view.bootstrap4 div.triangle-up {\n              width: 20;\n              height: 20;\n              border-left: 10px solid transparent;\n              border-right: 10px solid transparent;\n              border-bottom: 20px solid #84cbb5;\n              margin-top: -6px;\n          }\n      }\n    </style>\n    <!-- custom code end -->\n</main>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-circulargauge\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-grids\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}