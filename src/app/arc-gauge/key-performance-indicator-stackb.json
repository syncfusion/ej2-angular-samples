{"dependencies.json":"{\"@syncfusion/ej2-base\": \"*\", \"@syncfusion/ej2-buttons\": \"*\", \"@syncfusion/ej2-splitbuttons\": \"*\", \"@syncfusion/ej2-calendars\": \"*\", \"@syncfusion/ej2-charts\": \"*\", \"@syncfusion/ej2-diagrams\": \"*\", \"@syncfusion/ej2-maps\": \"*\", \"@syncfusion/ej2-treemap\": \"*\", \"@syncfusion/ej2-circulargauge\": \"*\", \"@syncfusion/ej2-data\": \"*\", \"@syncfusion/ej2-dropdowns\": \"*\", \"@syncfusion/ej2-grids\": \"*\", \"@syncfusion/ej2-inputs\": \"*\", \"@syncfusion/ej2-lists\": \"*\", \"@syncfusion/ej2-navigations\": \"*\", \"@syncfusion/ej2-popups\": \"*\", \"@syncfusion/ej2-lineargauge\": \"*\", \"@syncfusion/ej2-pdf-export\": \"*\", \"@syncfusion/ej2-compression\": \"*\", \"@syncfusion/ej2-excel-export\": \"*\", \"@syncfusion/ej2-file-utils\": \"*\", \"@syncfusion/ej2-svg-base\": \"*\", \"@syncfusion/ej2-documenteditor\": \"*\", \"@syncfusion/ej2-richtexteditor\": \"*\", \"@syncfusion/ej2-notifications\": \"*\", \"@syncfusion/ej2-heatmap\": \"*\", \"@syncfusion/ej2-pivotview\": \"*\", \"@syncfusion/ej2-schedule\": \"*\", \"@syncfusion/ej2-layouts\": \"*\", \"@syncfusion/ej2-angular-base\": \"*\", \"@syncfusion/ej2-angular-buttons\": \"*\", \"@syncfusion/ej2-angular-splitbuttons\": \"*\", \"@syncfusion/ej2-angular-calendars\": \"*\", \"@syncfusion/ej2-angular-charts\": \"*\", \"@syncfusion/ej2-angular-diagrams\": \"*\", \"@syncfusion/ej2-angular-maps\": \"*\", \"@syncfusion/ej2-angular-treemap\": \"*\", \"@syncfusion/ej2-angular-circulargauge\": \"*\", \"@syncfusion/ej2-angular-dropdowns\": \"*\", \"@syncfusion/ej2-angular-grids\": \"*\", \"@syncfusion/ej2-angular-inputs\": \"*\", \"@syncfusion/ej2-angular-lists\": \"*\", \"@syncfusion/ej2-angular-navigations\": \"*\", \"@syncfusion/ej2-angular-popups\": \"*\", \"@syncfusion/ej2-angular-lineargauge\": \"*\", \"@syncfusion/ej2-angular-documenteditor\": \"*\", \"@syncfusion/ej2-angular-richtexteditor\": \"*\", \"@syncfusion/ej2-angular-notifications\": \"*\", \"@syncfusion/ej2-angular-heatmap\": \"*\", \"@syncfusion/ej2-angular-pivotview\": \"*\", \"@syncfusion/ej2-angular-schedule\": \"*\", \"@syncfusion/ej2-angular-layouts\": \"*\" , \"@angular/http\": \"*\", \"rxjs-compat\":\"*\", \"core-js\": \"2.6.9\"}","main.ts":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","polyfills.ts":"/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/**\n * IE11 requires the following for NgClass support on SVG elements\n */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\nimport 'reflect-metadata';\nimport 'reflect-metadata';","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n  <link href=\"../../styles/material.css\" rel=\"stylesheet\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n</head>\n<body class=\"ej2-new\"> \n\n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WLQL39J\"height=\"0\"width=\"0\"style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app.component.ts":"/**\n * Sample for Circular Gauge default functionalities\n */\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { ILoadedEventArgs, GaugeTheme } from '@syncfusion/ej2-angular-circulargauge';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class AppComponent {\n\n  public selectedTheme: string = location.hash.split('/')[1];\n  public annotations: Object = [\n    {\n      content: '<div class=\"triangle-up\"></div>',\n      angle: 270,\n      zIndex: '1',\n      radius: '33%',\n    },\n    {\n      content:\n        '<div class=\"text\" style=\"color:#84cbb5;\">Current</div>',\n      angle: 0,\n      zIndex: '1',\n      radius: '25%',\n    },\n    {\n      content:\n        '<div class=\"percentage\" style=\"color:#84cbb5;\">76.6%</div>',\n      angle: 105,\n      zIndex: '1',\n      radius: '9%',\n    },\n    {\n      content:\n        '<div style=\"font-size:22px;\">0</div>',\n      angle: 213,\n      zIndex: '1',\n      radius: '83%',\n    },\n    {\n      content:\n        '<div style=\"font-size:22px;\">100</div>',\n      angle: 150,\n      zIndex: '1',\n      radius: '83%',\n    },\n  ];\n\n  public animation: Object = {\n    enable: false\n  };\n\n  public ticks: Object = {\n    height: 0\n  };\n\n  public lineStyle: Object = {\n    width: 0\n  };\n\n  public linearGradient: Object = {\n    startValue: '0%',\n    endValue: '60%',\n    colorStop: [\n      { color: 'white', offset: '10%', opacity: 0.9 },\n      { color: '#84cbb5', offset: '90%', opacity: 0.9 },\n    ],\n  };\n\n  public labelStyle: Object = {\n    font: {\n      size: '0px',\n    },\n  };\n\n  public loadGauge(args: ILoadedEventArgs): void {\n    // custom code start\n    this.selectedTheme = this.selectedTheme ? this.selectedTheme : 'Material';\n    args.gauge.theme = <GaugeTheme>(this.selectedTheme.charAt(0).toUpperCase() +\n      this.selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');\n      if (this.selectedTheme == 'tailwind') {\n        args.gauge.axes[0].annotations[0].angle = 96;\n        args.gauge.axes[0].annotations[0].radius = \"-34%\";\n      }\n      if (this.selectedTheme.indexOf('dark') > -1 || this.selectedTheme.indexOf('contrast') > -1) {\n        args.gauge.axes[0].annotations[3].content = '<div style=\"font-size:22px;color:white;\">0</div>';\n        args.gauge.axes[0].annotations[4].content = '<div style=\"font-size:22px;color:white;\">100</div>';\n      }\n      else {\n        args.gauge.axes[0].annotations[3].content = '<div style=\"font-size:22px;\">0</div>';\n        args.gauge.axes[0].annotations[4].content = '<div style=\"font-size:22px;\">100</div>';\n      }\n    // custom code end\n  }\n\n  constructor() {\n    // code\n  };\n}","app/app.module.ts":"import { ButtonModule, CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\n\nimport { GridModule } from '@syncfusion/ej2-angular-grids';\n\nimport { CircularGaugeAllModule } from '@syncfusion/ej2-angular-circulargauge';\n\nimport { HttpModule } from '@angular/http';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { RouterModule } from '@angular/router';\n\nimport { CommonModule } from '@angular/common';\n\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from '../app.component';\n@NgModule({ declarations: [ AppComponent ], imports: [ CircularGaugeAllModule, GridModule, ButtonModule, CheckBoxModule, BrowserModule], providers: [], bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","app.component.html":"<div class=\"control-section\">\n    <ejs-circulargauge style='display:block;' background='transparent' (load)='loadGauge($event)'>\n        <e-axes>\n            <e-axis radius='90%' minimum=0 maximum=100 startAngle=220 endAngle=140 [majorTicks]='ticks'\n                [minorTicks]='ticks' [lineStyle]='lineStyle' [labelStyle]=\"labelStyle\" [annotations]=\"annotations\">\n                <e-pointers>\n                    <e-pointer type=\"Marker\" markerShape=\"Circle\" [animation]=\"animation\" markerWidth=30 markerHeight=30\n                        radius=82% color='#bdbdbf' value=30>\n                    </e-pointer>\n                    <e-pointer type=\"Marker\" markerShape=\"Circle\" [animation]=\"animation\" markerWidth=30 markerHeight=30\n                        radius=82% color='#626866' value=50>\n                    </e-pointer>\n                    <e-pointer type=\"Marker\" markerShape=\"InvertedTriangle\" markerWidth=30\n                        markerHeight=30 radius=92% color='#b6b6b6' value=76.6>\n                    </e-pointer>\n                </e-pointers>\n                <e-ranges>\n                    <e-range start=0 end=100 startWidth=30 endWidth=30 color=\"#e3e3e3\" radius=\"90%\"\n                        roundedCornerRadius=20>\n                    </e-range>\n                    <e-range start=30 end=50 startWidth=30 endWidth=30 [linearGradient]=\"linearGradient\" radius=\"90%\">\n                    </e-range>\n                </e-ranges>\n            </e-axis>\n        </e-axes>\n    </ejs-circulargauge>\n</div>\n<!-- custom code start -->\n<style>\n    .control-section {\n        min-height: 450px;\n    }\n\n    .triangle-up {\n      width: 20;\n      height: 20;\n      border-left: 10px solid transparent;\n      border-right: 10px solid transparent;\n      border-bottom: 20px solid #84cbb5;\n      margin-top: -18px;\n    }\n    .text {\n      font-family: inherit;\n      font-size:30px;\n      text-align:center;\n    }\n  .percentage {\n      font-family: inherit;\n      font-size:44px;\n      text-align:center;\n      margin-left:-8px;\n  }\n  .e-view.tailwind div.triangle-up {\n    margin-top: -12px;\n  }\n  .e-view.tailwind-dark div.triangle-up {\n    margin-top: -20px; \n  }\n  .e-view.fabric div.triangle-up, .e-view.fabric-dark div.triangle-up {\n    margin-top: -18px;\n  }\n  .e-view.material div.triangle-up, .e-view.material-dark div.triangle-up, .e-view.bootstrap-dark div.triangle-up,\n  .e-view.bootstrap div.triangle-up, .e-view.bootstrap4 div.triangle-up {\n      width: 20;\n      height: 20;\n      border-left: 10px solid transparent;\n      border-right: 10px solid transparent;\n      border-bottom: 20px solid #84cbb5;\n      margin-top: -22px;\n  }\n  @media screen and (max-width: 420px) {\n      .text {\n        font-size:20px;\n        text-align:center;\n        margin-left: 10px;\n      }\n      .percentage {\n          font-size:30px;\n          text-align:center;\n      }\n      .triangle-up {\n          width: 20;\n          height: 20;\n          border-left: 10px solid transparent;\n          border-right: 10px solid transparent;\n          border-bottom: 20px solid #84cbb5;\n          margin-top: -2px;\n      }\n      .e-view.tailwind div.triangle-up {\n          margin-top: -4px;\n      }\n      .e-view.tailwind-dark div.triangle-up {\n          margin-top: -8px;\n      }\n      .e-view.fabric div.triangle-up, .e-view.fabric-dark div.triangle-up {\n          margin-top: -2px;\n       }\n      .e-view.material div.triangle-up, .e-view.material-dark div.triangle-up, .e-view.bootstrap-dark div.triangle-up,\n      .e-view.bootstrap div.triangle-up, .e-view.bootstrap4 div.triangle-up {\n          width: 20;\n          height: 20;\n          border-left: 10px solid transparent;\n          border-right: 10px solid transparent;\n          border-bottom: 20px solid #84cbb5;\n          margin-top: -6px;\n      }\n  }\n</style>\n<!-- custom code end -->","app.component.css":""}