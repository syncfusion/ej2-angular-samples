{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, Inject } from '@angular/core';\nimport { MenuItemModel, BeforeOpenCloseMenuEventArgs, MenuAnimationSettingsModel, MenuModule } from '@syncfusion/ej2-angular-navigations';\nimport { closest } from '@syncfusion/ej2-base';\n\n\n\n/**\n * Scrollable Menu Controller\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [MenuModule,  ]\n})\n\nexport class AppComponent {\n    constructor() {\n        \n    }\n\n    public animation: MenuAnimationSettingsModel = { duration: 800 };\n\n    // Menu items definition\n    public menuItems: MenuItemModel[] = [\n        {\n            text: 'Appliances',\n            id: 'appliances',\n            items: [\n                {\n                    text: 'Kitchen',\n                    items: [\n                        { text: 'Electric Cookers' },\n                        { text: 'Coffee Makers' },\n                        { text: 'Blenders' },\n                        { text: 'Microwave Ovens' }\n                    ]\n                },\n                {\n                    text: 'Television',\n                    items: [\n                        { text: 'Our Exclusive TVs' },\n                        { text: 'Smart TVs' },\n                        { text: 'Big Screen TVs' }\n                    ]\n                },\n                {\n                    text: 'Washing Machine'\n                },\n                {\n                    text: 'Refrigerators'\n                },\n                {\n                    text: 'Air Conditioners',\n                    items: [\n                        { text: 'Inverter ACs' },\n                        { text: 'Split ACs' },\n                        { text: 'Window ACs' },\n                    ]\n                },\n                {\n                    text: 'Water Purifiers'\n                },\n                {\n                    text: 'Air Purifiers'\n                },\n                {\n                    text: 'Chimneys'\n                },\n                {\n                    text: 'Inverters'\n                },\n                {\n                    text: 'Healthy Living'\n                },\n                {\n                    text: 'Vacuum Cleaners'\n                },\n                {\n                    text: 'Room Heaters'\n                },\n                {\n                    text: 'New Launches'\n                }\n            ]\n        },\n        {\n            text: 'Accessories',\n            items: [\n                {\n                    text: 'Mobile',\n                    id: 'mobile',\n                    items: [\n                        { text: 'Headphones' },\n                        { text: 'Batteries' },\n                        { text: 'Memory Cards' },\n                        { text: 'Power Banks' },\n                        { text: 'Mobile Cases' },\n                        { text: 'Screen Protectors' },\n                        { text: 'Data Cables' },\n                        { text: 'Chargers' },\n                        { text: 'Selfie Sticks' },\n                        { text: 'OTG Cable' }\n                    ]\n                },\n                {\n                    text: 'Laptops'\n                },\n                {\n                    text: 'Desktop PC',\n                    items: [\n                        { text: 'Pendrives' },\n                        { text: 'External Hard Disks' },\n                        { text: 'Monitors' },\n                        { text: 'Keyboards' }\n                    ]\n                },\n                {\n                    text: 'Camera',\n                    items: [\n                        { text: 'Lens' },\n                        { text: 'Tripods' }\n                    ]\n                }\n            ]\n        },\n        {\n            text: 'Fashion',\n            items: [\n                {\n                    text: 'Men'\n                },\n                {\n                    text: 'Women'\n                }\n            ]\n        },\n        {\n            text: 'Home & Living',\n            items: [\n                {\n                    text: 'Furniture'\n                },\n                {\n                    text: 'Decor'\n                },\n                {\n                    text: 'Smart Home Automation'\n                },\n                {\n                    text: 'Dining & Serving'\n                }\n            ]\n        },\n        {\n            text: 'Entertainment',\n            items: [\n                {\n                    text: 'Televisions'\n                },\n                {\n                    text: 'Home Theatres'\n                },\n                {\n                    text: 'Gaming Laptops'\n                }\n            ]\n        },\n        {\n            text: 'Contact Us'\n        },\n        {\n            text: 'Help'\n        }\n    ];\n\n    public onBeforeOpen(args: BeforeOpenCloseMenuEventArgs): void {\n        // Restricting sub menu wrapper height\n        if (args.parentItem.text === 'Appliances') {\n            (closest(args.element, '.e-menu-wrapper') as HTMLElement).style.height = '320px';\n        }\n        if (args.parentItem.text === 'Mobile') {\n            (closest(args.element, '.e-menu-wrapper') as HTMLElement).style.height = '260px';\n        }\n    }\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section\">\n    <div class=\"scrollable-menu-control\">\n        <ejs-menu [items]=\"menuItems\" [enableScrolling]=\"true\" cssClass=\"e-custom-scroll\" [animationSettings]=\"animation\" (beforeOpen)=\"onBeforeOpen($event)\"></ejs-menu>\n    </div>\n</div>\n","app.component.css":"/* custom code start*/\n/**\n * ej2 Menu styles\n */\n.scrollable-menu-control {\n  margin-top: 45px;\n  text-align: center;\n}\n\n/**\n * Restricting the parent menu wrapper size\n */\n.scrollable-menu-control .e-menu-wrapper.e-custom-scroll {\n  width: 492px;\n}\n\n.e-bigger .scrollable-menu-control .e-menu-wrapper.e-custom-scroll {\n  width: 565px;\n}\n\n@media only screen and (max-width: 500px) {\n  .e-bigger .scrollable-menu-control .e-menu-wrapper.e-custom-scroll {\n    width: 290px;\n  }\n}\n/* custom code end*/    ","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-angular-splitbuttons\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}