{"main.ts":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","polyfills.ts":"/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n  <link href=\"../../styles/material.css\" rel=\"stylesheet\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n</head>\n<body class=\"ej2-new\"> \n\n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WLQL39J\"height=\"0\"width=\"0\"style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { ChangeEventArgs } from '@syncfusion/ej2-angular-dropdowns';\nimport { MenuComponent } from '@syncfusion/ej2-angular-navigations';\n// custom code start\nimport { Browser, select } from '@syncfusion/ej2-base';\n// custom code end\n\n/**\n * Hamburger Menu Controller\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class AppComponent {\n    @ViewChild('menu')\n    public menuObj: MenuComponent;\n\n    // Menu datasource\n    public data: { [key: string]: Object }[] = [\n        {\n            \"text\": \"Accessories\",\n            \"items\": [\n                {\n                    \"text\": \"Mobile\",\n                    \"id\": \"mobile\",\n                    \"items\": [\n                        {\n                            \"text\": \"Headphones\"\n                        },\n                        {\n                            \"text\": \"Batteries\"\n                        },\n                        {\n                            \"text\": \"Memory Cards\"\n                        }\n                    ]\n                },\n                {\n                    \"text\": \"Laptops\"\n                },\n                {\n                    \"text\": \"Desktop PC\",\n                    \"items\": [\n                        {\n                            \"text\": \"Pendrives\"\n                        },\n                        {\n                            \"text\": \"External Hard Disks\"\n                        }\n                    ]\n                },\n                {\n                    \"text\": \"Camera\",\n                    \"items\": [\n                        {\n                            \"text\": \"Lens\"\n                        },\n                        {\n                            \"text\": \"Tripods\"\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            \"text\": \"Fashion\",\n            \"items\": [\n                {\n                    \"text\": \"Men\"\n                },\n                {\n                    \"text\": \"Women\"\n                }\n            ]\n        },\n        {\n            \"text\": \"Home & Living\",\n            \"items\": [\n                {\n                    \"text\": \"Furniture\"\n                },\n                {\n                    \"text\": \"Decor\"\n                },\n                {\n                    \"text\": \"Smart Home Automation\"\n                },\n                {\n                    \"text\": \"Dining & Serving\"\n                }\n            ]\n        },\n        {\n            \"text\": \"Entertainment\",\n            \"items\": [\n                {\n                    \"text\": \"Televisions\"\n                },\n                {\n                    \"text\": \"Home Theatres\"\n                },\n                {\n                    \"text\": \"Gaming Laptops\"\n                }\n            ]\n        },\n        {\n            \"text\": \"Contact Us\"\n        },\n        {\n            \"text\": \"Help\"\n        }\n    ];\n\n    // DropDownList datasource\n    public viewModeData: object = [\n        { text: 'Mobile', value: 'Mobile' },\n        { text: 'Tablet', value: 'Tablet' },\n        { text: 'Desktop', value: 'Desktop' }\n    ];\n\n\tpublic viewMode: string = 'Mobile';\n\n    public modeChange(args: ChangeEventArgs): void {\n        let container: HTMLElement = document.querySelector('#layoutcontainer');\n        switch (args.value) {\n            case 'Mobile':\n            case 'Tablet':\n                this.menuObj.close();\n                container.classList.add('deviceLayout');\n                container.classList[args.value === 'Mobile' ? 'remove' : 'add']('tabletview');\n                this.menuObj.element.parentElement.classList[args.value === 'Mobile' ? 'remove' : 'add']('e-menu-icon-right');\n                this.menuObj.hamburgerMode = true;\n                this.menuObj.showItemOnClick = true;\n            break;\n            case 'Desktop':\n                container.classList.remove('deviceLayout', 'tabletview');\n                this.menuObj.hamburgerMode = false;\n                this.menuObj.showItemOnClick = false;\n            break;\n        }\n    }\n\n    // custom code start\n    public menuCreated(): void {\n        if (Browser.isDevice) {\n            select('.property-section').remove();\n            select('#layoutcontainer').removeAttribute('class');\n            select('#layoutcontainer').removeAttribute('id');\n            (select('.e-menu') as HTMLElement).style.height = '363px';\n        }\n    }\n    // custom code end\n}","app/app.module.ts":"import { MultiSelectAllModule } from '@syncfusion/ej2-angular-dropdowns';\n\nimport { DropDownButtonModule } from '@syncfusion/ej2-angular-splitbuttons';\n\nimport { MenuModule, ToolbarModule } from '@syncfusion/ej2-angular-navigations';\n\nimport { DropDownListModule } from '@syncfusion/ej2-angular-dropdowns';\n\nimport { CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\n\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from '../app.component';\n\n@NgModule({ declarations: [ AppComponent ], imports: [ MenuModule, BrowserModule, CommonModule, CheckBoxModule, ToolbarModule, DropDownButtonModule, MultiSelectAllModule, DropDownListModule], providers: [], bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","app.component.html":"<div id=\"hamburgerMenu\" class=\"control-section\">\n    <div class=\"col-lg-8 control-section\">\n        <div class=\"menu-control\">\n            <div id='layoutcontainer' class=\"deviceLayout\">\n                <div class=\"speaker\">\n                    <div class=\"camera\"></div>\n                </div>\n                <div class=\"layout\">\n                    <div id=\"container\">\n                        <ejs-menu #menu [items]='data' [hamburgerMode]='true' [showItemOnClick]='true' (created)='menuCreated()'></ejs-menu>\n                    </div>\n                </div>\n                <div class=\"outerButton\"> </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-lg-4 property-section\">\n        <div class=\"property-panel-header\">Properties</div>\n        <div class=\"property-panel-content\">\n            <table id=\"property\" title=\"Properties\" style=\"width: 100%\">\n                <tbody>\n                    <tr>\n                        <td style=\"width: 50%;padding-top:10px\">\n                            <div>View Mode</div>\n                        </td>\n                        <td style=\"width: 50%;padding-top:10px\">\n                            <div style=\"max-width: 200px\">\n                                <ejs-dropdownlist [dataSource]='viewModeData' [value]='viewMode' popupHeight='200px' (change)='modeChange($event)'></ejs-dropdownlist>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n","app.component.css":"/**\n* ej2 Menu styles customization\n*/\n.deviceLayout .e-menu {\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n    height: 363px;\n}\n.deviceLayout .e-menu::-webkit-scrollbar {\n    width: 0;\n}\n\n/**\n* ej2 Menu styles\n*/\n.menu-control {\n    text-align: center;\n}\n\n#layoutcontainer:not(.deviceLayout) {\n    margin-top: 45px;\n}\n\n.deviceLayout {\n    line-height: initial;\n    border: 1px solid black;\n    width: 285px;\n    height: 505px;\n    margin: auto;\n    margin-bottom: 15px;\n    border-radius: 28px;\n    position: relative;\n    background-image: linear-gradient(to top, #ffffff, #f5f5f5);\n}\n\n.fluent-dark .e-menu-wrapper.e-hamburger.e-lib.e-keyboard {\n    background-color: black;\n}\n\n.fluent-dark .e-menu-wrapper.e-lib.e-keyboard {\n    background-color: black;\n}\n\n.deviceLayout.tabletview {\n    width: 767px;\n    z-index: 1;\n}\n\n.deviceLayout .speaker {\n    border: 1px solid black;\n    border-radius: 5px;\n    width: 20%;\n    height: 5px;\n    margin: 15px auto 0px auto;\n    position: relative;\n}\n\n.deviceLayout .outerButton {\n    width: 30px;\n    height: 30px;\n    border: 1px solid black;\n    border-radius: 50%;\n    position: absolute;\n    bottom: calc(0% + 10px);\n    left: calc(50% - 15px);\n}\n\n.deviceLayout .camera {\n    position: absolute;\n    left: calc(-15% - 10px);\n    top: -100%;\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    border: 1px solid black;\n}\n\n.deviceLayout .layout {\n    border: 1px solid black;\n    margin: 20px 13px 0px 13px;\n}\n\n.layout #container {\n    height: 405px;\n    background-color: white;\n    overflow: hidden;\n}\n\n#header {\n    width: 100%;\n    background-color: #7b8cfb;\n}","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-angular-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\"}"}