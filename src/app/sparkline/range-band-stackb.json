{"dependencies.json":"{\"@syncfusion/ej2-base\": \"*\", \"@syncfusion/ej2-buttons\": \"*\", \"@syncfusion/ej2-splitbuttons\": \"*\", \"@syncfusion/ej2-calendars\": \"*\", \"@syncfusion/ej2-charts\": \"*\", \"@syncfusion/ej2-diagrams\": \"*\", \"@syncfusion/ej2-maps\": \"*\", \"@syncfusion/ej2-treemap\": \"*\", \"@syncfusion/ej2-circulargauge\": \"*\", \"@syncfusion/ej2-data\": \"*\", \"@syncfusion/ej2-dropdowns\": \"*\", \"@syncfusion/ej2-grids\": \"*\", \"@syncfusion/ej2-inputs\": \"*\", \"@syncfusion/ej2-lists\": \"*\", \"@syncfusion/ej2-navigations\": \"*\", \"@syncfusion/ej2-popups\": \"*\", \"@syncfusion/ej2-lineargauge\": \"*\", \"@syncfusion/ej2-pdf-export\": \"*\", \"@syncfusion/ej2-compression\": \"*\", \"@syncfusion/ej2-excel-export\": \"*\", \"@syncfusion/ej2-file-utils\": \"*\", \"@syncfusion/ej2-svg-base\": \"*\", \"@syncfusion/ej2-documenteditor\": \"*\", \"@syncfusion/ej2-richtexteditor\": \"*\", \"@syncfusion/ej2-notifications\": \"*\", \"@syncfusion/ej2-heatmap\": \"*\", \"@syncfusion/ej2-pivotview\": \"*\", \"@syncfusion/ej2-schedule\": \"*\", \"@syncfusion/ej2-layouts\": \"*\", \"@syncfusion/ej2-angular-base\": \"*\", \"@syncfusion/ej2-angular-buttons\": \"*\", \"@syncfusion/ej2-angular-splitbuttons\": \"*\", \"@syncfusion/ej2-angular-calendars\": \"*\", \"@syncfusion/ej2-angular-charts\": \"*\", \"@syncfusion/ej2-angular-diagrams\": \"*\", \"@syncfusion/ej2-angular-maps\": \"*\", \"@syncfusion/ej2-angular-treemap\": \"*\", \"@syncfusion/ej2-angular-circulargauge\": \"*\", \"@syncfusion/ej2-angular-dropdowns\": \"*\", \"@syncfusion/ej2-angular-grids\": \"*\", \"@syncfusion/ej2-angular-inputs\": \"*\", \"@syncfusion/ej2-angular-lists\": \"*\", \"@syncfusion/ej2-angular-navigations\": \"*\", \"@syncfusion/ej2-angular-popups\": \"*\", \"@syncfusion/ej2-angular-lineargauge\": \"*\", \"@syncfusion/ej2-angular-documenteditor\": \"*\", \"@syncfusion/ej2-angular-richtexteditor\": \"*\", \"@syncfusion/ej2-angular-notifications\": \"*\", \"@syncfusion/ej2-angular-heatmap\": \"*\", \"@syncfusion/ej2-angular-pivotview\": \"*\", \"@syncfusion/ej2-angular-schedule\": \"*\", \"@syncfusion/ej2-angular-layouts\": \"*\" , \"@angular/http\": \"*\", \"rxjs-compat\":\"*\"}","main.ts":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n","polyfills.ts":"/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol';\n// import 'core-js/es6/object';\n// import 'core-js/es6/function';\n// import 'core-js/es6/parse-int';\n// import 'core-js/es6/parse-float';\n// import 'core-js/es6/number';\n// import 'core-js/es6/math';\n// import 'core-js/es6/string';\n// import 'core-js/es6/date';\n// import 'core-js/es6/array';\n// import 'core-js/es6/regexp';\n// import 'core-js/es6/map';\n// import 'core-js/es6/weak-map';\n// import 'core-js/es6/set';\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect';\n\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\nimport 'core-js/es7/reflect';\n\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n **/\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n */\n\n // (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n // (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n // (window as any).__zone_symbol__BLACK_LISTED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n\n /*\n * in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n * with the following flag, it will bypass `zone.js` patch for IE/Edge\n */\n// (window as any).__Zone_enable_cross_context_check = true;\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n<link href=\"../styles/OpenNew.css\" rel=\"stylesheet\">\n  <link href=\"//cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\" />\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body class=\"ej2-new\"> \n\n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WLQL39J\"height=\"0\"width=\"0\"style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app/app.module.ts":"import { CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\n\nimport { DropDownListAllModule } from '@syncfusion/ej2-angular-dropdowns';\n\nimport { SliderModule } from '@syncfusion/ej2-angular-inputs';\n\nimport { GridAllModule } from '@syncfusion/ej2-angular-grids';\n\nimport { SparklineAllModule } from '@syncfusion/ej2-angular-charts';\n\nimport { HttpModule } from '@angular/http';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { RouterModule } from '@angular/router';\n\nimport { CommonModule } from '@angular/common';\n\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from '../app.component';\n@NgModule({ declarations: [   AppComponent ], imports: [ SparklineAllModule, GridAllModule, SliderModule, DropDownListAllModule, CheckBoxModule, BrowserModule], providers: [], bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","app.component.html":"<div class=\"col-lg-8 control-section\">\n    <div id=\"spark-container\" class=\"row\">\n        <div class=\"cols-sample-area\" align=\"center\">\n            <p>\n                <font size=\"4px\"> Sales Growth Comparison with various Products</font>\n            </p>\n            <ejs-grid #rangegrid id=\"rangespark\" [dataSource]='griddata' (created)=\"renderGridSparkline()\" height=400\n                [allowSelection]=false [enableHover]=true>\n                <e-columns>\n                    <e-column field='name' headerText='Name' width='130' textAlign='Left'></e-column>\n                    <e-column headerText='2010' textAlign='Center' width='220'>\n                        <ng-template #template let-griddata>\n                            <div id=\"sparkline2010{{griddata.id}}\"></div>\n                        </ng-template>\n                    </e-column>\n                    <e-column headerText='2011' textAlign='Center' width='220'>\n                        <ng-template #template let-griddata>\n                            <div id=\"sparkline2011{{griddata.id}}\"></div>\n                        </ng-template>\n                    </e-column>\n                </e-columns>\n            </ejs-grid>\n        </div>\n    </div>\n</div>\n<style>\n    .e-headertext {\n        font-weight: bolder;\n    }\n\n    #radius>* {\n        padding: 0px !important;\n    }\n\n    .control-section {\n        min-height: 450px;\n    }\n\n    .property-text {\n        font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\" !important;\n        font-size: 13px !important;\n        font-weight: 400 !important;\n    }\n</style>\n<div class=\"col-lg-3 property-section\">\n    <div class=\"property-panel-section\">\n        <div class=\"property-panel-header\">Properties</div>\n        <div class=\"property-panel-content\">\n            <table id=\"property\" style=\"width:100%\" title=\"Properties\">\n                <tbody>\n                    <tr style=\"height: 35px; width: 100%\">\n                        <td style=\"width: 120%\" id='slider1'>\n                            Range Band Min <span>&nbsp;&nbsp;&nbsp;1</span>\n                        </td>\n                        <td style=\"width: 100%\">\n                            <div class='sliderwrap'>\n                                <ejs-slider #slide1 id=\"range-min\" (change)=\"rangeMinChange($event)\" (mousemove)=\"rangeMinChange($event)\"\n                                    min=0 max=6 value=1 step=1 style=\"width: 100px;\"></ejs-slider>\n                            </div>\n                        </td>\n                    </tr>\n\n                    <tr style=\"height: 35px; width: 100%\">\n                        <td style=\"width: 120%\" id='slider2'>\n                            Range Band Max <span>&nbsp;&nbsp;&nbsp;3</span>\n                        </td>\n                        <td>\n                            <div>\n                                <ejs-slider #slide2 id=\"range-max\" (change)=\"rangeMaxChange($event)\" (mousemove)=\"rangeMaxChange($event)\"\n                                    min=0 max=6 value=3 step=1 style=\"width: 100px;\"></ejs-slider>\n                            </div>\n\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","app.component.css":"","app.component.ts":"import { Component, ViewEncapsulation, OnInit, ViewChild } from '@angular/core';\nimport { products } from './../../../../src/app/sparkline/spark-data';\nimport { SparklineModel, Sparkline} from '@syncfusion/ej2-charts';\nimport { getInstance } from '@syncfusion/ej2-base';\nimport {  ChangeEventArgs as CheckBoxChangeEvents} from '@syncfusion/ej2-buttons';\nimport { Slider, SliderChangeEventArgs } from '@syncfusion/ej2-inputs';\nimport { SliderComponent } from '@syncfusion/ej2-angular-inputs';\n/**\n * Sample for axis type in Sparkline \n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n    @ViewChild('sparkline')\n    @ViewChild('slide')\n    public lineData: object[] = [\n        [0, 6, 4, 1, 3, 2, 5],\n        [5, 4, 6, 3, 1, 2, 0],\n        [6, 4, 0, 3, 2, 5, 1],\n        [4, 6, 3, 0, 1, 2, 5],\n        [3, 5, 6, 4, 0, 1, 2],\n        [1, 3, 4, 2, 5, 0, 6],\n        [2, 4, 0, 3, 5, 6, 1],\n        [5, 4, 6, 3, 1, 2, 0],\n        [0, 6, 4, 1, 3, 2, 5],\n        [6, 4, 0, 3, 2, 5, 1],\n        [4, 6, 3, 0, 1, 2, 5],\n        [3, 5, 6, 4, 0, 1, 2],\n        [1, 3, 4, 2, 5, 0, 6],\n        [2, 4, 0, 3, 5, 6, 1],\n        [5, 4, 6, 3, 1, 2, 0],\n        [0, 6, 4, 1, 3, 2, 5],\n        [6, 4, 0, 3, 2, 5, 1],\n        [4, 6, 3, 0, 1, 2, 5],\n        [2, 4, 0, 3, 5, 6, 1],\n        [3, 5, 6, 4, 0, 1, 2],\n        [1, 3, 4, 2, 5, 0, 6]\n    ];\n    // tslint:disable\n    public griddata: object[] = [];\n    public sparkline: SparklineModel = {\n        height: '50px',\n        width: '100%',\n        lineWidth: 2,\n        fill: '#0d3c9b',\n        dataSource: this.lineData[0] as Number[],\n        rangeBandSettings: [\n            {\n                startRange: 1, endRange: 3, color: '#bfd4fc'\n            }\n        ]\n    };\n\n    constructor(){\n        \n        window[\"sampleInstance\"] = this;\n        //window[\"sparkLineData\"] = this.lineData;\n    }\n    \n    public renderGridSparkline(): void {\n        let that:any = window[\"sampleInstance\"];\n        let lineData: object[] = [\n            [0, 6, 4, 1, 3, 2, 5],\n            [5, 4, 6, 3, 1, 2, 0],\n            [6, 4, 0, 3, 2, 5, 1],\n            [4, 6, 3, 0, 1, 2, 5],\n            [3, 5, 6, 4, 0, 1, 2],\n            [1, 3, 4, 2, 5, 0, 6],\n            [2, 4, 0, 3, 5, 6, 1],\n            [5, 4, 6, 3, 1, 2, 0],\n            [0, 6, 4, 1, 3, 2, 5],\n            [6, 4, 0, 3, 2, 5, 1],\n            [4, 6, 3, 0, 1, 2, 5],\n            [3, 5, 6, 4, 0, 1, 2],\n            [1, 3, 4, 2, 5, 0, 6],\n            [2, 4, 0, 3, 5, 6, 1],\n            [5, 4, 6, 3, 1, 2, 0],\n            [0, 6, 4, 1, 3, 2, 5],\n            [6, 4, 0, 3, 2, 5, 1],\n            [4, 6, 3, 0, 1, 2, 5],\n            [2, 4, 0, 3, 5, 6, 1],\n            [3, 5, 6, 4, 0, 1, 2],\n            [1, 3, 4, 2, 5, 0, 6]\n        ];\n        setTimeout(() => {\n            for (let i: number = 1; i < 6; i++) {\n                let first: Sparkline = new Sparkline(that.sparkline);\n                first.dataSource = lineData[i] as number[];\n                first.appendTo('#sparkline2010' + i);\n                let second: Sparkline = new Sparkline(that.sparkline);\n                second.dataSource = lineData[i + 5] as number[];\n                second.appendTo('#sparkline2011' + i);\n            }\n        }, 700);\n    }; \n    \n    ngOnInit() {\n        this.griddata = products;\n    }\n    public rangeMinChange(e: SliderChangeEventArgs) {\n        var slider = document.getElementById('range-min');\n        let slider1: SliderComponent = <SliderComponent>slider['ej2_instances'][0];\n        let value: number = slider1.value as number;\n        document.getElementById('slider1').innerHTML = 'Range Band Min <span> ' + (slider1.value as number);\n        this.changeRangeMin(value);\n    }\n    public rangeMaxChange(e: SliderChangeEventArgs) {\n        var slider = document.getElementById('range-max');\n        let slider2: SliderComponent = <SliderComponent>slider['ej2_instances'][0];\n        let value: number = slider2.value as number;\n        document.getElementById('slider2').innerHTML = ' Range Band Max <span> ' + (slider2.value as number);\n        this.changeRangeMax(value);\n    }\n    public changeRangeMin: Function = (min: number): void => {\n        for (let i: number = 1; i < 6; i++) {\n            let first: Sparkline = <Sparkline>document.getElementById('sparkline2010' + i)['ej2_instances'][0]\n            let second: Sparkline = <Sparkline>document.getElementById('sparkline2011' + i)['ej2_instances'][0]\n            first.rangeBandSettings[0].startRange = min;\n            second.rangeBandSettings[0].startRange = min;\n            first.refresh();\n            second.refresh();\n        }\n    }\n    public changeRangeMax: Function = (max: number): void => {\n        for (let i: number = 1; i < 6; i++) {\n            let first: Sparkline = <Sparkline>document.getElementById('sparkline2010' + i)['ej2_instances'][0]\n            let second: Sparkline = <Sparkline>document.getElementById('sparkline2011' + i)['ej2_instances'][0]\n            first.rangeBandSettings[0].endRange = max;\n            second.rangeBandSettings[0].endRange = max;\n            first.refresh();\n            second.refresh();\n        }\n    }\n}\n","data.ts":"// tslint:disable\nexport let orderdata: Object[] = [{\n    OrderID: 10248,\n    CustomerID: \"VINET\",\n    EmployeeID: 1,\n    OrderDate: new Date(8364186e5),\n    ShipName: \"Vins et alcools Chevalier\",\n    ShipCity: \"Reims\",\n    ShipAddress: \"59 rue de l'Abbaye\",\n    ShipRegion: null,\n    ShipPostalCode: \"51100\",\n    ShipCountry: \"France\",\n    Freight: 32.38,\n    Verified: !0\n}, {\n    OrderID: 10249,\n    CustomerID: \"TOMSP\",\n    EmployeeID: 2,\n    OrderDate: new Date(836505e6),\n    ShipName: \"Toms Spezialit�ten\",\n    ShipCity: \"M�nster\",\n    ShipAddress: \"Luisenstr. 48\",\n    ShipRegion: null,\n    ShipPostalCode: \"44087\",\n    ShipCountry: \"Germany\",\n    Freight: 11.61,\n    Verified: !1\n}, {\n    OrderID: 10250,\n    CustomerID: \"HANAR\",\n    EmployeeID: 3,\n    OrderDate: new Date(8367642e5),\n    ShipName: \"Hanari Carnes\",\n    ShipCity: \"Rio de Janeiro\",\n    ShipAddress: \"Rua do Pa�o, 67\",\n    ShipRegion: \"RJ\",\n    ShipPostalCode: \"05454-876\",\n    ShipCountry: \"Brazil\",\n    Freight: 65.83,\n    Verified: !0\n}, {\n    OrderID: 10251,\n    CustomerID: \"VICTE\",\n    EmployeeID: 4,\n    OrderDate: new Date(8367642e5),\n    ShipName: \"Victuailles en stock\",\n    ShipCity: \"Lyon\",\n    ShipAddress: \"2, rue du Commerce\",\n    ShipRegion: null,\n    ShipPostalCode: \"69004\",\n    ShipCountry: \"France\",\n    Freight: 41.34,\n    Verified: !0\n}, {\n    OrderID: 10252,\n    CustomerID: \"SUPRD\",\n    EmployeeID: 5,\n    OrderDate: new Date(8368506e5),\n    ShipName: \"Supr�mes d�lices\",\n    ShipCity: \"Charleroi\",\n    ShipAddress: \"Boulevard Tirou, 255\",\n    ShipRegion: null,\n    ShipPostalCode: \"B-6000\",\n    ShipCountry: \"Belgium\",\n    Freight: 51.3,\n    Verified: !0\n}, {\n    OrderID: 10253,\n    CustomerID: \"HANAR\",\n    EmployeeID: 6,\n    OrderDate: new Date(836937e6),\n    ShipName: \"Hanari Carnes\",\n    ShipCity: \"Rio de Janeiro\",\n    ShipAddress: \"Rua do Pa�o, 67\",\n    ShipRegion: \"RJ\",\n    ShipPostalCode: \"05454-876\",\n    ShipCountry: \"Brazil\",\n    Freight: 58.17,\n    Verified: !0\n}, {\n    OrderID: 10254,\n    CustomerID: \"CHOPS\",\n    EmployeeID: 7,\n    OrderDate: new Date(8370234e5),\n    ShipName: \"Chop-suey Chinese\",\n    ShipCity: \"Bern\",\n    ShipAddress: \"Hauptstr. 31\",\n    ShipRegion: null,\n    ShipPostalCode: \"3012\",\n    ShipCountry: \"Switzerland\",\n    Freight: 22.98,\n    Verified: !1\n}, {\n    OrderID: 10255,\n    CustomerID: \"RICSU\",\n    EmployeeID: 8,\n    OrderDate: new Date(8371098e5),\n    ShipName: \"Richter Supermarkt\",\n    ShipCity: \"Gen�ve\",\n    ShipAddress: \"Starenweg 5\",\n    ShipRegion: null,\n    ShipPostalCode: \"1204\",\n    ShipCountry: \"Switzerland\",\n    Freight: 148.33,\n    Verified: !0\n}, {\n    OrderID: 10256,\n    CustomerID: \"WELLI\",\n    EmployeeID: 9,\n    OrderDate: new Date(837369e6),\n    ShipName: \"Wellington Importadora\",\n    ShipCity: \"Resende\",\n    ShipAddress: \"Rua do Mercado, 12\",\n    ShipRegion: \"SP\",\n    ShipPostalCode: \"08737-363\",\n    ShipCountry: \"Brazil\",\n    Freight: 13.97,\n    Verified: !1\n}, {\n    OrderID: 10257,\n    CustomerID: \"HILAA\",\n    EmployeeID: 10,\n    OrderDate: new Date(8374554e5),\n    ShipName: \"HILARION-Abastos\",\n    ShipCity: \"San Crist�bal\",\n    ShipAddress: \"Carrera 22 con Ave. Carlos Soublette #8-35\",\n    ShipRegion: \"T�chira\",\n    ShipPostalCode: \"5022\",\n    ShipCountry: \"Venezuela\",\n    Freight: 81.91,\n    Verified: !0\n}, {\n    OrderID: 10258,\n    CustomerID: \"ERNSH\",\n    EmployeeID: 11,\n    OrderDate: new Date(8375418e5),\n    ShipName: \"Ernst Handel\",\n    ShipCity: \"Graz\",\n    ShipAddress: \"Kirchgasse 6\",\n    ShipRegion: null,\n    ShipPostalCode: \"8010\",\n    ShipCountry: \"Austria\",\n    Freight: 140.51,\n    Verified: !0\n}, {\n    OrderID: 10259,\n    CustomerID: \"CENTC\",\n    EmployeeID: 12,\n    OrderDate: new Date(8376282e5),\n    ShipName: \"Centro comercial Moctezuma\",\n    ShipCity: \"M�xico D.F.\",\n    ShipAddress: \"Sierras de Granada 9993\",\n    ShipRegion: null,\n    ShipPostalCode: \"05022\",\n    ShipCountry: \"Mexico\",\n    Freight: 3.25,\n    Verified: !1\n}, {\n    OrderID: 10260,\n    CustomerID: \"OTTIK\",\n    EmployeeID: 13,\n    OrderDate: new Date(8377146e5),\n    ShipName: \"Ottilies K�seladen\",\n    ShipCity: \"K�ln\",\n    ShipAddress: \"Mehrheimerstr. 369\",\n    ShipRegion: null,\n    ShipPostalCode: \"50739\",\n    ShipCountry: \"Germany\",\n    Freight: 55.09,\n    Verified: !0\n}, {\n    OrderID: 10261,\n    CustomerID: \"QUEDE\",\n    EmployeeID: 14,\n    OrderDate: new Date(8377146e5),\n    ShipName: \"Que Del�cia\",\n    ShipCity: \"Rio de Janeiro\",\n    ShipAddress: \"Rua da Panificadora, 12\",\n    ShipRegion: \"RJ\",\n    ShipPostalCode: \"02389-673\",\n    ShipCountry: \"Brazil\",\n    Freight: 3.05,\n    Verified: !1\n}, {\n    OrderID: 10262,\n    CustomerID: \"RATTC\",\n    EmployeeID: 15,\n    OrderDate: new Date(8379738e5),\n    ShipName: \"Rattlesnake Canyon Grocery\",\n    ShipCity: \"Albuquerque\",\n    ShipAddress: \"2817 Milton Dr.\",\n    ShipRegion: \"NM\",\n    ShipPostalCode: \"87110\",\n    ShipCountry: \"USA\",\n    Freight: 48.29,\n    Verified: !0\n}, {\n    OrderID: 10263,\n    CustomerID: \"ERNSH\",\n    EmployeeID: 16,\n    OrderDate: new Date(8380602e5),\n    ShipName: \"Ernst Handel\",\n    ShipCity: \"Graz\",\n    ShipAddress: \"Kirchgasse 6\",\n    ShipRegion: null,\n    ShipPostalCode: \"8010\",\n    ShipCountry: \"Austria\",\n    Freight: 146.06,\n    Verified: !0\n}, {\n    OrderID: 10264,\n    CustomerID: \"FOLKO\",\n    EmployeeID: 17,\n    OrderDate: new Date(8381466e5),\n    ShipName: \"Folk och f� HB\",\n    ShipCity: \"Br�cke\",\n    ShipAddress: \"�kergatan 24\",\n    ShipRegion: null,\n    ShipPostalCode: \"S-844 67\",\n    ShipCountry: \"Sweden\",\n    Freight: 3.67,\n    Verified: !1\n}, {\n    OrderID: 10265,\n    CustomerID: \"BLONP\",\n    EmployeeID: 18,\n    OrderDate: new Date(838233e6),\n    ShipName: \"Blondel p�re et fils\",\n    ShipCity: \"Strasbourg\",\n    ShipAddress: \"24, place Kl�ber\",\n    ShipRegion: null,\n    ShipPostalCode: \"67000\",\n    ShipCountry: \"France\",\n    Freight: 55.28,\n    Verified: !0\n}, {\n    OrderID: 10266,\n    CustomerID: \"WARTH\",\n    EmployeeID: 19,\n    OrderDate: new Date(8383194e5),\n    ShipName: \"Wartian Herkku\",\n    ShipCity: \"Oulu\",\n    ShipAddress: \"Torikatu 38\",\n    ShipRegion: null,\n    ShipPostalCode: \"90110\",\n    ShipCountry: \"Finland\",\n    Freight: 25.73,\n    Verified: !1\n}, {\n    OrderID: 10267,\n    CustomerID: \"FRANK\",\n    EmployeeID: 20,\n    OrderDate: new Date(8385786e5),\n    ShipName: \"Frankenversand\",\n    ShipCity: \"M�nchen\",\n    ShipAddress: \"Berliner Platz 43\",\n    ShipRegion: null,\n    ShipPostalCode: \"80805\",\n    ShipCountry: \"Germany\",\n    Freight: 208.58,\n    Verified: !0\n}\n];\nexport let products: Object[] = [\n    {\n        id: 1,\n        name: 'Product A',\n        previousYear: 10,\n        lastYear: 20\n    },\n    {\n        id: 2,\n        name: 'Product B',\n        previousYear: 20,\n        lastYear: 30\n    },\n    {\n        id: 3,\n        name: 'Product C',\n        previousYear: 30,\n        lastYear: 20\n    },\n    {\n        id: 4,\n        name: 'Product D',\n        previousYear: 40,\n        lastYear: 10\n    },\n    {\n        id: 5,\n        name: 'Product E',\n        previousYear: 20,\n        lastYear: 30\n    }\n];"}