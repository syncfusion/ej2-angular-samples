{"main.ts":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","polyfills.ts":"/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n  <link href=\"../../styles/material.css\" rel=\"stylesheet\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n</head>\n<body class=\"ej2-new\"> \n\n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WLQL39J\"height=\"0\"width=\"0\"style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app.component.ts":"import { Component, ViewEncapsulation } from '@angular/core';\nimport { ISparklineLoadEventArgs, SparklineTheme } from '@syncfusion/ej2-angular-charts';\n/**\n * Sample for axis type in Sparkline \n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n    // custom code start\n    public load(args: ISparklineLoadEventArgs): void {\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.sparkline.theme = <SparklineTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\");\n    };\n    // custom code end\n    public lineData: object[] = [\n        { x: 1, yval: 5 },\n        { x: 2, yval: 6 },\n        { x: 3, yval: 5 },\n        { x: 4, yval: 7 },\n        { x: 5, yval: 4 },\n        { x: 6, yval: 3 },\n        { x: 7, yval: 9 },\n        { x: 8, yval: 5 },\n        { x: 9, yval: 6 },\n        { x: 10, yval: 5 },\n        { x: 11, yval: 7 },\n        { x: 12, yval: 8 },\n        { x: 13, yval: 4 },\n        { x: 14, yval: 5 },\n        { x: 15, yval: 3 },\n        { x: 16, yval: 4 },\n        { x: 17, yval: 11 },\n        { x: 18, yval: 10 },\n        { x: 19, yval: 2 },\n        { x: 20, yval: 12 },\n        { x: 21, yval: 4 },\n        { x: 22, yval: 7 },\n        { x: 23, yval: 6 },\n        { x: 24, yval: 8 },\n    ];\n    public tooltipSettings: object = {\n        visible: true,\n        format: '${x} : ${yval}',\n        trackLineSettings: {\n            visible: true\n        }\n    };\n    public markerSettings: object = {\n        visible: ['All'],\n        size: 2.5,\n        fill: 'blue',\n    };\n    public border: object =  { color: '#3C78EF', width: 2};\n    public axisSettings: {\n        lineSettings: {\n            visible: true\n        }\n    };\n    public categoryData: object[] = [\n        { x: 1, xval: 'Jan', yval: 34 },\n        { x: 2, xval: 'Feb', yval: 36 },\n        { x: 3, xval: 'Mar', yval: 32 },\n        { x: 4, xval: 'Apr', yval: 35 },\n        { x: 5, xval: 'May', yval: 40 },\n        { x: 6, xval: 'Jun', yval: 38 },\n        { x: 7, xval: 'Jul', yval: 33 },\n        { x: 8, xval: 'Aug', yval: 37 },\n        { x: 9, xval: 'Sep', yval: 34 },\n        { x: 10, xval: 'Oct', yval: 31 },\n        { x: 11, xval: 'Nov', yval: 30 },\n        { x: 12, xval: 'Dec', yval: 29 },\n    ];\n    public catTooltipSettings: object = {\n        visible: true,\n        format: '${xval} : ${yval}°C',\n        trackLineSettings: {\n            visible: true\n        }\n    };\n    public columnData: object[] = [\n        { x: 1, xval: 'Jan', yval: 10 },\n        { x: 2, xval: 'Feb', yval: 6 },\n        { x: 3, xval: 'Mar', yval: 8 },\n        { x: 4, xval: 'Apr', yval: -5 },\n        { x: 5, xval: 'May', yval: 11 },\n        { x: 6, xval: 'Jun', yval: 5 },\n        { x: 7, xval: 'Jul', yval: -2 },\n        { x: 8, xval: 'Aug', yval: 7 },\n        { x: 9, xval: 'Sep', yval: -3 },\n        { x: 10, xval: 'Oct', yval: 6 },\n        { x: 11, xval: 'Nov', yval: 8 },\n        { x: 12, xval: 'Dec', yval: 10 },\n    ];\n    public columntooltipSettings: object = {\n        visible: true,\n        format: '${xval} : ${yval}',\n    };\n    public winloss: object = [12, 15, -10, 13, 15, 6, -12, 17, 13, 0, 8, -10];\n    public winlossTooltipSettings: object = {\n        format: '${x} : ${y}',\n    };\n    public pieData1: object[] = [{x: 'Gold', y : 46}, {x: 'Silver', y : 37}, {x: 'Bronze', y : 38}];\n    public pieData2: object[] = [{x: 'Gold', y : 27}, {x: 'Silver', y : 23}, {x: 'Bronze', y : 17}];\n    public pieData3: object[] = [{x: 'Gold', y : 26}, {x: 'Silver', y : 18}, {x: 'Bronze', y : 26}];\n    public pietooltipSettings: object = {\n        visible: true,\n        format: '${x} : ${y}',\n    };\n}","app/app.module.ts":"import { CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\n\nimport { DropDownListAllModule } from '@syncfusion/ej2-angular-dropdowns';\n\nimport { SliderModule } from '@syncfusion/ej2-angular-inputs';\n\nimport { GridAllModule } from '@syncfusion/ej2-angular-grids';\n\nimport { SparklineAllModule } from '@syncfusion/ej2-angular-charts';\n\nimport { HttpModule } from '@angular/http';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { RouterModule } from '@angular/router';\n\nimport { CommonModule } from '@angular/common';\n\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from '../app.component';\n@NgModule({ declarations: [ AppComponent ], imports: [ SparklineAllModule, GridAllModule, SliderModule, DropDownListAllModule, CheckBoxModule, BrowserModule], providers: [], bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","app.component.html":"<div class=\"control-section\">\n    <div id=\"spark-container\" class=\"row\">\n        <div class=\"cols-sample-area\" align=\"center\" style=\"margin-top: 8%;\">\n            <div align=\"center\" class=\"col-lg-2 col-md-3 col-sm-5 sparent\">\n                <div class=\"spark\" align=\"center\">\n                    <ejs-sparkline id=\"line\" height=\"80px\" width=\"90%\" valueType=\"Numeric\" fill=\"#3C78EF\" type=\"Line\"\n                        [dataSource]=\"lineData\" [markerSettings]='markerSettings' [tooltipSettings]=\"tooltipSettings\"\n                        [markerSettings]=\"markerSettings\" xName=\"x\" yName=\"yval\" (load)='load($event)'></ejs-sparkline>\n                    <div class=\"sparktext\" align=\"center\" style=\"position: absolute; margin-top: 9px; margin-left: 2px; width: 80%;\">Power\n                        production for a day</div>\n                </div>\n            </div>\n            <div align=\"center\" class=\"col-lg-2 col-md-3 col-sm-5 sparent\">\n                <div class=\"spark\" align=\"center\">\n                    <ejs-sparkline id=\"area\" height=\"80px\" width=\"90%\" valueType=\"Category\" fill=\"#b2cfff\" type=\"Area\"\n                        [axisSettings]=\"axisSettings\" [border]='border' [dataSource]=\"categoryData\" [tooltipSettings]=\"catTooltipSettings\"\n                        xName=\"xval\" yName=\"yval\" (load)='load($event)'></ejs-sparkline>\n                    <div class=\"sparktext\" align=\"center\" style=\"position: absolute; margin-top: 9px; margin-left: 3px; width: 80%;\">Average\n                        weather comparision</div>\n                </div>\n            </div>\n            <div align=\"center\" class=\"col-lg-2 col-md-3 col-sm-5 sparent\">\n                <div class=\"spark\" align=\"center\">\n                    <ejs-sparkline id=\"column\" height=\"80px\" width=\"90%\" valueType=\"Category\" highPointColor=\"#14aa21\"\n                        fill=\"#3C78EF\" type=\"Column\" [dataSource]=\"columnData\" [tooltipSettings]=\"columntooltipSettings\"\n                        xName=\"xval\" yName=\"yval\" (load)='load($event)'></ejs-sparkline>\n                    <div class=\"sparktext\" align=\"center\" style=\"position: absolute; margin-top: 9px; margin-left: 10px; width: 70%;\">Revenue\n                        Status</div>\n                </div>\n            </div>\n            <div align=\"center\" class=\"col-lg-2 col-md-5 col-sm-5 sparent\">\n                <div class=\"spark\" align=\"center\">\n                    <ejs-sparkline id=\"winloss\" height=\"80px\" width=\"90%\" fill=\"#3C78EF\" type=\"WinLoss\"\n                        negativePointColor=\"#fc5070\" [dataSource]=\"winloss\" [tooltipSettings]=\"winlossTooltipSettings\" (load)='load($event)'></ejs-sparkline>\n                    <div class=\"sparktext\" align=\"center\" style=\"position: absolute; margin-top: 9px; margin-left: 5px; width: 70%;\">Customer\n                        satisfaction score</div>\n                </div>\n            </div>\n            <div align=\"center\" class=\"col-lg-2 col-md-5 col-sm-10 sparent\">\n                <div class=\"spark\" style=\"height: 87px;\">\n                    <div class=\"sparkpie\" style=\"height:40px;width:29%;\">\n                        <ejs-sparkline id=\"pie1\"  height=\"40px\" width=\"100%\" type=\"Pie\" valueType=\"Category\" [dataSource]=\"pieData1\"\n                            [tooltipSettings]=\"pietooltipSettings\" xName=\"x\" yName=\"y\" (load)='load($event)'></ejs-sparkline>\n                        <div align=\"center\" class=\"pietext\" style=\"position: absolute; width: 25%;\">USA</div>\n                    </div>\n                    <div class=\"sparkpie\" style=\"height:40px;width:29%;\">\n                        <ejs-sparkline id=\"pie2\"  height=\"40px\" width=\"100%\" type=\"Pie\" valueType=\"Category\" [dataSource]=\"pieData2\"\n                            [tooltipSettings]=\"pietooltipSettings\" xName=\"x\" yName=\"y\" (load)='load($event)'></ejs-sparkline>\n                        <div align=\"center\" class=\"pietext\" style=\"position: absolute; width: 25%;\">GBR</div>\n                    </div>\n                    <div class=\"sparkpie\" style=\"height:40px;width:29%;\">\n                        <ejs-sparkline id=\"pie3\" type=\"Pie\" height=\"40px\" width=\"100%\" valueType=\"Category\" [dataSource]=\"pieData3\"\n                            [tooltipSettings]=\"pietooltipSettings\" xName=\"x\" yName=\"y\" (load)='load($event)'></ejs-sparkline>\n                        <div align=\"center\" class=\"pietext\" style=\"position: absolute; width: 25%;\">CHN</div>\n                    </div>\n                    <div class=\"sparktext\" align=\"center\" style=\"position: absolute; margin-top: 90px; margin-left: 5px; width: 70%;\">Olympics\n                        medal details</div>\n                </div>\n                  \n            </div>\n        </div>\n    </div>\n</div>\n<style>\n    td {\n        font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\n        font-weight: 600;\n    }\n\n    .spark {\n        border: 1px solid rgb(209, 209, 209);\n        border-radius: 2px;\n        width: 100%;\n    }\n\n    .sparent {\n        height: 110px;\n        margin-left: 3%;\n        margin-right: 0%;\n    }\n\n    .sparkpie {\n        float: left;\n        margin-top: 15px;\n        margin-left: 2%;\n    }\n\n    .pieparent {\n        width: 93%;\n    }\n\n    .pietext {\n        float: left;\n      \n    }\n\n    .sparktext {\n        text-anchor: middle;\n        width: 100%;\n    }\n</style>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-grids\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\"}"}