{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, Inject, ViewChild} from '@angular/core';\nimport { CheckBoxComponent, CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\nimport { DropDownListComponent, ChangeEventArgs, DropDownListModule } from '@syncfusion/ej2-angular-dropdowns';\nimport { EmitType, detach } from '@syncfusion/ej2-base';\nimport { TextBoxComponent, NumericTextBoxComponent, TextBoxModule, NumericTextBoxModule } from '@syncfusion/ej2-angular-inputs';\n\n\n\n/**\n * Default Multiline TextBox sample\n */\n@Component({\n    selector: 'app-root',\n    styleUrls: ['app.component.css'],\n    templateUrl: 'app.component.html',\n    standalone: true,\n    imports: [TextBoxModule, DropDownListModule, CheckBoxModule, NumericTextBoxModule,  ]\n})\nexport class AppComponent {\n    @ViewChild('default')\n    public textareaObj: TextBoxComponent;\n    @ViewChild('enabled')\n    public enabledObj: CheckBoxComponent;\n    @ViewChild('readonly')\n    public readonlyObj: CheckBoxComponent;\n    @ViewChild('rows')\n    public rowObj: NumericTextBoxComponent;\n    @ViewChild('select')\n    public floatLabelType: DropDownListComponent;\n    // define the JSON of data\n    public floatData: Object[] = [\n        { Id: 'Auto', Label: 'Auto' },\n        { Id: 'Never', Label: 'Never' },\n        { Id: 'Always', Label: 'Always' }\n    ];\n    public fields: Object = { text: 'Label',value: 'Id' };\n    // set the placeholder to DropDownList input element\n    public waterMark: string = 'Select float type';\n    // set the value to select an item based on mapped value at initial rendering\n    public value: string ='Auto';\n    \n    public floatHandler(args: ChangeEventArgs): void {\n        switch (args.value) {\n            case 'Auto':\n                this.textareaObj.floatLabelType = 'Auto';\n                break;\n            case 'Always':\n                this.textareaObj.floatLabelType = 'Always';\n                break;\n            case 'Never':\n                this.textareaObj.floatLabelType = 'Never';\n                break;\n        }\n    }\n\n    public enabledHandler: EmitType<Object> = () => {\n        this.textareaObj.enabled = !(this.enabledObj.checked);\n    }\n\n    public readonlyHandler: EmitType<Object> = () => {\n        this.textareaObj.readonly = this.readonlyObj.checked;\n    }\n\n    public rowHandler(args: any) :void {\n        this.textareaObj.addAttributes({rows: args.value});\n    }\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"col-lg-8 control-section multiline\">\n    <div class=\"content-wrapper\">\n        <div class=\"multiline-row\">\n            <ejs-textbox id=\"textarea\" #default rows=\"2\" placeholder=\"Enter your address\" floatLabelType=\"Auto\" [multiline]=\"true\" required></ejs-textbox>\n        </div>\n    </div>\n</div>\n\n<div class=\"col-lg-4 \">\n    <div class=\"property-section\">\n        <div class=\"property-panel-header\">Properties</div>\n            <table id=\"property\"  class=\"multiline-property\">\n                <tr>\n                    <td class=\"left-side\">Float label type</td>\n                    <td><ejs-dropdownlist id=\"floatLabel\" #select [dataSource]='floatData' [(value)]='value' [fields]='fields' [placeholder]='waterMark' (change)='floatHandler($event)'></ejs-dropdownlist></td>\n                </tr>\n                <tr>\n                    <td class=\"left-side\">Disabled</td>\n                    <td><ejs-checkbox id=\"sample\" #enabled [checked]=\"false\" (change)=\"enabledHandler($event)\"></ejs-checkbox></td>\n                </tr>\n                <tr>\n                    <td class=\"left-side\">Read only</td>\n                    <td><ejs-checkbox id=\"sample1\" #readonly [checked]=\"false\" (change)=\"readonlyHandler($event)\"></ejs-checkbox></td>\n                </tr>\n                <tr>    \n                    <td class=\"left-side\"> Rows</td>\n                    <td><ejs-numerictextbox id=\"row_value\" #rows value=\"2\" format=\"###\" min=\"1\" max=\"20\" (change)=\"rowHandler($event)\"></ejs-numerictextbox></td>\n                </tr>\n            </table>\n        </div>\n    </div>","app.component.css":".content-wrapper div.multiline-row {\n    max-width: 250px;\n    margin: 0 auto;\n    padding: 40px 0px 0px;\n}\n.multiline-property .left-side{\n    font-size: 14px;\n    padding: 8px;\n    width: 50%;\n}\n","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-angular-popups\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}