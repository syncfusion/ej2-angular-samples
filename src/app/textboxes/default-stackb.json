{"main.ts":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","polyfills.ts":"/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n  <link href=\"../../styles/material.css\" rel=\"stylesheet\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n</head>\n<body class=\"ej2-new\"> \n\n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WLQL39J\"height=\"0\"width=\"0\"style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app.component.ts":"import { Component, Inject, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    styleUrls: ['app.component.css'],\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n    constructor(@Inject('sourceFiles') private sourceFiles:any) {\n         \n    }\n\n    //Focus Event function for input component\n    public focusIn(target: HTMLElement): void {\n        target.parentElement.classList.add('e-input-focus');\n    }\n\n    //FocusOut Event function for input component\n    public focusOut(target: HTMLElement): void {\n        target.parentElement.classList.remove('e-input-focus');\n    }\n\n    //Focus Event function for input component\n    public focusInLeft(target: HTMLElement): void {\n        target.parentElement.parentElement.classList.add('e-input-focus');\n    }\n\n    //FocusOut Event function for input component\n    public focusOutLeft(target: HTMLElement): void {\n        target.parentElement.parentElement.classList.remove('e-input-focus');\n    }\n\n    //MouseDown Event function for input component\n    public onMouseDown(target: HTMLElement): void {\n        target.classList.add('e-input-btn-ripple');\n    }\n\n    //MouseUp Event function for input component\n    public onMouseUp(target: HTMLElement): void {\n        let ele: HTMLElement = target;\n        setTimeout(\n                () => {ele.classList.remove('e-input-btn-ripple'); },\n                500);\n    }\n}","app/app.module.ts":"import { CheckBoxModule  } from '@syncfusion/ej2-angular-buttons';\n\nimport { TextBoxModule, NumericTextBoxModule } from '@syncfusion/ej2-angular-inputs';\n\nimport { DropDownListModule } from '@syncfusion/ej2-angular-dropdowns';\n\nimport { DialogModule } from '@syncfusion/ej2-angular-popups';\n\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from '../app.component';\n\n@NgModule({ declarations: [ AppComponent ], imports: [ BrowserModule, FormsModule, CommonModule, DialogModule, TextBoxModule,       ReactiveFormsModule, CheckBoxModule, DropDownListModule, NumericTextBoxModule], providers: [], bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","app.component.html":"<div class=\"col-lg-12 control-section e-input-section\">\n    <div class=\"content-wrapper\">\n        <div class=\"row material\">\n            <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6\"><b>Outlined and Filled</b></div>\n        </div>\n        <div class=\"row material\">\n            <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6\">\n                <ejs-textbox placeholder=\"Outlined\" cssClass=\"e-outline\" floatLabelType=\"Auto\"></ejs-textbox>\n            </div>\n            <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6\">\n                <ejs-textbox placeholder=\"Filled\" cssClass=\"e-filled\" floatLabelType=\"Auto\"></ejs-textbox>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6\"><b>Floating Label</b></div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6\">\n                <ejs-textbox placeholder=\"First Name\" floatLabelType=\"Auto\"></ejs-textbox>\n            </div>\n            <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6\">\n                <ejs-textbox placeholder=\"Last Name\" floatLabelType=\"Auto\" [enableRtl]=\"true\"></ejs-textbox>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-xs-12 col-sm-12 col-lg-12 col-md-12\">\n                <div class=\"e-float-input e-input-group\">\n                    <!-- Focus and FocusOut Event binding Floating input label -->\n                    <input type=\"text\" required (focus)=\"focusIn($event.target)\" (blur)=\"focusOut($event.target)\">\n                    <span class=\"e-float-line\"></span>\n                    <label class=\"e-float-text\">Country</label>\n                    <span class=\"e-input-group-icon e-spin-down\" (mouseup)=\"onMouseUp($event.target)\" (mousedown)=\"onMouseDown($event.target)\"></span>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6\"><b>Inputs</b></div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6\">\n                <div class=\"e-input-group\">\n                    <input class=\"e-input\" type=\"text\" placeholder=\"Enter Name\" (focus)=\"focusIn($event.target)\" (blur)=\"focusOut($event.target)\"\n                    />\n                </div>\n            </div>\n            <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6\">\n                <div class=\"e-input-group e-rtl\">\n                    <input class=\"e-input\" type=\"text\" placeholder=\"Last Name\" (focus)=\"focusIn($event.target)\" (blur)=\"focusOut($event.target)\"\n                    />\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6\">\n                <div class=\"e-input-group\">\n                    <input class=\"e-input\" type=\"password\" placeholder=\"Password\" value=\"password\" (focus)=\"focusIn($event.target)\" (blur)=\"focusOut($event.target)\"\n                    />\n                </div>\n            </div>\n            <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6\">\n                <div class=\"e-input-group\">\n                    <input class=\"e-input\" type=\"email\" placeholder=\"Enter Email\" (focus)=\"focusIn($event.target)\" (blur)=\"focusOut($event.target)\"\n                    />\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6\">\n                <div class=\"e-input-group e-disabled\">\n                    <input class=\"e-input\" type=\"text\" placeholder=\"Disabled\" (focus)=\"focusIn($event.target)\" (blur)=\"focusOut($event.target)\"\n                        disabled />\n                </div>\n            </div>\n            <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6\">\n                <div class=\"e-input-group\">\n                    <input class=\"e-input\" type=\"text\" placeholder=\"Enter Name\" (focus)=\"focusIn($event.target)\" (blur)=\"focusOut($event.target)\"\n                        value=\"Readonly\" readonly/>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6\"><b>Validation States</b></div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-xs-4 col-sm-4 col-lg-4 col-md-4\">\n                <div class=\"e-input-group e-success\">\n                    <input class=\"e-input\" type=\"text\" placeholder=\"Success\" (focus)=\"focusIn($event.target)\" (blur)=\"focusOut($event.target)\"\n                    />\n                </div>\n            </div>\n            <div class=\"col-xs-4 col-sm-4 col-lg-4 col-md-4\">\n                <div class=\"e-input-group e-warning\">\n                    <input class=\"e-input\" type=\"text\" placeholder=\"Warning\" (focus)=\"focusIn($event.target)\" (blur)=\"focusOut($event.target)\"\n                    />\n                </div>\n            </div>\n            <div class=\"col-xs-4 col-sm-4 col-lg-4 col-md-4\">\n                <div class=\"e-input-group e-error\">\n                    <input class=\"e-input\" type=\"text\" placeholder=\"Error\" (focus)=\"focusIn($event.target)\" (blur)=\"focusOut($event.target)\"\n                    />\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6\"><b>Sizing</b></div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6 small-textbox\">\n                <div class=\"e-input-group e-small\">\n                    <input class=\"e-input\" type=\"text\" placeholder=\"Small\" (focus)=\"focusIn($event.target)\" (blur)=\"focusOut($event.target)\"\n                    />\n                </div>\n            </div>\n            <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6\">\n                <div class=\"e-input-group\">\n                    <input class=\"e-input\" type=\"text\" placeholder=\"Normal\" (focus)=\"focusIn($event.target)\" (blur)=\"focusOut($event.target)\"\n                    />\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6\"><b>Input & Elements</b></div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6\">\n                <div class=\"e-input-group\">\n                    <!-- Mousedown and Mouseup Event binding for input icon Ripple Effect -->\n                    <input class=\"e-input\" type=\"text\" placeholder=\"Date of Birth\" (focus)=\"focusIn($event.target)\" (blur)=\"focusOut($event.target)\"\n                    />\n                    <span class=\"e-input-group-icon e-date-icon\" (mouseup)=\"onMouseUp($event.target)\" (mousedown)=\"onMouseDown($event.target)\"></span>\n                </div>\n            </div>\n            <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6\">\n                <div class=\"e-input-group e-float-icon-left\">\n                    <!-- Mousedown and Mouseup Event binding for input icon Ripple Effect -->\n                    <span class=\"e-input-group-icon e-upload-picture\" (mouseup)=\"onMouseUp($event.target)\" (mousedown)=\"onMouseDown($event.target)\"></span>\n                    <div class=\"e-input-in-wrap\">\n                      <input class=\"e-input\" type=\"text\" placeholder=\"Upload Picture\" (focus)=\"focusInLeft($event.target)\" (blur)=\"focusOutLeft($event.target)\"/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n","app.component.css":"  .e-upload-picture::before {\n    content: '\\e335';\n    font-family: e-icons;\n    font-size: 14px;\n  }\n\n  .content-wrapper {\n    width: 90%;\n    margin: 0 auto;\n    min-width: 185px;\n  }\n\n  .content-wrapper div.row {\n    padding: 15px 0px;\n  }\n    \n  .control-label {\n    padding: 24px 0px 0px 0px;\n    font-size: 12px;\n    opacity: 0.54;\n  }\n    \n  @media only screen and (max-width: 480px) {\n    .content-wrapper {\n      width: 92%;\n    }\n    .e-input-section .col-xs-6,\n    .e-input-section .col-xs-4,\n    .e-input-section .col-xs-12 {\n      padding: 10px 5px;\n      width: 100%;\n    }\n    .content-wrapper div.row {\n      padding: 0px;\n    }\n  }\n\n  ejs-textbox .e-outline.e-float-input,\n  ejs-textbox .e-outline.e-float-input.e-control-wrapper {\n      margin-top: 0;\n  }\n\n  .fabric .row.material,\n  .bootstrap .row.material,\n  .bootstrap4 .row.material,\n  .highcontrast .row.material,\n  .tailwind .row.material,\n  .bootstrap5 .row.material,\n  .bootstrap5-dark .row.material,\n  .tailwind-dark .row.material,\n  .fabric-dark .row.material,\n  .bootstrap-dark .row.material,\n  .fluent .row.material,\n  .fluent-dark .row.material {\n      display: none;\n  }\n  \n  #description td {\n    vertical-align: top;\n  }\n\n  .tailwind .e-upload-picture:before,\n  .tailwind-dark .e-upload-picture:before {\n      content: '\\e7da';\n      font-size: 17px;\n  }\n\n  .e-bigger .e-upload-picture::before { \n      font-size: 17px;\n  }\n\n  .tailwind.e-bigger .e-upload-picture:before,\n  .tailwind-dark.e-bigger .e-upload-picture:before {\n      font-size: 20px;\n  }\n\n  .bootstrap4 .e-upload-picture::before {\n      content: '\\e769';\n      font-family: e-icons;\n  }\n\n  .bootstrap5 .e-upload-picture::before,\n  .bootstrap5-dark .e-upload-picture::before {\n      content: '\\e712';\n      font-family: e-icons;\n  }\n\n  .small-textbox {\n    padding-top: 5px;\n}\n\n.tailwind .small-textbox,\n.tailwind-dark .small-textbox {\n    padding-top: 3px;\n}\n\n.e-bigger .small-textbox {\n    padding-top: 10px;\n}\n\n.tailwind.e-bigger .small-textbox,\n.tailwind-dark.e-bigger .small-textbox {\n    padding-top: 1px;\n}\n\n.fluent .e-upload-picture::before,\n.fluent-dark .e-upload-picture::before {\n    content: '\\e712';\n    font-family: e-icons;\n}\n\n.fluent .e-float-input.e-control-wrapper.e-filled,\n.fluent-dark .e-float-input.e-control-wrapper.e-filled {\n    margin-top: 0px;\n}\n","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-angular-popups\":\"*\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\"}"}