{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, OnInit, ViewChild, AfterViewInit, ElementRef, Renderer2, ViewEncapsulation } from '@angular/core';\nimport { GanttComponent, GanttAllModule } from '@syncfusion/ej2-angular-gantt';\nimport { ComboBoxComponent, ComboBoxModule } from '@syncfusion/ej2-angular-dropdowns';\nimport { DropDownListComponent, DropDownListModule } from '@syncfusion/ej2-angular-dropdowns';\nimport { ButtonComponent, ButtonModule } from '@syncfusion/ej2-angular-buttons';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.css'],\n  encapsulation: ViewEncapsulation.None,\n  standalone: true,\n  imports: [ GanttAllModule, ComboBoxModule, DropDownListModule, ButtonModule, ]\n})\nexport class AppComponent {\n  @ViewChild('gantt') public ganttObj: GanttComponent;\n  @ViewChild('timezonelist') public timeZoneList: ComboBoxComponent;\n  @ViewChild('timeline') public timelineList: DropDownListComponent;\n  @ViewChild('previousTimespan') public leftTimespanButton: ButtonComponent;\n  @ViewChild('nextTimespan') public rightTimespanButton: ButtonComponent;\n  @ViewChild('toolbarContainer', { static: false }) toolbarContainer!: ElementRef;\n  constructor(private renderer: Renderer2) { }\n  public data: object[];\n  public taskSettings: object;\n  public columns: object[];\n  public timelineSettings: object;\n  public toolbar: any[];\n  public dayWorkingTime: object[];\n  public timeZoneData: { id: string, text: string }[];\n  public timelineData: string[];\n  public timezoneValue: string = 'UTC';\n\n  public ngOnInit(): void {\n    this.data = [\n      { taskID: 1, taskName: 'Project Schedule', startDate: new Date('02/04/2025 08:00'), endDate: new Date('03/10/2025') },\n      { taskID: 2, taskName: 'Planning', startDate: new Date('02/04/2025 08:00'), endDate: new Date('02/10/2025'), parentID: 1 },\n      { taskID: 3, taskName: 'Plan timeline', startDate: new Date('02/04/2025 08:00'), endDate: new Date('02/10/2025'), duration: 6, progress: '60', parentID: 2 },\n      { taskID: 4, taskName: 'Plan budget', startDate: new Date('02/04/2025 08:00'), endDate: new Date('02/10/2025'), duration: 6, progress: '90', parentID: 2 },\n      { taskID: 5, taskName: 'Allocate resources', startDate: new Date('02/04/2025 08:00'), endDate: new Date('02/10/2025'), duration: 6, progress: '75', parentID: 2 },\n      { taskID: 6, taskName: 'Planning complete', startDate: new Date('02/06/2025 08:00'), endDate: new Date('02/10/2025'), duration: 0, predecessor: '3FS,4FS,5FS', parentID: 2 },\n      { taskID: 7, taskName: 'Design', startDate: new Date('02/13/2025 08:00'), endDate: new Date('02/17/2025 08:00'), parentID: 1 },\n      { taskID: 8, taskName: 'Software Specification', startDate: new Date('02/13/2025 08:00'), endDate: new Date('02/15/2025'), duration: 3, progress: '60', predecessor: '6FS', parentID: 7 },\n      { taskID: 9, taskName: 'Develop prototype', startDate: new Date('02/13/2025 08:00'), endDate: new Date('02/15/2025'), duration: 3, progress: '100', predecessor: '6FS', parentID: 7 },\n      { taskID: 10, taskName: 'Get approval from customer', startDate: new Date('02/16/2025 08:00'), endDate: new Date('02/17/2025 08:00'), duration: 2, progress: '100', predecessor: '9FS', parentID: 7 },\n      { taskID: 11, taskName: 'Design complete', startDate: new Date('02/17/2025 08:00'), endDate: new Date('02/17/2025 08:00'), duration: 0, predecessor: '10FS', parentID: 7 },\n      { taskID: 12, taskName: 'Implementation', startDate: new Date('02/18/2025 08:00'), endDate: new Date('02/25/2025 08:00'), parentID: 1 },\n      { taskID: 13, taskName: 'Develop core modules', startDate: new Date('02/18/2025 08:00'), endDate: new Date('02/22/2025'), duration: 5, progress: '80', predecessor: '11FS', parentID: 12 },\n      { taskID: 14, taskName: 'Integrate modules', startDate: new Date('02/19/2025 08:00'), endDate: new Date('02/23/2025'), duration: 5, progress: '70', predecessor: '13FS', parentID: 12 },\n      { taskID: 15, taskName: 'Implementation complete', startDate: new Date('02/25/2025 08:00'), endDate: new Date('02/25/2025 08:00'), duration: 0, predecessor: '14FS', parentID: 12 },\n      { taskID: 16, taskName: 'Testing', startDate: new Date('02/26/2025 08:00'), endDate: new Date('03/02/2025 08:00'), parentID: 1 },\n      { taskID: 17, taskName: 'Unit testing', startDate: new Date('02/26/2025 08:00'), endDate: new Date('02/28/2025'), duration: 3, progress: '50', predecessor: '15FS', parentID: 16 },\n      { taskID: 18, taskName: 'Integration testing', startDate: new Date('02/27/2025 08:00'), endDate: new Date('03/01/2025'), duration: 4, progress: '40', predecessor: '17FS', parentID: 16 },\n      { taskID: 19, taskName: 'Test report', startDate: new Date('03/02/2025 08:00'), endDate: new Date('03/02/2025 08:00'), duration: 0, predecessor: '18FS', parentID: 16 },\n      { taskID: 20, taskName: 'Deployment', startDate: new Date('03/03/2025 08:00'), endDate: new Date('03/06/2025 08:00'), parentID: 1 },\n      { taskID: 21, taskName: 'Configure environment', startDate: new Date('03/03/2025 08:00'), endDate: new Date('03/04/2025'), duration: 2, progress: '30', predecessor: '19FS', parentID: 20 },\n      { taskID: 22, taskName: 'Deploy application', startDate: new Date('03/04/2025 08:00'), endDate: new Date('03/05/2025'), duration: 2, progress: '20', predecessor: '21FS', parentID: 20 },\n      { taskID: 23, taskName: 'Deployment verification', startDate: new Date('03/06/2025 08:00'), endDate: new Date('03/06/2025 08:00'), duration: 0, predecessor: '22FS', parentID: 20 },\n      { taskID: 24, taskName: 'Training', startDate: new Date('03/07/2025 08:00'), endDate: new Date('03/08/2025 08:00'), parentID: 1 },\n      { taskID: 25, taskName: 'User training', startDate: new Date('03/07/2025 08:00'), endDate: new Date('03/07/2025'), duration: 1, progress: '10', predecessor: '23FS', parentID: 24 },\n      { taskID: 26, taskName: 'Admin training', startDate: new Date('03/07/2025 08:00'), endDate: new Date('03/08/2025'), duration: 2, progress: '10', predecessor: '23FS', parentID: 24 },\n      { taskID: 27, taskName: 'Training complete', startDate: new Date('03/08/2025 08:00'), endDate: new Date('03/08/2025 08:00'), duration: 0, predecessor: '25FS,26FS', parentID: 24 },\n      { taskID: 28, taskName: 'Client Review', startDate: new Date('03/09/2025 08:00'), endDate: new Date('03/09/2025'), duration: 1, progress: '0', predecessor: '27FS', parentID: 1 },\n      { taskID: 29, taskName: 'Project Handover', startDate: new Date('03/10/2025 08:00'), endDate: new Date('03/10/2025'), duration: 0, predecessor: '28FS', parentID: 1 },\n      { taskID: 30, taskName: 'Post-Project Review', startDate: new Date('03/10/2025 08:00'), endDate: new Date('03/10/2025 08:00'), duration: 0, progress: '0', predecessor: '29FS', parentID: 1 }\n    ];\n    this.taskSettings = {\n      id: 'taskID',\n      name: 'taskName',\n      startDate: 'startDate',\n      duration: 'duration',\n      progress: 'progress',\n      dependency: 'predecessor',\n      parentID: 'parentID'\n    };\n    this.columns = [\n      { field: 'taskID', visible: false, width: 60 },\n      { field: 'taskName', headerText: 'Name', width: 250 },\n      { field: 'startDate' },\n      { field: 'endDate' },\n      { field: 'duration' },\n      { field: 'predecessor' },\n      { field: 'progress' }\n    ];\n    this.timelineSettings = {\n      timelineUnitSize: 90,\n      topTier: { unit: 'Day', format: 'EEE dd/yyyy' },\n      bottomTier: { unit: 'Hour', format: 'hh:mm a' }\n    };\n    this.dayWorkingTime = [{ from: 0, to: 23 }];\n    this.timelineData = ['Day', 'Week', 'Month'];\n    this.timeZoneData = this.getTimeZonesWithOffsets();\n    this.timezoneValue = this.getLocalTimeZoneWithOffset().text;\n  }\n\n\n  getLocalTimeZoneWithOffset(): { id: string, text: string } {\n    const timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n    return this.getTimeZonesWithOffsets().find(zone => zone.id === timeZone) || { id: 'UTC', text: 'UTC (UTC+00:00)' };\n  }\n\n  getTimeZonesWithOffsets(): { id: string, text: string }[] {\n    const now = new Date();\n    const zones = Intl.supportedValuesOf ? Intl.supportedValuesOf('timeZone') : [\n      'UTC', 'Asia/Calcutta', 'America/New_York', 'America/Los_Angeles', 'Europe/London',\n      'Australia/Sydney', 'Asia/Tokyo', 'America/Chicago', 'America/Denver', 'America/Sao_Paulo'\n    ];\n    return zones.map(tz => {\n      const formatter = new Intl.DateTimeFormat('en-US', { timeZone: tz, timeZoneName: 'longOffset' });\n      const parts = formatter.formatToParts(now);\n      const offsetPart = parts.find(part => part.type === 'timeZoneName');\n      const offset = offsetPart ? offsetPart.value : 'UTC+00:00';\n      return { id: tz, text: tz + ' (' + offset.replace('GMT', 'UTC') + ')' };\n    });\n  }\n\n  public timeZoneChange(args: any): void {\n    if (args.value && this.ganttObj) {\n      const timezoneName = args.value.split(' (')[0];\n      this.ganttObj.timezone = timezoneName;\n      this.ganttObj.refresh();\n    }\n  }\n\n  public changeTimelineMode(args: any): void {\n    if (args.value && this.ganttObj) {\n      if (args.value === 'Day') {\n        this.ganttObj.timelineSettings.topTier.unit = 'Day';\n        this.ganttObj.timelineSettings.bottomTier.unit = 'Hour';\n        this.ganttObj.timelineSettings.bottomTier.format = 'hh:mm a';\n      } else if (args.value === 'Week') {\n        this.ganttObj.timelineSettings.topTier.unit = 'Week';\n        this.ganttObj.timelineSettings.bottomTier.unit = 'Day';\n        this.ganttObj.timelineSettings.bottomTier.format = 'dd MMM';\n      } else {\n        this.ganttObj.timelineSettings.topTier.unit = 'Month';\n        this.ganttObj.timelineSettings.bottomTier.unit = 'Day';\n        this.ganttObj.timelineSettings.bottomTier.format = 'dd';\n      }\n      this.ganttObj.refresh();\n    }\n  }\n\n  public previousTimeSpan(): void {\n    if (this.ganttObj) {\n      this.ganttObj.previousTimeSpan();\n    }\n  }\n\n  public nextTimeSpan(): void {\n    if (this.ganttObj) {\n      this.ganttObj.nextTimeSpan();\n    }\n  }\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n\n<div class=\"control-section\">\n  <div class=\"toolbar-items\"\n    style=\"padding: 10px; background-color: #f4f4f4; display: flex; justify-content: space-between; align-items: center; gap: 10px;\">\n    <!-- Left-aligned timezone label and combobox -->\n    <div style=\"display: flex; align-items: center; gap: 10px;\">\n      <label style=\"margin-right: 10px;margin-top: 3px;\">Time Zone:</label>\n      <ejs-combobox #timezonelist id=\"timezonelist\" [dataSource]=\"timeZoneData\"\n        [fields]=\"{ text: 'text', value: 'text' }\" [value]=\"timezoneValue\" placeholder=\"Select timezone\" width=\"300px\"\n        popupHeight=\"350px\" popupWidth=\"300px\" ignoreAccent=\"true\" filterType=\"Contains\" [allowFiltering]=\"true\"\n        (change)=\"timeZoneChange($event)\">\n      </ejs-combobox>\n    </div>\n\n    <!-- Right-aligned buttons and dropdown -->\n    <div style=\"display: flex; align-items: center; gap: 10px;\">\n      <button align=\"left\" ejs-button #previousTimespan id=\"previousTimespan\" cssClass=\"previous-timespan\"\n        (click)=\"previousTimeSpan()\">\n        <span class=\"e-icons e-chevron-left-fill\"></span>\n      </button>\n      <ejs-dropdownlist align=\"left\" #timeline id=\"timeline\" [dataSource]=\"timelineData\"\n        [fields]=\"{ text: 'value', value: 'value' }\" placeholder=\"Select timeline mode\" value=\"Day\"\n        (change)=\"changeTimelineMode($event)\">\n      </ejs-dropdownlist>\n      <button align=\"left\" ejs-button #nextTimespan id=\"nextTimespan\" cssClass=\"next-timespan\" (click)=\"nextTimeSpan()\">\n        <span class=\"e-icons e-chevron-right-fill\"></span>\n      </button>\n    </div>\n  </div>\n  <ejs-gantt #gantt id=\"gantt\" [dataSource]=\"data\" [taskFields]=\"taskSettings\" [dayWorkingTime]=\"dayWorkingTime\"\n    [timelineSettings]=\"timelineSettings\" [columns]=\"columns\" [treeColumnIndex]=\"1\" [timezone]=\"timezoneValue\"\n    durationUnit=\"Hour\" dateFormat=\"hh:mm a\" height=\"650px\" [includeWeekend]=\"true\" rowHeight=\"46\" taskbarHeight=\"25\"\n    [toolbar]=\"toolbar\">\n  </ejs-gantt>\n</div>\n\n","app.component.css":".e-bigger .previous-timespan, .e-bigger .next-timespan {\n    height: 38px !important;\n    width: 38px !important;\n    padding: 0 !important;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n.previous-timespan,\n.next-timespan {\n    height: 32px !important;\n    width: 32px !important;\n    padding: 0 !important;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n.showhide {\n    font-size: 14px;\n    font-weight: 700;\n    margin: 0;\n}\n.e-bigger .showhide {\n    font-size: 16px;\n    font-weight: 700;\n}\n.timezone-label {\n    display: flex;\n    align-items: center;\n    padding: 0;\n    margin: 0;\n}\n.timezone-dropdown {\n    display: flex;\n    align-items: center;\n    padding: 0;\n    margin: 0;\n    min-width: 300px;\n}\n.timeline-section {\n    display: flex;\n    align-items: center;\n    padding: 0 5px;\n}\n.timeline-dropdown {\n    display: flex;\n    align-items: center;\n    padding: 0 5px;\n    min-width: 100px;\n}\n#timezone .e-toolbar-item.e-separator {\n    margin: 0 2px;\n}\n#timezone .e-separator {\n    padding: 0px;\n}\n#timezone .e-toolbar-item.e-template {\n    padding: 0px !important;\n}\n.bootstrap5\\.3 #timezone .e-icons, .bootstrap5\\.3-dark #timezone .e-icons {\n    color: white;\n}","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-gantt\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-gantt\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}