{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","datasource.ts":"\n/**\n * Chart datasource\n */\n\n\nexport let employeeData: Object[] = [{\n    'EmployeeID': 1,\n    'yValue': 2,\n    'FirstName': 'Nancy',\n    'Title': 'Sales Representative',\n    'HireDate': new Date(1992, 0, 1),\n},\n{\n    'EmployeeID': 2,\n    'yValue': 5,\n    'FirstName': 'Andrew',\n    'Title': 'Vice President, Sales',\n    'HireDate': new Date(1992, 1, 1),\n},\n{\n    'EmployeeID': 3,\n    'yValue': 8,\n    'FirstName': 'Janet',\n    'Title': 'Sales Representative',\n    'HireDate': new Date(1992, 2, 1),\n},\n{\n    'EmployeeID': 4,\n    'yValue': 4,\n    'FirstName': 'Margaret',\n    'Title': 'Sales Representative',\n    'HireDate': new Date(1992, 3, 1),\n},\n{\n    'EmployeeID': 5,\n    'yValue': 7,\n    'FirstName': 'Steven',\n    'Title': 'Sales Manager',\n    'HireDate': new Date(1992, 4, 1),\n},\n{\n    'EmployeeID': 6,\n    'yValue': 9,\n    'FirstName': 'Michael',\n    'Title': 'Sales Representative',\n    'HireDate': new Date(1992, 5, 1),\n},\n{\n    'EmployeeID': 7,\n    'yValue': 6,\n    'FirstName': 'Robert',\n    'Title': 'Sales Representative',\n    'HireDate': new Date(1992, 6, 1),\n},\n{\n    'EmployeeID': 8,\n    'yValue': 4,\n    'FirstName': 'Laura',\n    'Title': 'Inside Sales Coordinator',\n    'HireDate': new Date(1992, 7, 1),\n},\n{\n    'EmployeeID': 9,\n    'yValue': 8,\n    'FirstName': 'Anne',\n    'Title': 'Sales Representative',\n    'HireDate': new Date(1992, 8, 1),\n}, {\n    'EmployeeID': 10,\n    'yValue': 2,\n    'FirstName': 'Fletcher',\n    'Title': 'Sales Representative',\n    'HireDate': new Date(1992, 9, 1),\n},\n{\n    'EmployeeID': 11,\n    'yValue': 5,\n    'FirstName': 'Robin',\n    'Title': 'Vice President, Sales',\n    'HireDate': new Date(1992, 10, 1),\n},\n{\n    'EmployeeID': 12,\n    'yValue': 8,\n    'FirstName': 'Mathew',\n    'Title': 'Sales Representative',\n    'HireDate': new Date(1992, 11, 1),\n},\n{\n    'EmployeeID': 13,\n    'yValue': 4,\n    'FirstName': 'Henry',\n    'Title': 'Sales Representative',\n    'HireDate': new Date(1993, 0, 1),\n},\n{\n    'EmployeeID': 14,\n    'yValue': 7,\n    'FirstName': 'Flemming',\n    'Title': 'Sales Manager',\n    'HireDate': new Date(1993, 1, 1),\n},\n{\n    'EmployeeID': 15,\n    'yValue': 9,\n    'FirstName': 'Clarke',\n    'Title': 'Sales Representative',\n    'HireDate': new Date(1993, 2, 1),\n},\n{\n    'EmployeeID': 16,\n    'yValue': 6,\n    'FirstName': 'Martin',\n    'Title': 'Sales Representative',\n    'HireDate': new Date(1993, 3, 1),\n},\n{\n    'EmployeeID': 17,\n    'yValue': 4,\n    'FirstName': 'Loius',\n    'Title': 'Inside Sales Coordinator',\n    'HireDate': new Date(1993, 4, 1),\n},\n{\n    'EmployeeID': 18,\n    'yValue': 8,\n    'FirstName': 'Arthur',\n    'Title': 'Sales Representative',\n    'HireDate': new Date(1993, 5, 1),\n},\n{\n    'EmployeeID': 19,\n    'yValue': 5,\n    'FirstName': 'Marcus',\n    'Title': 'Sales Representative',\n    'HireDate': new Date(1993, 6, 1),\n},\n{\n    'EmployeeID': 20,\n    'yValue': 7,\n    'FirstName': 'Albert',\n    'Title': 'Inside Sales Coordinator',\n    'HireDate': new Date(1993, 7, 1),\n},\n{\n    'EmployeeID': 21,\n    'yValue': 9,\n    'FirstName': 'Nicolas',\n    'Title': 'Inside Sales Coordinator',\n    'HireDate': new Date(1993, 8, 1),\n},\n{\n    'EmployeeID': 22,\n    'yValue': 7,\n    'FirstName': 'Behardien',\n    'Title': 'Sales Representative',\n    'HireDate': new Date(1993, 9, 1),\n},\n{\n    'EmployeeID': 23,\n    'yValue': 3,\n    'FirstName': 'Bruce',\n    'Title': 'Inside Sales Coordinator',\n    'HireDate': new Date(1993, 10, 1),\n},\n{\n    'EmployeeID': 24,\n    'yValue': 7,\n    'FirstName': 'Kimi',\n    'Title': 'Inside Sales Coordinator',\n    'HireDate': new Date(1993, 11, 1),\n}];\n","theme-colors.ts":"import { ChartTheme, ILoadedEventArgs } from \"@syncfusion/ej2-angular-charts\";\n\nexport let themes: string[] = ['bootstrap5', 'bootstrap5dark', 'tailwind', 'tailwinddark', 'material', 'materialdark', 'bootstrap4', 'bootstrap', 'bootstrapdark', 'fabric', 'fabricdark', 'highcontrast', 'fluent', 'fluentdark', 'material3', 'material3dark', 'fluent2', 'fluent2highcontrast', 'fluent2dark', 'tailwind3', 'tailwind3dark'];\nexport let borderColor: string[] = ['#FD7E14', '#FD7E14', '#5A61F6', '#8B5CF6', '#00bdae', '#9ECB08', '#a16ee5', '#a16ee5', '#a16ee5', '#4472c4', '#4472c4', '#79ECE4', '#1AC9E6', '#1AC9E6', '#6355C7', '#4EAAFF', '#6200EE', '#9BB449', '#9BB449', '#2F4074', '#8029F1'];\nexport let regionColor: string[] = ['rgba(52, 58, 64, 0.1)', 'rgba(173, 181, 189, 0.1)', 'rgba(90, 97, 246, 0.3)', 'rgba(139, 92, 246, 0.3)', 'rgba(0, 189, 174, 0.3)',\n    'rgba(158, 203, 8, 0.3)', 'rgba(161, 110, 229, 0.3)', 'rgba(161, 110, 229, 0.3)', 'rgba(161, 110, 229, 0.3)', 'rgba(68, 114, 196, 0.3)',\n    'rgba(68, 114, 196, 0.3)', 'rgba(121, 236, 228, 0.3)', 'rgba(26, 201, 230, 0.3)', 'rgba(26, 201, 230, 0.3)', 'rgba(99, 85, 199, 0.3)', 'rgba(78, 170, 255, 0.3)',\n    'rgba(98, 0, 238, 0.3)', 'rgba(155, 180, 73, 0.3)', 'rgba(155, 180, 73, 0.3)', 'rgba(47, 64, 116, 0.3)', 'rgba(128, 41, 241, 0.3)'];\nexport let printRegionColors = ['rgba(255, 64, 129, 0.3)', 'rgba(0, 120, 151, 0.3)',\n    'rgba(66, 139, 202, 0.3)', 'rgba(255, 217, 57, 0.3)', 'rgba(255, 217, 57, 0.3)', 'rgba(253, 126, 20, 0.3)', 'rgba(79, 70, 229, 0.3)',\n    'rgba(255, 64, 129, 0.3)', 'rgba(0, 120, 151, 0.3)', 'rgba(66, 139, 202, 0.3)', 'rgba(34, 211, 238, 0.3)', 'rgba(253, 126, 20, 0.3)', 'rgba(26, 201, 230, 0.3)', 'rgba(26, 201, 230, 0.3)', 'rgba(99, 85, 199, 0.3)', 'rgba(78, 170, 255, 0.3)', 'rgba(98, 0, 238, 0.3)', 'rgba(155, 180, 73, 0.3)', 'rgba(155, 180, 73, 0.3)', 'rgba(47, 64, 116, 0.3)', 'rgba(128, 41, 241, 0.3)'];\nexport let printThemes: string[] = ['Material', 'Fabric', 'Bootstrap', 'Bootstrap4', 'HighContrast', 'Bootstrap5', 'Tailwind', 'MaterialDark', 'FabricDark', 'BootstrapDark', 'TailwindDark', 'Bootstrap5Dark', 'Fluent', 'FluentDark', 'Material3', 'Material3Dark', 'Fluent2', 'Fluent2HighContrast', 'Fluent2Dark', 'Tailwind3', 'Tailwind3Dark'];\nexport let printBorderColor: string[] = ['#FF4081', '#007897', '#428BCA', '#FFD939', '#FFD939', '#FD7E14', '#4F46E5', '#FF4081', '#007897', '#428BCA', '#22D3EE', '#FD7E14', '#1AC9E6', '#1AC9E6', '#6355C7', '#4EAAFF', '#6200EE', '#9BB449', '#9BB449', '#2F4074', '#8029F1'];\n\n\nexport let loadRangeNavigatorTheme = (args?: ILoadedEventArgs): ChartTheme => {\n    let selectedTheme: string = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    let theme: ChartTheme;\n    if (args) {\n        theme = args.chart.theme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    }\n    else {\n        theme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    }\n    return theme;\n}","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { ChartTheme, IRangeLoadedEventArgs, DateTime, IChangedEventArgs, Chart } from '@syncfusion/ej2-charts';\nimport { Browser } from '@syncfusion/ej2-base';\nimport { GridComponent, GridModule } from '@syncfusion/ej2-angular-grids';\nimport { employeeData } from './datasource';\nimport { RangeNavigatorModule, ChartAllModule } from '@syncfusion/ej2-angular-charts';\nimport { loadRangeNavigatorTheme } from './theme-colors';\n\n/**\n * Range navigator with date time axis\n */\n\nlet theme: ChartTheme = loadRangeNavigatorTheme();\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [RangeNavigatorModule, GridModule, ChartAllModule]\n})\n\nexport class AppComponent {\n    @ViewChild('grid')\n    public Grid: GridComponent;\n\n    public isGrid: boolean = false;\n\n    public gridData: Object = employeeData.filter((data: { [key: string]: Object }): Boolean => {\n        return (data.HireDate >= new Date(1992, 5, 1) && data.HireDate <= new Date(1993, 4, 1));\n    });\n\n    public dataSource: object = employeeData;\n\n    public width: string = Browser.isDevice ? '100%' : '80%';\n\n    public theme: ChartTheme = theme;\n    \n    public value: object = [new Date(1992, 5, 1), new Date(1993, 4, 1)];\n\n    public format:Object = { skeleton: 'yMd', type: 'date' };\n\n    public changed(args: IChangedEventArgs): void {\n        if (this.isGrid) {\n            this.Grid.dataSource = employeeData.filter((data: { [key: string]: Object }): Boolean => {\n                return (data.HireDate >= new Date(+args.start) && data.HireDate <= new Date(+args.end));\n            });\n            this.Grid.refresh();\n        }\n        this.isGrid = true;\n    }\n\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section\">\n    <h1 id=\"days\" align=\"center\" style=\"font-family: Segoe UI;font-weight: 500; font-style:normal; font-size:15px; margin-top: 10px;\">Filter From Hire Date</h1>\n    <div align=\"center\">\n        <ejs-rangenavigator style='display:block' align='center' id='containerFilter' [value]='value' height='75' labelPosition='Outside'\n            valueType='DateTime' allowSnapping=true intervalType='Quarter' enableGrouping=true, groupBy='Years' enableDeferredUpdate=true\n            [dataSource]='dataSource' xName='HireDate' yName='yValue' [width]='width' (changed)='changed($event)'\n            [theme]='theme' animationDuration=500>\n        </ejs-rangenavigator>\n    </div>\n    <br/>\n    <div align=\"center\">\n        <ejs-grid #grid id='grid' [dataSource]=\"gridData\" height='350' [width]='width'>\n            <e-columns>\n                <e-column field='EmployeeID' headerText='Employee ID' textAlign='Center'></e-column>\n                <e-column field='FirstName' headerText='Name' textAlign='Center'></e-column>\n                <e-column field='Title' headerText='Title' format=\"yMd\" textAlign='Center'></e-column>\n                <e-column field='HireDate' headerText='Hire Date' [format]=\"format\" textAlign='Center'></e-column>\n            </e-columns>\n        </ejs-grid>\n    </div>\n</div>\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n</style>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-excel-export\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-pdf-export\":\"*\",\"@syncfusion/ej2-svg-base\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-grids\":\"*\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}