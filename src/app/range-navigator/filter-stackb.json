{"main.ts":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","polyfills.ts":"/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n  <link href=\"../../styles/material.css\" rel=\"stylesheet\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n</head>\n<body class=\"ej2-new\"> \n\n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WLQL39J\"height=\"0\"width=\"0\"style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","datasource.ts":"\n/**\n * Chart datasource\n */\n\n\nexport let employeeData: Object[] = [{\n    'EmployeeID': 1,\n    'yValue': 2,\n    'FirstName': 'Nancy',\n    'Title': 'Sales Representative',\n    'HireDate': new Date(1992, 0, 1),\n},\n{\n    'EmployeeID': 2,\n    'yValue': 5,\n    'FirstName': 'Andrew',\n    'Title': 'Vice President, Sales',\n    'HireDate': new Date(1992, 1, 1),\n},\n{\n    'EmployeeID': 3,\n    'yValue': 8,\n    'FirstName': 'Janet',\n    'Title': 'Sales Representative',\n    'HireDate': new Date(1992, 2, 1),\n},\n{\n    'EmployeeID': 4,\n    'yValue': 4,\n    'FirstName': 'Margaret',\n    'Title': 'Sales Representative',\n    'HireDate': new Date(1992, 3, 1),\n},\n{\n    'EmployeeID': 5,\n    'yValue': 7,\n    'FirstName': 'Steven',\n    'Title': 'Sales Manager',\n    'HireDate': new Date(1992, 4, 1),\n},\n{\n    'EmployeeID': 6,\n    'yValue': 9,\n    'FirstName': 'Michael',\n    'Title': 'Sales Representative',\n    'HireDate': new Date(1992, 5, 1),\n},\n{\n    'EmployeeID': 7,\n    'yValue': 6,\n    'FirstName': 'Robert',\n    'Title': 'Sales Representative',\n    'HireDate': new Date(1992, 6, 1),\n},\n{\n    'EmployeeID': 8,\n    'yValue': 4,\n    'FirstName': 'Laura',\n    'Title': 'Inside Sales Coordinator',\n    'HireDate': new Date(1992, 7, 1),\n},\n{\n    'EmployeeID': 9,\n    'yValue': 8,\n    'FirstName': 'Anne',\n    'Title': 'Sales Representative',\n    'HireDate': new Date(1992, 8, 1),\n}, {\n    'EmployeeID': 10,\n    'yValue': 2,\n    'FirstName': 'Fletcher',\n    'Title': 'Sales Representative',\n    'HireDate': new Date(1992, 9, 1),\n},\n{\n    'EmployeeID': 11,\n    'yValue': 5,\n    'FirstName': 'Robin',\n    'Title': 'Vice President, Sales',\n    'HireDate': new Date(1992, 10, 1),\n},\n{\n    'EmployeeID': 12,\n    'yValue': 8,\n    'FirstName': 'Mathew',\n    'Title': 'Sales Representative',\n    'HireDate': new Date(1992, 11, 1),\n},\n{\n    'EmployeeID': 13,\n    'yValue': 4,\n    'FirstName': 'Henry',\n    'Title': 'Sales Representative',\n    'HireDate': new Date(1993, 0, 1),\n},\n{\n    'EmployeeID': 14,\n    'yValue': 7,\n    'FirstName': 'Flemming',\n    'Title': 'Sales Manager',\n    'HireDate': new Date(1993, 1, 1),\n},\n{\n    'EmployeeID': 15,\n    'yValue': 9,\n    'FirstName': 'Clarke',\n    'Title': 'Sales Representative',\n    'HireDate': new Date(1993, 2, 1),\n},\n{\n    'EmployeeID': 16,\n    'yValue': 6,\n    'FirstName': 'Martin',\n    'Title': 'Sales Representative',\n    'HireDate': new Date(1993, 3, 1),\n},\n{\n    'EmployeeID': 17,\n    'yValue': 4,\n    'FirstName': 'Loius',\n    'Title': 'Inside Sales Coordinator',\n    'HireDate': new Date(1993, 4, 1),\n},\n{\n    'EmployeeID': 18,\n    'yValue': 8,\n    'FirstName': 'Arthur',\n    'Title': 'Sales Representative',\n    'HireDate': new Date(1993, 5, 1),\n},\n{\n    'EmployeeID': 19,\n    'yValue': 5,\n    'FirstName': 'Marcus',\n    'Title': 'Sales Representative',\n    'HireDate': new Date(1993, 6, 1),\n},\n{\n    'EmployeeID': 20,\n    'yValue': 7,\n    'FirstName': 'Albert',\n    'Title': 'Inside Sales Coordinator',\n    'HireDate': new Date(1993, 7, 1),\n},\n{\n    'EmployeeID': 21,\n    'yValue': 9,\n    'FirstName': 'Nicolas',\n    'Title': 'Inside Sales Coordinator',\n    'HireDate': new Date(1993, 8, 1),\n},\n{\n    'EmployeeID': 22,\n    'yValue': 7,\n    'FirstName': 'Behardien',\n    'Title': 'Sales Representative',\n    'HireDate': new Date(1993, 9, 1),\n},\n{\n    'EmployeeID': 23,\n    'yValue': 3,\n    'FirstName': 'Bruce',\n    'Title': 'Inside Sales Coordinator',\n    'HireDate': new Date(1993, 10, 1),\n},\n{\n    'EmployeeID': 24,\n    'yValue': 7,\n    'FirstName': 'Kimi',\n    'Title': 'Inside Sales Coordinator',\n    'HireDate': new Date(1993, 11, 1),\n}];\n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { ChartTheme, IRangeLoadedEventArgs, DateTime, IChangedEventArgs, Chart } from '@syncfusion/ej2-charts';\nimport { Browser } from '@syncfusion/ej2-base';\nimport { GridComponent } from '@syncfusion/ej2-angular-grids';\nimport { employeeData } from './datasource';\n\n/**\n * Range navigator with date time axis\n */\n\nlet selectedTheme: string = location.hash.split('/')[1];\nselectedTheme = selectedTheme ? selectedTheme : 'Material';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class AppComponent {\n    @ViewChild('grid')\n    public Grid: GridComponent;\n\n    public isGrid: boolean = false;\n\n    public gridData: Object = employeeData.filter((data: { [key: string]: Object }): Boolean => {\n        return (data.HireDate >= new Date(1992, 5, 1) && data.HireDate <= new Date(1993, 4, 1));\n    });\n\n    public dataSource: object = employeeData;\n\n    public width: string = Browser.isDevice ? '100%' : '80%';\n\n    public theme: ChartTheme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\");\n\n    public value: object = [new Date(1992, 5, 1), new Date(1993, 4, 1)];\n\n    public format:Object = { skeleton: 'yMd', type: 'date' };\n\n    public changed(args: IChangedEventArgs): void {\n        if (this.isGrid) {\n            this.Grid.dataSource = employeeData.filter((data: { [key: string]: Object }): Boolean => {\n                return (data.HireDate >= new Date(+args.start) && data.HireDate <= new Date(+args.end));\n            });\n            this.Grid.refresh();\n        }\n        this.isGrid = true;\n    }\n\n}","app/app.module.ts":"import { GridAllModule } from '@syncfusion/ej2-angular-grids';\n\nimport { ButtonAllModule, SwitchAllModule } from '@syncfusion/ej2-angular-buttons';\n\nimport { ChartAllModule, RangeNavigatorAllModule } from '@syncfusion/ej2-angular-charts';\n\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from '../app.component';\n\n@NgModule({ declarations: [ AppComponent ], imports: [ ChartAllModule, RangeNavigatorAllModule, GridAllModule, ButtonAllModule, SwitchAllModule , BrowserModule], providers: [], bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","app.component.html":"<div class=\"control-section\">\n    <h4 id=\"days\" align=\"center\" style=\"font-family: Segoe UI;font-weight: 500; font-style:normal; font-size:15px;\">Filter From Hire Date</h4>\n    <div align=\"center\">\n        <ejs-rangenavigator style='display:block' align='center' id='containerFilter' [value]='value' height='75' labelPosition='Outside'\n            valueType='DateTime' allowSnapping=true intervalType='Quarter' enableGrouping=true, groupBy='Years' enableDeferredUpdate=true\n            [dataSource]='dataSource' xName='HireDate' yName='yValue' [width]='width' (changed)='changed($event)'\n            [theme]='theme' animationDuration=500>\n        </ejs-rangenavigator>\n    </div>\n    <br/>\n    <div align=\"center\">\n        <ejs-grid #grid id='grid' [dataSource]=\"gridData\" height='350' [width]='width'>\n            <e-columns>\n                <e-column field='EmployeeID' headerText='Employee ID' textAlign='Center'></e-column>\n                <e-column field='FirstName' headerText='Name' textAlign='Center'></e-column>\n                <e-column field='Title' headerText='Title' format=\"yMd\" textAlign='Center'></e-column>\n                <e-column field='HireDate' headerText='Hire Date' [format]=\"format\" textAlign='Center'></e-column>\n            </e-columns>\n        </ejs-grid>\n    </div>\n</div>\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n</style>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-grids\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-compression\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-file-utils\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-pdf-export\":\"*\",\"@syncfusion/ej2-svg-base\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\"}"}