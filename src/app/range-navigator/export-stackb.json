{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","data-service.ts":"\n/**\n * Chart data service\n */\n\n\nexport function GetDateTimeData(start: Date, end: Date, min?: number, max?: number, inc?: number): object[] {\n    let series1: object[] = [];\n    let point: object = {};\n    let value: number = 100;\n    let date: number;\n    inc = inc ? inc : 1;\n    for (let i: number = 0; start <= end; i += inc) {\n        date = start.getTime();\n        if (min || max) {\n            value = getRandomInt(min, max);\n        } else {\n            if (Math.random() > .5) {\n                value += Math.random();\n            } else {\n                value -= Math.random();\n            }\n        }\n        point = { x: new Date(date), y: value };\n        new Date(start.setDate(start.getDate() + 1));\n        series1.push(point);\n    }\n    return series1;\n}\n\nexport function getRandomInt(min: number, max: number): number {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function GetNumericData(start: number, end: number, min?: number, max?: number): object[] {\n    let series1: object[] = [];\n    let point: object = {};\n    let value: number = 30;\n\n    for (let i: number = start; i <= end; i++) {\n        if (min || max) {\n            value = getRandomInt(min, max);\n        } else {\n            if (Math.random() > .5) {\n                value += Math.random();\n            } else {\n                value -= Math.random();\n            }\n        }\n        point = { x: i, y: Math.round(value) };\n        series1.push(point);\n    }\n    return series1;\n}\nexport let dataCollection: Object[] = [\n    { xDate: new Date('2013-01-01'), Open: 85.79, High: 85.89, Low: 85.36, Close: 85.54 },\n    { xDate: new Date('2013-01-03'), Open: 85.83, High: 85.85, Low: 85.55, Close: 85.64 },\n    { xDate: new Date('2013-01-05'), Open: 86.19, High: 86.25, Low: 85.8, Close: 85.98 },\n    { xDate: new Date('2013-01-07'), Open: 86.17, High: 86.28, Low: 85.96, Close: 86.07 },\n    { xDate: new Date('2013-01-09'), Open: 86.19, High: 86.26, Low: 85.97, Close: 86.2 },\n    { xDate: new Date('2013-01-11'), Open: 85.98, High: 86.31, Low: 85.86, Close: 86.15 },\n    { xDate: new Date('2013-01-13'), Open: 85.82, High: 86.18, Low: 85.74, Close: 85.78 },\n    { xDate: new Date('2013-01-15'), Open: 85.45, High: 85.66, Low: 85.41, Close: 85.55 },\n    { xDate: new Date('2013-01-17'), Open: 85.53, High: 85.53, Low: 85.31, Close: 85.48 },\n    { xDate: new Date('2013-01-19'), Open: 85.6, High: 85.68, Low: 85.34, Close: 85.39 },\n    { xDate: new Date('2013-01-21'), Open: 85.6, High: 85.72, Low: 85.5, Close: 85.61 },\n    { xDate: new Date('2013-01-23'), Open: 85.34, High: 85.52, Low: 85.3, Close: 85.49 },\n    { xDate: new Date('2013-01-25'), Open: 85.66, High: 85.72, Low: 85.38, Close: 85.41 },\n    { xDate: new Date('2013-01-27'), Open: 85.93, High: 85.95, Low: 85.59, Close: 85.62 },\n    { xDate: new Date('2013-01-29'), Open: 85.91, High: 85.93, Low: 85.63, Close: 85.58 },\n\n    { xDate: new Date('2013-02-01'), Open: 85.85, High: 86.25, Low: 85.79, Close: 86.06 },\n    { xDate: new Date('2013-02-03'), Open: 85.6, High: 85.85, Low: 85.49, Close: 85.81 },\n    { xDate: new Date('2013-02-05'), Open: 85.94, High: 86, Low: 85.48, Close: 85.66 },\n    { xDate: new Date('2013-02-07'), Open: 86.55, High: 86.64, Low: 85.36, Close: 85.92 },\n    { xDate: new Date('2013-02-09'), Open: 86.46, High: 86.87, Low: 86.4, Close: 86.71 },\n    { xDate: new Date('2013-02-11'), Open: 86.3, High: 86.39, Low: 86.13, Close: 86.38 },\n    { xDate: new Date('2013-02-13'), Open: 85.74, High: 86.44, Low: 85.67, Close: 86.19 },\n    { xDate: new Date('2013-02-15'), Open: 85.56, High: 85.62, Low: 85.34, Close: 85.61 },\n    { xDate: new Date('2013-02-17'), Open: 85.79, High: 85.89, Low: 85.36, Close: 85.52 },\n    { xDate: new Date('2013-02-19'), Open: 85.54, High: 86, Low: 85.51, Close: 85.76 },\n    { xDate: new Date('2013-02-21'), Open: 85, High: 85.17, Low: 84.87, Close: 85.15 },\n    { xDate: new Date('2013-02-23'), Open: 85.1, High: 85.28, Low: 84.72, Close: 85.08 },\n    { xDate: new Date('2013-02-25'), Open: 85.46, High: 85.56, Low: 85.18, Close: 85.37 },\n    { xDate: new Date('2013-02-27'), Open: 85.42, High: 85.44, Low: 85.09, Close: 85.42 },\n    { xDate: new Date('2013-03-01'), Open: 85.79, High: 85.89, Low: 85.36, Close: 85.54 },\n    { xDate: new Date('2013-03-03'), Open: 85.83, High: 85.85, Low: 85.55, Close: 85.64 },\n    { xDate: new Date('2013-03-05'), Open: 86.19, High: 86.25, Low: 85.8, Close: 85.98 },\n    { xDate: new Date('2013-03-07'), Open: 86.17, High: 86.28, Low: 85.96, Close: 86.07 },\n    { xDate: new Date('2013-03-09'), Open: 86.19, High: 86.26, Low: 85.97, Close: 86.2 },\n    { xDate: new Date('2013-03-11'), Open: 85.98, High: 86.31, Low: 85.86, Close: 86.15 },\n    { xDate: new Date('2013-03-13'), Open: 85.82, High: 86.18, Low: 85.74, Close: 85.78 },\n    { xDate: new Date('2013-03-15'), Open: 85.45, High: 85.66, Low: 85.41, Close: 85.55 },\n    { xDate: new Date('2013-03-17'), Open: 85.53, High: 85.53, Low: 85.31, Close: 85.48 },\n    { xDate: new Date('2013-03-19'), Open: 85.6, High: 85.68, Low: 85.34, Close: 85.39 },\n    { xDate: new Date('2013-03-21'), Open: 85.6, High: 85.72, Low: 85.5, Close: 85.61 },\n    { xDate: new Date('2013-03-23'), Open: 85.34, High: 85.52, Low: 85.3, Close: 85.49 },\n    { xDate: new Date('2013-03-25'), Open: 85.66, High: 85.72, Low: 85.38, Close: 85.41 },\n    { xDate: new Date('2013-03-27'), Open: 85.93, High: 85.95, Low: 85.59, Close: 85.62 },\n    { xDate: new Date('2013-03-29'), Open: 85.91, High: 85.93, Low: 85.63, Close: 85.58 },\n\n    { xDate: new Date('2013-04-01'), Open: 86.1, High: 86.15, Low: 85.9, Close: 86.03 },\n    { xDate: new Date('2013-04-03'), Open: 85.93, High: 86.17, Low: 85.84, Close: 86.02 },\n    { xDate: new Date('2013-04-05'), Open: 85.74, High: 86, Low: 85.66, Close: 86 },\n    { xDate: new Date('2013-04-07'), Open: 85.71, High: 85.71, Low: 85.36, Close: 85.62 },\n    { xDate: new Date('2013-04-09'), Open: 85.3, High: 85.92, Low: 85.16, Close: 85.8 },\n    { xDate: new Date('2013-04-11'), Open: 84.23, High: 85.46, Low: 84.23, Close: 85.2 },\n    { xDate: new Date('2013-04-13'), Open: 84.51, High: 84.54, Low: 84.19, Close: 84.3 },\n    { xDate: new Date('2013-04-15'), Open: 84.44, High: 84.65, Low: 84.2, Close: 84.63 },\n    { xDate: new Date('2013-04-17'), Open: 84.6, High: 84.81, Low: 84.59, Close: 84.65 },\n    { xDate: new Date('2013-04-19'), Open: 84.52, High: 84.86, Low: 84.4, Close: 84.76 },\n    { xDate: new Date('2013-04-21'), Open: 84.17, High: 84.66, Low: 84.16, Close: 84.47 },\n    { xDate: new Date('2013-04-23'), Open: 84.22, High: 84.3, Low: 83.98, Close: 84.26 },\n    { xDate: new Date('2013-04-25'), Open: 83.75, High: 84.1, Low: 83.65, Close: 84 },\n    { xDate: new Date('2013-04-27'), Open: 84, High: 84.01, Low: 83.67, Close: 83.74 },\n    { xDate: new Date('2013-04-29'), Open: 84, High: 84.01, Low: 83.67, Close: 83.74 },\n    { xDate: new Date('2013-05-01'), Open: 84.3, High: 84.45, Low: 84.19, Close: 84.22 },\n    { xDate: new Date('2013-05-03'), Open: 83.79, High: 84.19, Low: 83.7, Close: 84.04 },\n    { xDate: new Date('2013-05-05'), Open: 84.02, High: 84.02, Low: 83.69, Close: 83.71 },\n    { xDate: new Date('2013-05-07'), Open: 84.01, High: 84.04, Low: 83.82, Close: 83.96 },\n    { xDate: new Date('2013-05-09'), Open: 83.9, High: 84.02, Low: 83.86, Close: 83.94 },\n    { xDate: new Date('2013-05-11'), Open: 84.09, High: 84.17, Low: 83.9, Close: 84.06 },\n    { xDate: new Date('2013-05-13'), Open: 83.89, High: 84.25, Low: 83.77, Close: 84.01 },\n    { xDate: new Date('2013-05-15'), Open: 84.05, High: 84.14, Low: 83.84, Close: 83.91 },\n    { xDate: new Date('2013-05-17'), Open: 84.49, High: 84.65, Low: 84.18, Close: 84.22 },\n    { xDate: new Date('2013-05-19'), Open: 84.99, High: 85.1, Low: 84.37, Close: 84.43 },\n    { xDate: new Date('2013-05-21'), Open: 84.96, High: 85.06, Low: 84.7, Close: 85.01 },\n    { xDate: new Date('2013-05-23'), Open: 84.68, High: 84.9, Low: 84.65, Close: 84.76 },\n    { xDate: new Date('2013-05-25'), Open: 84.35, High: 85.03, Low: 84.32, Close: 84.67 },\n    { xDate: new Date('2013-05-27'), Open: 84.19, High: 84.31, Low: 84.16, Close: 84.19 },\n    { xDate: new Date('2013-05-29'), Open: 84.19, High: 84.31, Low: 84.16, Close: 84.19 },\n    { xDate: new Date('2013-06-01'), Open: 84.2, High: 84.29, Low: 84.04, Close: 84.15 },\n    { xDate: new Date('2013-06-03'), Open: 84.21, High: 84.25, Low: 84.03, Close: 84.17 },\n    { xDate: new Date('2013-06-05'), Open: 84.72, High: 84.87, Low: 84.44, Close: 84.49 },\n    { xDate: new Date('2013-06-07'), Open: 84.85, High: 84.88, Low: 84.5, Close: 84.72 },\n    { xDate: new Date('2013-06-09'), Open: 84.53, High: 84.74, Low: 84.25, Close: 84.69 },\n    { xDate: new Date('2013-06-11'), Open: 84.4, High: 84.7, Low: 84.27, Close: 84.52 },\n    { xDate: new Date('2013-06-13'), Open: 84.96, High: 85.07, Low: 84.5, Close: 84.57 },\n    { xDate: new Date('2013-06-15'), Open: 85.28, High: 85.32, Low: 84.95, Close: 85.03 },\n    { xDate: new Date('2013-06-17'), Open: 85.35, High: 85.39, Low: 85.1, Close: 85.32 },\n    { xDate: new Date('2013-06-19'), Open: 85.65, High: 85.66, Low: 85.21, Close: 85.36 },\n    { xDate: new Date('2013-06-21'), Open: 85.38, High: 85.85, Low: 85.25, Close: 85.67 },\n    { xDate: new Date('2013-06-23'), Open: 85.8, High: 85.96, Low: 85.67, Close: 85.83 },\n    { xDate: new Date('2013-06-25'), Open: 86.07, High: 86.22, Low: 85.75, Close: 85.87 },\n    { xDate: new Date('2013-06-27'), Open: 86.05, High: 86.08, Low: 85.68, Close: 85.79 },\n    { xDate: new Date('2013-06-29'), Open: 86.05, High: 86.08, Low: 85.68, Close: 85.79 },\n    { xDate: new Date('2013-07-01'), Open: 85.85, High: 86.25, Low: 85.79, Close: 86.06 },\n    { xDate: new Date('2013-07-03'), Open: 85.6, High: 85.85, Low: 85.49, Close: 85.81 },\n    { xDate: new Date('2013-07-05'), Open: 85.94, High: 86, Low: 85.48, Close: 85.66 },\n    { xDate: new Date('2013-07-07'), Open: 86.55, High: 86.64, Low: 85.36, Close: 85.92 },\n    { xDate: new Date('2013-07-09'), Open: 86.46, High: 86.87, Low: 86.4, Close: 86.71 },\n    { xDate: new Date('2013-07-11'), Open: 86.3, High: 86.39, Low: 86.13, Close: 86.38 },\n    { xDate: new Date('2013-07-13'), Open: 85.74, High: 86.44, Low: 85.67, Close: 86.19 },\n    { xDate: new Date('2013-07-15'), Open: 85.56, High: 85.62, Low: 85.34, Close: 85.61 },\n    { xDate: new Date('2013-07-17'), Open: 85.79, High: 85.89, Low: 85.36, Close: 85.52 },\n    { xDate: new Date('2013-07-19'), Open: 85.54, High: 86, Low: 85.51, Close: 85.76 },\n    { xDate: new Date('2013-07-21'), Open: 85, High: 85.17, Low: 84.87, Close: 85.15 },\n    { xDate: new Date('2013-07-23'), Open: 85.1, High: 85.28, Low: 84.72, Close: 85.08 },\n    { xDate: new Date('2013-07-25'), Open: 85.46, High: 85.56, Low: 85.18, Close: 85.37 },\n    { xDate: new Date('2013-07-27'), Open: 85.42, High: 85.44, Low: 85.09, Close: 85.42 },\n    { xDate: new Date('2013-07-29'), Open: 85.42, High: 85.44, Low: 85.09, Close: 85.42 },\n    { xDate: new Date('2013-08-01'), Open: 85.79, High: 85.89, Low: 85.36, Close: 85.54 },\n    { xDate: new Date('2013-08-03'), Open: 85.83, High: 85.85, Low: 85.55, Close: 85.64 },\n    { xDate: new Date('2013-08-05'), Open: 86.19, High: 86.25, Low: 85.8, Close: 85.98 },\n    { xDate: new Date('2013-08-07'), Open: 86.17, High: 86.28, Low: 85.96, Close: 86.07 },\n    { xDate: new Date('2013-08-09'), Open: 86.19, High: 86.26, Low: 85.97, Close: 86.2 },\n    { xDate: new Date('2013-08-11'), Open: 85.98, High: 86.31, Low: 85.86, Close: 86.15 },\n    { xDate: new Date('2013-08-13'), Open: 85.82, High: 86.18, Low: 85.74, Close: 85.78 },\n    { xDate: new Date('2013-08-15'), Open: 85.45, High: 85.66, Low: 85.41, Close: 85.55 },\n    { xDate: new Date('2013-08-17'), Open: 85.53, High: 85.53, Low: 85.31, Close: 85.48 },\n    { xDate: new Date('2013-08-19'), Open: 85.6, High: 85.68, Low: 85.34, Close: 85.39 },\n    { xDate: new Date('2013-08-21'), Open: 85.6, High: 85.72, Low: 85.5, Close: 85.61 },\n    { xDate: new Date('2013-08-23'), Open: 85.34, High: 85.52, Low: 85.3, Close: 85.49 },\n    { xDate: new Date('2013-08-25'), Open: 85.66, High: 85.72, Low: 85.38, Close: 85.41 },\n    { xDate: new Date('2013-08-27'), Open: 85.93, High: 85.95, Low: 85.59, Close: 85.62 },\n    { xDate: new Date('2013-08-29'), Open: 85.91, High: 85.93, Low: 85.63, Close: 85.58 },\n\n\n    { xDate: new Date('2013-09-01'), Open: 86.1, High: 86.15, Low: 85.9, Close: 86.03 },\n    { xDate: new Date('2013-09-03'), Open: 85.93, High: 86.17, Low: 85.84, Close: 86.02 },\n    { xDate: new Date('2013-09-05'), Open: 85.74, High: 86, Low: 85.66, Close: 86 },\n    { xDate: new Date('2013-09-07'), Open: 85.71, High: 85.71, Low: 85.36, Close: 85.62 },\n    { xDate: new Date('2013-09-09'), Open: 85.3, High: 85.92, Low: 85.16, Close: 85.8 },\n    { xDate: new Date('2013-09-11'), Open: 84.23, High: 85.46, Low: 84.23, Close: 85.2 },\n    { xDate: new Date('2013-09-13'), Open: 84.51, High: 84.54, Low: 84.19, Close: 84.3 },\n    { xDate: new Date('2013-09-15'), Open: 84.44, High: 84.65, Low: 84.2, Close: 84.63 },\n    { xDate: new Date('2013-09-17'), Open: 84.6, High: 84.81, Low: 84.59, Close: 84.65 },\n    { xDate: new Date('2013-09-19'), Open: 84.52, High: 84.86, Low: 84.4, Close: 84.76 },\n    { xDate: new Date('2013-09-21'), Open: 84.17, High: 84.66, Low: 84.16, Close: 84.47 },\n    { xDate: new Date('2013-09-23'), Open: 84.22, High: 84.3, Low: 83.98, Close: 84.26 },\n    { xDate: new Date('2013-09-25'), Open: 83.75, High: 84.1, Low: 83.65, Close: 84 },\n    { xDate: new Date('2013-09-27'), Open: 84, High: 84.01, Low: 83.67, Close: 83.74 },\n    { xDate: new Date('2013-09-29'), Open: 84, High: 84.01, Low: 83.67, Close: 83.74 },\n    { xDate: new Date('2013-10-01'), Open: 84.3, High: 84.45, Low: 84.19, Close: 84.22 },\n    { xDate: new Date('2013-10-03'), Open: 83.79, High: 84.19, Low: 83.7, Close: 84.04 },\n    { xDate: new Date('2013-10-05'), Open: 84.02, High: 84.02, Low: 83.69, Close: 83.71 },\n    { xDate: new Date('2013-10-07'), Open: 84.01, High: 84.04, Low: 83.82, Close: 83.96 },\n    { xDate: new Date('2013-10-09'), Open: 83.9, High: 84.02, Low: 83.86, Close: 83.94 },\n    { xDate: new Date('2013-10-11'), Open: 84.09, High: 84.17, Low: 83.9, Close: 84.06 },\n    { xDate: new Date('2013-10-13'), Open: 83.89, High: 84.25, Low: 83.77, Close: 84.01 },\n    { xDate: new Date('2013-10-15'), Open: 84.05, High: 84.14, Low: 83.84, Close: 83.91 },\n    { xDate: new Date('2013-10-17'), Open: 84.49, High: 84.65, Low: 84.18, Close: 84.22 },\n    { xDate: new Date('2013-10-19'), Open: 84.99, High: 85.1, Low: 84.37, Close: 84.43 },\n    { xDate: new Date('2013-10-21'), Open: 84.96, High: 85.06, Low: 84.7, Close: 85.01 },\n    { xDate: new Date('2013-10-23'), Open: 84.68, High: 84.9, Low: 84.65, Close: 84.76 },\n    { xDate: new Date('2013-10-25'), Open: 84.35, High: 85.03, Low: 84.32, Close: 84.67 },\n    { xDate: new Date('2013-10-27'), Open: 84.19, High: 84.31, Low: 84.16, Close: 84.19 },\n    { xDate: new Date('2013-10-29'), Open: 84.19, High: 84.31, Low: 84.16, Close: 84.19 },\n    { xDate: new Date('2013-11-01'), Open: 84.2, High: 84.29, Low: 84.04, Close: 84.15 },\n    { xDate: new Date('2013-11-03'), Open: 84.21, High: 84.25, Low: 84.03, Close: 84.17 },\n    { xDate: new Date('2013-11-05'), Open: 84.72, High: 84.87, Low: 84.44, Close: 84.49 },\n    { xDate: new Date('2013-11-07'), Open: 84.85, High: 84.88, Low: 84.5, Close: 84.72 },\n    { xDate: new Date('2013-11-09'), Open: 84.53, High: 84.74, Low: 84.25, Close: 84.69 },\n    { xDate: new Date('2013-11-11'), Open: 84.4, High: 84.7, Low: 84.27, Close: 84.52 },\n    { xDate: new Date('2013-11-13'), Open: 84.96, High: 85.07, Low: 84.5, Close: 84.57 },\n    { xDate: new Date('2013-11-15'), Open: 85.28, High: 85.32, Low: 84.95, Close: 85.03 },\n    { xDate: new Date('2013-11-17'), Open: 85.35, High: 85.39, Low: 85.1, Close: 85.32 },\n    { xDate: new Date('2013-11-19'), Open: 85.65, High: 85.66, Low: 85.21, Close: 85.36 },\n    { xDate: new Date('2013-11-21'), Open: 85.38, High: 85.85, Low: 85.25, Close: 85.67 },\n    { xDate: new Date('2013-11-23'), Open: 85.8, High: 85.96, Low: 85.67, Close: 85.83 },\n    { xDate: new Date('2013-11-25'), Open: 86.07, High: 86.22, Low: 85.75, Close: 85.87 },\n    { xDate: new Date('2013-11-27'), Open: 86.05, High: 86.08, Low: 85.68, Close: 85.79 },\n    { xDate: new Date('2013-11-29'), Open: 86.05, High: 86.08, Low: 85.68, Close: 85.79 },\n    { xDate: new Date('2013-12-01'), Open: 85.85, High: 86.25, Low: 85.79, Close: 86.06 },\n    { xDate: new Date('2013-12-03'), Open: 85.6, High: 85.85, Low: 85.49, Close: 85.81 },\n    { xDate: new Date('2013-12-05'), Open: 85.94, High: 86, Low: 85.48, Close: 85.66 },\n    { xDate: new Date('2013-12-07'), Open: 86.55, High: 86.64, Low: 85.36, Close: 85.92 },\n    { xDate: new Date('2013-12-09'), Open: 86.46, High: 86.87, Low: 86.4, Close: 86.71 },\n    { xDate: new Date('2013-12-11'), Open: 86.3, High: 86.39, Low: 86.13, Close: 86.38 },\n    { xDate: new Date('2013-12-13'), Open: 85.74, High: 86.44, Low: 85.67, Close: 86.19 },\n    { xDate: new Date('2013-12-15'), Open: 85.56, High: 85.62, Low: 85.34, Close: 85.61 },\n    { xDate: new Date('2013-12-17'), Open: 85.79, High: 85.89, Low: 85.36, Close: 85.52 },\n    { xDate: new Date('2013-12-19'), Open: 85.54, High: 86, Low: 85.51, Close: 85.76 },\n    { xDate: new Date('2013-12-21'), Open: 85, High: 85.17, Low: 84.87, Close: 85.15 },\n    { xDate: new Date('2013-12-23'), Open: 85.1, High: 85.28, Low: 84.72, Close: 85.08 },\n    { xDate: new Date('2013-12-25'), Open: 85.46, High: 85.56, Low: 85.18, Close: 85.37 },\n    { xDate: new Date('2013-12-27'), Open: 85.42, High: 85.44, Low: 85.09, Close: 85.42 },\n    { xDate: new Date('2013-12-29'), Open: 85.42, High: 85.44, Low: 85.09, Close: 85.42 }\n\n];","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { ChartTheme, ExportType, IRangeLoadedEventArgs, IChangedEventArgs, DateTime, AreaSeries,\n    Chart, StepLineSeries, RangeNavigator, RangeTooltip } from '@syncfusion/ej2-charts';\nimport { Browser } from '@syncfusion/ej2-base';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { dataCollection } from './data-service';\nimport { ButtonModule } from '@syncfusion/ej2-angular-buttons';\nimport { RangeNavigatorModule, ChartAllModule } from '@syncfusion/ej2-angular-charts';\n\n/**\n * Sample for range navigator with print and export functionalities.\n */\n\nlet selectedTheme: string = location.hash.split('/')[1];\nselectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\nlet theme: ChartTheme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\nlet exportthemes: string[] =  ['bootstrap5', 'bootstrap5dark', 'tailwind', 'tailwinddark', 'material', 'materialdark', 'bootstrap4', 'bootstrap', 'bootstrapdark', 'fabric', 'fabricdark', 'highcontrast', 'fluent', 'fluentdark', 'material3', 'material3dark', 'fluent2', 'fluent2highcontrast', 'fluent2dark', 'tailwind3', 'tailwind3dark'];\nlet borderColor : string[] = ['#FF4081', '#007897', '#5A61F6', '#8B5CF6', '#FFD939', '#FD7E14', '#4F46E5', '#FF4081', '#007897', '#428BCA', '#22D3EE', '#FD7E14', '#1AC9E6', '#1AC9E6', '#6355C7', '#4EAAFF', '#6200EE', '#9BB449', '#9BB449', '#2F4074', '#8029F1'];\nlet regionColor: string[] = ['rgba(253, 126, 20, 0.3)', 'rgba(253, 126, 20, 0.3)', 'rgba(90, 97, 246, 0.3)', 'rgba(139, 92, 246, 0.3)', 'rgba(255, 217, 57, 0.3)', 'rgba(253, 126, 20, 0.3)', 'rgba(79, 70, 229, 0.3)',\n        'rgba(255, 64, 129, 0.3)', 'rgba(0, 120, 151, 0.3)', 'rgba(66, 139, 202, 0.3)', 'rgba(34, 211, 238, 0.3)', 'rgba(253, 126, 20, 0.3)', 'rgba(26, 201, 230, 0.3)', 'rgba(26, 201, 230, 0.3)', 'rgba(99, 85, 199, 0.3)', 'rgba(78, 170, 255, 0.3)', 'rgba(98, 0, 238, 0.3)', 'rgba(155, 180, 73, 0.3)', 'rgba(155, 180, 73, 0.3)', 'rgba(47, 64, 116, 0.3)', 'rgba(128, 41, 241, 0.3)'];\n    @Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [RangeNavigatorModule, ChartAllModule, ButtonModule]\n})\n\n    export class AppComponent {\n        @ViewChild('chartExport')\n        public chart: Chart;\n        @ViewChild('containerExport')\n        public rangeNavigator: RangeNavigator;\n\n        public primaryXAxis:Object = {\n            valueType: 'DateTime', crosshairTooltip: { enable: true },\n            edgeLabelPlacement: 'Shift', majorGridLines: { width: 0 }\n        };\n\n        public chartArea: Object = { border: { width: 0 } };\n        public primaryYAxis: Object = {\n            minimum: 81, maximum: 87, interval: 2,\n            majorTickLines: { width: 0 }, lineStyle: { width: 0 },\n            labelFormat: '{value}M', title: 'Million in USD'\n        };\n        public crosshair: Object = { enable: false, lineType: 'None'};\n        public chartTooltip: Object = { enable: true, shared: true };\n        public width: string = '100%';\n        public border: Object = { width: 2, color: borderColor[exportthemes.indexOf(theme.toLowerCase())] };\n        public fill: string = regionColor[exportthemes.indexOf(theme.toLowerCase())];\n        public value: Object = [new Date('2013-05-01'), new Date('2013-08-01')];\n        public data: Object = dataCollection;\n        public legendSettings: Object = { visible: false };\n        public theme: string = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n        public changed(args: IChangedEventArgs): void {\n            this.chart.primaryXAxis.zoomFactor = args.zoomFactor;\n            this.chart.primaryXAxis.zoomPosition = args.zoomPosition;\n            this.chart.dataBind();\n        };\n        public onClick(e: Event): void {\n            let fileName: string = (<HTMLInputElement>(document.getElementById('fileName'))).value;\n            this.chart.exportModule.export(<ExportType>this.exportType.value, fileName, null, [this.rangeNavigator, this.chart]);\n        };\n        public mode(e: Event): void {\n        this.rangeNavigator.print(['containerExport', 'chartExport']);\n    }\n        public exportType: DropDownList;\n        ngOnInit(): void {\n            this.exportType = new DropDownList({\n                index: 0,\n                width: 90,\n            });\n            this.exportType.appendTo('#exporttype');\n        }\n\n    }","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div>\n    <div class=\"col-lg-9 control-section\">\n        <div class=\"content-wrapper\">\n            <br/>\n             <h1 id=\"days\" align=\"center\" style=\"font-family: Segoe UI;font-weight: 500; font-style:normal; font-size:15px; margin-top: 10px;\">Conns,Inc Stock Close Details</h1>\n            <div align=\"center\">\n                <ejs-rangenavigator #containerExport style='display:block' align='center' id='containerExport' [value]='value' labelPosition='Outside'\n                    valueType='DateTime' intervalType='Months' labelFormat='MMM' enableGrouping=true [dataSource]='data' xName='xDate'\n                    yName='Close' [width]='width' (changed)='changed($event)' [theme]='theme' animationDuration=500 groupBy='Quarter'>\n                </ejs-rangenavigator>\n            </div>\n            <br/>\n            <br/>\n            <div align=\"center\">\n                <ejs-chart #chartExport style='display:block;' id='chartExport' align='center' [chartArea]='chartArea' [width]='width' [primaryXAxis]='primaryXAxis'\n                    [primaryYAxis]='primaryYAxis' [crosshair]='crosshair' [tooltip]='chartTooltip' height='350' [theme]='theme' \n                    [legendSettings]='legendSettings'>\n                    <e-series-collection>\n                        <e-series [dataSource]='data' name='Close' xName='xDate' yName='Close' width='2' type='SplineArea' [border]='border' [fill]='fill' ></e-series>\n                    </e-series-collection>\n                </ejs-chart>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-lg-3 property-section\">\n        <div class=\"property-panel-section\">\n            <div class=\"property-panel-header\">Properties</div>\n            <div class=\"property-panel-content\">\n                <table id=\"property\" class=\"property-panel-table\" title=\"Properties\" style=\"width: 100%\">\n                    <tr style=\"height: 50px\">\n                        <td style=\"width: 40%\">\n                            <div>Export Type:</div>\n                        </td>\n                        <td style=\"width: 60%;\">\n                        <div style=\"margin-left: -10px\">\n                            <div>\n                                <select name=\"selectIndex\" autocomplete=\"off\" id=\"exporttype\">\n                                    <option value=\"JPEG\">JPEG</option>\n                                    <option value=\"PNG\">PNG</option>\n                                    <option value=\"SVG\">SVG</option>\n                                    <option value=\"PDF\">PDF</option>\n                                </select>\n                            </div>\n                        </div>\n                        </td>\n                    </tr>\n                    <tr style=\"height: 50px\">\n                        <td style=\"width: 40%\">\n                            <div id=\"filename\">File Name:</div>\n                        </td>\n                        <td style=\"width: 40%;\">\n                            <div class=\"e-float-input\" style='margin-top: 0px;'>\n                                <input type=\"text\" value=\"Chart\" id=\"fileName\" style=\"margin-left: -10px\" aria-labelledby=\"Chart\">\n                            </div>\n                        </td>\n                    </tr>\n                    <tr id=\"button-control\" style=\"height: 50px\" align='center'>\n                        <td>\n                            <div>\n                               <button ejs-button cssClass=\"e-flat\" iconCss='e-icons e-export-icon' (click)='onClick($event)' isPrimary=true id=\"togglebtn\">EXPORT</button>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr id=\"button-control\" style=\"height: 50px\" align='center'>\n                        <td>\n                            <div>\n                                <button ejs-button id=\"printbtn\" iconCss='e-icons e-print-icon' cssClass= 'e-flat' isPrimary=true (click)='mode($event)'>Print</button>\n                            </div>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n\n<style>\n    .control-section {\n        min-height: 450px;\n    }\n\n    #button-control {\n        width: 100%;\n        text-align: center;\n    }\n\n    #control-containerExport {\n        padding: 0px !important;\n    }\n\n    .e-print-icon::before {\n        content: '\\e34b';\n    }\n \n    .e-view.fabric .e-print-icon::before, .e-view.fabric-dark .e-print-icon::before {\n        content: '\\e7df';\n    }\n \n    .e-view.bootstrap .e-print-icon::before {\n        content: '\\ebd2';\n    }\n \n   .e-view.bootstrap4 .e-print-icon::before {\n        content: '\\e743';\n    }\n \n    .e-view.tailwind .e-print-icon::before, .e-view.tailwind-dark .e-print-icon::before, .e-view.tailwind3 .e-print-icon::before, .e-view.tailwind3-dark .e-print-icon::before {\n        content: '\\e76c';\n    }\n \n    .e-view.highcontrast .e-print-icon::before {\n        content: '\\ebf9';\n    }\n \n    .e-view.bootstrap5\\.3 .e-print-icon::before, .e-view.bootstrap5\\.3-dark .e-print-icon::before {\n        content: '\\e75d';\n    }\n \n    .e-view.fluent .e-print-icon::before, .e-view.fluent-dark .e-print-icon::before {\n        content: '\\e75d';\n    }\n    .e-view.fluent2 .e-print-icon::before, .e-view.fluent2-dark .e-print-icon::before, .e-view.fluent2-highcontrast .e-print-icon::before {\n        content: '\\e75d';\n    }\n    .e-view.material3 .e-print-icon::before, .e-view.material3-dark .e-print-icon::before {\n        content: '\\e75d';\n    }\n    .e-export-icon::before {\n        content: '\\e728';\n    }\n \n    .e-view.fabric .e-export-icon::before, .e-view.fabric-dark .e-export-icon::before {\n        content: '\\e710';\n    }\n \n    .e-view.bootstrap4 .e-export-icon::before {\n        content: '\\e780';\n    }\n \n    .e-view.tailwind-dark .e-export-icon::before, .e-view.tailwind .e-export-icon::before, .e-view.tailwind3-dark .e-export-icon::before, .e-view.tailwind3 .e-export-icon::before {\n        content: '\\e7bf';\n    }\n \n    .e-view.highcontrast .e-export-icon::before {\n        content: '\\e710';\n    }\n \n    .e-view.bootstrap5\\.3 .e-export-icon::before, .e-view.bootstrap5\\.3-dark .e-export-icon::before {\n        content: '\\e72e';\n    }\n    .e-view.fluent .e-export-icon::before, .e-view.fluent-dark .e-export-icon::before {\n        content: '\\e72e';\n    }\n    .e-view.fluent2 .e-export-icon::before, .e-view.fluent2-dark .e-export-icon::before, .e-view.fluent2-highcontrast .e-export-icon::before {\n        content: '\\e72e';\n    }\n    .e-view.material3 .e-export-icon::before, .e-view.material3-dark .e-export-icon::before {\n        content: '\\e72e';\n    }\n</style>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-excel-export\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-pdf-export\":\"*\",\"@syncfusion/ej2-svg-base\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-grids\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}