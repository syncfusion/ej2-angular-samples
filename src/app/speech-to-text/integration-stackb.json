{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild  } from '@angular/core';\nimport { SpeechToTextModule, SpeechToTextComponent, TranscriptChangedEventArgs, ErrorEventArgs } from '@syncfusion/ej2-angular-inputs'\nimport { AIAssistViewModule, AIAssistViewComponent, ToolbarSettingsModel, ToolbarItemClickedEventArgs } from '@syncfusion/ej2-angular-interactive-chat';\nimport { ToastComponent, ToastModule } from '@syncfusion/ej2-angular-notifications';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.css'],\n  encapsulation: ViewEncapsulation.None,\n  standalone: true,\n  imports: [SpeechToTextModule, AIAssistViewModule, ToastModule]\n})\nexport class AppComponent {\n\n  @ViewChild('assistView') assistViewInstance!: AIAssistViewComponent;\n  @ViewChild('speechToText') speechToTextInstance!: SpeechToTextComponent;\n  @ViewChild('toast') toastInstance!: ToastComponent;\n\n  public toastPosition = { X: 'Right'};\n  public target = \".integration-control-section\";\n  public toolbarSettings: ToolbarSettingsModel = {\n    items: [{ iconCss: 'e-icons e-refresh', align: 'Right' }],\n    itemClicked: this.onToolbarItemClicked.bind(this),\n  };\n\n  ngAfterViewInit(): void {\n    this.setupFooterButtons();\n  }\n\n  setupFooterButtons(): void {\n    if (this.assistViewInstance) {\n      const assistviewElement = this.assistViewInstance.element as HTMLElement;\n      const assistviewFooter = assistviewElement.querySelector('#assistview-footer') as HTMLElement;\n      const sendButton = assistviewElement.querySelector('#assistview-sendButton') as HTMLElement;\n      const speechButton = assistviewElement.querySelector('#speechToText') as HTMLElement;\n\n      sendButton.addEventListener('click', () => this.sendIconClicked());\n      assistviewFooter.addEventListener('input', () => this.toggleButtons());\n      assistviewFooter.addEventListener('keydown', (e) => this.onKeyDown(e));\n\n      this.toggleButtons();\n    }\n  }\n\n  onKeyDown(event: KeyboardEvent): void {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      this.sendIconClicked();\n      event.preventDefault(); // Prevent the default behavior of the Enter key\n    }\n  }\n\n  onTranscriptChange(args: TranscriptChangedEventArgs): void {\n    const assistviewFooter = document.querySelector('#assistview-footer') as HTMLElement;\n    if (assistviewFooter) {\n      assistviewFooter.innerText = args.transcript;\n    }\n  }\n\n  onToolbarItemClicked(args: ToolbarItemClickedEventArgs): void {\n    if (args.item.iconCss === 'e-icons e-refresh') {\n      this.assistViewInstance.prompts = [];\n    }\n  }\n\n  toggleButtons(): void {\n    const assistviewFooter = document.querySelector('#assistview-footer') as HTMLElement;\n    const sendButton = document.querySelector('#assistview-sendButton') as HTMLElement;\n    const speechButton = document.querySelector('#speechToText') as HTMLElement;\n\n    const hasText = assistviewFooter.innerText.trim() !== '';\n    sendButton.classList.toggle('visible', hasText);\n    speechButton.classList.toggle('visible', !hasText);\n\n    if (!hasText && (assistviewFooter.innerHTML.trim() === '' || assistviewFooter.innerHTML === '<br>')) {\n      assistviewFooter.innerHTML = '';\n    }\n  }\n\n  sendIconClicked(): void {\n    const assistviewFooter = document.querySelector('#assistview-footer') as HTMLElement;\n    this.assistViewInstance.executePrompt(assistviewFooter.innerText);\n    assistviewFooter.innerText = '';\n  }\n\n  onPromptRequest(): void {\n    setTimeout(() => {\n      this.assistViewInstance.addPromptResponse('For real-time prompt processing, connect the AIAssistView component to your preferred AI service.');\n      this.toggleButtons();\n    }, 2000);\n  }\n\n  onErrorHandler(args: ErrorEventArgs): void {\n    const toastContent: string = args.errorMessage;\n    if (args.error === 'unsupported-browser') {\n      this.speechToTextInstance.disabled = true;\n      this.toastInstance.show({ content: toastContent, timeOut: 0 });     \n    } else {\n      this.toastInstance.show({ content: toastContent, timeOut: 5000 });\n    }\n  }\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section integration-control-section\">\n    <div class=\"integration-speechToText-section\">\n      <div ejs-aiassistview #assistView (created)=\"setupFooterButtons()\" (promptRequest)=\"onPromptRequest()\" [toolbarSettings]=\"toolbarSettings\">\n        <ng-template #bannerTemplate>\n          <div class=\"banner-info\">\n            <div class=\"e-icons e-listen-icon\"></div>    \n            <h3>Speech To Text</h3>\n            <i>Click the below mic-button to convert your voice to text.</i>\n          </div>\n        </ng-template>\n        <ng-template #footerTemplate>\n          <div class=\"e-footer-wrapper\">\n            <div id=\"assistview-footer\" class=\"content-editor\" contenteditable=\"true\" placeholder=\"Click to speak or start typing...\"></div>\n            <div class=\"option-container\">\n              <button ejs-speechtotext #speechToText id=\"speechToText\" cssClass=\"e-flat\" (transcriptChanged)=\"onTranscriptChange($event)\" (onStop)=\"toggleButtons()\" (onError)=\"onErrorHandler($event)\"></button>\n              <button id=\"assistview-sendButton\" class=\"e-assist-send e-icons\" role=\"button\"></button>\n            </div>\n          </div>\n        </ng-template>\n      </div>\n      <ejs-toast #toast id=\"stt-toast\" [position]=\"toastPosition\" [target]=\"target\" cssClass=\"e-toast-danger\"></ejs-toast>\n    </div>\n  </div>\n    ","app.component.css":".integration-speechToText-section {\n    height: 550px;\n    width: 550px;\n    margin: 0 auto;\n}\n  \n.integration-speechToText-section .banner-info .e-listen-icon:before {\n    font-size: 35px;\n}\n  \n.integration-speechToText-section .banner-info {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    height: 330px;\n    text-align: center;\n}\n  \n.integration-speechToText-section .e-footer-wrapper #assistview-sendButton {\n    width: 40px;\n    height: 40px;\n    font-size: 20px;\n    border: none;\n    background: none;\n    cursor: pointer;\n}\n  \n.integration-speechToText-section .e-footer-wrapper #speechToText.visible,\n.integration-speechToText-section .e-footer-wrapper #assistview-sendButton.visible {\n    display: inline-block;\n}\n  \n.integration-speechToText-section .e-footer-wrapper #speechToText,\n.integration-speechToText-section .e-footer-wrapper #assistview-sendButton {\n    display: none;\n}\n  \n@media only screen and (max-width: 750px) {\n    .integration-speechToText-section {\n      width: 100%;\n    }\n}\n  \n.integration-speechToText-section .e-footer-wrapper {\n    display: flex;\n    border: 1px solid #c1c1c1;\n    padding: 5px 5px 5px 10px;\n    margin: 5px 5px 0 5px;\n    border-radius: 30px;\n}\n  \n.integration-speechToText-section .e-footer-wrapper .content-editor {\n    width: 100%;\n    overflow-y: auto;\n    font-size: 14px;\n    min-height: 25px;\n    max-height: 200px;\n    padding: 10px;\n    scrollbar-color: #c1c1c1 transparent;\n}\n  \n.integration-speechToText-section .e-footer-wrapper .content-editor[contentEditable=true]:empty:before {\n    content: attr(placeholder);\n}\n  \n.integration-speechToText-section .option-container {\n    align-self: flex-end;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-interactive-chat\":\"*\",\"@syncfusion/ej2-angular-interactive-chat\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-angular-notifications\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}