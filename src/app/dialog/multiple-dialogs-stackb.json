{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { DialogComponent, ButtonPropsModel, DialogModule } from '@syncfusion/ej2-angular-popups';\nimport { ButtonComponent, ButtonModule } from '@syncfusion/ej2-angular-buttons';\n\n\n\n/**\n * Multiple Dialogs Component\n */\n@Component({\n    selector: 'app-root',\n    styleUrls: ['app.component.css'],\n    templateUrl: 'app.component.html',\n    standalone: true,\n    imports: [ButtonModule, DialogModule,  ]\n})\n\nexport class AppComponent {\n\n    constructor() { }\n\n    @ViewChild('defaultDialog')\n    public defaultDialog: DialogComponent;\n\n    @ViewChild('dialogObj2')\n    public dialogObj: DialogComponent;\n\n    @ViewChild('confirmButton')\n    public dialogBtn: ButtonComponent;\n\n    public dialogHeader = 'First Dialog';\n    public dialogCloseIcon: Boolean = true;\n    public dialogWidth = '330px';\n    public contentData = 'This is the first dialog and acts as a parent dialog, you can open the second (child) dialog by clicking \\'Next\\'.';\n    public animationSettings: Object = { effect: 'None' };\n    public secondDlgHeader = 'Second Dialog';\n    public secondDialogCloseIcon: Boolean = true;\n    public secondDialogWidth = '285px';\n    public contentData1 = 'This is the second dialog and act as a child dialog.';\n    public animationSettings1: Object = { effect: 'None' };\n    public isModal: Boolean = true;\n    public target = '.control-section';\n    public showCloseIcon: Boolean = false;\n    public visible: Boolean = true;\n    public visible2: Boolean = false;\n\n    public dlgButtonClick = (): void => {\n        this.dialogObj.show();\n    }\n\n    public dlgButtonClick1 = (): void => {\n        this.dialogObj.hide();\n    }\n\n    public confirmBtnClick = (): void => {\n        this.defaultDialog.show();\n    }\n\n    public dialogClose = (): void => {\n        this.dialogBtn.element.style.display = 'block';\n    }\n\n    public dialogClose2 = (): void => {\n        this.dialogBtn.element.style.display = 'none';\n    }\n\n    public dialogOpen = (): void => {\n        this.dialogBtn.element.style.display = 'none';\n    }\n\n    public defaultDlgButtons:  ButtonPropsModel[] = [{ click: this.dlgButtonClick.bind(this), buttonModel: { content: 'Next', isPrimary: true } }];\n    public secondDlgButtons:  ButtonPropsModel[] = [{ click: this.dlgButtonClick1.bind(this), buttonModel: { content: 'Close', isPrimary: true } }];\n\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section multiple\">\n  <button ejs-button id=\"dialogBtn\" Class=\"e-control e-btn\" #confirmButton (click)=\"confirmBtnClick()\">Open\n    Dialog</button>\n  <ejs-dialog id=\"defaultDialog\" #defaultDialog [content]='contentData' [buttons]='defaultDlgButtons'\n    [visible]='visible' [header]='dialogHeader' [animationSettings]='animationSettings'\n    [showCloseIcon]='dialogCloseIcon' (open)=\"dialogOpen()\" (close)=\"dialogClose()\" [target]='target'\n    [width]='dialogWidth'>\n  </ejs-dialog>\n  <ejs-dialog id=\"secondDialog\" [isModal]='isModal' #dialogObj2 [content]='contentData1' [buttons]='secondDlgButtons'\n    [visible]='visible2' [header]='secondDlgHeader' [animationSettings]='animationSettings1'\n    [showCloseIcon]='secondDialogCloseIcon' (open)=\"dialogOpen()\" (close)=\"dialogClose2()\" [target]='target'\n    [width]='secondDialogWidth'>\n  </ejs-dialog>\n</div>","app.component.css":"#control-container {\n    padding: 0px !important;\n  }\n  .control-section.multiple {\n    padding-top: 20px;\n    padding-bottom: 20px;\n    min-height: 350px;\n  }\n  \n  .e-btn-hide {\n    display: none;\n  }\n\n  .dlgbtn {\n    margin-right: 10px;\n  }\n\n  #container {\n    height: 100%;\n    min-height: 350px;\n    position:relative;\n  }\n  \n  @media screen and (min-width: 150px) and (max-width: 480px) {\n    .control-section {\n      margin-bottom: 30px;\n    }\n    .control-wrapper {\n      margin-bottom: 0px;\n    }\n  }","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-popups\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-richtexteditor\":\"*\",\"@syncfusion/ej2-angular-richtexteditor\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-angular-calendars\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-grids\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"@syncfusion/ej2-angular-schedule\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}