{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild, ElementRef } from '@angular/core';\nimport { DialogComponent, PositionDataModel, DialogModule } from '@syncfusion/ej2-angular-popups';\nimport { ChangeArgs } from '@syncfusion/ej2-buttons';\nimport { ButtonComponent, ButtonModule, RadioButtonModule } from '@syncfusion/ej2-angular-buttons';\n\n\n/**\n * Position Dialog Component\n */\n@Component({\n    selector: 'app-root',\n    styleUrls: ['app.component.css'],\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ButtonModule, DialogModule, RadioButtonModule,  ]\n})\n\nexport class AppComponent {\n\n    @ViewChild('ejDialog')\n    public defaultDialog: DialogComponent;\n\n    @ViewChild('confirmButton')\n    public dialogBtn: ButtonComponent;\n    public defaultWidth = '452px';\n    public position: PositionDataModel = { X: 'center', Y: 'center' };\n    public closeOnEscape = false;\n    public dialogCloseIcon = true;\n    public target = '.control-section';\n\n    public dlgButtonClick = () => {\n        this.defaultDialog.show();\n    }\n\n    public onChangeHandler = function (args: ChangeArgs): void {\n        this.defaultDialog.position.X = args.value.split(' ')[0];\n        this.defaultDialog.position.Y = args.value.split(' ')[1];\n        this.defaultDialog.dataBind();\n        const txt: string[] = ((args.event.target as HTMLElement).parentElement.querySelector('.e-label') as HTMLElement).innerText.split(' ');\n        document.getElementById('posvalue').innerHTML = 'Position: { X: \"' + txt[0] + '\", Y: \"' + txt[1] + '\" }';\n    }\n\n    public dialogOpen = (): void => {\n        this.dialogBtn.element.style.display = 'none';\n    }\n\n    public dialogClose = (): void => {\n        this.dialogBtn.element.style.display = 'block';\n    }\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section\">\n    <button ejs-button id=\"dialogBtn\" Class=\"e-control e-btn\" #confirmButton (click)=\"dlgButtonClick()\">Open\n        Dialog</button>\n\n    <ejs-dialog id='defaultDialog' #ejDialog [position]='position' [width]='defaultWidth' [showCloseIcon]='dialogCloseIcon'\n        (open)=\"dialogOpen()\" (close)=\"dialogClose()\" [target]='target'\n        [closeOnEscape]='closeOnEscape'>\n        <ng-template #header>\n            <span>Choose a Dialog Position</span>\n        </ng-template>\n        <ng-template #content>\n            <table id=\"poschange\" style=\"padding:18px; padding-top:0px;\">\n                <tr>\n                    <td>\n                        <ejs-radiobutton label=\"Left Top\" name=\"xy\" (change)=\"onChangeHandler($event)\" value=\"left top\">\n                        </ejs-radiobutton>\n                    </td>\n                    <td>\n                        <ejs-radiobutton label=\"Center Top\" name=\"xy\" (change)=\"onChangeHandler($event)\"\n                            value=\"center top\"></ejs-radiobutton>\n                    </td>\n                    <td>\n                        <ejs-radiobutton label=\"Right Top\" name=\"xy\" (change)=\"onChangeHandler($event)\"\n                            value=\"right top\"></ejs-radiobutton>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <ejs-radiobutton label=\"Left Center\" name=\"xy\" (change)=\"onChangeHandler($event)\"\n                            value=\"left center\"></ejs-radiobutton>\n                    </td>\n                    <td>\n                        <ejs-radiobutton label=\"Center Center\" name=\"xy\" (change)=\"onChangeHandler($event)\"\n                            value=\"center center\" checked=\"true\"></ejs-radiobutton>\n                    </td>\n                    <td>\n                        <ejs-radiobutton label=\"Right Center\" name=\"xy\" (change)=\"onChangeHandler($event)\"\n                            value=\"right center\"></ejs-radiobutton>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <ejs-radiobutton label=\"Left Bottom\" name=\"xy\" (change)=\"onChangeHandler($event)\"\n                            value=\"left bottom\"></ejs-radiobutton>\n                    </td>\n                    <td>\n                        <ejs-radiobutton label=\"Center Bottom\" name=\"xy\" (change)=\"onChangeHandler($event)\"\n                            value=\"center bottom\"></ejs-radiobutton>\n                    </td>\n                    <td>\n                        <ejs-radiobutton label=\"Right Bottom\" name=\"xy\" (change)=\"onChangeHandler($event)\"\n                            value=\"right bottom\"></ejs-radiobutton>\n                    </td>\n                </tr>\n            </table>\n        </ng-template>\n        <ng-template #footerTemplate>\n            <span id=\"posvalue\" style=\"float:left; padding-left:10px;\">Position: \"Center\", \"Center\"</span>\n        </ng-template>\n    </ejs-dialog>\n</div>\n","app.component.css":"#container {\n    height: 365px;\n    overflow: hidden;\n    width: 100%;\n}\n.control-section{            \n    min-height: 370px;\n    margin-bottom: 15px;\n    margin-top: 10px;    \n}\n\n#poschange {\n  width: 405px;\n}\n\n.fluent.e-bigger #poschange,\n.fluent-dark.e-bigger #poschange {\n  width: 455px;\n}\n#defaultDialog table,\n#defaultDialog th,\n#defaultDialog td {\n    border: 1px solid #D8D8D8;\n    border-collapse: collapse;\n}\n\n.bootstrap5 #defaultDialog.e-dialog .e-footer-content,\n.bootstrap5-dark #defaultDialog.e-dialog .e-footer-content,\n.bootstrap5\\.3 #defaultDialog.e-dialog .e-footer-content,\n.bootstrap5\\.3-dark #defaultDialog.e-dialog .e-footer-content,\n.tailwind #defaultDialog.e-dialog .e-footer-content,\n.tailwind3 #defaultDialog.e-dialog .e-footer-content,\n.tailwind-dark #defaultDialog.e-dialog .e-footer-content,\n.tailwind3-dark #defaultDialog.e-dialog .e-footer-content,\n.bootstrap4 #defaultDialog.e-dialog .e-footer-content,\n.bootstrap #defaultDialog.e-dialog .e-footer-content\n {\n     padding: 8px 5px 10px;\n }\n\n#defaultDialog.e-dialog .e-footer-content {\n    padding: 0px 10px 10px;\n}\n\n#loader {\n    color: #008cff;\n    height: 40px;\n    left: 45%;\n    position: absolute;\n    top: 45%;\n    width: 30%;\n}\n\n.e-dialog .e-dlgcontent{\n    padding: 10px 16px 10px;\n}     \n\n.e-radio +label .e-label {\n  line-height:18px;\n}\n\n td {\n  padding: 6px;\n}\n","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-popups\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-richtexteditor\":\"*\",\"@syncfusion/ej2-angular-richtexteditor\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-angular-calendars\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-grids\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"@syncfusion/ej2-angular-schedule\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}