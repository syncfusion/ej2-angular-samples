{"dependencies.json":"{\"@syncfusion/ej2-base\": \"*\", \"@syncfusion/ej2-buttons\": \"*\", \"@syncfusion/ej2-splitbuttons\": \"*\", \"@syncfusion/ej2-calendars\": \"*\", \"@syncfusion/ej2-charts\": \"*\", \"@syncfusion/ej2-diagrams\": \"*\", \"@syncfusion/ej2-maps\": \"*\", \"@syncfusion/ej2-treemap\": \"*\", \"@syncfusion/ej2-circulargauge\": \"*\", \"@syncfusion/ej2-data\": \"*\", \"@syncfusion/ej2-dropdowns\": \"*\", \"@syncfusion/ej2-grids\": \"*\", \"@syncfusion/ej2-inputs\": \"*\", \"@syncfusion/ej2-lists\": \"*\", \"@syncfusion/ej2-navigations\": \"*\", \"@syncfusion/ej2-popups\": \"*\", \"@syncfusion/ej2-lineargauge\": \"*\", \"@syncfusion/ej2-pdf-export\": \"*\", \"@syncfusion/ej2-compression\": \"*\", \"@syncfusion/ej2-excel-export\": \"*\", \"@syncfusion/ej2-file-utils\": \"*\", \"@syncfusion/ej2-svg-base\": \"*\", \"@syncfusion/ej2-documenteditor\": \"*\", \"@syncfusion/ej2-richtexteditor\": \"*\", \"@syncfusion/ej2-notifications\": \"*\", \"@syncfusion/ej2-heatmap\": \"*\", \"@syncfusion/ej2-pivotview\": \"*\", \"@syncfusion/ej2-schedule\": \"*\", \"@syncfusion/ej2-layouts\": \"*\", \"@syncfusion/ej2-angular-base\": \"*\", \"@syncfusion/ej2-angular-buttons\": \"*\", \"@syncfusion/ej2-angular-splitbuttons\": \"*\", \"@syncfusion/ej2-angular-calendars\": \"*\", \"@syncfusion/ej2-angular-charts\": \"*\", \"@syncfusion/ej2-angular-diagrams\": \"*\", \"@syncfusion/ej2-angular-maps\": \"*\", \"@syncfusion/ej2-angular-treemap\": \"*\", \"@syncfusion/ej2-angular-circulargauge\": \"*\", \"@syncfusion/ej2-angular-dropdowns\": \"*\", \"@syncfusion/ej2-angular-grids\": \"*\", \"@syncfusion/ej2-angular-inputs\": \"*\", \"@syncfusion/ej2-angular-lists\": \"*\", \"@syncfusion/ej2-angular-navigations\": \"*\", \"@syncfusion/ej2-angular-popups\": \"*\", \"@syncfusion/ej2-angular-lineargauge\": \"*\", \"@syncfusion/ej2-angular-documenteditor\": \"*\", \"@syncfusion/ej2-angular-richtexteditor\": \"*\", \"@syncfusion/ej2-angular-notifications\": \"*\", \"@syncfusion/ej2-angular-heatmap\": \"*\", \"@syncfusion/ej2-angular-pivotview\": \"*\", \"@syncfusion/ej2-angular-schedule\": \"*\", \"@syncfusion/ej2-angular-layouts\": \"*\" , \"@angular/http\": \"*\", \"rxjs-compat\":\"*\"}","main.ts":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n","polyfills.ts":"/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol';\n// import 'core-js/es6/object';\n// import 'core-js/es6/function';\n// import 'core-js/es6/parse-int';\n// import 'core-js/es6/parse-float';\n// import 'core-js/es6/number';\n// import 'core-js/es6/math';\n// import 'core-js/es6/string';\n// import 'core-js/es6/date';\n// import 'core-js/es6/array';\n// import 'core-js/es6/regexp';\n// import 'core-js/es6/map';\n// import 'core-js/es6/weak-map';\n// import 'core-js/es6/set';\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect';\n\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\nimport 'core-js/es7/reflect';\n\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n **/\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n */\n\n // (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n // (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n // (window as any).__zone_symbol__BLACK_LISTED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n\n /*\n * in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n * with the following flag, it will bypass `zone.js` patch for IE/Edge\n */\n// (window as any).__Zone_enable_cross_context_check = true;\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n<link href=\"../styles/OpenNew.css\" rel=\"stylesheet\">\n  <link href=\"//cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\" />\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body class=\"ej2-new\"> \n\n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WLQL39J\"height=\"0\"width=\"0\"style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app/app.module.ts":"import { CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\n\nimport { RadioButtonModule } from '@syncfusion/ej2-angular-buttons';\n\nimport { DialogModule } from '@syncfusion/ej2-angular-popups';\n\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from '../app.component';\n\n@NgModule({ declarations: [   AppComponent ], imports: [ RadioButtonModule, CheckBoxModule, BrowserModule, DialogModule], providers: [], bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","app.component.html":"<div class=\"control-section ajaxsample\" style=\"padding:10px;position:relative;\">\n    <!-- Create Button to open the Dialog -->\n    <button ejs-button id='ajaxBtn' #ajaxButton (click)=\"ajaxBtnClick()\">Open</button>\n    <!-- Render the Dialog -->\n    <ejs-dialog #dialogInstance [buttons]='dlgButtons' [animationSettings]='animationSettings' [showCloseIcon]='showCloseIcon' [target]='target' [width]='width' (open)=\"dialogOpen()\" (close)=\"dialogClose()\">\n        <ng-template #content>\n                <span>On October 17, Microsoft will release its Fall Creators Update for the Windows 10 platform.\n                Much like its previous counter part, the Spring Creators Update, the release is set to deliver more features\n                to Windows 10 for both developers and users, with particular emphasis this time around on app modernization\n                mixed reality, game development and software updates App modernization is the term Microsoft used in\n                its press event to encompass the features that will affect most Windows 10 users and\n                The updates primarily serve to make using Windows 10 easier and more productive all around. Some significant highlights include device.</span>\n        </ng-template>\n        <ng-template #header>\n            <img class=\"img1\" src=\"./assets/dialog/images/2.png\"> Whats Coming from Microsoft this Fall\n        </ng-template>\n    </ejs-dialog>\n</div>","app.component.css":"    .control-section {\n        height: 100%;\n        min-height: 350px;\n    }\n\n    .ajaxsample .e-dialog .e-dlg-header img.img1 {\n        height: 20px;\n        width: 20px;\n        margin-right: 10px;\n        margin-top: 5px;\n        float: left;\n    }\n    .ajaxsample .e-dialog .e-dlg-header {\n        width: 90%;\n    }\n    .fabric .ajaxsample .e-dialog .e-dlg-content {\n        font-size: 13px;\n    }    \n\n    .bootstrap .ajaxsample .e-dialog .e-dlg-header img.img1 {\n        margin-top: 1px;\n    }\n\n    .bootstrap4 .ajaxsample .e-dialog .e-dlg-header img.img1 {\n        margin-top: 0px;\n    }\n\n    .bootstrap .ajaxsample .e-dialog .e-dlg-header {\n        margin-top: 6px;\n    }\n\n    .ajaxsample .e-footer-content button.e-control.e-btn.e-flat {\n        width: 100%\n    }\n\n    .ajaxsample .e-dialog .e-footer-content .e-btn {\n        margin-left: 0px;\n    }\n    \n    .highcontrast .ajaxsample .e-dialog .e-footer-content .e-btn,\n    .fabric .ajaxsample .e-dialog .e-footer-content .e-btn,\n    .highcontrast .ajaxsample .e-footer-content button.e-control.e-btn.e-flat,\n    .fabric .ajaxsample .e-footer-content button.e-control.e-btn.e-flat {\n        margin-top: 10px;\n\t}\n\t\n    .ajaxsample .e-dlg-header-content {\n       min-height: 65px; \n    }\n\n    .bootstrap4 .ajaxsample .e-dlg-header-content {\n        min-height: 50px; \n     } \n\n\t.ajaxsample .e-dialog .e-icon-dlg-close::before{\n\t    top: 6px;\n    }\n    \n\t.e-bigger.e-dialog .e-footer-content .e-btn, .e-bigger .e-dialog .e-footer-content .e-btn{\n\t   margin-left: 0px;\n    }\n    \n\t.ajaxsample .e-footer-content button.e-control.e-btn.e-flat {\n\t\twidth: initial;\n    }\n\n    .ajaxsample .e-btn .e-btn-icon {\n        margin-top: -12px;\n    }","app.component.ts":"import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { Ajax } from '@syncfusion/ej2-base';\nimport { DialogComponent } from '@syncfusion/ej2-angular-popups';\nimport { EmitType } from '@syncfusion/ej2-base';\n/**\n * Ajax Dialog Component\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class AppComponent {\n\t\n    @ViewChild('dialogInstance')\n    public dialogObj: DialogComponent;\n    public ajaxData: string;\n    // Dialog will be opened on button click\n    public ajaxBtnClick: EmitType<object> = () => {\n        this.dialogObj.show();\n    }\n\tngOnInit(): void {}\n\t\t\n    ngAfterViewInit(): void {\n        document.getElementById('ajaxBtn').focus();\n    }\n    public header: string = '';\n    public target: string = '.control-section';\n    public showCloseIcon: Boolean = true;\n    public ajaxHeight: string = '270px';\n    public width: string = '500px';\n    public animationSettings: Object = { effect: 'None' };\n    public innerContent1: string = 'On October 17, Microsoft will release its Fall Creators Update for the Windows 10 platform.'\n    public innerContent2: string= 'Much likeits previous counter part, the Spring Creators Update ...';\n    public content: string = this.innerContent1 + this.innerContent2;\n    public contentData: string = 'On October 17, Microsoft will release its Fall Creators Update for the Windows 10 platform. '\n    + 'like its previous counterpart, the Spring Creators Update, the release is set to deliver more features '\n    + 'to Windows 10 for both developers and users, with particular emphasis this time around on app modernization, '\n    + 'mixed reality, and game development and software updates. App modernization is the term Microsoft used in ' \n    + 'its press event to encompass the features that will affect most Windows 10 users and developers.';\n    // Button will be shown, when Dialog has been closed\n    public dialogClose: EmitType<object> = () => {\n        document.getElementById('ajaxBtn').style.display = '';\n    }\n    // Button will be hidden, when Dialog has been opened\n    public dialogOpen: EmitType<object> = () => {\n        document.getElementById('ajaxBtn').style.display = 'none';\n    }\n\n    public dlgButtonClick: EmitType<object> = () => {\n        let localObj: any = this;\n        if (document.querySelector('.e-footer-content .e-btn').textContent === 'More Details') {\n            // Request to load AJAX content\n            let ajax: Ajax = new Ajax('./../../../../src/app/dialog/assets/dialog/blog.html', 'GET', true);\n            // Rendering Dialog on AJAX success\n            ajax.onSuccess = (data: string): void => {\n                this.dialogObj.content = data;\n            };\n            ajax.send();\n            \n            document.querySelector('.e-footer-content .e-btn').textContent = 'Less Details';\n            localObj.height = '250px';\n        } else {\n            this.dialogObj.content = this.contentData;\n             document.querySelector('.e-footer-content .e-btn').textContent = 'More Details';\n        }\n    }\n    public dlgButtons: Object[] = [{ click: this.dlgButtonClick.bind(this), buttonModel: { content: 'More Details', isPrimary: true } }];\n    constructor() { }\n}\n\n\n\n\n"}