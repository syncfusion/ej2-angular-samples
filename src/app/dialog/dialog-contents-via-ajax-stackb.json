{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewChild, ViewEncapsulation, ElementRef, AfterViewInit } from '@angular/core';\nimport { Fetch } from '@syncfusion/ej2-base';\nimport { DialogComponent, ButtonPropsModel, DialogModule } from '@syncfusion/ej2-angular-popups';\nimport { EmitType } from '@syncfusion/ej2-base';\nimport { ButtonComponent, ButtonModule } from '@syncfusion/ej2-angular-buttons';\n\n\n/**\n * Ajax Dialog Component\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ButtonModule, DialogModule,  ]\n})\n\nexport class AppComponent {\n\n    @ViewChild('dialogInstance')\n    public dialogObj: DialogComponent;\n\n    @ViewChild('ajaxButton')\n    public ajaxButton: ButtonComponent;\n\n    public ajaxData: string;\n    public header: string = '';\n    public target: string = '.control-section';\n    public showCloseIcon: Boolean = true;\n    public ajaxHeight: string = '270px';\n    public width: string = '500px';\n    public animationSettings: Object = { effect: 'None' };\n    public innerContent1: string = 'On October 17, Microsoft will release its Fall Creators Update for the Windows 10 platform.'\n    public innerContent2: string = 'Much likeits previous counter part, the Spring Creators Update ...';\n    public content: string = this.innerContent1 + this.innerContent2;\n    public contentData: string = 'On October 17, Microsoft will release its Fall Creators Update for the Windows 10 platform. '\n        + 'like its previous counterpart, the Spring Creators Update, the release is set to deliver more features '\n        + 'to Windows 10 for both developers and users, with particular emphasis this time around on app modernization, '\n        + 'mixed reality, and game development and software updates. App modernization is the term Microsoft used in '\n        + 'its press event to encompass the features that will affect most Windows 10 users and developers.';\n\n    // Dialog will be opened on button click\n    public ajaxBtnClick: EmitType<object> = () => {\n        this.dialogObj.show();\n    }\n\n    ngAfterViewInit(): void {\n        this.ajaxButton.element.focus();\n    }\n\n    // Button will be shown, when Dialog has been closed\n    public dialogClose = (): void => {\n        this.ajaxButton.element.style.display = '';\n    }\n    // Button will be hidden, when Dialog has been opened\n    public dialogOpen = (): void => {\n        this.ajaxButton.element.style.display = 'none';\n    }\n\n    public dlgButtonClick = (): void => {\n        const localObj: any = this;\n        if (document.querySelector('.e-footer-content .e-btn').textContent === 'More Details') {\n            // Request to load AJAX content\n            const fetchApi: Fetch = new Fetch('./assets/dialog/blog.html', 'GET');\n            // Rendering Dialog on AJAX success\n            fetchApi.onSuccess = (data: string): void => {\n                this.dialogObj.content = data;\n            };\n            fetchApi.send();\n\n            document.querySelector('.e-footer-content .e-btn').textContent = 'Less Details';\n            localObj.height = '250px';\n        } else {\n            this.dialogObj.content = this.contentData;\n            document.querySelector('.e-footer-content .e-btn').textContent = 'More Details';\n        }\n    }\n    public dlgButtons: ButtonPropsModel[] = [{ click: this.dlgButtonClick.bind(this), buttonModel: { content: 'More Details', isPrimary: true } }];\n}\n\n\n\n\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section ajaxsample\" style=\"padding:10px;position:relative;\">\n    <!-- Create Button to open the Dialog -->\n    <button ejs-button id='ajaxBtn' #ajaxButton (click)=\"ajaxBtnClick()\">Open</button>\n    <!-- Render the Dialog -->\n    <ejs-dialog #dialogInstance [buttons]='dlgButtons' [animationSettings]='animationSettings'\n        [showCloseIcon]='showCloseIcon' [target]='target' [width]='width' (open)=\"dialogOpen()\" (close)=\"dialogClose()\">\n        <ng-template #content>\n            <span>On October 17, Microsoft will release its Fall Creators Update for the Windows 10 platform.\n                Much like its previous counter part, the Spring Creators Update, the release is set to deliver more\n                features\n                to Windows 10 for both developers and users, with particular emphasis this time around on app\n                modernization\n                mixed reality, game development and software updates App modernization is the term Microsoft used in\n                its press event to encompass the features that will affect most Windows 10 users and\n                The updates primarily serve to make using Windows 10 easier and more productive all around. Some\n                significant highlights include device.</span>\n        </ng-template>\n        <ng-template #header>\n            <img class=\"img1\" src=\"https://ej2.syncfusion.com/angular/demos/assets/dialog/images/2.png\" alt=\"Microsoft roadmap\"> Whats Coming from Microsoft this Fall\n        </ng-template>\n    </ejs-dialog>\n</div>","app.component.css":"    .control-section {\n        height: 100%;\n        min-height: 350px;\n    }\n\n    .ajaxsample .e-dialog .e-dlg-header img.img1 {\n        height: 20px;\n        width: 20px;\n        margin-right: 10px;\n        margin-top: 5px;\n        float: left;\n    }\n    .ajaxsample .e-dialog .e-dlg-header {\n        width: 90%;\n    }\n    .fabric .ajaxsample .e-dialog .e-dlg-content {\n        font-size: 13px;\n    }    \n\n    .bootstrap .ajaxsample .e-dialog .e-dlg-header img.img1 {\n        margin-top: 1px;\n    }\n\n    .tailwind .ajaxsample .e-dialog .e-dlg-header >img.img1,\n    .tailwind3 .ajaxsample .e-dialog .e-dlg-header >img.img1,\n    .tailwind-dark .ajaxsample .e-dialog .e-dlg-header >img.img1,\n    .tailwind3-dark .ajaxsample .e-dialog .e-dlg-header >img.img1,\n    .bootstrap5 .ajaxsample .e-dialog .e-dlg-header >img.img1,\n    .bootstrap5-dark .ajaxsample .e-dialog .e-dlg-header >img.img1,\n    .bootstrap5\\.3 .ajaxsample .e-dialog .e-dlg-header >img.img1,\n    .bootstrap5\\.3-dark .ajaxsample .e-dialog .e-dlg-header >img.img1,\n    .bootstrap4 .ajaxsample .e-dialog .e-dlg-header img.img1\n    .fluent-dark .ajaxsample .e-dialog .e-dlg-header >img.img1 {\n        margin-top: 0px;\n    }\n\n    .bootstrap .ajaxsample .e-dialog .e-dlg-header {\n        margin-top: 6px;\n    }\n\n    .ajaxsample .e-footer-content button.e-control.e-btn.e-flat {\n        width: 100%\n    }\n\n    .ajaxsample .e-dialog .e-footer-content .e-btn {\n        margin-left: 0px;\n    }\n    \n    .highcontrast .ajaxsample .e-dialog .e-footer-content .e-btn,\n    .fabric .ajaxsample .e-dialog .e-footer-content .e-btn,\n    .highcontrast .ajaxsample .e-footer-content button.e-control.e-btn.e-flat,\n    .fabric .ajaxsample .e-footer-content button.e-control.e-btn.e-flat {\n        margin-top: 10px;\n\t}\n\t\n    .ajaxsample .e-dlg-header-content {\n       min-height: 65px; \n    }\n\n    .tailwind .ajaxsample .e-dlg-header-content,\n    .tailwind3 .ajaxsample .e-dlg-header-content,\n    .tailwind-dark .ajaxsample .e-dlg-header-content,\n    .tailwind3-dark .ajaxsample .e-dlg-header-content,\n    .bootstrap5 .ajaxsample .e-dlg-header-content,\n    .bootstrap5-dark .ajaxsample .e-dlg-header-content,\n    .bootstrap5\\.3 .ajaxsample .e-dlg-header-content,\n    .bootstrap5\\.3-dark .ajaxsample .e-dlg-header-content,\n    .bootstrap4 .ajaxsample .e-dlg-header-content {\n        min-height: 50px; \n     }\n\n\t.ajaxsample .e-dialog .e-icon-dlg-close::before{\n\t    top: 6px;\n    }\n    \n\t.e-bigger.e-dialog .e-footer-content .e-btn, .e-bigger .e-dialog .e-footer-content .e-btn{\n\t   margin-left: 0px;\n    }\n    \n\t.ajaxsample .e-footer-content button.e-control.e-btn.e-flat {\n\t\twidth: initial;\n    }\n\n    .ajaxsample .e-btn .e-btn-icon {\n        margin-top: -12px;\n    }","dependencies.json":"{\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-popups\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-richtexteditor\":\"*\",\"@syncfusion/ej2-angular-richtexteditor\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-angular-calendars\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-grids\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"@syncfusion/ej2-angular-schedule\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}