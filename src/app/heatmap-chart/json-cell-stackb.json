{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation } from '@angular/core';\nimport { HeatMap, Legend, Adaptor, Tooltip, ILoadedEventArgs, HeatMapTheme, HeatMapModule } from '@syncfusion/ej2-angular-heatmap';\n\n\nHeatMap.Inject(Tooltip, Legend, Adaptor);\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [HeatMapModule,  ]\n})\n\nexport class AppComponent {\n\n    public jsonCellData: Object = [\n        { 'rowid': 'France', 'columnid': '2010', 'value': '77.6' },\n        { 'rowid': 'France', 'columnid': '2011', 'value': '79.4' },\n        { 'rowid': 'France', 'columnid': '2012', 'value': '80.8' },\n        { 'rowid': 'France', 'columnid': '2013', 'value': '86.6' },\n        { 'rowid': 'France', 'columnid': '2014', 'value': '83.7' },\n        { 'rowid': 'France', 'columnid': '2015', 'value': '84.5' },\n        { 'rowid': 'France', 'columnid': '2016', 'value': '82.6' },\n        { 'rowid': 'USA', 'columnid': '2010', 'value': '60.6' },\n        { 'rowid': 'USA', 'columnid': '2011', 'value': '65.4' },\n        { 'rowid': 'USA', 'columnid': '2012', 'value': '70.8' },\n        { 'rowid': 'USA', 'columnid': '2013', 'value': '73.8' },\n        { 'rowid': 'USA', 'columnid': '2014', 'value': '75.3' },\n        { 'rowid': 'USA', 'columnid': '2015', 'value': '77.5' },\n        { 'rowid': 'USA', 'columnid': '2016', 'value': '77.6' },\n        { 'rowid': 'Spain', 'columnid': '2010', 'value': '64.9' },\n        { 'rowid': 'Spain', 'columnid': '2011', 'value': '52.6' },\n        { 'rowid': 'Spain', 'columnid': '2012', 'value': '60.8' },\n        { 'rowid': 'Spain', 'columnid': '2013', 'value': '65.6' },\n        { 'rowid': 'Spain', 'columnid': '2014', 'value': '52.6' },\n        { 'rowid': 'Spain', 'columnid': '2015', 'value': '68.5' },\n        { 'rowid': 'Spain', 'columnid': '2016', 'value': '75.6' },\n        { 'rowid': 'China', 'columnid': '2010', 'value': '55.6' },\n        { 'rowid': 'China', 'columnid': '2011', 'value': '52.3' },\n        { 'rowid': 'China', 'columnid': '2012', 'value': '54.8' },\n        { 'rowid': 'China', 'columnid': '2013', 'value': '51.1' },\n        { 'rowid': 'China', 'columnid': '2014', 'value': '55.6' },\n        { 'rowid': 'China', 'columnid': '2015', 'value': '56.9' },\n        { 'rowid': 'China', 'columnid': '2016', 'value': '59.3' },\n        { 'rowid': 'Italy', 'columnid': '2010', 'value': '43.6' },\n        { 'rowid': 'Italy', 'columnid': '2011', 'value': '43.2' },\n        { 'rowid': 'Italy', 'columnid': '2012', 'value': '55.8' },\n        { 'rowid': 'Italy', 'columnid': '2013', 'value': '50.1' },\n        { 'rowid': 'Italy', 'columnid': '2014', 'value': '48.5' },\n        { 'rowid': 'Italy', 'columnid': '2015', 'value': '50.7' },\n        { 'rowid': 'Italy', 'columnid': '2016', 'value': '52.4' },\n        { 'rowid': 'UK', 'columnid': '2010', 'value': '28.2' },\n        { 'rowid': 'UK', 'columnid': '2011', 'value': '31.6' },\n        { 'rowid': 'UK', 'columnid': '2012', 'value': '29.8' },\n        { 'rowid': 'UK', 'columnid': '2013', 'value': '33.1' },\n        { 'rowid': 'UK', 'columnid': '2014', 'value': '32.6' },\n        { 'rowid': 'UK', 'columnid': '2015', 'value': '34.4' },\n        { 'rowid': 'UK', 'columnid': '2016', 'value': '35.8' },\n        { 'rowid': 'Germany', 'columnid': '2010', 'value': '26.8' },\n        { 'rowid': 'Germany', 'columnid': '2011', 'value': '29' },\n        { 'rowid': 'Germany', 'columnid': '2012', 'value': '26.8' },\n        { 'rowid': 'Germany', 'columnid': '2013', 'value': '27.6' },\n        { 'rowid': 'Germany', 'columnid': '2014', 'value': '33' },\n        { 'rowid': 'Germany', 'columnid': '2015', 'value': '35' },\n        { 'rowid': 'Germany', 'columnid': '2016', 'value': '35.6' },\n        { 'rowid': 'Mexico', 'columnid': '2010', 'value': '23.2' },\n        { 'rowid': 'Mexico', 'columnid': '2011', 'value': '24.9' },\n        { 'rowid': 'Mexico', 'columnid': '2012', 'value': '30.1' },\n        { 'rowid': 'Mexico', 'columnid': '2013', 'value': '22.2' },\n        { 'rowid': 'Mexico', 'columnid': '2014', 'value': '29.3' },\n        { 'rowid': 'Mexico', 'columnid': '2015', 'value': '32.1' },\n        { 'rowid': 'Mexico', 'columnid': '2016', 'value': '35' },\n        { 'rowid': 'Thailand', 'columnid': '2010', 'value': '15.9' },\n        { 'rowid': 'Thailand', 'columnid': '2011', 'value': '19.8' },\n        { 'rowid': 'Thailand', 'columnid': '2012', 'value': '21.8' },\n        { 'rowid': 'Thailand', 'columnid': '2013', 'value': '23.5' },\n        { 'rowid': 'Thailand', 'columnid': '2014', 'value': '24.8' },\n        { 'rowid': 'Thailand', 'columnid': '2015', 'value': '29.9' },\n        { 'rowid': 'Thailand', 'columnid': '2016', 'value': '32.6' },\n        { 'rowid': 'Austria', 'columnid': '2010', 'value': '22' },\n        { 'rowid': 'Austria', 'columnid': '2011', 'value': '21.3' },\n        { 'rowid': 'Austria', 'columnid': '2012', 'value': '24.2' },\n        { 'rowid': 'Austria', 'columnid': '2013', 'value': '23.2' },\n        { 'rowid': 'Austria', 'columnid': '2014', 'value': '25' },\n        { 'rowid': 'Austria', 'columnid': '2015', 'value': '26.7' },\n        { 'rowid': 'Austria', 'columnid': '2016', 'value': '28.1' },\n    ];\n\n    titleSettings: Object = {\n        text: 'Most Visited Destinations by International Tourist Arrivals',\n        textStyle: {\n            size: '15px',\n            fontWeight: '500',\n            fontStyle: 'Normal',\n            fontFamily: 'inherit'\n        }\n    };\n    xAxis: Object = {\n        labels: ['Austria', 'China', 'France', 'Germany', 'Italy', 'Mexico', 'Spain', 'Thailand', 'UK', 'USA'],\n        textStyle: {\n            fontFamily: 'inherit'\n        }\n    };\n    yAxis: Object = {\n        labels: ['2010', '2011', '2012', '2013', '2014', '2015', '2016'],\n        textStyle: {\n            fontFamily: 'inherit'\n        }\n    };\n    dataSource: Object = this.jsonCellData;\n    dataSourceSettings: Object = {\n        isJsonData: true,\n        adaptorType: 'Cell',\n        xDataMapping: 'rowid',\n        yDataMapping: 'columnid',\n        valueMapping: 'value'        \n    };\n    public cellSettings: Object = {\n        border: {\n            radius: 4,\n            width: 1,\n            color: 'white'\n        },\n        showLabel: true,\n        format: '{value} M',\n        textStyle: {\n            fontFamily: 'inherit'\n        }\n    };\n    public paletteSettings: Object = {\n        palette: [{ color: '#DCD57E' },\n        { color: '#A6DC7E' },\n        { color: '#7EDCA2' },\n        { color: '#6EB5D0' }\n        ],\n    };\n    public legendSettings: Object = {\n        textStyle: {\n             fontFamily: 'inherit'\n         }\n     };\n    public tooltipSettings: Object = {\n        textStyle: {\n            fontFamily: 'inherit'\n        }\n    };\n    public load(args: ILoadedEventArgs): void {\n        // custom code start\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.heatmap.theme = <HeatMapTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n        // custom code end\n    };\n    constructor() {\n        //code\n    };\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<main>\n    <div class=\"control-section\">\n        <div>\n            <ejs-heatmap id='container' style=\"display:block;\" [titleSettings]='titleSettings' [dataSource]='dataSource' [dataSourceSettings]='dataSourceSettings' [xAxis]='xAxis'\n                [yAxis]='yAxis' [paletteSettings]='paletteSettings' [cellSettings]='cellSettings' [legendSettings]='legendSettings' [tooltipSettings]='tooltipSettings' (load)='load($event)'>\n            </ejs-heatmap>\n        </div>\n        <div style=\"float: right; margin-right: 10px;\">Source:\n            <a href=\"https://en.wikipedia.org/wiki/World_Tourism_rankings\" target=\"_blank\">https://en.wikipedia.org/</a>\n        </div>\n    </div>\n    <section id=\"action-description\" aria-label=\"Description of HeatMap sample\">\n        <p>\n            This sample visualizes the number of international tourist arrivals in millions of the most visited destinations in the world.  </p>\n    </section>\n    <section id=\"description\" aria-label=\"Description of the HeatMap features demonstrated in this sample\">\n        <p>\n            In this example, you can see how to bind JSON data and configure the Heatmap using the data adaptor support. You can bind\n            the JSON data with information for each cell to the Heatmap using\n            <a href=\"https://ej2.syncfusion.com/angular/documentation/api/heatmap/dataModel/#isjsondata\" target=\"_blank\">isJsonData </a> and by defining the\n            <a href=\"https://ej2.syncfusion.com/angular/documentation/api/heatmap/dataModel/#adaptortype\" target=\"_blank\">adaptorType </a> properties. In cell JSON data, the value for each cell is mapped using the\n            <a href=\"https://ej2.syncfusion.com/angular/documentation/api/heatmap/dataModel/#xdatamapping\" target=\"_blank\">xDataMapping </a>,\n            <a href=\"https://ej2.syncfusion.com/angular/documentation/api/heatmap/dataModel/#ydatamapping\" target=\"_blank\">yDataMapping </a> and\n            <a href=\"https://ej2.syncfusion.com/angular/documentation/api/heatmap/dataModel/#valuemapping\" target=\"_blank\">valueMapping </a>properties. </p>\n            <p>The tooltip is enabled in this example. To see the tooltip in action, hover the mouse over an item or tap an item on touch-enabled devices.</p>\n        <br>\n        <p><b>Injecting Module</b></p>\n        <p>\n            Heatmap component features are separated into discrete feature-based modules. To use data adaptor support, inject the <a href=\"https://ej2.syncfusion.com/angular/documentation/api/heatmap/adaptorType/\" target='_blank'>Adaptor</a> module using <code>Heatmap.Inject(Adaptor)</code> method, to use a tooltip, inject the <a href=\"https://ej2.syncfusion.com/angular/documentation/heatmap-chart/tooltip\" target='_blank'>Tooltip</a> module using the <code>Heatmap.Inject(Tooltip)</code> method, and to use a legend, inject the <a href=\"https://ej2.syncfusion.com/angular/documentation/heatmap-chart/legend\" target='_blank'>Legend</a> module using the <code>Heatmap.Inject(Legend)</code> method.\n         </p>\n    </section>\n</main>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-heatmap\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-heatmap\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}