{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","empty-point-data-source.ts":"export class SampleDataSource { \n    emptyPointDataSource: object=[[8, 5, 2, 6, 8, 2, 9, 3, 7, 8, 7, 6],\n    [5, null, 4, 9, 10, null, 11, 7, 3, 7, 8, null],\n    [8, 7, 2, null, 5, 3, null, 2, 1, 8, null, 4],\n    [10, 2, null, 4, 5, null, 1, 10, 5, 2, 1, null],\n    [1, 2, 9, 4, null, 5, 1, null, 12, 1, null, 4],\n    [4, null, 3, 5, 2, null, null, null, 5, null, 1, 3],\n    [null, null, 4, 10, null, 5, 11, 2, 8, 1, null, 1],\n    [1, 4, null, 4, 5, null, 1, 3, null, 1, null, 3],\n    [null, 2, 1, 4, null, 5, 1, null, 2, 1, null, 2],\n    [1, null, 4, null, null, 2, null, 5, 1, 5, 2, 1],\n    [1, null, 2, 1, 5, null, null, null, 5, 2, 1, null]\n    ];\n}","app.component.ts":"import { Component, ViewEncapsulation } from '@angular/core';\nimport { HeatMap, Legend, Tooltip, ILoadedEventArgs, ITooltipEventArgs, HeatMapTheme, HeatMapModule } from '@syncfusion/ej2-angular-heatmap';\nimport { SampleDataSource } from './empty-point-data-source';\n\n\nHeatMap.Inject(Tooltip, Legend);\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [HeatMapModule,  ]\n})\nexport class AppComponent {\n\n    titleSettings: Object = {\n        text: 'Defective Count per 1000 Products from a Manufacturing Unit',\n        textStyle: {\n            size: '15px',\n            fontWeight: '500',\n            fontStyle: 'Normal',\n            fontFamily: 'inherit'\n        }\n    };\n    xAxis: Object = {\n        labels: ['2007', '2008', '2009', '2010', '2011',\n            '2012', '2013', '2014', '2015', '2016', '2017'],\n        textStyle: {\n            fontFamily: 'inherit'\n        }\n    };\n    yAxis: Object = {\n        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May',\n            'Jun', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'],\n        textStyle: {\n            fontFamily: 'inherit'\n        }\n    };\n    public cellSettings: Object = {\n        border: {\n            width: '0',\n            color: 'white'\n        },\n        showLabel: true,\n        textStyle: {\n            fontFamily: 'inherit'\n        }\n    };\n    public paletteSettings: Object = {\n        palette: [{ color: 'rgb(172, 213, 242)' },\n        { color: 'rgb(127, 168, 201)' },\n        { color: 'rgb(82, 123, 160)' },\n        { color: 'rgb(37, 78, 119)' },\n        ],\n        type: 'Gradient'\n    };\n    public legendSettings: Object = {\n        position: 'Bottom',\n        width: '250px',\n        showLabel: true,\n        textStyle: {\n            fontFamily: 'inherit'\n        }\n    };\n    public tooltipSettings: Object = {\n        textStyle: {\n            fontFamily: 'inherit'\n        }\n    };\n    dataSource: Object = new SampleDataSource().emptyPointDataSource;\n    public tooltipRender(args: ITooltipEventArgs): void {\n        args.content = [args.yLabel + ' | ' + args.xLabel + ' : ' + args.value + ' defective units'];\n    };\n    public load(args: ILoadedEventArgs): void {\n        // custom code start\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.heatmap.theme = <HeatMapTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n        // custom code end\n    };\n    constructor() {\n        //code\n    };\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<main>\n    <div class=\"control-section\">\n        <div>\n            <ejs-heatmap id='container' style=\"display:block;\" [titleSettings]='titleSettings' [dataSource]='dataSource' [xAxis]='xAxis'\n                [yAxis]='yAxis' [paletteSettings]='paletteSettings' [cellSettings]='cellSettings' [tooltipSettings]='tooltipSettings' [legendSettings]='legendSettings'\n                (load)='load($event)' (tooltipRender)='tooltipRender($event)'>\n            </ejs-heatmap>\n        </div>\n    </div>\n    <section id=\"action-description\" aria-label=\"Description of HeatMap sample\">\n        <p>\n            This sample visualizes the number of defective product count per 1000 units coming out from a manufacturing unit.\n            Data points are enhanced with labels and tooltip. Some data points were not marked with any values which indicates there are no defective products and these data points are termed as empty points.\n        </p>\n    </section>\n    <section id=\"description\" aria-label=\"Description of the HeatMap features demonstrated in this sample\">\n        <p>\n            In this example, you can see how to render empty points in the Heatmap. The empty points or the points with no data\n            can be marked using <code>null</code> in the data source. You can also customize the background color of the\n            empty points by using the <a href=\"https://ej2.syncfusion.com/angular/documentation/api/heatmap/paletteSettingsModel/#emptypointcolor\" target='_blank'>emptyPointColor</a> property in <a href=\"https://ej2.syncfusion.com/angular/documentation/api/heatmap/paletteSettingsModel/\" target='_blank'>paletteSettings</a>.\n        </p>\n        <p>The tooltip is enabled in this example. To see the tooltip in action, hover the mouse over an item or tap an item on touch-enabled devices.</p>\n        <br>\n        <p><b>Injecting Module</b></p>\n        <p>\n            Heatmap component features are separated into discrete feature-based modules. To use a tooltip, inject the <a target=\"_blank\"\n            href=\"https://ej2.syncfusion.com/angular/documentation/heatmap-chart/tooltip\">Tooltip</a> module using the <code>Heatmap.Inject(Tooltip)</code> method, and to use a legend, inject the <a target=\"_blank\"\n            href=\"https://ej2.syncfusion.com/angular/documentation/heatmap-chart/legend\">Legend</a> module using the <code>Heatmap.Inject(Legend)</code> method.\n         </p>\n    </section>\n</main>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-heatmap\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-heatmap\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}