{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","multi-level-label-data.ts":"ï»¿export class SampleDataSource {\n  public multiLevelLabelData: Object = [\n    [52, 65, 67, 45, 37, 52,32, 76, 60, 64, 82, 91],\n    [68, 52, 63, 51, 30, 51,51, 81, 70, 60, 88, 80],\n    [60, 50, 42, 53, 66, 70,41, 69, 76, 74, 86, 97],\n    [66, 64, 46, 40, 47, 41, 45, 76, 83, 69, 92,84],\n    [65, 42, 58, 32, 36, 44,49, 79, 83, 69, 83, 93],\n    [54, 46, 61, 46, 40, 39,41, 69, 61, 84, 84, 87],\n    [48, 46, 61, 47, 49, 41,41, 67, 78, 83, 98, 87],\n    [69, 52, 41, 44, 41, 52,46, 71, 63, 84, 83, 91],\n    [50, 59, 44, 43, 27, 42,26, 64, 76, 65, 81, 86],\n    [47, 49, 66, 53, 50, 34,31, 79, 78, 79, 89, 95],\n    [61, 40, 62, 26, 34, 54,56, 74, 83, 78, 95, 98]\n   ];\n}","app.component.ts":"import { Component, ViewEncapsulation } from '@angular/core';\nimport { HeatMap, Tooltip, ILoadedEventArgs, ICellEventArgs, ITooltipEventArgs, HeatMapTheme, HeatMapModule } from '@syncfusion/ej2-angular-heatmap';\nimport { SampleDataSource } from './multi-level-label-data';\n\n\nHeatMap.Inject(Tooltip);\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [HeatMapModule,  ]\n})\nexport class AppComponent {\n\n    titleSettings: Object = {\n        text: 'Product wise Monthly sales revenue for a e-commerce website',\n        textStyle: {\n            size: '15px',\n            fontWeight: '500',\n            fontStyle: 'Normal',\n            fontFamily: 'inherit'\n        }\n    };\n    xAxis: Object = {\n        labels: ['Laptop', 'Mobile', 'Gaming', 'Cosmetics', 'Fragrance', 'Watches', 'Handbags', 'Apparel',\n        'Kitchenware', 'Furniture', 'Home Decor'],\n    border: {\n        width: 1,\n        type: 'Rectangle',\n        color: '#a19d9d'\n    },\n    textStyle: {\n        fontFamily: 'inherit'\n\n    },\n    multiLevelLabels: [\n        {\n            border: { type: 'Rectangle', color: '#a19d9d' },\n            textStyle: {\n                fontWeight: 'Bold',\n                fontFamily: 'inherit'\n            },\n            categories: [\n                { start: 0, end: 2, text: 'Electronics', },\n                { start: 3, end: 4, text: 'Beauty and personal care', },\n                { start: 5, end: 7, text: 'Fashion', },\n                { start: 8, end: 10, text: 'Household', },\n            ]\n        },\n    ]\n    };\n    yAxis: Object = {\n        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        border: {\n            width: 0\n        },\n        textStyle: {\n            fontFamily: 'inherit'\n        },\n        isInversed: true,\n        multiLevelLabels: [\n            {\n                border: { type: 'Brace', color: '#a19d9d' },\n                textStyle: {\n                    fontWeight: 'Bold',\n                    fontFamily: 'inherit'\n                },\n                categories: [\n                    { start: 0, end: 2, text: 'Q1' },\n                    { start: 3, end: 5, text: 'Q2' },\n                    { start: 6, end: 8, text: 'Q3' },\n                    { start: 9, end: 11, text: 'Q4' }\n                ]\n            },\n        ]\n    };\n    public cellSettings: Object = {\n        border: {\n            width: 0\n        },\n        textStyle: {\n            fontFamily: 'inherit'\n        }\n    };\n    public tooltipSettings: Object = {\n        textStyle: {\n            fontFamily: 'inherit'\n        }\n    };\n    public paletteSettings: Object = {\n        palette: [{ color: '#F0ADCE' },\n        { color: '#19307B' }\n        ]\n    };\n    public legendSettings: Object = {\n        visible: false\n    };\n    dataSource: Object = new SampleDataSource().multiLevelLabelData;\n\n    public cellRender(args: ICellEventArgs): void {\n        args.displayText = '$ ' + (args.value as number / 10) + 'K'; \n    };\n    public tooltipRender(args: ITooltipEventArgs): void {\n        args.content = [args.xLabel + ' | ' + args.yLabel + ' : $ ' + (args.value as number / 10) + 'K']; \n    };\n    public load(args: ILoadedEventArgs): void {\n        // custom code start\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.heatmap.theme = <HeatMapTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n        // custom code end\n        if(selectedTheme === 'highcontrast' || args.heatmap.theme === 'Bootstrap5Dark' || selectedTheme === 'bootstrap5-dark' || selectedTheme === 'fluent2-highcontrast' || selectedTheme === 'material-dark' || selectedTheme === 'fabric-dark' || selectedTheme === 'bootstrap-dark' || selectedTheme === 'tailwind3-dark' || selectedTheme === 'material3-dark' || selectedTheme === 'fluent-dark' || selectedTheme === 'fluent2-dark')\n        {\n            args.heatmap.xAxis.textStyle.color = 'White';\n            args.heatmap.yAxis.textStyle.color = 'White';\n            args.heatmap.xAxis.multiLevelLabels[0].textStyle.color = 'White';\n            args.heatmap.yAxis.multiLevelLabels[0].textStyle.color = 'White';\n        }\n        else\n        {\n            args.heatmap.xAxis.textStyle.color = 'Black';\n            args.heatmap.yAxis.textStyle.color = 'Black';\n            args.heatmap.xAxis.multiLevelLabels[0].textStyle.color = 'Black';\n            args.heatmap.yAxis.multiLevelLabels[0].textStyle.color = 'Black';\n        }\n    };\n    constructor() {\n        //code\n    };\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<main>\n    <div class=\"content-wrapper\">\n        <ejs-heatmap id='container' #heatmap style=\"display:block;\" [titleSettings]='titleSettings' [dataSource]='dataSource' [xAxis]='xAxis'\n                [yAxis]='yAxis' [cellSettings]='cellSettings' [paletteSettings]='paletteSettings' [legendSettings]='legendSettings' \n                (load)='load($event)'  (tooltipRender)='tooltipRender($event)' (cellRender)='cellRender($event)'>\n            </ejs-heatmap>\n    </div>\n    <section id=\"action-description\" aria-label=\"Description of HeatMap sample\">\n        <p>\n            This sample visualizes the product wise monthly sales revenue of the items sold by an online retailer in a year.  The products are grouped based on the purchase domains and revenue is displayed as cell data.\n        </p>\n    </section>\n    <section id=\"description\" aria-label=\"Description of the HeatMap features demonstrated in this sample\">\n        <p>\n            In this example, you can see how to group axis labels. \n            You can customize text in each level by using <a href=\"https://ej2.syncfusion.com/angular/documentation/api/heatmap/multiLevelLabelsModel/#alignment\" target=\"_blank\">alignment</a>, <a href=\"https://ej2.syncfusion.com/angular/documentation/api/heatmap/multiLevelLabelsModel/#textstyle\" target=\"_blank\">textStyle</a> and <a href=\"https://ej2.syncfusion.com/angular/documentation/api/heatmap/multiLevelLabelsModel/#border\" target=\"_blank\">border</a> properties.\n        </p>\n        <p>Border of the axis labels can be customized by using <a href=\"https://ej2.syncfusion.com/angular/documentation/api/heatmap/axisLabelBorderModel/#type\" target=\"_blank\">type</a> property.\n        </p>\n        <ul>\n            <li><code>Rectangle</code></li>\n            <li><code>Brace</code></li>\n            <li><code>WithoutTopBorder</code></li>\n            <li><code>WithoutBottomBorder</code></li>\n            <li><code>WithoutTopandBottomBorder</code></li>\n            <li><code>WithoutBorder</code>.</li>\n        </ul>\n        <br>\n        <p><b>Injecting Module</b></p>\n        <p>\n            Heatmap component features are separated into discrete feature-based modules. To use a tooltip, inject the <a href=\"https://ej2.syncfusion.com/angular/documentation/heatmap-chart/tooltip\" target='_blank'>Tooltip</a> module using the <code>Heatmap.Inject(Tooltip)</code> method.\n           </p>\n    </section>\n</main>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-heatmap\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-heatmap\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}