{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","render-mode-data.ts":"ï»¿export class SampleDataSource {\n    public renderModeData: Object = [\n    [7.6, 5.9, -3.7, 2.2, 8.9, 6.0, 14.2, 6.1, -3.2, 4.2],\n    [3.9, 1.9, 2.6, 14.2, 2.3, 3.5, -2.8, 2.7, 4.2, 3.9],\n    [9.2, 3.4, 5.2, 14.5, 1.0, -5.9, -0.2, -1.7, -3.3, 4.6],\n    [-2.3, 7.2, -3.2, 15.1, 2.7, 2.9, 3.9, -1.2, 8.2, 6.0],\n    [-1.8, 5.0, -3.5, 3.2, 2.5, -1.8, 14.7, 3.0, 8.8, -3.3],\n    [-2.5, 3.4, 4.2, -1.9, 7.5, 4.6, 2.4, 10.9, 8.0, -3.0],\n    [7.1, 2.5, 7.9, 7.4, 15.2, 7.0, 5.8, -2.3, -3.9, -4.1],\n    [4.7, 3.3, 14.3, 5.5, 3.0, -3.5, -5.3, -6.8, -2.3, 5.7],\n    [2.2, 13.8, 3.0, -2.2, 3.8, 14.2, 3.7, 4.0, -4.9, 7.8],\n    [4.3, 15.3, 3.1, 1.7, 4.2, -3.6, 2.3, -3.2, 10.7, 2.3],\n    [-2.3, 3.4, 6.1, -1.3, 13.3, 3.7, -1.7, 8.2, 7.6, 4.1]\n];\n}","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { HeatMap, Legend, Tooltip, Adaptor, ILoadedEventArgs, HeatMapTheme, HeatMapModule } from '@syncfusion/ej2-angular-heatmap';\nimport { SampleDataSource } from './render-mode-data';\nimport { RadioButton } from '@syncfusion/ej2-buttons';\n\n\nHeatMap.Inject(Tooltip, Legend, Adaptor);\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [HeatMapModule,  ]\n})\nexport class AppComponent {\n    @ViewChild('heatmap')\n    public heatmap: HeatMap;\n    titleSettings: Object = {\n        text: 'Net Migration Rate of Northern Europe From 1965 to 2015',\n        textStyle: {\n            size: '15px',\n            fontWeight: '500',\n            fontStyle: 'Normal',\n            fontFamily: 'inherit'\n        }\n    };\n    xAxis: Object = {\n        labels: ['Channel Isl', 'Denmark', 'Estonia', 'Finland',\n            'Iceland', 'Ireland', 'Latvia', 'Lithuania', 'Norway', 'Sweden', 'UK'],\n        labelRotation: -90,\n        labelIntersectAction: 'None',\n        textStyle: {\n            fontFamily: 'inherit'\n        }\n    };\n    yAxis: Object = {\n        labels: ['1965-1970', '1970-1975', '1975-1980', '1980-1985', '1985-1990',\n            '1990-1995', '1995-2000', '2000-2005', '2005-2010', '2010-2015'],\n        textStyle: {\n            fontFamily: 'inherit'\n        }\n    };\n    dataSource: Object = new SampleDataSource().renderModeData;\n    public paletteSettings: Object = {\n        palette: [{ color: '#C06C84' },\n        { color: '#355C7D' }\n        ],\n    };\n    renderingMode: string = 'SVG';\n    public cellSettings: Object = {\n        border: {\n            width: 0\n        },\n        showLabel: false,\n        format: '{value} %'\n    };\n    public legendSettings: Object = {\n        position: 'Bottom',\n        width: '200px',\n        textStyle: {\n            fontFamily: 'inherit'\n        }\n    };\n    public tooltipSettings: Object = {\n        textStyle: {\n            fontFamily: 'inherit'\n        }\n    };\n    public load(args: ILoadedEventArgs): void {\n        // custom code start\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.heatmap.theme = <HeatMapTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n        // custom code end\n    };\n    ngAfterViewInit() {\n\n        let svgRadioButton: RadioButton = new RadioButton({\n            label: 'SVG', name: 'renderingmode',\n            change: () => { debugger; this.heatmap.renderingMode = svgRadioButton.checked ? 'SVG' : 'Canvas'; },\n            value: 'SVG', checked: true\n        });\n        svgRadioButton.appendTo('#svg');\n\n        let canvasradioButton: RadioButton = new RadioButton({\n            label: 'Canvas', name: 'renderingmode',\n            change: () => { this.heatmap.renderingMode = svgRadioButton.checked ? 'SVG' : 'Canvas'; },\n            value: 'Canvas'\n        });\n        canvasradioButton.appendTo('#canvas');\n    }\n    constructor() {\n        //code\n    };\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<main>\n    <div class=\"content-wrapper\">\n        <div class=\"col-lg-9\">\n            <ejs-heatmap id='container' #heatmap style=\"display:block;\" [titleSettings]='titleSettings' [dataSource]='dataSource' [xAxis]='xAxis'\n                [yAxis]='yAxis' [cellSettings]='cellSettings' [tooltipSettings]='tooltipSettings' [legendSettings]='legendSettings' [renderingMode]='renderingMode' [paletteSettings]='paletteSettings'\n                (load)='load($event)'>\n            </ejs-heatmap>\n        </div>\n    </div>\n    <div class=\"col-md-3 property-section\">\n        <div class=\"property-panel-section\">\n            <div class=\"property-panel-header\">Properties</div>\n            <div class=\"property-panel-content\">\n                <table id=\"property\" title=\"Properties\" style=\"width: 100%\" role=\"none\">\n                    <tbody>\n                        <tr style=\"height: 50px\">\n                            <td style=\"width: 60%\">\n                                <div>RenderMode:</div>\n                            </td>\n                            <td style=\"width: 40%;\">\n                                <div class=\"row\" style=\"padding-top: 10px;\">\n                                    <input id=\"svg\" type=\"radio\" aria-label=\"SVG render mode\">\n                                </div>\n                                <div class=\"row\" style=\"padding-top: 10px;\">\n                                    <input id=\"canvas\" aria-label=\"Canvas render mode\" type=\"radio\">\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n    <section id=\"action-description\" aria-label=\"Description of HeatMap sample\">\n        <p>\n            This sample visualizes the net migration rate for the northern European countries over the years. The data label is disabled in this sample, the tooltip displays the data point values.  In property panel, the options are available to change the rendering mode between Canvas and SVG means of radio button.\n        </p>\n    </section>\n    <section id=\"description\" aria-label=\"Description of the HeatMap features demonstrated in this sample\">\n        <p>\n            In this example, you can see how to change the rendering mode between <code>Canvas</code> and <code>SVG</code> types in Heatmap. You can change the rendering mode using the <a href=\"https://ej2.syncfusion.com/angular/documentation/heatmap-chart/rendering-mode\" target=\"_blank\">renderingMode</a> property.\n        </p>\n        <p>The tooltip is enabled in this example. To see the tooltip in action, hover the mouse over an item or tap an item on touch-enabled devices.</p>\n        <br>\n        <p><b>Injecting Module</b></p>\n        <p>\n           Heatmap component features are separated into discrete feature-based modules. To use the tooltip, inject the <a href=\"https://ej2.syncfusion.com/angular/documentation/heatmap-chart/tooltip\" target='_blank'>Tooltip</a> module using the <code>Heatmap.Inject(Tooltip)</code> method and to use a legend, inject the <a href=\"https://ej2.syncfusion.com/angular/documentation/heatmap-chart/legend\" target='_blank'>Legend</a> module using the <code>Heatmap.Inject(Legend)</code> method.\n        </p>\n    </section>\n</main>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-heatmap\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-heatmap\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}