{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","legend-sample-data.ts":"export class SampleDataSource {\n    public legendSampleData: Object = [\n        [10, 8, 7, 7, 10, 14, 17, 18, 18, 17, 16, 15],\n        [10, 8, 7, 6, 8, 13, 15, 17, 17, 17, 15, 12],\n        [12, 10, 8, 7, 7, 10, 15, 18, 20, 21, 20, 17],\n        [11, 9, 8, 7, 7, 12, 16, 18, 19, 19, 17, 15],\n        [15, 15, 15, 15, 16, 20, 22, 21, 21, 21, 19, 18],\n        [13, 13, 12, 12, 12, 15, 18, 21, 22, 21, 19, 16],\n        [11, 10, 9, 9, 10, 12, 14, 16, 17, 17, 16, 14]\n    ];\n}","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { HeatMap, Legend, Tooltip, Adaptor, ILoadedEventArgs, ITooltipEventArgs, HeatMapTheme, HeatMapModule } from '@syncfusion/ej2-angular-heatmap';\nimport { SampleDataSource } from './legend-sample-data';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { CheckBox } from '@syncfusion/ej2-buttons';\n\n\nHeatMap.Inject(Tooltip, Legend, Adaptor);\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [HeatMapModule,  ]\n})\nexport class AppComponent {\n    @ViewChild('heatmap')\n    public heatmap: HeatMap;\n    titleSettings: Object = {\n        text: 'Hourly Weather Forecast',\n        textStyle: {\n            size: '15px',\n            fontWeight: '500',\n            fontStyle: 'Normal',\n            fontFamily: 'inherit'\n        }\n    };\n    xAxis: Object = {\n        labels: ['London', 'Berlin', 'Madrid', 'Paris', 'Rome', 'Lisbon', 'Dublin'],\n        textStyle: {\n            fontFamily: 'inherit'\n        }\n    };\n    yAxis: Object = {\n        labels: ['12AM', '2AM', '4AM', '6AM', '8AM', '10AM', '12PM',\n            '2PM', '4PM', '6PM', '8PM', '10PM'],\n        textStyle: {\n            fontFamily: 'inherit'\n        }\n    };\n    public cellSettings: Object = {\n        showLabel: false,\n        format: '{value} C'\n    };\n    dataSource: Object = new SampleDataSource().legendSampleData;\n    public paletteSettings: Object = {\n        palette: [{ value: 0, color: '#6EB5D0' },\n        { value: 10, color: '#7EDCA2' },\n        { value: 19, color: '#DCD57E' },\n        { value: 22, color: '#DCD57E' },\n        ]\n    };\n    public legendSettings: Object = {\n        position: 'Bottom',\n        labelFormat: '{value}\\xB0 C',\n        textStyle: {\n            fontFamily: 'inherit'\n        },\n        title: {\n            text :'Celsius',\n            textStyle: {\n                fontFamily: 'inherit'\n            }\n        }\n    };\n    public tooltipSettings: Object = {\n        textStyle: {\n            fontFamily: 'inherit'\n        }\n    };\n\tpublic tooltipRender(args: ITooltipEventArgs): void {\n        args.content = [args.xLabel + ' | ' + args.yLabel + ' : ' + args.value + '\\xB0 C'];\n    };\n    public load(args: ILoadedEventArgs): void {\n        // custom code start\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.heatmap.theme = <HeatMapTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n        // custom code end\n    };\n    ngAfterViewInit() {\n\n        let legentListObj: DropDownList = new DropDownList({\n            index: 3,\n            popupHeight: '200px',\n            change: () => {\n                this.heatmap.legendSettings.position = legentListObj.value.toString() === 'Right' ?\n                    'Right' : legentListObj.value.toString() === 'Bottom' ?\n                        'Bottom' : legentListObj.value.toString() === 'Left' ?\n                            'Left' : legentListObj.value.toString() === 'Top' ? 'Top' : null;\n            }\n        });\n        legentListObj.appendTo('#LegendPosition');\n    }\n    constructor() {\n        //code\n    };\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<main>\n    <div>\n        <div class=\"content-wrapper\">\n            <div class=\"col-lg-9\">\n                <ejs-heatmap id='container' #heatmap style=\"display:block;\" [titleSettings]='titleSettings' [dataSource]='dataSource' [xAxis]='xAxis'\n                    [yAxis]='yAxis' [cellSettings]='cellSettings' [paletteSettings]='paletteSettings' [legendSettings]='legendSettings' \n                    (load)='load($event)'  (tooltipRender)='tooltipRender($event)'>\n                </ejs-heatmap>\n            </div>\n        </div>\n    </div>\n        <div class=\"col-md-3 property-section\">\n            <div class=\"property-panel-section\">\n                <div class=\"property-panel-header\">Properties</div>\n                <div class=\"property-panel-content\">\n                    <table id=\"property\" title=\"Properties\" style=\"width: 100%\" role=\"none\">\n                        <tbody>\n                            <tr style=\"height: 50px\">\n                                <td style=\"width: 60%\">\n                                    <div>Position:</div>\n                                </td>\n                                <td style=\"width: 40%;\">\n                                    <div>\n                                        <select id=\"LegendPosition\"> \n                                    <option value=\"Left\">Left</option>\n                                    <option value=\"Right\">Right</option>\n                                    <option value=\"Top\">Top</option>\n                                    <option value=\"Bottom\">Bottom</option>\n                                </select>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n        <section id=\"action-description\" aria-label=\"Description of HeatMap sample\">\n            <p>\n               This sample visualizes the hourly weather forecast for some major European cities. The data label is disabled in this sample, the tooltip displays the data point values.  In property panel, the options are available to change the display position of the Heatmap legend axes by means of dropdown. \n            </p>\n        </section>\n        <section id=\"description\" aria-label=\"Description of the HeatMap features demonstrated in this sample\">\n            <p>\n                In this example, you can see how to change the display position of the Heatmap legend. You can change the display position\n                of legend to left, right, bottom and top by using the\n                <a href=\"https://ej2.syncfusion.com/angular/documentation/api/heatmap/legendSettingsModel/#position\" target=\"_blank\">position </a> property in\n                <a href=\"https://ej2.syncfusion.com/angular/documentation/api/heatmap/legendSettingsModel/\" target=\"_blank\">legendSettings</a>.\n            </p>\n            <p>The tooltip is enabled in this example. To see the tooltip in action, hover the mouse over an item or tap an item on touch-enabled devices.</p>\n            <br>\n            <p><b>Injecting Module</b></p>\n            <p>\n               Heatmap component features are separated into discrete feature-based modules. To use a tooltip, inject the <a href=\"https://ej2.syncfusion.com/angular/documentation/heatmap-chart/tooltip\" target='_blank'>Tooltip</a> module using the <code>Heatmap.Inject(Tooltip)</code> method and to use a legend, inject the <a href=\"https://ej2.syncfusion.com/angular/documentation/heatmap-chart/legend\" target='_blank'>Legend</a> module using the <code>Heatmap.Inject(Legend)</code> method.\n            </p>\n        </section>\n</main>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-heatmap\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-heatmap\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-angular-charts\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}