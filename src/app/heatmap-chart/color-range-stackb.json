{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","color-range-data.ts":"export class SampleDataSource {\n    public colorRangeSampleData: Object = [\n    [17.2, 24.6, 18.4, 9.6, 8.6, 18.8, 10.3, 5.0],\n    [15.8, 29.9, 15.2, 31.3, 18.1, 5.5, 10.2, 14.6],\n    [17.8, 25.5, 19.1, 12.9, 7.5, 30.7, 12.6, 5.6],\n    [7.3, 20.1, 18.8, 20.3, 6.1, 9.0, 29.8, 7.7],\n    [7.8, 30.5, 19.6, 10.8, 7.9, 15.5, 5.2, 14.3],\n    [5.8, 31.7, 17.8, 10.4, 17.3, 15.7, 9.1, 7.7],\n    [11.3, 29.1, 19.5, 11.5, 6.3, 12.9, 10.1, 6.7],\n    [13.7, 31.3, 15.3, 6.2, 7.7, 16.1, 18.9, 12.6],\n    [9.3, 29.9, 16.4, 14.5, 5.2, 12.3, 18.7, 7.3],\n    [16.3, 27.4, 27.0, 5.5, 16.2, 12.6, 8.3, 15.2],\n    [7.2, 20.1, 16.9, 9.0, 7.6, 16.2, 8.4, 29.0]\n];\n}","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { HeatMap, Legend, Tooltip, Adaptor, ILoadedEventArgs, HeatMapTheme, HeatMapModule } from '@syncfusion/ej2-angular-heatmap';\nimport { SampleDataSource } from './color-range-data';\nimport { RadioButton, CheckBox } from '@syncfusion/ej2-buttons';\n\n\nHeatMap.Inject(Tooltip, Legend, Adaptor);\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [HeatMapModule,  ]\n})\nexport class AppComponent {\n    @ViewChild('heatmap')\n    public heatmap: HeatMap;\n    titleSettings: Object = {\n        textStyle: {\n            size: '15px',\n            fontWeight: '500',\n            fontStyle: 'Normal',\n            fontFamily: 'inherit'\n        },\n        text: 'U.S. Government Energy Consumption By Agency (Trillion Btu)',\n    };\n    dataSource: Object = new SampleDataSource().colorRangeSampleData;\n    xAxis: Object = {\n        labels: ['2005', '2006', '2007', '2008', '2009', '2010',\n            '2011', '2012', '2013', '2014', '2015'],\n        labelRotation: 45,\n        labelIntersectAction: 'None',\n        textStyle: {\n            fontFamily: 'inherit'\n        }\n    };\n    yAxis: Object = {\n        labels: ['Agriculture', 'Energy', 'Administration', 'Health', 'Interior',\n            'Justice', 'NASA', 'Transportation'],\n        textStyle: {\n            fontFamily: 'inherit'\n        }\n    };\n    public paletteSettings: Object = {\n        palette: [\n            { startValue: 5, endValue: 15, minColor: '#FFFFDA', maxColor: '#EDF8B6' },\n            { startValue: 15, endValue: 20, minColor: '#CAE8B4', maxColor: '#78D1BD' },\n            { startValue: 20, endValue: 31.7, minColor: '#36BCC6', maxColor: '#208FC6' },\n        ],\n        type: 'Gradient'\n    };\n    public legendSettings: Object = {\n        textStyle: {\n             fontFamily: 'inherit'\n         }\n     };\n    public tooltipSettings: Object = {\n        textStyle: {\n            fontFamily: 'inherit'\n        }\n    };\n    public cellSettings: Object = {\n        border: { width: 0 },\n        showLabel: false\n    };\n    public load(args: ILoadedEventArgs): void {\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.heatmap.theme = <HeatMapTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n        if(args.heatmap.element.offsetWidth < 500)\n        {\n            args.heatmap.xAxis.labelRotation = 0;\n            args.heatmap.xAxis.labelIntersectAction = 'Trim';\n        } else {\n            args.heatmap.xAxis.labelRotation = 45;\n            args.heatmap.xAxis.labelIntersectAction = 'None';\n        }\n    };\n    ngAfterViewInit() {\n\n        let fixedRadioButton: RadioButton = new RadioButton({\n            label: 'Fixed', name: 'paletteType',\n            change: () => {\n                this.heatmap.paletteSettings.type = fixedRadioButton.checked ? 'Fixed' : 'Gradient'; },\n            value: 'Fixed'\n        });\n        fixedRadioButton.appendTo('#fixed');\n\n        let gradientradioButton: RadioButton = new RadioButton({\n            label: 'Gradient', name: 'paletteType',\n            change: () => {\n                this.heatmap.paletteSettings.type = fixedRadioButton.checked ? 'Fixed' : 'Gradient'; },\n            value: 'Gradient', checked: true\n        });\n        gradientradioButton.appendTo('#gradient');\n    }\n    constructor() {\n        //code\n    };\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<main>\n    <div class=\"content-wrapper\">\n        <div class=\"col-lg-9\">\n            <ejs-heatmap id='container' #heatmap style=\"display:block;\" [titleSettings]='titleSettings' [dataSource]='dataSource' [xAxis]='xAxis'\n                [yAxis]='yAxis' [cellSettings]='cellSettings' [legendSettings]='legendSettings' [tooltipSettings]='tooltipSettings' [paletteSettings]='paletteSettings'\n                (load)='load($event)'>\n            </ejs-heatmap>\n        </div>\n    </div>\n    <div class=\"col-md-3 property-section\">\n        <div class=\"property-panel-section\">\n            <div class=\"property-panel-header\">Properties</div>\n            <div class=\"property-panel-content\">\n                <table id=\"property\" title=\"Properties\" style=\"width: 100%\" role=\"none\">\n                    <tbody>\n                        <tr style=\"height: 50px\">\n                            <td style=\"width: 60%\">\n                                <div>PaletteType:</div>\n                            </td>\n                            <td style=\"width: 40%;\">\n                                <div style=\"padding-top: 10px;\">\n                                    <input id=\"fixed\" type=\"radio\">\n                                </div>\n                                <div style=\"padding-top: 10px;\">\n                                    <input id=\"gradient\" type=\"radio\">\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n    <section id=\"action-description\" aria-label=\"Description of HeatMap sample\">\n        <p>\n            This sample visualizes the energy consumption in trillion British thermal units (btu) by the various public sectors in US government over the years. The data label is disabled in this sample, the tooltip displays the data point values.  In property panel, the options are available to change palette type in Heatmap by means of radio button.\n        </p>\n    </section>\n    <section id=\"description\" aria-label=\"Description of the HeatMap features demonstrated in this sample\">\n        <p>\n            This example explains how to provide a specific color for specific range in heatmap. The <a href=\"https://ej2.syncfusion.com/angular/documentation/api/heatmap/paletteCollectionModel/#startvalue\" target=\"_blank\"> startValue </a> and <a href=\"https://ej2.syncfusion.com/angular/documentation/api/heatmap/paletteCollectionModel/#endvalue\" target=\"_blank\"> endValue </a> properties are used to define the range start and end values. The <a href=\"https://ej2.syncfusion.com/angular/documentation/api/heatmap/paletteCollectionModel/#mincolor\" target=\"_blank\"> minColor </a> and <a href=\"https://ej2.syncfusion.com/angular/documentation/api/heatmap/paletteCollectionModel/#maxcolor\" target=\"_blank\"> maxColor </a> properties represent the colors of given range.\n        </p>\n        <p>The tooltip is enabled in this example. To see the tooltip in action, hover the mouse over an item or tap an item on touch-enabled devices.</p>\n        <br>\n        <p><b>Injecting Module</b></p>\n        <br>\n        <p>\n            Heatmap component features are separated into discrete feature-based modules. To use a tooltip, inject the <a target=\"_blank\"\n            href=\"https://ej2.syncfusion.com/angular/documentation/heatmap-chart/tooltip\">Tooltip</a> module using the Heatmap.Inject(Tooltip) method, and to use a legend, inject the <a target=\"_blank\"\n            href=\"https://ej2.syncfusion.com/angular/documentation/heatmap-chart/legend\">Legend</a> module using the Heatmap.Inject(Legend) method.\n         </p> \n    </section>\n</main>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-heatmap\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-heatmap\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}