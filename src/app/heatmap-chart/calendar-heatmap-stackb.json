{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","calendar-data-source.ts":"export class SampleDataSource {\n    public calendarDataSource:  Object= [[null, null, null, null, 16, 48, 0],\n    [0, 15, 0, 24, 0, 39, 0],\n    [0, 18, 37, 0, 0, 50, 0],\n    [0, 10, 0, 0, 44, 5, 0],\n    [0, 36, 0, 45, 20, 18, 0],\n    [0, 28, 1, 42, 0, 10, 0],\n    [0, 16, 32, 0, 1, 25, 0],\n    [0, 31, 2, 9, 24, 0, 0],\n    [0, 8, 47, 0, 0, 35, 0],\n    [0, 31, 0, 0, 0, 40, 0],\n    [0, 8, 0, 27, 0, 35, 0],\n    [0, 12, 9, 45, 0, 8, 0],\n    [0, 0, 13, 0, 22, 10, 0],\n    [0, 16, 32, 0, 1, 25, 0],\n    [0, 31, 2, 9, 24, 0, 0],\n    [0, 8, 47, 27, 0, 35, 0],\n    [0, 28, 14, 10, 0, 0, 0],\n    [0, 36, 0, 45, 20, 18, 0],\n    [0, 28, 1, 42, 0, 10, 0],\n    [0, 31, 0, 24, 0, 40, 0],\n    [0, 8, 47, 27, 0, 35, 0],\n    [0, 36, 0, 45, 20, 18, 0],\n    [0, 28, 1, 42, 0, 10, 0],\n    [0, 31, 0, 24, 0, 40, 0],\n    [0, 16, 32, 0, 1, 25, 0],\n    [0, 31, 2, 9, 24, 0, 0],\n    [0, 8, 47, 27, 0, 35, 0],\n    [0, 10, 0, 36, 23, 19, 0],\n    [0, 18, 37, 23, 0, 50, 0],\n    [0, 28, 14, 10, 0, 0, 0],\n    [0, 18, 37, 23, 0, 50, 0],\n    [0, 18, 37, 23, 0, 50, 0],\n    [0, 28, 14, 10, 0, 0, 0],\n    [0, 31, 2, 9, 24, 0, 0],\n    [0, 8, 47, 27, 0, 35, 0],\n    [0, 10, 2, 0, 44, 5, 0],\n    [0, 36, 0, 45, 20, 18, 0],\n    [0, 28, 1, 42, 0, 10, 0],\n    [0, 31, 0, 24, 0, 40, 1],\n    [0, 16, 32, 0, 1, 25, 0],\n    [0, 31, 2, 9, 24, 0, 0],\n    [0, 8, 47, 27, 0, 35, 0],\n    [0, 10, 2, 0, 44, 5, 0],\n    [0, 12, 9, 45, 0, 8, 0],\n    [0, 0, 13, 35, 22, 10, 0],\n    [0, 28, 14, 10, 0, 0, 0],\n    [0, 36, 0, 45, 20, 18, 2],\n    [0, 28, 1, 42, 0, 10, 0],\n    [0, 31, 0, 24, 0, 40, 1],\n    [0, 8, 47, 27, 0, 35, 0],\n    [0, 10, 2, 0, 44, 5, 0],\n    [0, 31, 2, 9, 24, 0, 1],\n    [0, 8, 47, 27, 0, 35, 40],\n    [0, 10, 2, 0, 44, 5, null]\n    ];\n}","app.component.ts":"import { Component, ViewEncapsulation } from '@angular/core';\nimport { HeatMap, Legend, Tooltip, ILoadedEventArgs, ITooltipEventArgs, HeatMapTheme, HeatMapModule } from '@syncfusion/ej2-angular-heatmap';\nimport { SampleDataSource } from './calendar-data-source';\nimport { Internationalization } from '@syncfusion/ej2-base';\n\n\nHeatMap.Inject(Tooltip, Legend);\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [HeatMapModule,  ]\n})\nexport class AppComponent {\n    public height: String = '300px';\n    titleSettings: Object = {\n        text: 'Annual Summary of User Activities in GitLab',\n        textStyle: {\n            size: '15px',\n            fontWeight: '500',\n            fontStyle: 'Normal',\n            fontFamily: 'inherit'\n        }\n    };\n    xAxis: Object = {\n        opposedPosition: true,\n        valueType: 'DateTime',\n        minimum: new Date(2017, 6, 23),\n        maximum: new Date(2018, 6, 30),\n        intervalType: 'Days',\n        showLabelOn: 'Months',\n        labelFormat: 'MMM',\n        increment: 7,\n        labelIntersectAction: 'Rotate45',\n        textStyle: {\n            fontFamily: 'inherit'\n        }\n    };\n    yAxis: Object = {\n        labels: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        isInversed: true,\n        textStyle: {\n            fontFamily: 'inherit'\n        }\n    };\n    public cellSettings: Object = {\n        showLabel: false,\n        border: {\n            color: 'white'\n        }\n    };\n    public paletteSettings: Object = {\n        palette: [{ value: 0, color: 'rgb(238,238,238)', label: 'no contributions' },\n        { value: 1, color: 'rgb(172, 213, 242)', label: '1-15 contributions' },\n        { value: 16, color: 'rgb(127, 168, 201)', label: '16-31 contributions' },\n        { value: 32, color: 'rgb(82, 123, 160)', label: '31-49 contributions' },\n        { value: 50, color: 'rgb(37, 78, 119)', label: '50+ contributions' },\n        ],\n        type: 'Fixed',\n        emptyPointColor: 'white'\n    };\n    public legendSettings: Object = {\n        position: 'Bottom',\n        width: '20%',\n        alignment: 'Near',\n        showLabel: true,\n        labelDisplayType: 'None',\n        enableSmartLegend: true,\n        textStyle: {\n            fontFamily: 'inherit'\n        }\n    };\n    public tooltipSettings: Object = {\n        textStyle: {\n             fontFamily: 'inherit'\n         }\n     };\n    dataSource: Object = new SampleDataSource().calendarDataSource;\n    public tooltipRender(args: ITooltipEventArgs): void {\n        let intl: Internationalization = new Internationalization();\n        let format: Function = intl.getDateFormat({ format: 'EEE MMM dd, yyyy' });\n        let newDate: Date = <Date>args.xValue;\n        let date: Date = new Date(newDate.getTime());\n        let axisLabel: string[] = args.heatmap.axisCollections[1].axisLabels;\n        let index: number = axisLabel.indexOf(args.yLabel);\n        (date).setDate((date).getDate() + index);\n        let value: string = format(date);\n        args.content = [(args.value === 0 ? 'No' : args.value) + ' ' + 'contributions' + '<br>' + value];\n    };\n    public load(args: ILoadedEventArgs): void {\n        // custom code start\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.heatmap.theme = <HeatMapTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');\n        // custom code end\n        if (args.heatmap.theme === 'HighContrast' || args.heatmap.theme.indexOf(\"Dark\") > -1) {\n            args.heatmap.cellSettings.border.color ='black';\n        }\n    };\n    constructor() {\n        //code\n    };\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<main>\n    <div class=\"control-section\">\n        <div>\n            <ejs-heatmap id='container' style=\"display:block;\" [height]='height' [titleSettings]='titleSettings' [dataSource]='dataSource' [xAxis]='xAxis'\n                [yAxis]='yAxis' [paletteSettings]='paletteSettings' [cellSettings]='cellSettings' [tooltipSettings]='tooltipSettings' [legendSettings]='legendSettings'\n                (load)='load($event)' (tooltipRender)='tooltipRender($event)'>\n            </ejs-heatmap>\n        </div>\n    </div>\n    <section id=\"action-description\" aria-label=\"Description of HeatMap sample\">\n        <p> This sample visualizes the summary of user activities in the GitLab account such as merge requests, push events, and comments across 52 weeks in a year.</p>\n    </section>\n    <section id=\"description\" aria-label=\"Description of the HeatMap features demonstrated in this sample\">\n        <p>\n            In this example, you can see how to display a calendar data using heatmap. You can make the axis labels to display at specific time intervals along the datetime axis using the showLabelOn property.  \n        </p>\n        <p>The tooltip is enabled in this example. To see the tooltip in action, hover the mouse over an item or tap an item on touch-enabled devices.</p>\n        <br>\n        <p><b>Injecting Module</b></p>\n        <p>\n            Heatmap component features are separated into discrete feature-based modules. To use a tooltip, inject the <a target=\"_blank\"\n            href=\"https://ej2.syncfusion.com/angular/documentation/heatmap-chart/tooltip\">Tooltip</a> module using the <code>Heatmap.Inject(Tooltip)</code> method, and to use a legend, inject the <a target=\"_blank\"\n            href=\"https://ej2.syncfusion.com/angular/documentation/heatmap-chart/legend\">Legend</a> module using the <code>Heatmap.Inject(Legend)</code> method.\n         </p>\n      </section>\n</main>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-heatmap\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-heatmap\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}