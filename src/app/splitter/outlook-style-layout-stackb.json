{"dependencies.json":"{\"@syncfusion/ej2-base\": \"*\", \"@syncfusion/ej2-buttons\": \"*\", \"@syncfusion/ej2-splitbuttons\": \"*\", \"@syncfusion/ej2-calendars\": \"*\", \"@syncfusion/ej2-charts\": \"*\", \"@syncfusion/ej2-diagrams\": \"*\", \"@syncfusion/ej2-maps\": \"*\", \"@syncfusion/ej2-treemap\": \"*\", \"@syncfusion/ej2-circulargauge\": \"*\", \"@syncfusion/ej2-data\": \"*\", \"@syncfusion/ej2-dropdowns\": \"*\", \"@syncfusion/ej2-grids\": \"*\", \"@syncfusion/ej2-inputs\": \"*\", \"@syncfusion/ej2-lists\": \"*\", \"@syncfusion/ej2-navigations\": \"*\", \"@syncfusion/ej2-popups\": \"*\", \"@syncfusion/ej2-lineargauge\": \"*\", \"@syncfusion/ej2-pdf-export\": \"*\", \"@syncfusion/ej2-compression\": \"*\", \"@syncfusion/ej2-excel-export\": \"*\", \"@syncfusion/ej2-file-utils\": \"*\", \"@syncfusion/ej2-svg-base\": \"*\", \"@syncfusion/ej2-documenteditor\": \"*\", \"@syncfusion/ej2-richtexteditor\": \"*\", \"@syncfusion/ej2-notifications\": \"*\", \"@syncfusion/ej2-heatmap\": \"*\", \"@syncfusion/ej2-pivotview\": \"*\", \"@syncfusion/ej2-schedule\": \"*\", \"@syncfusion/ej2-layouts\": \"*\", \"@syncfusion/ej2-angular-base\": \"*\", \"@syncfusion/ej2-angular-buttons\": \"*\", \"@syncfusion/ej2-angular-splitbuttons\": \"*\", \"@syncfusion/ej2-angular-calendars\": \"*\", \"@syncfusion/ej2-angular-charts\": \"*\", \"@syncfusion/ej2-angular-diagrams\": \"*\", \"@syncfusion/ej2-angular-maps\": \"*\", \"@syncfusion/ej2-angular-treemap\": \"*\", \"@syncfusion/ej2-angular-circulargauge\": \"*\", \"@syncfusion/ej2-angular-dropdowns\": \"*\", \"@syncfusion/ej2-angular-grids\": \"*\", \"@syncfusion/ej2-angular-inputs\": \"*\", \"@syncfusion/ej2-angular-lists\": \"*\", \"@syncfusion/ej2-angular-navigations\": \"*\", \"@syncfusion/ej2-angular-popups\": \"*\", \"@syncfusion/ej2-angular-lineargauge\": \"*\", \"@syncfusion/ej2-angular-documenteditor\": \"*\", \"@syncfusion/ej2-angular-richtexteditor\": \"*\", \"@syncfusion/ej2-angular-notifications\": \"*\", \"@syncfusion/ej2-angular-heatmap\": \"*\", \"@syncfusion/ej2-angular-pivotview\": \"*\", \"@syncfusion/ej2-angular-schedule\": \"*\", \"@syncfusion/ej2-angular-layouts\": \"*\" , \"@angular/http\": \"*\", \"rxjs-compat\":\"*\"}","main.ts":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n","polyfills.ts":"/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol';\n// import 'core-js/es6/object';\n// import 'core-js/es6/function';\n// import 'core-js/es6/parse-int';\n// import 'core-js/es6/parse-float';\n// import 'core-js/es6/number';\n// import 'core-js/es6/math';\n// import 'core-js/es6/string';\n// import 'core-js/es6/date';\n// import 'core-js/es6/array';\n// import 'core-js/es6/regexp';\n// import 'core-js/es6/map';\n// import 'core-js/es6/weak-map';\n// import 'core-js/es6/set';\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect';\n\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\nimport 'core-js/es7/reflect';\n\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n **/\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n */\n\n // (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n // (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n // (window as any).__zone_symbol__BLACK_LISTED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n\n /*\n * in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n * with the following flag, it will bypass `zone.js` patch for IE/Edge\n */\n// (window as any).__Zone_enable_cross_context_check = true;\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n<link href=\"../styles/OpenNew.css\" rel=\"stylesheet\">\n  <link href=\"//cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\" />\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body class=\"ej2-new\"> \n\n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WLQL39J\"height=\"0\"width=\"0\"style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app/app.module.ts":"import { AccordionAllModule } from '@syncfusion/ej2-angular-navigations';\n\nimport { ListViewAllModule } from '@syncfusion/ej2-angular-lists';\n\nimport { TextBoxModule } from '@syncfusion/ej2-angular-inputs';\n\nimport { SplitterModule } from '@syncfusion/ej2-angular-layouts';\n\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from '../app.component';\n\n@NgModule({ declarations: [   AppComponent ], imports: [ SplitterModule, BrowserModule,CommonModule, TextBoxModule, ListViewAllModule, AccordionAllModule], providers: [], bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","app.component.html":"<div id=\"target\" class=\"control-section outlook-style\">\n    <ejs-splitter  id=\"splitter1\" #splitter1 height='493px' width='100%' (resizeStop) = 'onSplitterResize()'>\n        <e-panes>\n            <e-pane size='28%' min='27%'>\n                <ng-template #content>\n                    <div class=\"content\">\n                        <ejs-treeview id=\"template\" [fields]=\"field\">\n                            <!-- Template to render tree node -->\n                            <ng-template #nodeTemplate=\"\" let-data=\"\">\n                                <div>\n                                    <div class=\"treeviewdiv\">\n                                        <div style=\"float:left\">\n                                            <span class=\"treeName\">{{data.name}}</span>\n                                        </div>\n                                        <div style=\"margin-right: 5px; float:right\">\n                                            <span class=\"treeCount e-badge e-badge-primary\" *ngIf=\"data.count\">{{\n                                                data.count }}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </ng-template>\n                        </ejs-treeview>\n                    </div>\n                </ng-template>\n            </e-pane>\n            <e-pane size='33%' min='23%'>\n                <ng-template #content>\n                    <div class=\"content\">\n                        <ejs-listview [dataSource]='dataSource' cssClass='e-list-template'>\n                            <ng-template #template let-dataSource=\"\">\n                                <div class=\"settings e-list-wrapper e-list-multi-line e-list-avatar\">\n                                    <span class=\"e-list-item-header\">{{dataSource.Name}}</span>\n                                    <span class=\"e-list-content\">\n                                        <div>\n                                            <div class=\"status\">\n                                                {{dataSource.content}}</div>\n                                            <div id=\"list-message\">\n                                                {{dataSource.content2}}</div>\n                                        </div>\n                                    </span>\n                                </div>\n                            </ng-template>\n                        </ejs-listview>\n                        <div id=\"groupedList\" tabindex=\"1\"></div>\n                    </div>\n                </ng-template>\n            </e-pane>\n            <e-pane size='37%' min='30%'>\n                <ng-template #content>\n                    <div class=\"content\">\n                        <div style=\"width: 100%; padding: 15px;\">\n                            <table>\n                                <tr>\n                                    <td><button class=\"e-btn e-flat e-outline\">To...</button></td>\n                                    <td><ejs-textbox id=\"firstname\" ></ejs-textbox>\n                                </tr>\n                                <tr>\n                                    <td><button class=\"e-btn e-flat e-outline\">Cc...</button></td>\n                                    <td><ejs-textbox id=\"lastname\" ></ejs-textbox>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <div id=\"subject-text\">Subject</div>\n                                    </td>\n                                    <td><ejs-textbox id=\"subject\" ></ejs-textbox>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class=\"forum\">\n                            <div id=\"createpostholder\">\n                                <ejs-richtexteditor id='blogRTE' #blogRTE height= '262px'></ejs-richtexteditor>\n                                <div id='buttonSection'>\n                                    <button ejs-button [isPrimary]=\"true\" id=\"send\">Send</button>\n                                    <button ejs-button  id=\"discard\">Discard</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-template>\n            </e-pane>\n        </e-panes>\n    </ejs-splitter>\n</div>\n<!-- Template to render tree node -->\n<script id=\"treeTemplate\" type=\"text/x-template\">\n            <div>\n                <div class=\"treeviewdiv\">\n                    <div style=\"float:left\">\n                        <span class=\"treeName\">${name}</span>\n                    </div>\n                    ${if(count)}\n                        <div style=\"margin-right: 5px; float:right\">\n                            <span class=\"treeCount e-badge e-badge-primary\">${count}</span>\n                        </div>\n                    ${/if}\n                </div>\n            </div>\n        </script>\n<style>\n    .outlook-style #discard {\n        margin-left: 7px;\n    }\n    .outlook-style table {\n        width: 100%;\n    }\n    .outlook-style td {\n        padding: 2px;\n    }\n    .control-section{            \n        min-height: 370px;  \n    }\n    .e-treeview .e-list-text {\n        width: 100%;\n    }\n    #groupedList.e-listview .e-list-group-item {\n        height: 0;\n    }\n    #splitter1 .settings.e-list-wrapper.e-list-multi-line.e-list-avatar {\n        padding: 15px;\n    }\n    #buttonSection {\n        padding: 7px;\n    }\n    .outlook-style #createpostholder {\n        padding-left: 3px;\n        padding-right: 4px;\n    }\n\t\n\t#splitter1 #tree ul.e-list-parent.e-ul {\n\t\tpadding: 0 0 0 16px;\n\t}\n</style>\n\n<!-- custom code start -->\n<style>\n    .outlook-style#target {\n        margin: 20px auto;\n        max-width: 820px;\n    }\n</style>\n<!-- custom code end -->","app.component.css":"","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { SplitterComponent} from '@syncfusion/ej2-angular-layouts';\nimport { RichTextEditorComponent } from '@syncfusion/ej2-angular-richtexteditor';\n\n/**\n * Splitter outlook layout style\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n    @ViewChild('blogRTE') public rteObj: RichTextEditorComponent;\n    public localData: Object[] = [\n        { id: 1, name: 'Favorites', hasChild: true},\n        { id: 2, pid: 1, name: 'Sales Reports', count: '4' },\n        { id: 3, pid: 1, name: 'Sent Items'},\n        { id: 4, pid: 1, name: 'Marketing Reports ', count: '6'},\n        { id: 5, name: 'Andrew Fuller', hasChild: true, expanded: true },\n        { id: 6, pid: 5, name: 'Inbox',  selected: true , count: '20'},\n        { id: 7, pid: 5,  name: 'Drafts', count: '5'},\n        { id: 15, pid: 5, name: 'Archive'},\n        { id: 8, pid: 5,  name: 'Deleted Items'},\n        { id: 9, pid: 5, name: 'Sent Items'},\n        { id: 10, pid: 5, name: 'Sales Reports' , count: '4'},\n        { id: 11, pid: 5, name: 'Marketing Reports', count: '6' },\n        { id: 12, pid: 5, name: 'Outbox'},\n        { id: 13, pid: 5, name: 'Junk Email'},\n        { id: 14, pid: 5, name: 'RSS Feed'},\n        { id: 15, pid: 5, name: 'Trash' }\n    ];\n    public field: Object = { dataSource: this.localData, id: 'id', parentID: 'pid', text: 'name', hasChildren: 'hasChild' };\n    public dataSource: any = [\n        { Name: 'Selma Tally', content: 'Apology marketing email',content2:'Hello Ananya Singleton', id: '1', order: 0 },\n        { Name: 'Illa Russo', content: 'Annual conference', content2: 'Hi jeani Moresa', id: '4', order: 0 },\n        { Name: 'Camden Macmellon', content: 'Reference request- Camden hester', content2: 'Hello Kerry Best', order: 0 },\n        { Name: 'Garth Owen', content: 'Application for job Title', content2:'Hello Illa Russo', id: '2', order: 0 },\n        { Name: 'Ursula Patterson', content: 'Programmaer Position Applicant', content2: 'Hello Kerry best', id: '2', order: 0 }\n    ];\n\n    onSplitterResize(): void {\n        this.rteObj.refresh();\n    }\n}","data.ts":"/**\n * Datasource\n */\nlet panelData: any = [\n    {\n        'panel1': { 'sizeX': 4, 'sizeY': 3, 'row': 0, 'col': 0 },\n        'panel2': { 'sizeX': 2, 'sizeY': 3, 'row': 0, 'col': 4 },\n        'panel3': { 'sizeX': 6, 'sizeY': 2, 'row': 3, 'col': 0 }\n    },\n    {\n        'panel1': { 'sizeX': 6, 'sizeY': 1, 'row': 0, 'col': 0 },\n        'panel2': { 'sizeX': 2, 'sizeY': 3, 'row': 1, 'col': 0 },\n        'panel3': { 'sizeX': 4, 'sizeY': 3, 'row': 1, 'col': 2 },\n        'panel4': { 'sizeX': 6, 'sizeY': 1, 'row': 4, 'col': 0 }\n    },\n    {\n        'panel1': { 'sizeX': 6, 'sizeY': 1, 'row': 0, 'col': 0 },\n        'panel2': { 'sizeX': 3, 'sizeY': 3, 'row': 1, 'col': 0 },\n        'panel3': { 'sizeX': 3, 'sizeY': 3, 'row': 1, 'col': 3 },\n        'panel4': { 'sizeX': 6, 'sizeY': 1, 'row': 4, 'col': 0 }\n    },\n    {\n        'panel1': { 'sizeX': 6, 'sizeY': 1, 'row': 0, 'col': 0 },\n        'panel2': { 'sizeX': 2, 'sizeY': 3, 'row': 1, 'col': 0 },\n        'panel3': { 'sizeX': 2, 'sizeY': 3, 'row': 1, 'col': 2 },\n        'panel4': { 'sizeX': 2, 'sizeY': 3, 'row': 1, 'col': 4 },\n        'panel5': { 'sizeX': 6, 'sizeY': 1, 'row': 4, 'col': 0 }\n    },\n    {\n        'panel1': { 'sizeX': 6, 'sizeY': 1, 'row': 0, 'col': 0 },\n        'panel2': { 'sizeX': 4, 'sizeY': 3, 'row': 1, 'col': 0 },\n        'panel3': { 'sizeX': 2, 'sizeY': 3, 'row': 1, 'col': 4 },\n        'panel4': { 'sizeX': 6, 'sizeY': 1, 'row': 4, 'col': 0 }\n    },\n    {\n        'panel1': { 'sizeX': 2, 'sizeY': 3, 'row': 0, 'col': 0 },\n        'panel2': { 'sizeX': 2, 'sizeY': 3, 'row': 0, 'col': 2 },\n        'panel3': { 'sizeX': 2, 'sizeY': 3, 'row': 0, 'col': 4 },\n        'panel4': { 'sizeX': 6, 'sizeY': 2, 'row': 3, 'col': 0 }\n    }\n];\nexport default panelData;\n"}