{"main.ts":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","polyfills.ts":"/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n  <link href=\"../../styles/material.css\" rel=\"stylesheet\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n</head>\n<body class=\"ej2-new\"> \n\n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WLQL39J\"height=\"0\"width=\"0\"style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app.component.ts":"import { Component, Inject, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { extend, Internationalization, createElement, closest, remove, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { ChangeEventArgs } from '@syncfusion/ej2-angular-dropdowns';\nimport {\n  ScheduleComponent, Schedule, ActionEventArgs, PopupOpenEventArgs,\n  EventFieldsMapping, MonthService, EventSettingsModel, CallbackFunction\n} from '@syncfusion/ej2-angular-schedule';\n\n(window as TemplateFunction).getAirwaysName = (value: number) => {\n  return (value === 1) ? 'Airways 1' : (value === 2) ? 'Airways 2' : 'Airways 3';\n};\n(window as TemplateFunction).getAirwaysImage = (value: number) => {\n  return (value === 1) ? 'airways-1' : (value === 2) ? 'airways-2' : 'airways-3';\n};\n(window as TemplateFunction).getFormattedTime = (date: Date) => {\n  const instance: Internationalization = new Internationalization();\n  return instance.formatDate(date, { skeleton: 'Hm' });\n};\n\ninterface TemplateFunction extends Window {\n  getAirwaysName?: CallbackFunction;\n  getAirwaysImage?: CallbackFunction;\n  getFormattedTime?: CallbackFunction;\n}\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.css'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [MonthService]\n})\n\nexport class AppComponent {\n  public selectedDate: Date = new Date(2021, 3, 1);\n  public resourceDataSource: Record<string, any>[] = [\n    { text: 'Airways 1', id: 1 },\n    { text: 'Airways 2', id: 2 },\n    { text: 'Airways 3', id: 3 }\n  ];\n  public allowMultiple = true;\n  public eventSettings: EventSettingsModel = {\n    template: '<div class=\"template-wrapper\">' +\n      '<div class=\"fare-detail\">$${Fare}</div>' +\n      '<div class=\"airline-name\" style=\"display:flex;padding-left:5px;\">' +\n      '<div class=\"airline-logo ${getAirwaysImage(data.AirlineId)}\"></div>' +\n      '<div class=\"airway-name\">${getAirwaysName(data.AirlineId)}</div>' +\n      '</div></div>',\n    enableTooltip: true,\n    tooltipTemplate: '<div class=\"event-tooltip\">' +\n      '<div class=\"airline-header\">' +\n      '<div class=\"airline-logo ${getAirwaysImage(data.AirlineId)}\"></div>' +\n      '<div class=\"airline-name\">${getAirwaysName(data.AirlineId)}</div>' +\n      '</div>' +\n      '<div class=\"airline-details text-size\">' +\n      '<div class=\"airline-title\">Fare Details:</div>' +\n      '<div class=\"airline-fare\">$${Fare} per person</div>' +\n      '</div>' +\n      '<div class=\"airline-flex-row text-size\">' +\n      '<div class=\"airline-flex-col airline-title border-right\">Arrival</div>' +\n      '<div class=\"airline-flex-col airline-title text-right\">Depature</div>' +\n      '</div>' +\n      '<div class=\"airline-flex-row text-size\">' +\n      '<div class=\"airline-flex-col border-right\">${getFormattedTime(data.StartTime)}</div>' +\n      '<div class=\"airline-flex-col margin-right text-right\">${getFormattedTime(data.EndTime)}</div>' +\n      '</div></div>'\n  };\n  public dManager: Record<string, any>[] = [];\n  private initialLoad = true;\n  public readonly = true;\n  @ViewChild('scheduleObj') public scheduleObj: ScheduleComponent;\n\n  constructor() {\n    \n  }\n\n  public onDataBinding(): void {\n    if (this.initialLoad) {\n      this.scheduleObj.eventSettings.dataSource = this.generateEvents(this.scheduleObj);\n      this.initialLoad = false;\n    }\n  }\n\n  public onDataBound(): void {\n    const eventCollections: Record<string, any>[] = this.scheduleObj.getCurrentViewEvents();\n    if (eventCollections.length > 0) {\n      eventCollections.sort((a: Record<string, number>, b: Record<string, number>) => a.Fare - b.Fare);\n      const indexDate: Date = new Date(((eventCollections[0] as Record<string, any>).StartTime as Date).getTime());\n      indexDate.setHours(0, 0, 0, 0);\n      const index: number = this.scheduleObj.getIndexOfDate(this.scheduleObj.activeView.renderDates, indexDate);\n      const target: HTMLElement = this.scheduleObj.element.querySelectorAll('.e-work-cells')[index] as HTMLElement;\n      addClass([target], 'best-price');\n      target.appendChild(createElement('div', { className: 'best-price', innerHTML: 'Best Price' }));\n    }\n  }\n\n  public onPopupOpen(args: PopupOpenEventArgs): void {\n    args.cancel = true;\n  }\n\n  public onActionBegin(args: ActionEventArgs): void {\n    if (args.requestType === 'toolbarItemRendering') {\n      args.items[2].align = 'Center';\n      args.items[2].suffixIcon = '';\n      args.items = args.items.splice(2, 1);\n    }\n  }\n\n  public onChange(args: ChangeEventArgs): void {\n    const tdElement: HTMLElement = this.scheduleObj.element.querySelector('.best-price:not(.e-work-cells)');\n    if (tdElement) {\n      removeClass([closest(tdElement, 'td')], 'best-price');\n      remove(tdElement);\n    }\n    const scheduleData: Record<string, any>[] = extend([], this.dManager, null, true) as Record<string, any>[];\n    const selectedResource: number[] = [];\n    const resourceCollection: HTMLElement[] = [].slice.call(document.querySelectorAll('.e-resource'));\n    resourceCollection.forEach((element: HTMLElement, index: number) => {\n      let resEle: Element = element.querySelector('.e-icons');\n      if (resEle && resEle.classList.contains('e-check')) {\n        selectedResource.push(index);\n      }\n    });\n    let filteredData: Record<string, any>[] = [];\n    const resources: Record<string, any>[] =\n      this.scheduleObj.resourceBase.resourceCollection.slice(-1)[0].dataSource as Record<string, any>[];\n    for (const resource of selectedResource) {\n      const data: Record<string, any>[] = scheduleData.filter((event: Record<string, any>) => resources[resource].id === event.AirlineId);\n      filteredData = filteredData.concat(data);\n    }\n    filteredData = this.filterByFare(filteredData, this.scheduleObj);\n    this.scheduleObj.eventSettings.dataSource = filteredData;\n    this.scheduleObj.dataBind();\n  }\n\n  public filterByFare(appointments: Record<string, any>[], scheduleObj: Schedule): Record<string, any>[] {\n    const fieldMapping: EventFieldsMapping = scheduleObj.eventFields;\n    appointments.sort((object1: Record<string, any>, object2: Record<string, any>) => {\n      const d1: number = +(object1[fieldMapping.startTime] as Date);\n      const d2: number = +(object2[fieldMapping.startTime] as Date);\n      const d3: number = +(object1[fieldMapping.endTime] as Date);\n      const d4: number = +(object2[fieldMapping.endTime] as Date);\n      return ((d1 - d2) || ((d4 - d2) - (d3 - d1)));\n    });\n    const renderDate: Date[] = scheduleObj.activeView.getRenderDates();\n    const finalData: Record<string, any>[] = [];\n    for (const date of renderDate) {\n      if (scheduleObj.selectedDate.getMonth() === date.getMonth()) {\n        const strTime: Date = new Date(+date);\n        const endTime: Date = new Date(new Date(strTime.getTime()).setHours(23, 59, 59, 59));\n        const perDayData: Record<string, any>[] = scheduleObj.eventBase.filterEvents(strTime, endTime, appointments);\n        if (perDayData.length > 0) {\n          perDayData.sort((a: Record<string, any>, b: Record<string, any>) => ((a.Fare as number) - (b.Fare as number)));\n          finalData.push(perDayData[0]);\n        }\n      }\n    }\n    return finalData;\n  }\n\n  // custom code start\n  public generateEvents(scheduleObj: Schedule): Record<string, any>[] {\n    const collections: Record<string, any>[] = [];\n    const dataCollections: Record<string, any>[] = [\n      {\n        Id: 100,\n        StartTime: new Date(2021, 3, 1, 8, 30),\n        EndTime: new Date(2021, 3, 1, 10, 0),\n        AirlineId: 1\n      },\n      {\n        Id: 102,\n        StartTime: new Date(2021, 3, 1, 11, 0),\n        EndTime: new Date(2021, 3, 1, 12, 0),\n        AirlineId: 2\n      },\n      {\n        Id: 103,\n        StartTime: new Date(2021, 3, 1, 14, 0),\n        EndTime: new Date(2021, 3, 1, 15, 0),\n        AirlineId: 3\n      }\n    ];\n    const start: Date = new Date(2021, 3, 1);\n    const dateCollections: Date[] = Array.apply(null, { length: 30 }).map((value: number, index: number) =>\n      new Date(start.getTime() + (1000 * 60 * 60 * 24 * index)));\n    let id = 1;\n    let day = 0;\n    for (const date of dateCollections) {\n      let resource = 1;\n      for (const data of dataCollections) {\n        const strDate: Date = new Date((data.StartTime as Date).getTime());\n        const endDate: Date = new Date((data.EndTime as Date).getTime());\n        collections.push({\n          Id: id,\n          StartTime: new Date(strDate.setDate(strDate.getDate() + day)),\n          EndTime: new Date(endDate.setDate(endDate.getDate() + day)),\n          AirlineId: resource,\n          Fare: ((Math.random() * 500) + 100).toFixed(2)\n        });\n        resource += 1;\n        id += 1;\n      }\n      day += 1;\n    }\n    this.dManager = extend([], collections, null, true) as Record<string, any>[];\n    const filteredCollection: Record<string, any>[] = this.filterByFare(collections, scheduleObj);\n    return filteredCollection;\n  }\n  // custom code end\n}\n","app/app.module.ts":"import { ToastAllModule } from '@syncfusion/ej2-angular-notifications';\n\nimport { DropDownButtonAllModule } from '@syncfusion/ej2-angular-splitbuttons';\n\nimport { TreeViewModule } from '@syncfusion/ej2-angular-navigations';\n\nimport { DropDownListAllModule, MultiSelectAllModule } from '@syncfusion/ej2-angular-dropdowns';\n\nimport { MaskedTextBoxModule, UploaderAllModule } from '@syncfusion/ej2-angular-inputs';\n\nimport { ToolbarAllModule, ContextMenuAllModule, AppBarModule } from '@syncfusion/ej2-angular-navigations';\n\nimport { ButtonAllModule, CheckBoxAllModule, SwitchAllModule } from '@syncfusion/ej2-angular-buttons';\n\nimport { DatePickerAllModule, TimePickerAllModule, DateTimePickerAllModule } from '@syncfusion/ej2-angular-calendars';\n\nimport { NumericTextBoxAllModule, TextBoxAllModule } from '@syncfusion/ej2-angular-inputs';\n\nimport { ScheduleAllModule, RecurrenceEditorAllModule } from '@syncfusion/ej2-angular-schedule';\n\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from '../app.component';\n\n@NgModule({ declarations: [ AppComponent ], imports: [ CommonModule, ScheduleAllModule, RecurrenceEditorAllModule,   NumericTextBoxAllModule, TextBoxAllModule, DatePickerAllModule, TimePickerAllModule, DateTimePickerAllModule, CheckBoxAllModule,   ToolbarAllModule, DropDownListAllModule, ContextMenuAllModule, MaskedTextBoxModule, UploaderAllModule, MultiSelectAllModule,   TreeViewModule, ButtonAllModule, DropDownButtonAllModule, SwitchAllModule, BrowserModule, ToastAllModule, AppBarModule], providers: [], bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","app.component.html":"<div class=\"control-section\">\n  <div class=\"col-lg-9 content-wrapper\">\n    <div class=\"schedule-demo-heading\">\n      Cheapest one way fares from Barcelona to Los Angeles\n    </div>\n    <ejs-schedule #scheduleObj width='100%' cssClass='schedule-resources' height='650px' [readonly]='readonly'\n      [selectedDate]=\"selectedDate\" [eventSettings]=\"eventSettings\" (dataBinding)=\"onDataBinding()\"\n      (actionBegin)=\"onActionBegin($event)\" (dataBound)=\"onDataBound()\" (popupOpen)=\"onPopupOpen($event)\">\n      <e-resources>\n        <e-resource field='AirlineId' title='Airline' [dataSource]='resourceDataSource' [allowMultiple]='allowMultiple'\n          name='Airlines' textField='text' idField='id'>\n        </e-resource>\n      </e-resources>\n      <e-views>\n        <e-view option=\"Month\"></e-view>\n      </e-views>\n    </ejs-schedule>\n  </div>\n  <div class=\"col-lg-3 property-section\">\n    <div class=\"property-panel-section\">\n      <div class=\"property-panel-header\">Properties</div>\n      <div class=\"property-panel-content\">\n        <div id=\"property\" class=\"property-panel-table\" title=\"Properties\">\n          <table id=\"property\" title=\"Properties\" style=\"width: 100%\">\n            <tbody>\n              <tr style=\"height: 50px\">\n                <td>\n                  <div>\n                    <ejs-checkbox label=\"Airways 1\" cssClass=\"e-resource e-airways-1\" [checked]=\"true\"\n                      (change)=\"onChange($event)\"></ejs-checkbox>\n                  </div>\n                </td>\n              </tr>\n              <tr style=\"height: 50px\">\n                <td>\n                  <div>\n                    <ejs-checkbox label=\"Airways 2\" cssClass=\"e-resource e-airways-2\" [checked]=\"true\"\n                      (change)=\"onChange($event)\"></ejs-checkbox>\n                  </div>\n                </td>\n              </tr>\n              <tr style=\"height: 50px\">\n                <td>\n                  <div>\n                    <ejs-checkbox label=\"Airways 3\" cssClass=\"e-resource e-airways-3\" [checked]=\"true\"\n                      (change)=\"onChange($event)\"></ejs-checkbox>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n","app.component.css":".e-tooltip-wrap.e-schedule-event-tooltip .airline-flex-row {\n  display: flex;\n  padding: 0 5px;\n  line-height: 20px;\n}\n\n.e-tooltip-wrap.e-schedule-event-tooltip .airline-flex-col {\n  flex: 0 0 50%;\n}\n\n.e-tooltip-wrap.e-schedule-event-tooltip .text-right {\n  text-align: right;\n}\n\n.e-tooltip-wrap.e-schedule-event-tooltip .margin-right {\n  margin-left: -21px;\n}\n\n.e-tooltip-wrap.e-schedule-event-tooltip .text-size {\n  font-size: 14px;\n}\n\n.e-tooltip-wrap.e-schedule-event-tooltip .border-right {\n  border-right: 1px solid #fff;\n}\n\n.e-tooltip-wrap.e-schedule-event-tooltip .airline-fare {\n  padding-left: 8px;\n}\n\n.schedule-resources.e-schedule .e-appointment .template-wrapper {\n  color: black;\n  width: 100%;\n}\n\n.fluent-dark .schedule-resources.e-schedule .e-appointment .template-wrapper,\n.bootstrap5-dark .schedule-resources.e-schedule .e-appointment .template-wrapper,\n.tailwind-dark .schedule-resources.e-schedule .e-appointment .template-wrapper,\n.bootstrap-dark .schedule-resources.e-schedule .e-appointment .template-wrapper,\n.fabric-dark .schedule-resources.e-schedule .e-appointment .template-wrapper,\n.material-dark .schedule-resources.e-schedule .e-appointment .template-wrapper,\n.highcontrast .schedule-resources.e-schedule .e-appointment .template-wrapper {\n  color: #fff;\n}\n\n.schedule-resources.e-schedule .e-work-cells.best-price {\n  background-color: #FFFBDF;\n}\n\n.schedule-resources.e-schedule .best-price:not(.e-work-cells) {\n  color: #1A961A;\n  float: right;\n  margin-top: -22px;\n  margin-right: 3px;\n  width: auto;\n  font-size: 12px;\n}\n\n.fluent-dark .schedule-resources.e-schedule .best-price:not(.e-work-cells),\n.bootstrap5-dark .schedule-resources.e-schedule .best-price:not(.e-work-cells),\n.tailwind-dark .schedule-resources.e-schedule .best-price:not(.e-work-cells),\n.bootstrap-dark .schedule-resources.e-schedule .best-price:not(.e-work-cells),\n.fabric-dark .schedule-resources.e-schedule .best-price:not(.e-work-cells),\n.material-dark .schedule-resources.e-schedule .best-price:not(.e-work-cells),\n.highcontrast .schedule-resources.e-schedule .best-price:not(.e-work-cells) {\n  color: #33DB33;\n}\n\n.fluent-dark .schedule-resources.e-schedule .e-work-cells.best-price,\n.bootstrap5-dark .schedule-resources.e-schedule .e-work-cells.best-price,\n.tailwind-dark .schedule-resources.e-schedule .e-work-cells.best-price,\n.bootstrap-dark .schedule-resources.e-schedule .e-work-cells.best-price,\n.fabric-dark .schedule-resources.e-schedule .e-work-cells.best-price,\n.material-dark .schedule-resources.e-schedule .e-work-cells.best-price,\n.highcontrast .schedule-resources.e-schedule .e-work-cells.best-price {\n  background-color: #393939;\n}\n\n.schedule-resources.e-schedule.e-device .best-price:not(.e-work-cells) {\n  display: none;\n}\n\n.e-tooltip-wrap.e-schedule-event-tooltip .event-tooltip {\n  width: 217px;\n}\n\n.e-tooltip-wrap.e-schedule-event-tooltip .airline {\n  width: 40%;\n}\n\n.e-tooltip-wrap.e-schedule-event-tooltip .event-tooltip .airline-header {\n  display: flex;\n  padding: 8px 0px 8px 0px;\n}\n\n.e-tooltip-wrap.e-schedule-event-tooltip .event-tooltip .airline-details {\n  display: flex;\n  padding: 8px 5px 8px 5px;\n}\n\n.e-tooltip-wrap.e-schedule-event-tooltip .event-tooltip .airline-timings,\n.e-tooltip-wrap.e-schedule-event-tooltip .event-tooltip .airline-timings-title {\n  display: flex;\n  padding: 5px;\n}\n\n.e-schedule-event-tooltip .event-tooltip .airline-header {\n  border-bottom: 1px solid #e0e0e0;\n}\n\n.e-schedule-event-tooltip .event-tooltip .airline-logo,\n.schedule-resources.e-schedule .template-wrapper .airline-logo {\n  background-size: cover;\n  margin-top: -3px;\n  width: 25px;\n  height: 25px;\n  background-repeat: no-repeat;\n}\n\n.e-schedule-event-tooltip .event-tooltip .airline-logo.airways-1,\n.schedule-resources.e-schedule .template-wrapper .airline-logo.airways-1 {\n  background-image: url('/assets/schedule/images/airways-1.svg');\n}\n\n.e-schedule-event-tooltip .event-tooltip .airline-logo.airways-2,\n.schedule-resources.e-schedule .template-wrapper .airline-logo.airways-2 {\n  background-image: url('/assets/schedule/images/airways-2.svg');\n}\n\n.e-schedule-event-tooltip .event-tooltip .airline-logo.airways-3,\n.schedule-resources.e-schedule .template-wrapper .airline-logo.airways-3 {\n  background-image: url('/assets/schedule/images/airways-3.svg');\n}\n\n.schedule-resources.e-schedule .fare-detail {\n  color: #00837B;\n  font-size: 16px;\n  font-weight: 500;\n  height: 25px;\n  padding-left: 5px;\n}\n\n.highcontrast .schedule-resources.e-schedule .fare-detail {\n  color: #1B96BB;\n}\n\n.schedule-resources.e-schedule.e-device .fare-detail {\n  font-size: 11px;\n}\n\n.schedule-resources.e-schedule .e-toolbar-item.e-date-range {\n  margin-left: 8px;\n  pointer-events: none;\n}\n\n.schedule-resources.e-schedule .airway-name {\n  font-size: 12px;\n  overflow: hidden;\n  padding-left: 5px;\n  text-overflow: ellipsis;\n}\n\n.schedule-resources.e-schedule.e-device .airway-name {\n  display: none;\n}\n\n.schedule-resources.e-schedule .e-month-view .e-appointment {\n  height: 45px;\n  background: none;\n  border-width: 0;\n  top: 10px !important;\n}\n\n.schedule-resources.e-schedule.e-device .e-month-view .e-appointment {\n  height: 45px;\n}\n\n.e-bigger .schedule-resources.e-schedule .e-month-view .e-appointment {\n  height: 40px;\n}\n\n.schedule-resources.e-schedule .e-month-view .e-appointment .e-appointment-details {\n  height: inherit;\n}\n\n.schedule-resources.e-schedule .e-month-view .e-more-indicator {\n  display: none\n}\n\n.schedule-resources.e-schedule .e-month-view .e-appointment.e-appointment-border,\n.schedule-resources.e-schedule .e-month-view .e-appointment:focus {\n  border-width: 0;\n}\n\n.e-tooltip-wrap.e-popup.e-schedule-event-tooltip {\n  opacity: 1;\n}\n\n.highcontrast .e-tooltip-wrap.e-popup.e-schedule-event-tooltip {\n  border-color: #e0e0e0;\n  background-color: #fff;\n}\n\n.highcontrast .e-tooltip-wrap.e-popup.e-schedule-event-tooltip .e-tip-content {\n  color: #000;\n}\n\n.e-tooltip-wrap.e-popup.e-schedule-event-tooltip .event-tooltip .airline-name {\n  font-weight: 500;\n  font-size: 16px;\n  padding-left: 10px;\n  padding-top: 3px;\n}\n\n.e-tooltip-wrap.e-popup.e-schedule-event-tooltip .event-tooltip .airline-title {\n  font-weight: 500;\n  font-size: 14px;\n}\n\n.e-tooltip-wrap.e-popup.e-schedule-event-tooltip .event-tooltip .airline-logo {\n  margin-left: 5px;\n  background-size: 25px;\n  height: 25px;\n  width: 25px;\n  margin-top: 0px;\n}\n\n.schedule-demo-heading {\n  font-size: 16px;\n  padding-bottom: 15px;\n  text-align: center;\n  font-weight: 500\n}\n\n.property-panel-content .e-checkbox-wrapper.e-resource.e-airways-1 .e-frame {\n  background-color: #EA7A57;\n  border-color: transparent;\n}\n\n.property-panel-content .e-checkbox-wrapper.e-resource.e-airways-2 .e-frame {\n  background-color: #357CD2;\n  border-color: transparent;\n}\n\n.property-panel-content .e-checkbox-wrapper.e-resource.e-airways-3 .e-frame {\n  background-color: #7FA900;\n  border-color: transparent;\n}\n\n@media (max-width: 550px) {\n  .schedule-demo-heading {\n    font-size: 14px;\n  }\n}\n","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-angular-notifications\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-angular-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-angular-calendars\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"@syncfusion/ej2-angular-schedule\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\"}"}