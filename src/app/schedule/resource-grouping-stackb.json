{"dependencies.json":"{\"@syncfusion/ej2-base\": \"*\", \"@syncfusion/ej2-buttons\": \"*\", \"@syncfusion/ej2-splitbuttons\": \"*\", \"@syncfusion/ej2-calendars\": \"*\", \"@syncfusion/ej2-charts\": \"*\", \"@syncfusion/ej2-diagrams\": \"*\", \"@syncfusion/ej2-maps\": \"*\", \"@syncfusion/ej2-treemap\": \"*\", \"@syncfusion/ej2-circulargauge\": \"*\", \"@syncfusion/ej2-data\": \"*\", \"@syncfusion/ej2-dropdowns\": \"*\", \"@syncfusion/ej2-grids\": \"*\", \"@syncfusion/ej2-inputs\": \"*\", \"@syncfusion/ej2-lists\": \"*\", \"@syncfusion/ej2-navigations\": \"*\", \"@syncfusion/ej2-popups\": \"*\", \"@syncfusion/ej2-lineargauge\": \"*\", \"@syncfusion/ej2-pdf-export\": \"*\", \"@syncfusion/ej2-compression\": \"*\", \"@syncfusion/ej2-excel-export\": \"*\", \"@syncfusion/ej2-file-utils\": \"*\", \"@syncfusion/ej2-svg-base\": \"*\", \"@syncfusion/ej2-documenteditor\": \"*\", \"@syncfusion/ej2-richtexteditor\": \"*\", \"@syncfusion/ej2-notifications\": \"*\", \"@syncfusion/ej2-heatmap\": \"*\", \"@syncfusion/ej2-pivotview\": \"*\", \"@syncfusion/ej2-schedule\": \"*\", \"@syncfusion/ej2-layouts\": \"*\", \"@syncfusion/ej2-angular-base\": \"*\", \"@syncfusion/ej2-angular-buttons\": \"*\", \"@syncfusion/ej2-angular-splitbuttons\": \"*\", \"@syncfusion/ej2-angular-calendars\": \"*\", \"@syncfusion/ej2-angular-charts\": \"*\", \"@syncfusion/ej2-angular-diagrams\": \"*\", \"@syncfusion/ej2-angular-maps\": \"*\", \"@syncfusion/ej2-angular-treemap\": \"*\", \"@syncfusion/ej2-angular-circulargauge\": \"*\", \"@syncfusion/ej2-angular-dropdowns\": \"*\", \"@syncfusion/ej2-angular-grids\": \"*\", \"@syncfusion/ej2-angular-inputs\": \"*\", \"@syncfusion/ej2-angular-lists\": \"*\", \"@syncfusion/ej2-angular-navigations\": \"*\", \"@syncfusion/ej2-angular-popups\": \"*\", \"@syncfusion/ej2-angular-lineargauge\": \"*\", \"@syncfusion/ej2-angular-documenteditor\": \"*\", \"@syncfusion/ej2-angular-richtexteditor\": \"*\", \"@syncfusion/ej2-angular-notifications\": \"*\", \"@syncfusion/ej2-angular-heatmap\": \"*\", \"@syncfusion/ej2-angular-pivotview\": \"*\", \"@syncfusion/ej2-angular-schedule\": \"*\", \"@syncfusion/ej2-angular-layouts\": \"*\" , \"@angular/http\": \"*\", \"rxjs-compat\":\"*\"}","main.ts":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n","polyfills.ts":"/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol';\n// import 'core-js/es6/object';\n// import 'core-js/es6/function';\n// import 'core-js/es6/parse-int';\n// import 'core-js/es6/parse-float';\n// import 'core-js/es6/number';\n// import 'core-js/es6/math';\n// import 'core-js/es6/string';\n// import 'core-js/es6/date';\n// import 'core-js/es6/array';\n// import 'core-js/es6/regexp';\n// import 'core-js/es6/map';\n// import 'core-js/es6/weak-map';\n// import 'core-js/es6/set';\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect';\n\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\nimport 'core-js/es7/reflect';\n\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n **/\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n */\n\n // (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n // (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n // (window as any).__zone_symbol__BLACK_LISTED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n\n /*\n * in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n * with the following flag, it will bypass `zone.js` patch for IE/Edge\n */\n// (window as any).__Zone_enable_cross_context_check = true;\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n<link href=\"../styles/OpenNew.css\" rel=\"stylesheet\">\n  <link href=\"//cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\" />\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body class=\"ej2-new\"> \n\n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WLQL39J\"height=\"0\"width=\"0\"style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app/app.module.ts":"import { DropDownListAllModule, MultiSelectAllModule } from '@syncfusion/ej2-angular-dropdowns';\n\nimport { MaskedTextBoxModule, UploaderAllModule } from '@syncfusion/ej2-angular-inputs';\n\nimport { ToolbarAllModule, ContextMenuAllModule } from '@syncfusion/ej2-angular-navigations';\n\nimport { CheckBoxAllModule } from '@syncfusion/ej2-angular-buttons';\n\nimport { DatePickerAllModule, TimePickerAllModule, DateTimePickerAllModule } from '@syncfusion/ej2-angular-calendars';\n\nimport { NumericTextBoxAllModule } from '@syncfusion/ej2-angular-inputs';\n\nimport { ScheduleAllModule, RecurrenceEditorAllModule } from '@syncfusion/ej2-angular-schedule';\n\nimport { HttpModule } from '@angular/http';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { RouterModule } from '@angular/router';\n\nimport { CommonModule } from '@angular/common';\n\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from '../app.component';\n@NgModule({ declarations: [   AppComponent ], imports: [ CommonModule, HttpModule, ScheduleAllModule, RecurrenceEditorAllModule,   NumericTextBoxAllModule, DatePickerAllModule, TimePickerAllModule, DateTimePickerAllModule, CheckBoxAllModule, ToolbarAllModule,   DropDownListAllModule, ContextMenuAllModule, MaskedTextBoxModule, UploaderAllModule, MultiSelectAllModule, BrowserModule], providers: [], bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","app.component.html":"<div class=\"control-section\">\n    <div class='schedule-demo-heading'>\n        Flight timings between Barcelona and Los Angeles\n    </div>\n    <ejs-schedule #scheduleObj cssClass='schedule-group' width='100%' height='650px' [group]=\"group\" [selectedDate]=\"selectedDate\"\n        [eventSettings]=\"eventSettings\">\n        <ng-template #resourceHeaderTemplate let-data>\n            <div class='template-wrap'>\n                <div class=\"airline-image {{getAirlineImage(data)}}\"></div>\n                <div class=\"airline-details\">\n                    <div class=\"airline-name\">{{getAirlineName(data)}}</div>\n                    <div class=\"airline-model\">Model no: {{getAirlineModel(data)}}</div>\n                    <div class=\"airline-seats\">No.of seats: {{getAirlineSeats(data)}}</div>\n                </div>\n            </div>\n        </ng-template>\n        <e-views>\n            <e-view option=\"Week\"></e-view>\n            <e-view option=\"Month\"></e-view>\n            <e-view option=\"Agenda\"></e-view>\n        </e-views>\n        <e-resources>\n            <e-resource field='AirlineId' title='Airline Name' name='Airlines' [allowMultiple]='allowMultiple' [dataSource]='resourceDataSource'\n                textField='AirlineName' idField='AirlineId' colorField='AirlineColor'>\n            </e-resource>\n        </e-resources>\n    </ejs-schedule>\n</div>\n\n","app.component.css":".schedule-group.e-schedule .template-wrap {\n    display: flex;\n    text-align: left;\n}\n\n.schedule-group.e-schedule .e-agenda-view .template-wrap {\n    display: table;\n    width: inherit;\n    text-align: center;\n    padding-top: 10px;\n}\n\n.schedule-group.e-schedule:not(.e-device) .e-agenda-view .e-content-wrap table td:first-child {\n    width: 110px;\n}\n\n.schedule-group.e-schedule .template-wrap .airline-image {\n    width: 30px;\n    margin-top: 15px;\n    background-repeat: no-repeat;\n}\n\n.schedule-group.e-schedule.e-device .template-wrap .airline-image {\n    margin-top: 5px;\n}\n\n.schedule-group.e-schedule .e-agenda-view .template-wrap .airline-image {\n    height: 30px;\n    margin-top: 0;\n    margin-left: 35%;\n}\n\n.schedule-group.e-schedule .e-vertical-view .e-resource-cells {\n    height: 76px;\n}\n\n.e-bigger .schedule-group.e-schedule .e-vertical-view .e-resource-cells {\n    height: 80px;\n}\n\n.schedule-group.e-schedule .template-wrap .airline-details {\n    padding-left: 15px;\n}\n\n.schedule-group.e-schedule .e-agenda-view .template-wrap .airline-details {\n    padding: 0;\n}\n\n.schedule-group.e-schedule .template-wrap .airline-details .airline-name {\n    font-size: 16px;\n    font-weight: 500;\n}\n\n.schedule-group.e-schedule.e-device .template-wrap .airline-model,\n.schedule-group.e-schedule.e-device .template-wrap .airline-seats {\n    display: none;\n}\n\n.schedule-group.e-schedule.e-device .template-wrap .airline-details .airline-name {\n    font-size: inherit;\n    font-weight: inherit;\n}\n\n.schedule-group.e-schedule .template-wrap .airline-image.airways-1 {\n    background-image: url('~/assets/schedule/images/airways-1.svg');\n}\n\n.schedule-group.e-schedule .template-wrap .airline-image.airways-2 {\n    background-image: url('~/assets/schedule/images/airways-2.svg');\n}\n\n.schedule-group.e-schedule .template-wrap .airline-image.airways-3 {\n    background-image: url('~/assets/schedule/images/airways-3.svg');\n}\n\n.schedule-group.e-schedule .e-agenda-view .template-wrap .airline-model,\n.schedule-group.e-schedule .e-agenda-view .template-wrap .airline-seats {\n    display: none;\n}\n\n/* custom code start*/\n.schedule-group.schedule-demo-heading {\n    font-size: 16px;\n    padding-bottom: 15px;\n    text-align: center;\n    font-weight: 500\n}\n\n@media (max-width: 550px) {\n    .schedule-demo-heading {\n        font-size: 14px;\n    }\n}\n/* custom code end*/","data.ts":"","app.component.ts":"import { Component, Inject, ViewEncapsulation } from '@angular/core';\nimport {\n    EventSettingsModel, GroupModel, ResourceDetails, TreeViewArgs, WeekService, MonthService, AgendaService, ResizeService, DragAndDropService\n} from '@syncfusion/ej2-angular-schedule';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [WeekService, MonthService, AgendaService, ResizeService, DragAndDropService]\n})\n\nexport class AppComponent {\n    public selectedDate: Date = new Date(2018, 3, 1);\n    public resourceDataSource: Object[] = [\n        { AirlineName: 'Airways 1', AirlineId: 1, AirlineColor: '#EA7A57' },\n        { AirlineName: 'Airways 2', AirlineId: 2, AirlineColor: '#357cd2' },\n        { AirlineName: 'Airways 3', AirlineId: 3, AirlineColor: '#7fa900' }\n    ];\n    public group: GroupModel = { resources: ['Airlines'] };\n    public allowMultiple: Boolean = true;\n    public eventSettings: EventSettingsModel = {\n        dataSource: this.generateEvents(),\n        fields: {\n            subject: { title: 'Travel Summary', name: 'Subject' },\n            location: { title: 'Source', name: 'Location' },\n            description: { title: 'Comments', name: 'Description' },\n            startTime: { title: 'Departure Time', name: 'StartTime' },\n            endTime: { title: 'Arrival Time', name: 'EndTime' }\n        }\n    };\n\n    constructor() {\n        \n    }\n\n    getAirlineName(value: ResourceDetails | TreeViewArgs): string {\n        return ((value as ResourceDetails).resourceData) ?\n            (value as ResourceDetails).resourceData[(value as ResourceDetails).resource.textField] as string\n            : (value as TreeViewArgs).resourceName;\n    }\n    getAirlineImage(value: ResourceDetails | TreeViewArgs): string {\n        let airlineName: string = this.getAirlineName(value);\n        return airlineName.replace(' ', '-').toLowerCase();\n    }\n    getAirlineModel(value: ResourceDetails | TreeViewArgs): string {\n        let airlineName: string = this.getAirlineName(value);\n        return (airlineName === 'Airways 1') ? 'CRJ 700' : (airlineName === 'Airways 2') ? 'Airbus A330' : 'ATR 72-600';\n    }\n    getAirlineSeats(value: ResourceDetails | TreeViewArgs): number {\n        let airlineName: string = this.getAirlineName(value);\n        return (airlineName === 'Airways 1') ? 50 : (airlineName === 'Airways 2') ? 75 : 100;\n    }\n    generateEvents(): Object[] {\n        let subjectCollection: string[] = ['Barcelona to Los Angeles', 'Los Angeles to Barcelona'];\n        let collections: Object[] = [];\n        let dataCollections: number[] = [1, 2, 3];\n        let id: number = 1;\n        for (let data of dataCollections) {\n            let startDate: Date = new Date(2018, 3, 1);\n            startDate.setMilliseconds(1000 * 60 * 60 * .5 * (data - 1));\n            let lastDate: Date = new Date((+startDate) + (1000 * 60 * 60 * 24 * 30));\n            for (let date: Date = startDate; date.getTime() < lastDate.getTime(); date = new Date(date.getTime() + (1000 * 60 * 60 * 5))) {\n                let strDate: Date = new Date(+date);\n                let endDate: Date = new Date((+strDate) + (1000 * 60 * 60 * (2.5 + (0.5 * data))));\n                collections.push({\n                    Id: id,\n                    Subject: subjectCollection[id % 2],\n                    StartTime: new Date(+strDate),\n                    EndTime: new Date(+endDate),\n                    AirlineId: data\n                });\n                id += 1;\n            }\n        }\n        return collections;\n    }\n}"}