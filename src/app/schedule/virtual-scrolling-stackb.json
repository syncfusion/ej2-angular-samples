{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, Inject, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { ScheduleComponent, DragAndDropService, TimelineMonthService, GroupModel, EventSettingsModel, ResizeService, View, MonthService, ScheduleModule } from '@syncfusion/ej2-angular-schedule';\n\n\n\n@Component({\n    // tslint:disable-next-line:component-selector\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [TimelineMonthService, MonthService, ResizeService, DragAndDropService],\n    standalone: true,\n    imports: [ScheduleModule,  ]\n})\n\nexport class AppComponent {\n  @ViewChild('scheduleObj') public scheduleObj: ScheduleComponent;\n\n  public selectedDate: Date = new Date(2021, 4, 1);\n  public group: GroupModel = {\n    enableCompactView: false,\n    resources: ['Resources']\n  };\n  public resourceDataSource: Record<string, any>[] = this.generateResourceData(1, 300, 'Resource');\n  public allowMultiple = true;\n  public virtualScroll = true;\n  public eventSettings: EventSettingsModel = {\n    dataSource: this.generateStaticEvents(new Date(2021, 4, 1), 300, 12)\n  };\n\n  constructor() {\n    \n  }\n\n  public generateStaticEvents(start: Date, resCount: number, overlapCount: number): Record<string, any>[] {\n    const data: Record<string, any>[] = [];\n    let id = 1;\n    for (let i = 0; i < resCount; i++) {\n      const randomCollection: number[] = [];\n      let random = 0;\n      for (let j = 0; j < overlapCount; j++) {\n        random = Math.floor(Math.random() * (30));\n        random = (random === 0) ? 1 : random;\n        if (randomCollection.indexOf(random) !== -1 || randomCollection.indexOf(random + 2) !== -1 ||\n          randomCollection.indexOf(random - 2) !== -1) {\n          random += (Math.max.apply(null, randomCollection) + 10);\n        }\n        for (let k = 1; k <= 2; k++) {\n          randomCollection.push(random + k);\n        }\n        let startDate: Date = new Date(start.getFullYear(), start.getMonth(), random);\n        startDate = new Date(startDate.getTime() + (((random % 10) * 10) * (1000 * 60)));\n        const endDate: Date = new Date(startDate.getTime() + ((1440 + 30) * (1000 * 60)));\n        data.push({\n          Id: id,\n          Subject: 'Event #' + id,\n          StartTime: startDate,\n          EndTime: endDate,\n          IsAllDay: (id % 10) ? false : true,\n          ResourceId: i + 1\n        });\n        id++;\n      }\n    }\n    return data;\n  }\n\n  public generateResourceData(startId: number, endId: number, text: string): Record<string, any>[] {\n    const data: Record<string, any>[] = [];\n    const colors: string[] = [\n      '#ff8787', '#9775fa', '#748ffc', '#3bc9db', '#69db7c', '#fdd835', '#748ffc',\n      '#9775fa', '#df5286', '#7fa900', '#fec200', '#5978ee', '#00bdae', '#ea80fc'\n    ];\n    for (let a: number = startId; a <= endId; a++) {\n      const n: number = Math.floor(Math.random() * colors.length);\n      data.push({ Id: a, Text: text + ' ' + a, Color: colors[n] });\n    }\n    return data;\n  }\n\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section\">\n  <div class=\"col-lg-12 content-wrapper\">\n    <ejs-schedule #scheduleObj width='100%' cssClass='virtual-scrolling' height='650px' [selectedDate]=\"selectedDate\"\n      [group]=\"group\" [eventSettings]=\"eventSettings\">\n      <e-resources>\n        <e-resource field='ResourceId' title='Resource' [dataSource]='resourceDataSource' name='Resources'\n          [allowMultiple]='allowMultiple' textField='Text' idField='Id' colorField='Color'>\n        </e-resource>\n      </e-resources>\n      <e-views>\n        <e-view option=\"TimelineMonth\" [allowVirtualScrolling]=\"virtualScroll\">\n          <ng-template #eventTemplate let-data>\n            <div class='template-wrap' [style.background]=\"data.PrimaryColor\">\n              <div class=\"subject\" [style.background]=\"data.SecondaryColor\">{{data.Subject}}</div>\n            </div>\n          </ng-template>\n        </e-view>\n        <e-view option=\"Month\" [allowVirtualScrolling]=\"virtualScroll\">\n          <ng-template #eventTemplate let-data>\n            <div class='template-wrap' [style.background]=\"data.PrimaryColor\">\n              <div class=\"subject\" [style.background]=\"data.SecondaryColor\">{{data.Subject}}</div>\n            </div>\n          </ng-template>\n        </e-view>\n      </e-views>\n    </ejs-schedule>\n  </div>\n</div>\n","app.component.css":".virtual-scrolling.e-schedule .template-wrap .subject {\n  padding: 10px 25px;\n}\n\n.virtual-scrolling.e-schedule .e-more-event-popup .template-wrap .subject {\n  padding: 0px 25px;\n}\n\n.virtual-scrolling.e-schedule .template-wrap {\n  width: 100%;\n}\n\n.virtual-scrolling.e-schedule .e-timeline-month-view .e-resource-left-td {\n  width: 150px;\n}\n\n.virtual-scrolling.e-schedule .e-month-view .template-wrap .subject {\n  padding: 3px 10px;\n}\n\n.virtual-scrolling.e-schedule .e-month-view .e-date-header-wrap table col,\n.virtual-scrolling.e-schedule .e-month-view .e-work-cells {\n  width: 46px;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-schedule\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-angular-calendars\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-angular-splitbuttons\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-angular-notifications\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}