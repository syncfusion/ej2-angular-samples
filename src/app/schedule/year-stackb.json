{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewChild } from '@angular/core';\nimport { ScheduleComponent, EventSettingsModel, EventRenderedArgs, YearService, TimelineYearService, GroupModel, ResizeService, DragAndDropService, ScheduleModule } from '@syncfusion/ej2-angular-schedule';\n\n\nimport { NumericTextBoxModule } from '@syncfusion/ej2-angular-inputs';\nimport { DropDownListModule } from '@syncfusion/ej2-angular-dropdowns';\n\n@Component({\n    // tslint:disable-next-line:component-selector\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styles: [`\n    .year-view.e-schedule .e-timeline-year-view .e-resource-column-table,\n    .year-view.e-schedule .e-timeline-year-view .e-resource-left-td {\n      width: 120px;\n    }\n\n    .col-lg-2.property-section .property-panel-table td {\n        padding-bottom: 1rem;\n    }`],\n    providers: [YearService, TimelineYearService, ResizeService, DragAndDropService],\n    standalone: true,\n    imports: [ScheduleModule, DropDownListModule, NumericTextBoxModule,  ]\n})\nexport class AppComponent {\n  @ViewChild('scheduleObj') public scheduleObj: ScheduleComponent;\n\n  public eventSettings: EventSettingsModel = { dataSource: this.generateEvents() };\n  public isSelected = true;\n  public allowMultiple = true;\n  public groupSettings: GroupModel = { resources: ['Categories'] };\n  public resourceDataSource: Record<string, any>[] = [\n    { text: 'Nancy', id: 1, color: '#df5286' },\n    { text: 'Steven', id: 2, color: '#7fa900' },\n    { text: 'Robert', id: 3, color: '#ea7a57' },\n    { text: 'Smith', id: 4, color: '#5978ee' },\n    { text: 'Michael', id: 5, color: '#df5286' }\n  ];\n  public months: Record<string, any>[] = [\n    { text: 'January', value: 0 },\n    { text: 'February', value: 1 },\n    { text: 'March', value: 2 },\n    { text: 'April', value: 3 },\n    { text: 'May', value: 4 },\n    { text: 'June', value: 5 },\n    { text: 'July', value: 6 },\n    { text: 'August', value: 7 },\n    { text: 'September', value: 8 },\n    { text: 'October', value: 9 },\n    { text: 'November', value: 10 },\n    { text: 'December', value: 11 }\n  ];\n  public fields = { text: 'text', value: 'value' };\n\n  public onEventRendered(args: EventRenderedArgs): void {\n    const eventColor: string = args.data.EventColor as string;\n    if (!args.element || !eventColor) {\n      return;\n    } else {\n      args.element.style.backgroundColor = eventColor;\n    }\n  }\n\n  public firstMonthOfYear(args: Record<string, number>): void {\n    this.scheduleObj.firstMonthOfYear = args.value;\n  }\n\n  public numberOfMonths(args: Record<string, number>): void {\n    this.scheduleObj.monthsCount = args.value;\n  }\n\n  public generateEvents(count: number = 250, date: Date = new Date()): Record<string, any>[] {\n    const names: string[] = [\n      'Bering Sea Gold', 'Technology', 'Maintenance', 'Meeting', 'Travelling', 'Annual Conference', 'Birthday Celebration',\n      'Farewell Celebration', 'Wedding Anniversary', 'Alaska: The Last Frontier', 'Deadliest Catch', 'Sports Day',\n      'MoonShiners', 'Close Encounters', 'HighWay Thru Hell', 'Daily Planet', 'Cash Cab', 'Basketball Practice',\n      'Rugby Match', 'Guitar Class', 'Music Lessons', 'Doctor checkup', 'Brazil - Mexico', 'Opening ceremony', 'Final presentation'\n    ];\n    const colors: string[] = [\n      '#ff8787', '#9775fa', '#748ffc', '#3bc9db', '#69db7c',\n      '#fdd835', '#748ffc', '#9775fa', '#df5286', '#7fa900',\n      '#fec200', '#5978ee', '#00bdae', '#ea80fc'\n    ];\n    const startDate: Date = new Date(date.getFullYear() - 2, 0, 1);\n    const endDate: Date = new Date(date.getFullYear() + 2, 11, 31);\n    const dateCollections: Record<string, any>[] = [];\n    for (let a = 0, id = 1; a < count; a++) {\n      const start: Date = new Date(Math.random() * (endDate.getTime() - startDate.getTime()) + startDate.getTime());\n      const end: Date = new Date(new Date(start.getTime()).setHours(start.getHours() + 1));\n      const nCount: number = Math.floor(Math.random() * names.length);\n      const n: number = Math.floor(Math.random() * colors.length);\n      dateCollections.push({\n        Id: id,\n        Subject: names[nCount],\n        StartTime: new Date(start.getTime()),\n        EndTime: new Date(end.getTime()),\n        IsAllDay: (id % 10) ? true : false,\n        EventColor: colors[n],\n        TaskId: (id % 5) + 1\n      });\n      id++;\n    }\n    return dateCollections;\n  }\n\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section\">\n  <div class=\"col-lg-9 content-wrapper\">\n    <ejs-schedule #scheduleObj width='100%' height='650px' cssClass=\"year-view\" [eventSettings]=\"eventSettings\"\n      [firstMonthOfYear]='0' [monthsCount]='12' (eventRendered)=\"onEventRendered($event)\">\n      <e-resources>\n        <e-resource field='TaskId' title='Category' [dataSource]='resourceDataSource' [allowMultiple]='allowMultiple'\n          name='Categories' textField='text' idField='id' colorField='color'></e-resource>\n      </e-resources>\n      <e-views>\n        <e-view option=\"Year\" [isSelected]=\"isSelected\"></e-view>\n        <e-view option=\"TimelineYear\" displayName=\"Horizontal TimelineYear\"></e-view>\n        <e-view option=\"TimelineYear\" displayName=\"Vertical TimelineYear\" orientation=\"Vertical\"\n          [group]=\"groupSettings\"></e-view>\n      </e-views>\n    </ejs-schedule>\n  </div>\n  <div class=\"col-lg-3 property-section\">\n    <div class=\"property-panel-section\">\n      <div class=\"property-panel-header\">Properties</div>\n      <div class=\"property-panel-content\">\n        <div id=\"property\" class=\"property-panel-table\" title=\"Properties\">\n          <table id=\"property\" title=\"Properties\">\n            <tbody>\n              <tr>\n                <td>\n                  <ejs-dropdownlist placeholder=\"First month of year\" floatLabelType=\"Always\" #firstMonthObj\n                    id=\"firstMonthElement\" [fields]='fields' [dataSource]='months' [value]='0'\n                    (change)='firstMonthOfYear($event)'></ejs-dropdownlist>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <ejs-numerictextbox placeholder=\"Number of months\" floatLabelType=\"Always\" #numberOfMonthsObj\n                    id=\"numberOfMonthsElement\" min='1' max='24' format='###.##' [value]='12'\n                    (change)='numberOfMonths($event)'></ejs-numerictextbox>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-schedule\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-angular-calendars\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-angular-splitbuttons\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-angular-notifications\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}