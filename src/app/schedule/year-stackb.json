{"main.ts":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","polyfills.ts":"/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n  <link href=\"../../styles/material.css\" rel=\"stylesheet\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n</head>\n<body class=\"ej2-new\"> \n\n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WLQL39J\"height=\"0\"width=\"0\"style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app.component.ts":"import { Component, ViewChild } from '@angular/core';\nimport {\n  ScheduleComponent, EventSettingsModel, EventRenderedArgs, YearService,\n  TimelineYearService, GroupModel, ResizeService, DragAndDropService\n} from '@syncfusion/ej2-angular-schedule';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styles: [`\n    .year-view.e-schedule .e-timeline-year-view .e-resource-column-table,\n    .year-view.e-schedule .e-timeline-year-view .e-resource-left-td {\n      width: 120px;\n    }\n\n    .col-lg-2.property-section .property-panel-table td {\n        padding-bottom: 1rem;\n    }`],\n  providers: [YearService, TimelineYearService, ResizeService, DragAndDropService]\n})\nexport class AppComponent {\n  @ViewChild('scheduleObj') public scheduleObj: ScheduleComponent;\n\n  public eventSettings: EventSettingsModel = { dataSource: this.generateEvents() };\n  public isSelected = true;\n  public allowMultiple = true;\n  public groupSettings: GroupModel = { resources: ['Categories'] };\n  public resourceDataSource: Record<string, any>[] = [\n    { text: 'Nancy', id: 1, color: '#df5286' },\n    { text: 'Steven', id: 2, color: '#7fa900' },\n    { text: 'Robert', id: 3, color: '#ea7a57' },\n    { text: 'Smith', id: 4, color: '#5978ee' },\n    { text: 'Michael', id: 5, color: '#df5286' }\n  ];\n  public months: Record<string, any>[] = [\n    { text: 'January', value: 0 },\n    { text: 'February', value: 1 },\n    { text: 'March', value: 2 },\n    { text: 'April', value: 3 },\n    { text: 'May', value: 4 },\n    { text: 'June', value: 5 },\n    { text: 'July', value: 6 },\n    { text: 'August', value: 7 },\n    { text: 'September', value: 8 },\n    { text: 'October', value: 9 },\n    { text: 'November', value: 10 },\n    { text: 'December', value: 11 }\n  ];\n  public fields = { text: 'text', value: 'value' };\n\n  public onEventRendered(args: EventRenderedArgs): void {\n    const eventColor: string = args.data.EventColor as string;\n    if (!args.element || !eventColor) {\n      return;\n    } else {\n      args.element.style.backgroundColor = eventColor;\n    }\n  }\n\n  public firstMonthOfYear(args: Record<string, number>): void {\n    this.scheduleObj.firstMonthOfYear = args.value;\n  }\n\n  public numberOfMonths(args: Record<string, number>): void {\n    this.scheduleObj.monthsCount = args.value;\n  }\n\n  public generateEvents(count: number = 250, date: Date = new Date()): Record<string, any>[] {\n    const names: string[] = [\n      'Bering Sea Gold', 'Technology', 'Maintenance', 'Meeting', 'Travelling', 'Annual Conference', 'Birthday Celebration',\n      'Farewell Celebration', 'Wedding Anniversary', 'Alaska: The Last Frontier', 'Deadliest Catch', 'Sports Day',\n      'MoonShiners', 'Close Encounters', 'HighWay Thru Hell', 'Daily Planet', 'Cash Cab', 'Basketball Practice',\n      'Rugby Match', 'Guitar Class', 'Music Lessons', 'Doctor checkup', 'Brazil - Mexico', 'Opening ceremony', 'Final presentation'\n    ];\n    const colors: string[] = [\n      '#ff8787', '#9775fa', '#748ffc', '#3bc9db', '#69db7c',\n      '#fdd835', '#748ffc', '#9775fa', '#df5286', '#7fa900',\n      '#fec200', '#5978ee', '#00bdae', '#ea80fc'\n    ];\n    const startDate: Date = new Date(date.getFullYear() - 2, 0, 1);\n    const endDate: Date = new Date(date.getFullYear() + 2, 11, 31);\n    const dateCollections: Record<string, any>[] = [];\n    for (let a = 0, id = 1; a < count; a++) {\n      const start: Date = new Date(Math.random() * (endDate.getTime() - startDate.getTime()) + startDate.getTime());\n      const end: Date = new Date(new Date(start.getTime()).setHours(start.getHours() + 1));\n      const nCount: number = Math.floor(Math.random() * names.length);\n      const n: number = Math.floor(Math.random() * colors.length);\n      dateCollections.push({\n        Id: id,\n        Subject: names[nCount],\n        StartTime: new Date(start.getTime()),\n        EndTime: new Date(end.getTime()),\n        IsAllDay: (id % 10) ? true : false,\n        EventColor: colors[n],\n        TaskId: (id % 5) + 1\n      });\n      id++;\n    }\n    return dateCollections;\n  }\n\n}\n","app/app.module.ts":"import { ToastAllModule } from '@syncfusion/ej2-angular-notifications';\n\nimport { DropDownButtonAllModule } from '@syncfusion/ej2-angular-splitbuttons';\n\nimport { TreeViewModule } from '@syncfusion/ej2-angular-navigations';\n\nimport { DropDownListAllModule, MultiSelectAllModule } from '@syncfusion/ej2-angular-dropdowns';\n\nimport { MaskedTextBoxModule, UploaderAllModule } from '@syncfusion/ej2-angular-inputs';\n\nimport { ToolbarAllModule, ContextMenuAllModule, AppBarModule } from '@syncfusion/ej2-angular-navigations';\n\nimport { ButtonAllModule, CheckBoxAllModule, SwitchAllModule } from '@syncfusion/ej2-angular-buttons';\n\nimport { DatePickerAllModule, TimePickerAllModule, DateTimePickerAllModule } from '@syncfusion/ej2-angular-calendars';\n\nimport { NumericTextBoxAllModule, TextBoxAllModule } from '@syncfusion/ej2-angular-inputs';\n\nimport { ScheduleAllModule, RecurrenceEditorAllModule } from '@syncfusion/ej2-angular-schedule';\n\nimport { HttpModule } from '@angular/http';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { RouterModule } from '@angular/router';\n\nimport { CommonModule } from '@angular/common';\n\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from '../app.component';\n@NgModule({ declarations: [ AppComponent ], imports: [ CommonModule, ScheduleAllModule, RecurrenceEditorAllModule,   NumericTextBoxAllModule, TextBoxAllModule, DatePickerAllModule, TimePickerAllModule, DateTimePickerAllModule, CheckBoxAllModule,   ToolbarAllModule, DropDownListAllModule, ContextMenuAllModule, MaskedTextBoxModule, UploaderAllModule, MultiSelectAllModule,   TreeViewModule, ButtonAllModule, DropDownButtonAllModule, SwitchAllModule, BrowserModule, ToastAllModule, AppBarModule], providers: [], bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","app.component.html":"<div class=\"control-section\">\n  <div class=\"col-lg-9 content-wrapper\">\n    <ejs-schedule #scheduleObj width='100%' height='650px' cssClass=\"year-view\" [eventSettings]=\"eventSettings\"\n      [firstMonthOfYear]='0' [monthsCount]='12' (eventRendered)=\"onEventRendered($event)\">\n      <e-resources>\n        <e-resource field='TaskId' title='Category' [dataSource]='resourceDataSource' [allowMultiple]='allowMultiple'\n          name='Categories' textField='text' idField='id' colorField='color'></e-resource>\n      </e-resources>\n      <e-views>\n        <e-view option=\"Year\" [isSelected]=\"isSelected\"></e-view>\n        <e-view option=\"TimelineYear\" displayName=\"Horizontal TimelineYear\"></e-view>\n        <e-view option=\"TimelineYear\" displayName=\"Vertical TimelineYear\" orientation=\"Vertical\"\n          [group]=\"groupSettings\"></e-view>\n      </e-views>\n    </ejs-schedule>\n  </div>\n  <div class=\"col-lg-3 property-section\">\n    <div class=\"property-panel-section\">\n      <div class=\"property-panel-header\">Properties</div>\n      <div class=\"property-panel-content\">\n        <div id=\"property\" class=\"property-panel-table\" title=\"Properties\">\n          <table id=\"property\" title=\"Properties\">\n            <tbody>\n              <tr>\n                <td>\n                  <ejs-dropdownlist placeholder=\"First month of year\" floatLabelType=\"Always\" #firstMonthObj\n                    id=\"firstMonthElement\" [fields]='fields' [dataSource]='months' [value]='0'\n                    (change)='firstMonthOfYear($event)'></ejs-dropdownlist>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <ejs-numerictextbox placeholder=\"Number of months\" floatLabelType=\"Always\" #numberOfMonthsObj\n                    id=\"numberOfMonthsElement\" min='1' max='24' format='###.##' [value]='12'\n                    (change)='numberOfMonths($event)'></ejs-numerictextbox>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-angular-notifications\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-angular-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-angular-calendars\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"@syncfusion/ej2-angular-schedule\":\"*\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\"}"}