{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\n\n\nimport { DropDownListModule } from '@syncfusion/ej2-angular-dropdowns';\nimport { TextBoxModule, NumericTextBoxComponent, NumericTextBoxModule, OtpInputComponent, OtpInputEventArgs } from '@syncfusion/ej2-angular-inputs';\nimport { OtpInputModule } from '@syncfusion/ej2-angular-inputs';\nimport { SwitchModule } from '@syncfusion/ej2-angular-buttons';\n\n/**\n * API sample\n */\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [OtpInputModule, DropDownListModule, TextBoxModule, NumericTextBoxModule, SwitchModule,  ]\n})\nexport class AppComponent {\n    \n    @ViewChild('otpRef') otpRef!: OtpInputComponent\n    @ViewChild('lengthTextBox') lengthTextBox!: NumericTextBoxComponent\n    @ViewChild('resetBtn') resetBtn!: any\n    @ViewChild('verifyBtn') verifyBtn!: any\n\n    public placeHolder: string = 'X';\n    public separatorVal: string = '-';\n    public otpCssClass: string = '';\n    public lengthVal: number = 4;\n    public disabledVal: boolean = false;\n    public styleMode: string = 'Outlined';\n    public styleModeData: string[] = [ 'Outlined', 'Underlined', 'Filled' ];\n    public validationData: string[] = [ 'None' , 'Success', 'Warning', 'Error'];\n\n    dropDownHandler = (args: any) => {\n        this.styleMode = args.value;\n    };\n\n    placeHolderHandler = (args:any) => {\n        this.placeHolder = args.value.toString(); \n    };\n\n    separatorHandler = (args:any) => {\n        this.separatorVal = args.value.toString(); \n    };\n\n    validationHandler(args: any): void {\n        this.otpCssClass = 'e-' + args.value.toLowerCase();\n    };\n\n    lengthHandler(args: any): void {\n        if(!args.value) {\n            this.lengthTextBox.element.value = \"1\";\n        }\n        this.lengthVal = args.value || 1;\n    };\n\n    toggleDisabled = (args: any) => {\n        this.disabledVal = args.checked;\n    };\n\n    handleOtpChange(args: OtpInputEventArgs) {\n        if (args.value !== undefined) {\n            const otpLength = args.value.toString().length;\n            this.verifyBtn.nativeElement.disabled = otpLength !== this.lengthVal;\n            this.resetBtn.nativeElement.disabled = !otpLength;\n        }\n    };\n\n    handleResetClick() {\n        if (this.otpRef) {\n            this.otpRef.value = \"\";\n        }\n        this.verifyBtn.nativeElement.disabled = true;\n        this.resetBtn.nativeElement.disabled = true;\n    };\n\n    handleVerifyClick() {\n        if (this.otpRef) {\n            alert(`Entered OTP value is : ${this.otpRef.value}`);\n        }\n    };\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"col-lg-8 control-section sb-property-border\">\n    <div class=\"api-otp-wrapper\">\n        <div id=\"otp-container\">\n            <div class=\"form-container\">\n                <span class=\"otp-header\"> Enter verification code </span>\n                <div ejs-otpinput #otpRef [separator]=\"separatorVal\" [placeholder]=\"placeHolder\" [length]=\"lengthVal\"\n                    [cssClass]=\"otpCssClass\" [disabled]=\"disabledVal\" [stylingMode]=\"styleMode\"\n                    (input)='handleOtpChange($event)'>\n                </div>\n                <div class=\"otp-actions\">\n                    <button #resetBtn class=\"e-btn\" type=\"button\" disabled=true (click)='handleResetClick()'> Clear\n                    </button>\n                    <button #verifyBtn class=\"e-btn e-primary\" type=\"button\" disabled=true (click)='handleVerifyClick()'>\n                        Verify </button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"col-lg-4 property-section\">\n    <div class=\"property-panel-section\">\n        <div class=\"property-panel-header\">Properties</div>\n        <div class=\"property-panel-content\">\n            <table id=\"property\" title=\"Properties\">\n                <tbody>\n                    <tr>\n                        <td> Styling Mode </td>\n                        <td>\n                            <ejs-dropdownlist [dataSource]='styleModeData' (change)='dropDownHandler($event)' index=0 popupHeight='200px'></ejs-dropdownlist>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td> Validation Status </td>\n                        <td>\n                            <ejs-dropdownlist [dataSource]='validationData' (change)=\"validationHandler($event)\" index=0 popupHeight='200px'></ejs-dropdownlist>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td> Placeholder </td>\n                        <td>\n                            <ejs-textbox value=\"X\" (input)=\"placeHolderHandler($event)\" [htmlAttributes]=\"{ 'maxlength': lengthVal }\"></ejs-textbox>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td> Seperator </td>\n                        <td>\n                            <ejs-textbox [value]=\"separatorVal\" (input)=\"separatorHandler($event)\" [htmlAttributes]=\"{ 'maxlength': 1 }\"></ejs-textbox>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td> Length </td>\n                        <td>\n                            <ejs-numerictextbox #lengthTextBox min=\"1\" max=\"6\" format=\"0\" [value]=\"lengthVal\" (change)=\"lengthHandler($event)\"></ejs-numerictextbox>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td> Disabled </td>\n                        <td>\n                            <ejs-switch (change)='toggleDisabled($event)'></ejs-switch>\n                        </td>\n                    </tr>\n                <tbody>\n            </table>\n        </div>\n    </div>\n</div>\n","app.component.css":".api-otp-wrapper {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding-top: 20px;\n    padding-bottom: 20px;\n    min-height: 400px;\n}\n\n#otp-container {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 50%;\n}\n\n.form-container {\n    height: 220px;\n    padding: 1rem 3rem;\n    box-shadow: 0 1px 3px #d4d4d5, 0 0 0 1px #d4d4d5;\n    border-radius: 4px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.form-container>div {\n    margin: 17px 0px;\n}\n\n.form-container .otp-header {\n    display: inline-block;\n    font-size: 1.4em;\n    font-weight: 500;\n    margin: 10px 0px;\n}\n\n.form-container .otp-actions {\n    display: flex;\n    gap: 20px;\n}\n\n.otp-actions button {\n    width: 80px;\n}\n\n.property-panel-content td {\n    padding: 10px 0px;\n    width: 35%;\n}\n","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}