{"main.ts":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","polyfills.ts":"/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n  <link href=\"../../styles/material.css\" rel=\"stylesheet\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n</head>\n<body class=\"ej2-new\"> \n\n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WLQL39J\"height=\"0\"width=\"0\"style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app.component.ts":"import { ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { BreadcrumbComponent } from '@syncfusion/ej2-angular-navigations';\nimport { MenuItemModel, BreadcrumbItemModel, MenuEventArgs, BreadcrumbBeforeItemRenderEventArgs, Menu, Breadcrumb } from '@syncfusion/ej2-navigations';\nimport { getComponent } from '@syncfusion/ej2-base';\nimport { Button } from '@syncfusion/ej2-buttons';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class AppComponent {\n\n    @ViewChild(\"breadcrumb\") public breadcrumbObj: BreadcrumbComponent;\n    public breadcrumbItems: BreadcrumbItemModel[] = [\n        {\n            iconCss: 'e-bicons e-picture'\n        },\n        {\n            text: 'This PC'\n        },\n        {\n            text: 'Local Disk (C:)'\n        },\n        {\n            text: 'Users'\n        },\n        {\n            text: 'Admin'\n        },\n        {\n            text: 'Pictures'\n        }\n    ];\n\n    public initialBreadcrumbItems: BreadcrumbItemModel[] = [].slice.call(this.breadcrumbItems);\n\n    public items: any = [\n        {\n            text: 'OneDrive', type: 'onedrive',\n            items: [\n                { text: 'Documents', type: 'folder' },\n                { text: 'Email attachments', type: 'folder' },\n                { text: 'Music', type: 'folder' },\n                { text: 'Pictures', type: 'folder' }\n            ]\n        },\n        {\n            text: 'This PC', type: 'desktop',\n            items: [\n                { text: 'Desktop', type: 'desktop' },\n                { text: 'Documents', type: 'documents', items: [\n                    { text: 'IISExpress', type: 'folder', items: [\n                        { text: 'config', type: 'folder' }\n                    ] },\n                    { text: 'Visual Studio 2019', type: 'folder', items: [\n                        { text: 'Code Snippets', type: 'folder' },\n                        { text: 'Templates', type: 'folder' },\n                        { text: 'Visualizers', type: 'folder' }\n                    ] }\n                ] },\n                { text: 'Downloads', type: 'downloads' },\n                {\n                    text: 'Local Disk (C:)', type: 'folder', items: [\n                        {\n                            text: 'Microsoft', type: 'folder'\n                        },\n                        { text: 'Program Files', type: 'folder', items: [ \n                            { text: 'Git', type: 'folder', items: [\n                                { text: 'bin', type: 'folder' },\n                                { text: 'cmd', type: 'folder' },\n                                { text: 'dev', type: 'folder' }\n                            ] },\n                            { text: 'Google', type: 'folder', items:[\n                                { text: 'Chrome', type: 'folder' }\n                            ] },\n                            { text: 'Internet Explorer', type: 'folder', items:[\n                                { text: 'en-US', type: 'folder' }\n                            ] }\n                        ] },\n                        { text: 'Program Files (x86)', type: 'folder', items:[\n                            { text: 'Microsoft', type: 'folder', items: [\n                                { text: 'Edge', type: 'folder' }\n                            ] },\n                            { text: 'MSBuild', type: 'folder' },\n                            { text: 'Windows Defender', type: 'folder' }\n                        ] },\n                        {\n                            text: 'Users', type: 'folder', items: [\n                                {\n                                    text: 'Admin', type: 'folder', items: [\n                                        { text: 'Desktop', type: 'desktop' },\n                                        { text: 'Documents', type: 'documents' },\n                                        { text: 'Downloads', type: 'downloads' },\n                                        { text: 'Pictures', type: 'picture' }\n                                    ]\n                                },\n                                { text: 'Public', type: 'folder' }\n                            ]\n                        },\n                        { text: 'Windows', type: 'folder', items: [\n                            { text: 'Boot', type: 'folder' },\n                            { text: 'System32', type: 'folder', items: [\n                                { text: 'Configuration', type: 'folder' },\n                                { text: 'LogFiles', type: 'folder' }\n                            ] }\n                        ] }\n                    ]\n                },\n                { text: 'Local Disk (D:)', type: 'folder' }\n            ]\n        },\n        { text: 'Libraries', type: 'folder' },\n        { text: 'Network', type: 'network' },\n        { text: 'Recycle Bin', type: 'recyclebin' }\n    ];\n\n    public menuSelect(args: MenuEventArgs) {\n        for (let i: number = 0; i < this.breadcrumbItems.length; i++) {\n            if (this.breadcrumbItems[i].text === args.item.text) {\n                this.breadcrumbItems = this.breadcrumbItems.slice(0, i + 1);\n                this.breadcrumbItems[0].iconCss = 'e-bicons e-' + this.getItems(args.item.text, true)[0].items.type;\n                this.breadcrumbObj.items = this.breadcrumbItems;\n                break;\n            }\n        }\n        this.breadcrumbObj.items.push({ text: 'LastItem' });\n        this.breadcrumbObj.activeItem = 'LastItem';\n    }\n\n    public beforeItemRenderHanlder(args: BreadcrumbBeforeItemRenderEventArgs) {\n        if (args.element.classList.contains('e-breadcrumb-separator')) {\n            const previousItemText: string = (args.item as { previousItem: BreadcrumbItemModel }).previousItem.text;\n                if (previousItemText !== 'LastItem' && this.getItems(previousItemText)[0].items) {\n                    new Menu({\n                        items: this.getItems(previousItemText),\n                        showItemOnClick: true,\n                        select: this.subMenuSelect.bind(this),\n                        beforeOpen: function () {\n                            this.element.classList.add('e-open');\n                        },\n                        onClose: function () {\n                            this.element.classList.remove('e-open');\n                        }\n                    }, args.element.querySelector('ul'));\n            }\n        }\n    }\n\n    public subMenuSelect(args: MenuEventArgs) {\n        if (!args.element.parentElement.classList.contains('e-menu') && (args.item  as any).parentObj.items[0] && (args.item  as any).parentObj.items[0].items) {\n            let subItems = (args.item  as any).parentObj.items;\n            let idx: number;\n            for (let i: number = 0; i < subItems.length; i++) {\n                for (let j: number = 0; j < this.breadcrumbItems.length; j++) {\n                    if (subItems[i].text === this.breadcrumbItems[j].text) {\n                        idx = j;\n                        break;\n                    }\n                }\n            }\n            if (idx) {\n                this.breadcrumbItems = this.breadcrumbItems.slice(0, idx);\n            }\n            this.breadcrumbItems[0].iconCss = 'e-bicons e-' + (args.item as { type: string }).type;\n            if (this.breadcrumbItems[this.breadcrumbItems.length - 1].text === 'LastItem') {\n                this.breadcrumbItems.pop();\n            }\n            this.breadcrumbItems.push({ text: args.item.text });\n            this.breadcrumbItems.push({ text: 'LastItem' });\n            this.breadcrumbObj.items = this.breadcrumbItems;\n        }\n    }\n\n    public beforeOpenHandler(args) {\n        args.parentItem.parentObj.element.classList.add('e-open');\n    }\n\n    public onCloseHandler(args) {\n        args.parentItem.parentObj.element.classList.remove('e-open');\n    }\n\n    public getItems(text: string, needParent?: boolean) {\n        let mItems: any = [].slice.call(this.items);\n        let isBreaked: boolean;\n        if (!text) {\n            mItems = this.getSubMenuItems(mItems);\n        }\n        else {\n            for (let i: number = 1; i < this.breadcrumbItems.length; i++) {\n                for (let j: number = 0; j < mItems.length; j++) {\n                    if (mItems[j].text === this.breadcrumbItems[i].text) {\n                        if (mItems[j].text === text) {\n                            if (needParent) {\n                                mItems = mItems[j];\n                            } else {\n                                mItems = this.getSubMenuItems(mItems[j].items);\n                            }\n                            isBreaked = true;\n                        } else {\n                            mItems = mItems[j].items;\n                            j = 0;\n                        }\n                        break;\n                    }\n                }\n                if (isBreaked) {\n                    break;\n                }\n            }\n        }\n        return [{ items: mItems }];\n    }\n\n    public getSubMenuItems(mItems: MenuItemModel[]) {\n        let subItems: any;\n        if (mItems) {\n            subItems = [];\n            for (let i: number = 0; i < mItems.length; i++) {\n                subItems.push({ text: mItems[i].text, type: (mItems[i] as { type: string }).type });\n            }\n        }\n        return subItems;\n    }\n\n    // To refresh Breadcrumb control state when reset button clicked\n    public btnClick() {\n        this.breadcrumbObj.items = this.initialBreadcrumbItems;\n        this.breadcrumbItems = this.initialBreadcrumbItems;\n    }\n}","app/app.module.ts":"import { ChipListModule } from '@syncfusion/ej2-angular-buttons';\n\nimport { BreadcrumbAllModule, MenuModule } from '@syncfusion/ej2-angular-navigations';\n\nimport { HttpModule } from '@angular/http';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { RouterModule } from '@angular/router';\n\nimport { CommonModule } from '@angular/common';\n\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from '../app.component';\n@NgModule({ declarations: [ AppComponent ], imports: [ BreadcrumbAllModule, ChipListModule, MenuModule, BrowserModule, CommonModule], providers: [], bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","app.component.html":"<div class=\"control-section\">\n    <div class=\"content-wrapper\">\n        <div class=\"row material2\">\n            <div class=\"col-xs-12 col-sm-12 col-lg-12 col-md-12\">\n                <h5 style=\"display: inline-block\">File Manager like Breadcrumb</h5>\n                <button ejs-button id=\"reset\" class=\"reset-btn e-small\" (click)=btnClick()>Reset State</button>\n            </div>\n        </div>\n        <div class=\"row material2\">\n            <div class=\"col-xs-12 col-sm-12 col-lg-12 col-md-12\">\n                <ejs-breadcrumb #breadcrumb cssClass=\"e-custom-breadcrumb\" (beforeItemRender)=\"beforeItemRenderHanlder($event)\">\n                    <e-breadcrumb-items>\n                        <e-breadcrumb-item iconCss=\"e-bicons e-picture\"></e-breadcrumb-item>\n                        <e-breadcrumb-item text=\"This PC\"></e-breadcrumb-item>\n                        <e-breadcrumb-item text=\"Local Disk (C:)\"></e-breadcrumb-item>\n                        <e-breadcrumb-item text=\"Users\"></e-breadcrumb-item>\n                        <e-breadcrumb-item text=\"Admin\"></e-breadcrumb-item>\n                        <e-breadcrumb-item text=\"Pictures\"></e-breadcrumb-item>\n                    </e-breadcrumb-items>\n                    <ng-template #itemTemplate let-dataSource=\"\">\n                    <div *ngIf='dataSource.text != \"LastItem\"' style=\"display: flex;\">\n                        <ejs-menu (select)=\"menuSelect($event)\">\n                            <e-menu-items>\n                                <e-menu-item text={{dataSource.text}} iconCss={{dataSource.iconCss}}></e-menu-item>\n                            </e-menu-items>\n                        </ejs-menu>\n                    </div>\n                    </ng-template>\n                    <ng-template #separatorTemplate let-dataSource=\"\">\n                        <div style=\"display: flex;\">\n                            <ul></ul>\n                        </div>\n                        </ng-template>\n                </ejs-breadcrumb>\n            </div>\n        </div>\n    </div>\n</div>","app.component.css":".e-custom-breadcrumb .e-menu-wrapper ul .e-menu-item.e-menu-caret-icon {\n    padding-right: 20px !important;\n    padding-left: 0px !important;\n    overflow: hidden;\n}\n\n.tailwind .e-custom-breadcrumb .e-menu-wrapper ul .e-menu-item.e-menu-caret-icon,\n.tailwind-dark .e-custom-breadcrumb .e-menu-wrapper ul .e-menu-item.e-menu-caret-icon,\n.e-bigger.bootstrap-dark .e-custom-breadcrumb .e-menu-wrapper ul .e-menu-item.e-menu-caret-icon {\n    padding-right: 25px !important;\n}\n\n.bootstrap5 .e-custom-breadcrumb .e-menu-wrapper ul .e-menu-item.e-menu-caret-icon,\n.bootstrap5-dark .e-custom-breadcrumb .e-menu-wrapper ul .e-menu-item.e-menu-caret-icon {\n    padding-right: 23px !important;\n    margin-top: -2px;\n}\n\n.e-custom-breadcrumb .e-menu-wrapper ul .e-menu-item .e-caret {\n    right: 5px;\n}\n\n.fluent .e-custom-breadcrumb .e-menu-wrapper ul .e-menu-item .e-caret,\n.fluent-dark .e-custom-breadcrumb .e-menu-wrapper ul .e-menu-item .e-caret {\n    right: 2px;\n}\n\n.e-bigger .fluent .e-custom-breadcrumb .e-menu-wrapper ul .e-menu-item .e-caret,\n.e-bigger .fluent-dark .e-custom-breadcrumb .e-menu-wrapper ul .e-menu-item .e-caret {\n    right: 1px;\n}\n\n.e-custom-breadcrumb .e-breadcrumb-item,\n.e-custom-breadcrumb .e-breadcrumb-separator {\n    padding: 0px !important;\n}\n\n.fabric .e-custom-breadcrumb .e-menu {\n    padding: 0 8px !important;\n}\n\n.fabric .e-bigger .e-custom-breadcrumb .e-menu {\n    padding: 0 12px !important;\n}\n\n.fabric .e-custom-breadcrumb .e-breadcrumb-item .e-menu,\n.highcontrast .e-custom-breadcrumb .e-breadcrumb-item .e-menu,\n.fabric-dark .e-custom-breadcrumb .e-breadcrumb-item .e-menu {\n    padding: 0 !important;\n}\n\n.e-custom-breadcrumb .e-menu-wrapper {\n    border: none;\n}\n\n.e-custom-breadcrumb ol {\n    background-color: transparent !important;\n}\n\n.e-custom-breadcrumb .e-menu-wrapper ul .e-menu-item .e-menu-icon {\n    margin-right: 0;\n}\n\n.fabric-dark .e-custom-breadcrumb .e-menu-wrapper ul .e-menu-item .e-menu-icon,\n.fabric .e-custom-breadcrumb .e-menu-wrapper ul .e-menu-item .e-menu-icon,\n.highcontrast .e-custom-breadcrumb .e-menu-wrapper ul .e-menu-item .e-menu-icon  {\n    padding-right: 22px;\n    padding-left: 6px;\n}\n\n.bootstrap .e-custom-breadcrumb .e-menu-wrapper ul .e-menu-item .e-menu-icon {\n    padding-right: 16px;\n}\n\n.e-custom-breadcrumb .e-caret {\n    transform: rotate(-90deg);\n}\n\n.e-custom-breadcrumb .e-open .e-caret {\n    transform: none;\n}\n\n.reset-btn {\n    float: right;\n    margin: 5px 2px 5px 0;\n}\n\n@font-face {\n    font-family: 'e-bicons';\n    src:\n        url(data:application/x-font-ttf;charset=utf-8;base64,) format('truetype');\n    font-weight: normal;\n    font-style: normal;\n}\n\n.e-bicons {\n    font-family: 'e-bicons' !important;\n}\n\n.e-folder::before {\n    content: '\\e705';\n}\n\n.e-onedrive::before {\n    content: '\\e713';\n}\n\n.e-pc::before {\n    content: '\\e711';\n}\n\n.e-desktop::before {\n    content: '\\e700';\n}\n\n.e-documents::before {\n    content: '\\e70d';\n}\n\n.e-downloads::before {\n    content: '\\e709';\n}\n\n.e-picture::before {\n    content: '\\e718';\n}\n\n.e-network::before {\n    content: '\\e71c';\n}\n\n.e-recyclebin::before {\n    content: '\\e71f';\n}\n/* custom code start*/\n.content-wrapper {\n    width: 90%;\n    margin: 0 auto;\n    min-width: 85px;\n}\n\n.content-wrapper div.row {\n    padding: 15px 0px;\n}\n\n@media only screen and (max-width: 480px) {\n    .content-wrapper {\n        width: 92%;\n    }\n\n    .col-xs-12,\n    .col-xs-4,\n    .col-xs-12 {\n        padding: 10px 5px;\n        width: 100%;\n    }\n\n    .content-wrapper div.row {\n        padding: 0px;\n    }\n}\n\n.bootstrap .e-custom-breadcrumb ol,\n.bootstrap4 .e-custom-breadcrumb ol,\n.bootstrap-dark .e-custom-breadcrumb ol {\n    margin-left: -16px;\n}\n\n    .e-bigger.bootstrap5-dark .e-custom-breadcrumb .e-menu-wrapper ul .e-menu-item.e-menu-caret-icon,\n    .e-bigger.bootstrap5 .e-custom-breadcrumb .e-menu-wrapper ul .e-menu-item.e-menu-caret-icon {\n        margin-top: -2px;\n        padding-right: 26px !important;\n    }\n\n    .e-bigger.fabric-dark .e-custom-breadcrumb .e-menu-wrapper ul .e-menu-item.e-menu-caret-icon {\n        padding-right: 25px !important;\n    }\n    .e-bigger.fabric .e-custom-breadcrumb .e-menu-wrapper ul .e-menu-item.e-menu-caret-icon,\n    .e-bigger.highcontrast .e-custom-breadcrumb .e-menu-wrapper ul .e-menu-item.e-menu-caret-icon {\n        padding-right: 22px !important;\n    }\n/* custom code end*/","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\"}"}