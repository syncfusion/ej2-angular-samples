{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, OnInit } from '@angular/core';\n\n\nimport { NgModule, ViewChild } from '@angular/core'\nimport { PageService, SortService, TreeGridComponent, TreeGridModule } from '@syncfusion/ej2-angular-treegrid'\nimport { FilterService, EditService, ToolbarService } from '@syncfusion/ej2-angular-treegrid'\nimport { templateCompiler } from '@syncfusion/ej2-grids';\nimport { ButtonComponent, ButtonModule } from '@syncfusion/ej2-angular-buttons';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    standalone: true,\n    imports: [TreeGridModule, ButtonModule,  ],\n    providers: [FilterService, EditService, ToolbarService, PageService, SortService],\n})\nexport class AppComponent {\n    public pageSettings: Object;\n    @ViewChild('emptyTreeGrid', { static: false }) public treegrid: TreeGridComponent;\n    @ViewChild('emptyRecordTemplate', { static: false }) public emptyRecordTemplate: any;\n    @ViewChild('addRecordBtn') public addRecordButton: ButtonComponent;\n    public data: Object[] = [];\n    public toolbar: string[];\n    public filterSettings: any;\n    public editSettings: Object;\n    public taskIdRules: Object = { required: true, number: true };\n    public taskNameRules: Object = { required: true };\n    public priorityParams: Object = { params: { dataSource: [{priority:\"Low\"},{priority:\"Medium\"},{priority:\"High\"},{priority:\"Critical\"}] } };\n    public statusParams: Object = { params:{dataSource:[{status:\"Open\"},{status:\"Inprogress\"},{status:\"Review-Request\"},{status:\"Review-Reject\"},{status:\"Closed\"}]}}\n\n    public onActionComplete(args: any) {\n      \n      \n      // Toggle filter dialog based on visible records\n      if (args.requestType === 'filterAfterOpen' && this.treegrid.flatData.length === 0) {\n        if (args.filterModel.filterSettings.columns.length > 0 && args.filterModel.filterSettings.columns.some((col: any) => col.field === args.columnName)) {\n          args.filterModel.dlgObj.show();\n        }\n        else {\n          args.filterModel.dlgObj.hide();\n        }\n      }\n      if ((args.requestType === 'delete' || args.requestType === 'searching') && this.treegrid.flatData.length === 0 && this.treegrid.searchSettings.key === '') {\n            this.treegrid.toolbarModule.enableItems([this.treegrid.element.id + '_gridcontrol_searchbar'], false);\n      }\n      if(args.action === 'clearFilter' && this.treegrid.flatData.length !== 0) {\n          this.treegrid.toolbarModule.enableItems([this.treegrid.element.id + '_gridcontrol_searchbar'], true);\n      }\n    }\n   \n     public dataBound(args:any){\n\n        const isGridEmpty = this.treegrid.flatData.length === 0;\n        if (this.treegrid.searchSettings.key === '' || this.treegrid.searchSettings.key === undefined) {\n           this.treegrid.toolbarModule.enableItems([this.treegrid.element.id + '_gridcontrol_searchbar'], !isGridEmpty);\n        }\n\n        const filterMenudivs: any = this.treegrid.element.querySelectorAll('.e-filtermenudiv');\n        filterMenudivs.forEach((div: HTMLElement) => {\n            if (isGridEmpty && this.treegrid.grid.filterSettings.columns.length == 0) {\n                div.classList.add('e-disabled');\n                div.style.cursor = 'default';\n            } else {\n                div.classList.remove('e-disabled');\n                div.style.removeProperty('cursor');\n            }\n        });\n    }\n    ngOnInit(): void {\n        this.data = [];\n        this.toolbar = [\"Add\",\"Update\", \"Cancel\",\"Delete\", \"Search\"];\n        this.editSettings = { allowAdding: true,allowDeleting: true, allowEditing: true };\n        this.filterSettings = { type: 'Menu', hierarchyMode: 'Parent' };\n    }\n    \n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section\">\n    <ejs-treegrid #emptyTreeGrid [dataSource]='data' [treeColumnIndex]='1' [editSettings]='editSettings' [toolbar]='toolbar' allowFiltering='true' [filterSettings]='filterSettings' (actionComplete)='onActionComplete($event)' (dataBound)=\"dataBound($event)\" childMapping='subtasks' allowPaging='true' allowSorting='true'>\n        <e-columns>\n            <e-column field='taskID' headerText='Task ID' type='number' textAlign='Right' isPrimaryKey=\"true\" [validationRules]=\"taskIdRules\" width=110></e-column>\n            <e-column field='taskName' headerText='Task Name' type='string' textAlign='Left' [validationRules]=\"taskNameRules\" width=130></e-column>\n            <e-column field='priority' headerText='Priority' type='string' textAlign='Left' width=100 editType='dropdownedit' [edit]=\"priorityParams\"></e-column>\n            <e-column field='assignee' headerText='Assignee' type='string' textAlign='Left' width=110></e-column>\n            <e-column field='status' headerText='Status' type='string' textAlign='Left' editType='dropdownedit' [edit]=\"statusParams\" width=120></e-column>\n            <e-column field='duration' headerText='Duration in Days' type='number' editType='numericedit' textAlign='Right' width=150></e-column>\n        </e-columns>\n        <ng-template #emptyRecordTemplate>\n            <div class='emptyRecordTemplate'>\n                <img src=\"https://ej2.syncfusion.com/angular/demos/assets/grid/images/emptyRecordTemplate_light.svg\" class=\"e-emptyRecord\" alt=\"No record\" style=\"width: 50px; height: 50px;\">\n                <div><b>There is no data available to display at the moment.</b></div><br>\n            </div>\n        </ng-template>\n    </ejs-treegrid>\n</div>\n","app.component.css":".emptyRecordTemplate {\n    text-align: center;\n    margin: 31px auto;\n}\n\n.e-emptyRecord {\n    display: block;\n    margin: 15px auto;\n    border-radius: 4px;\n    box-shadow: 2px 4px 10px rgba(52, 52, 52, 0.5);\n}","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-treegrid\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-treegrid\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-compression\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-excel-export\":\"*\",\"@syncfusion/ej2-file-utils\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-pdf-export\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-angular-calendars\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-angular-popups\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-angular-charts\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}