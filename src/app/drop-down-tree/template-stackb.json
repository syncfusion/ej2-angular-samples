{"main.ts":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","polyfills.ts":"/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n  <link href=\"../../styles/material.css\" rel=\"stylesheet\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n</head>\n<body class=\"ej2-new\"> \n\n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WLQL39J\"height=\"0\"width=\"0\"style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app.component.ts":"/**\n * Dropdown Tree Template Sample\n */\nimport { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n    // define the JSON of data\n    public data: { [key: string]: Object }[] = [\n        { id: 1, name: 'Steven Buchanan', eimg: '10', job: 'General Manager', hasChild: true, expanded: true, status:'busy' },\n        { id: 2, pid: 1, name: 'Laura Callahan', eimg: '2', job: 'Product Manager', hasChild: true, status:'online' },\n        { id: 3, pid: 2, name: 'Andrew Fuller', eimg: '7', job: 'Team Lead', hasChild: true, status:'away' },\n        { id: 4, pid: 3, name: 'Anne Dodsworth', eimg: '1', job: 'Developer', status:'busy' },\n        { id: 10, pid: 3, name: 'Lilly', eimg: '5', job: 'Developer', status:'online' },\n        { id: 5, pid: 1, name: 'Nancy Davolio', eimg: '4', job: 'Product Manager', hasChild: true, status:'away' },\n        { id: 6, pid: 5, name: 'Michael Suyama', eimg: '9', job: 'Team Lead', hasChild: true, status:'online' },\n        { id: 7, pid: 6, name: 'Robert King', eimg: '8', job: 'Developer ', status:'online' },\n        { id: 11, pid: 6, name: 'Mary', eimg: '6', job: 'Developer ', status:'away' },\n        { id: 9, pid: 1, name: 'Janet Leverling', eimg: '3', job: 'HR', status:'online' }\n    ];\n    // maps the appropriate column to fields property\n    public fields: Object = { dataSource: this.data, text: 'name', value: 'id', parentValue: 'pid', hasChildren: 'hasChild' };\n    // set the height of the popup element\n    public height: string = '300px';\n    // set the placeholder to Dropdown Tree input element\n    public watermark: string = 'Select an employee';\n    \n}","app/app.module.ts":"import { CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\n\nimport { DropDownTreeModule } from '@syncfusion/ej2-angular-dropdowns';\n\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from '../app.component';\n\n@NgModule({ declarations: [ AppComponent ], imports: [ BrowserModule, DropDownTreeModule, FormsModule, CheckBoxModule, ReactiveFormsModule,BrowserModule], providers: [], bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","app.component.html":"\n<div class=\"control-section\">\n    <div id='content' style=\"margin: 0px auto; max-width:350px; padding-top: 40px;\">\n        <ejs-dropdowntree id='ddttemplate' [fields]='fields' [popupHeight]='height' [placeholder]='watermark' cssClass=\"ddt-template\" >\n            <ng-template #headerTemplate>\n                <div class=\"head\"> Employee List </div>\n            </ng-template>\n            <ng-template #itemTemplate let-data>\n                <div>\n                    <img class=\"eimage\" src=\"https://ej2.syncfusion.com/angular/demos/assets/drop-down-tree/Employees/{{data.eimg}}.png\" alt=\"{{data.eimg}}\" />\n                    <div>\n                        <div class=\"ename\">{{data.name}}</div>\n                        <div class=\"ejob\">{{data.job}}</div>\n                        <span class=\"e-badge icons\">\n                            <span class={{data.status}}></span>\n                        </span>  \n                    </div>\n                </div>\n            </ng-template>\n            <ng-template #footerTemplate>\n                <div class=\"footer\">\n                    <div class=\"footer-content\">\n                        <span class=\"e-badge\">\n                            <span class=\"display available\">\n                                <span class=\"status online\"></span>\n                                Available\n                            </span>\n                            <span class=\"display meeting\">\n                                <span class=\"status busy\"></span>\n                                Busy\n                            </span>\n                            <span class=\"display unavailable\">\n                                <span class=\"status away\"></span>\n                                Away\n                            </span>\n                        </span>\n                    </div>        \n                </div>\n            </ng-template>\n        </ejs-dropdowntree>\n    </div>\n</div>\n","app.component.css":".ddt-template .head {\n    height: 40px;\n    line-height: 40px;\n    font-size: 14px;\n    margin: 0 auto;\n    width: 100%;\n    padding: 0 20px;\n}\n\n.e-rtl.ddt-template .e-badge.icons {\n    left: 0;\n    right: unset;\n}\n\n.e-rtl.ddt-template .eimage {\n    padding: 11px 0 11px 16px;\n    float: right;\n}\n\n.ddt-template .footer {\n    vertical-align: middle;\n    padding: 10px;\n    text-align: center;\n}\n\n.ddt-template .head,\n.ddt-template .footer {\n    background-color: #F5F5F5;\n    color: #718292;\n    box-sizing: border-box;\n    font-weight: bold;\n}\n\n.highcontrast .ddt-template .head,\n.highcontrast .ddt-template .footer,\n.highcontrast .ddt-template .footer-content .e-badge {\n    color: #fff;\n    background-color: #000;\n}\n\n.material-dark .ddt-template .head,\n.material-dark .ddt-template .footer,\n.material-dark .ddt-template .footer-content .e-badge {\n    color: #fff;\n    background-color: #333;\n}\n\n.fabric-dark .ddt-template .head,\n.fabric-dark .ddt-template .footer,\n.fabric-dark .ddt-template .footer-content .e-badge {\n    color: #fff;\n    background-color: #3333;\n}\n\n.bootstrap-dark .ddt-template .head,\n.bootstrap-dark .ddt-template .footer,\n.bootstrap-dark .ddt-template .footer-content .e-badge {\n    color: #fff;\n    background-color: #1A1A1A;\n}\n\n.tailwind-dark .ddt-template .head,\n.tailwind-dark .ddt-template .footer,\n.tailwind-dark .ddt-template .footer-content .e-badge {\n    color: #fff;\n    background-color: #1f2937;\n}\n\n.bootstrap5-dark .ddt-template .head,\n.bootstrap5-dark .ddt-template .footer,\n.bootstrap5-dark .ddt-template .footer-content .e-badge {\n    color: #fff;\n    background-color: #212529;\n}\n\n.e-bigger .e-ddt.ddt-template .e-treeview .e-fullrow,\n.e-ddt.ddt-template .e-treeview .e-fullrow {\n    height: 72px;\n}\n\n.e-ddt.ddt-template .e-treeview .e-list-text {\n    line-height: normal;\n}\n\n.e-ddt.ddt-template .e-treeview .e-list-parent.e-ul {\n    width: 100%;\n}\n\n.ddt-template .eimage {\n    float: left;\n    padding: 11px 16px 11px 0;\n    height: 48px;\n    width: 48px;\n    box-sizing: content-box;\n}\n\n.ddt-template .ename {\n    font-size: 16px;\n    padding: 14px 0 0;\n}\n\n.ddt-template .ejob {\n    font-size: 14px;\n    color: #979A9C;\n    opacity: .87;\n    padding: 5px;\n}\n\n.ddt-template .e-badge.icons {\n    padding: 0;\n    right: 0;\n    position: absolute;\n    top: 25px;\n    background: transparent;\n}\n\n.ddt-template .footer-content .e-badge {\n    display: flex;\n}\n\n.ddt-template .display {\n    width: 100%;\n}\n\n.ddt-template .status {\n    margin-right: 10px;\n}\n\n.ddt-template .footer .e-badge.icons {\n    position: relative;\n}\n\n.ddt-template .e-badge.icons span,\n.ddt-template .status {\n    width: 8px;\n    height: 8px;\n    display: inline-block;\n    border-radius: 50%;\n}\n\n.ddt-template .busy {\n    background-color: #FF4B4B;\n}\n\n.ddt-template .online {\n    background-color: #98E16E;\n}\n\n.ddt-template .away {\n    background-color: #FFE65E;\n}\n\n.e-ddt.e-popup.ddt-template .e-treeview {\n    display: block;\n}","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\"}"}