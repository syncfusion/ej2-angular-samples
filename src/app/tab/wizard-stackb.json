{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewChild, OnInit, ViewEncapsulation, ElementRef } from '@angular/core';\n\nimport { DialogComponent, DialogModule } from '@syncfusion/ej2-angular-popups';\nimport { TabComponent, SelectEventArgs, TabModule } from '@syncfusion/ej2-angular-navigations';\nimport { DatePickerComponent, DatePickerModule } from '@syncfusion/ej2-angular-calendars';\nimport { NumericTextBoxComponent, NumericTextBoxModule } from '@syncfusion/ej2-angular-inputs';\nimport { GridComponent, RowSelectEventArgs, GridModule } from '@syncfusion/ej2-angular-grids';\nimport { isNullOrUndefined as isNOU } from '@syncfusion/ej2-base';\nimport { DropDownListComponent, DropDownListModule } from '@syncfusion/ej2-angular-dropdowns';\n\n\nimport { ChartModule } from '@syncfusion/ej2-angular-charts';\n/**\n * Create wizard using Tab\n */\n// tslint:disable:max-line-length\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [TabModule, DropDownListModule, DatePickerModule, GridModule, ChartModule, NumericTextBoxModule, DialogModule,  ]\n})\n\nexport class AppComponent {\n    @ViewChild('tab') tab: TabComponent;\n    @ViewChild('pass_name1') input1: ElementRef;\n    @ViewChild('pass_name2') input2: ElementRef;\n    @ViewChild('pass_name3') input3: ElementRef;\n    @ViewChild('alertDialog') alertDlg: DialogComponent;\n    @ViewChild('date') journeyDate: DatePickerComponent;\n    @ViewChild('quota') ticketType: DropDownListComponent;\n    @ViewChild('endPoint') endPoint: DropDownListComponent;\n    @ViewChild('startPoint') startPoint: DropDownListComponent;\n    @ViewChild('availableTrain') availTrainGrid: GridComponent;\n    @ViewChild('pass_age1') passage1: NumericTextBoxComponent;\n    @ViewChild('pass_age2') passage2: NumericTextBoxComponent;\n    @ViewChild('pass_age3') passage3: NumericTextBoxComponent;\n    @ViewChild('ticketDetailGrid') ticketDetailGrid: GridComponent;\n    @ViewChild('pass_gender1') passgender1: DropDownListComponent;\n    @ViewChild('pass_gender2') passgender2: DropDownListComponent;\n    @ViewChild('pass_gender3') passgender3: DropDownListComponent;\n    @ViewChild('pass_berth1') passBerth1: DropDownListComponent;\n    @ViewChild('pass_berth2') passBerth2: DropDownListComponent;\n    @ViewChild('pass_berth3') passBerth3: DropDownListComponent;\n\n    public fields: Object = {};\n    public quotas: Object[] = [];\n    public gender: Object[] = [];\n    public berths: Object[] = [];\n    public today: Date = new Date();\n    public cities: any;\n    public locations: any;\n    public headerText: Object[] = [];\n    public dlgButtons: Object[] = [];\n    public selectedTrain: any;\n    public autoCompleteFields: Object = {};\n    public dlgTarget: HTMLElement = document.querySelector('.sb-content-section.e-tab > .e-content');\n    public dateMin: Date;\n    public dateMax: Date;\n    public result: Object[] = [];\n    public reserved: Object[] = [];\n    public trainDataSource: Object[] = [];\n    public ticketDataSource: Object[] = [];\n\n    public ngOnInit(): void {\n        document.body.style.visibility = 'hidden';\n        this.dateMin = new Date(this.today.getTime());\n        this.dateMax = new Date(this.today.getTime() + 60 * 24 * 60 * 60 * 1000);\n        this.headerText = [\n            { 'text': 'New Booking' },\n            { 'text': 'Train List' },\n            { 'text': 'Add Passenger' },\n            { 'text': 'Make Payment' }];\n\n        this.quotas = [\n            { id: '1', text: 'Business Class' },\n            { id: '2', text: 'Economy Class' },\n            { id: '4', text: 'Common Class' }\n        ];\n\n        this.gender = [\n            { id: '1', text: 'Male' },\n            { id: '2', text: 'Female' }\n        ];\n\n        this.berths = [\n            { id: '1', text: 'Upper' },\n            { id: '2', text: 'Lower' },\n            { id: '3', text: 'Middle' },\n            { id: '4', text: 'Window' },\n            { id: '5', text: 'Aisle' }\n        ];\n        this.cities = [\n            { name: 'Chicago', fare: 300 },\n            { name: 'San Francisco', fare: 125 },\n            { name: 'Los Angeles', fare: 175 },\n            { name: 'Seattle', fare: 250 },\n            { name: 'Florida', fare: 150 }\n        ];\n\n        this.fields = { id: 'id', text: 'text', value: 'text' };\n        this.autoCompleteFields = { text: 'name', value: 'name' };\n\n        this.dlgButtons = [{\n            buttonModel: { content: 'Ok', isPrimary: true },\n            click: (() => {\n                this.alertDlg.hide();\n                this.input1.nativeElement.value = this.input2.nativeElement.value = this.input3.nativeElement.value = '';\n                this.passage1.value = this.passage2.value = this.passage3.value = 18;\n                this.passgender1.value = this.passgender2.value = this.passgender3.value = 'Male';\n                this.passBerth1.value = this.passBerth2.value = this.passBerth3.value = null;\n                this.tab.enableTab(0, true);\n                this.tab.enableTab(1, false);\n                this.tab.enableTab(2, false);\n                this.tab.enableTab(3, false);\n                this.tab.select(0);\n            })\n        }];\n    }\n\n    public ngAfterViewInit(): void {\n        document.body.style.visibility = 'visible';\n    }\n\n    public showDate(): void {\n        this.journeyDate.show();\n    }\n\n    public trainSelected(args: RowSelectEventArgs): void {\n        this.selectedTrain = args.data;\n    }\n\n    public tabSelecting(e: SelectEventArgs): void {\n        if (e.isSwiped) {\n            e.cancel = true;\n        }\n    }\n\n    public dlgCreated(): void {\n        this.alertDlg.hide();\n    }\n\n    public btnClicked(e: any): void {\n        switch (e.target.id) {\n            case 'searchNext':\n                /* Validate the Source, Destination, Date and Class chosen and proceed only if all the fields are selected */\n                if (!isNOU(this.startPoint.value) && !isNOU(this.endPoint.value) &&\n                    !isNOU(this.ticketType.value) && !isNOU(this.journeyDate.value)) {\n                    if (!isNOU(this.startPoint.value) && this.startPoint.value == this.endPoint.value) {\n                        document.getElementById('err1').innerText = '* Arrival point cannot be same as Departure';\n                    } else {\n                        this.result = [];\n                        this.filterTrains(e);\n                        this.trainDataSource = this.result;\n                        this.tab.enableTab(1, true);\n                        this.tab.enableTab(0, false);\n                        document.getElementById('err1').innerText = '';\n                        document.getElementById('err2').innerText = '';\n                    }\n                } else {\n                    document.getElementById('err1').innerText = '* Please fill all the details before proceeding';\n                }\n                break;\n            case 'bookTickets':\n                /* Based on the selected station generate Grid content to display trains available */\n                if (this.availTrainGrid.getSelectedRecords() === undefined || this.availTrainGrid.getSelectedRecords().length === 0) {\n                    document.getElementById('err2').innerText = '* Select your convenient train';\n                } else {\n                    this.tab.enableTab(2, true);\n                    this.tab.enableTab(1, false);\n                    document.getElementById('err2').innerText = '';\n                }\n                break;\n            case 'confirmTickets':\n                /* Get the Passenger details and validate the fields must not be left empty */\n                if (this.input1.nativeElement.value === '' || isNOU(this.passgender1.value) || isNOU(this.passage1.value)) {\n                    document.getElementById('err3').innerText = '* Please enter passenger details';\n                } else {\n                    this.reserved = []\n                    this.tab.enableTab(3, true);\n                    this.tab.enableTab(2, false);\n                    document.getElementById('err3').innerText = '';\n                    this.finalizeDetails(e);\n                    this.ticketDataSource = this.reserved;\n                }\n                break;\n            case 'makePayment':\n                this.alertDlg.show();\n                break;\n            case 'goToSearch':\n                /* Go back to change class, date or boarding places */\n                this.selectedTrain = [];\n                this.tab.enableTab(0, true);\n                this.tab.select(0);\n                this.tab.enableTab(1, false);\n                break;\n            case 'goBackToBook':\n                /* Change the preferred train chosen already */\n                this.tab.enableTab(1, true);\n                this.tab.select(1);\n                this.tab.enableTab(2, false);\n                break;\n            case 'goBackDetails':\n                /* Update passenger detail before confirming the payment */\n                this.tab.enableTab(2, true);\n                this.tab.select(2);\n                this.tab.enableTab(3, false);\n                break;\n        }\n    }\n\n    public filterTrains(args: any): void {\n        /* Generating trains based on source and destination chosen */\n        let fromCity: string = <string>this.startPoint.value;\n        let toCity: string = <string>this.endPoint.value;\n        let count: number = Math.floor((Math.random() * 3) + 2);\n\n        for (let i: number = 0; i < count; i++) {\n            let details = <Details>{};\n            details.TrainNo = Math.floor((Math.random() * 20) + 19000);\n            details.Name = 'Train ' + i;\n            details.Departure = fromCity;\n            details.Arrival = toCity;\n            details.Availability = Math.floor((Math.random() * 20) + 20);\n            this.result.push(details);\n        }\n    }\n\n    public finalizeDetails(args: any): void {\n        /* Get the passenger details and update table with name and other details for confirmation */\n        let passCount: any = 0;\n        for (let i: number = 1; i <= 3; i++) {\n            if (this.input1.nativeElement.value !== '') {\n                let details = <Details>{};\n                let gender: any = (i === 1) ? this.passgender1.value : (i === 2) ?\n                    this.passgender2.value : this.passgender3.value;\n                let berth: any = (i === 1) ? this.passBerth1.value : (i === 2) ?\n                    this.passBerth2.value : this.passBerth3.value;\n                details.TrainNo = this.selectedTrain.TrainNo.toString();\n                details.PassName = (i === 1) ? this.input1.nativeElement.value : (i === 2) ?\n                    this.input2.nativeElement.value : this.input3.nativeElement.value;\n                details.Gender = (gender === '') ? 'Male' : gender;\n                details.Berth = (berth === null) ? 'Any' : berth;\n                if (details.PassName !== '') { this.reserved.push(details); }\n                passCount++;\n            }\n            let calcFare: any = 0;\n            for (let i: number = 0; i < this.cities; i++) {\n                if (this.startPoint.value === this.cities[i].name) { calcFare = calcFare + this.cities[i].fare; }\n                if (this.endPoint.value === this.cities[i].name) { calcFare = calcFare + this.cities[i].fare; }\n            }\n            let displayAmt: any = document.getElementById('amount');\n            if (this.ticketType.value === 'Economy Class') {\n                displayAmt.innerText = 'Total payable amount: $' + passCount * (300 + calcFare)\n            } else if (this.ticketType.value === 'Business Class') {\n                displayAmt.innerText = 'Total payable amount: $' + passCount * (500 + calcFare)\n            } else if (this.ticketType.value === 'Common Class') {\n                displayAmt.innerText = 'Total payable amount: $' + passCount * (150 + calcFare)\n            }\n        }\n    }\n}\ninterface Details {\n    TrainNo: number;\n    Name: string;\n    Departure: string;\n    Arrival: string;\n    Availability: number;\n    PassName: string;\n    Gender: any;\n    Berth: string;\n    SeatNo: number;\n}\n// tslint:enable:max-line-length","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"col-lg-12 control-section e-tab-section\">\n    <div class=\"e-sample-resize-container\">\n        <ejs-tab #tab id=\"tab_wizard\" heightAdjustMode=\"None\" height=\"auto\" showCloseButton=false\n            (selecting)=\"tabSelecting($event)\">\n            <e-tabitems>\n                <e-tabitem [header]='headerText[0]'>\n                    <ng-template #content>\n                        <div id='booking'>\n                            <div class=\"wizard-title\">Plan your journey</div>\n                            <div class=\"responsive-align\">\n                                <div class='row'>\n                                    <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6 search-item\">\n                                        <ejs-dropdownlist #startPoint width=\"100%\" [dataSource]='cities'\n                                            [fields]='autoCompleteFields' floatLabelType='Auto' placeholder='From'>\n                                        </ejs-dropdownlist>\n                                    </div>\n                                    <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6 search-item\">\n                                        <ejs-dropdownlist #endPoint width=\"100%\" [dataSource]='cities'\n                                            [fields]='autoCompleteFields' floatLabelType='Auto' placeholder='To'>\n                                        </ejs-dropdownlist>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6 search-item\">\n                                        <ejs-datepicker #date width='100%' placeholder='Journey Date'\n                                            floatLabelType='Auto' [min]='dateMin' [max]='dateMax' [value]='today'>\n                                        </ejs-datepicker>\n                                    </div>\n                                    <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6 search-item\">\n                                        <ejs-dropdownlist #quota [dataSource]='quotas' placeholder='Ticket type'\n                                            floatLabelType='Auto' [fields]='fields'></ejs-dropdownlist>\n                                    </div>\n                                </div>\n                                <div class=\"btn-container\">\n                                    <button id='searchNext' class='e-btn' (click)='btnClicked($event)'>Search\n                                        Train</button>\n                                </div>\n                                <span id=\"err1\"></span>\n                            </div>\n                        </div>\n                    </ng-template>\n                </e-tabitem>\n                <e-tabitem [header]='headerText[1]' disabled=true>\n                    <ng-template #content>\n                        <div id='selectTrain'>\n                            <div class=\"wizard-title\">Select the train from the list </div>\n                            <ejs-grid #availableTrain width=\"100%\" [dataSource]='trainDataSource'\n                                (rowSelected)='trainSelected($event)'>\n                                <e-columns>\n                                    <e-column field='TrainNo' headerText='Train No' width=120 type='number'></e-column>\n                                    <e-column field='Name' headerText='Name' width=140></e-column>\n                                    <e-column field='Departure' headerText='Departure' width=120></e-column>\n                                    <e-column field='Arrival' headerText='Arrival' width=140></e-column>\n                                    <e-column field='Availability' headerText='Availability' width=140 type='number'>\n                                    </e-column>\n                                </e-columns>\n                            </ejs-grid>\n                            <br />\n                            <div class=\"btn-container\">\n                                <button id=\"goToSearch\" class='e-btn' (click)='btnClicked($event)'>Back</button>\n                                <button id=\"bookTickets\" class='e-btn' (click)='btnClicked($event)'>Continue</button>\n                            </div>\n                            <span id=\"err2\"></span>\n                        </div>\n                    </ng-template>\n                </e-tabitem>\n                <e-tabitem [header]='headerText[2]' disabled=true>\n                    <ng-template #content>\n                        <div id='details'>\n                            <div class=\"details-page wizard-title\">Enter the passenger details</div>\n                            <div id=\"PassengersList\">\n                                <table id=\"passenger-table\">\n                                    <colgroup>\n                                        <col>\n                                        <col>\n                                        <col>\n                                        <col>\n                                        <col>\n                                        <col>\n                                    </colgroup>\n                                    <thead>\n                                        <tr>\n                                            <th class=\"name-header\">Name</th>\n                                            <th class=\"age-header\">Age</th>\n                                            <th class=\"gender-header\">Gender</th>\n                                            <th class=\"type-header\">Berth Preference</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                            <td>\n                                                <input #pass_name1 class=\"e-input\" type=\"text\"\n                                                    placeholder=\"Passenger Name\">\n                                            </td>\n                                            <td>\n                                                <ejs-numerictextbox #pass_age1 [showSpinButton]=false min=1 max=100\n                                                    value=18 format=n0></ejs-numerictextbox>\n                                            </td>\n                                            <td>\n                                                <ejs-dropdownlist #pass_gender1 [dataSource]='gender' text=\"Male\"\n                                                    [fields]='fields'></ejs-dropdownlist>\n                                            </td>\n                                            <td>\n                                                <ejs-dropdownlist #pass_berth1 [dataSource]='berths'\n                                                    placeholder=\"Optional\" [fields]='fields'></ejs-dropdownlist>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <input #pass_name2 class=\"e-input\" type=\"text\"\n                                                    placeholder=\"Passenger Name\">\n                                            </td>\n                                            <td>\n                                                <ejs-numerictextbox #pass_age2 [showSpinButton]=false min=1 max=100\n                                                    value=18 format=n0>\n                                                </ejs-numerictextbox>\n                                            </td>\n                                            <td>\n                                                <ejs-dropdownlist #pass_gender2 [dataSource]='gender' text=\"Male\"\n                                                    [fields]='fields'></ejs-dropdownlist>\n                                            </td>\n                                            <td>\n                                                <ejs-dropdownlist #pass_berth2 [dataSource]='berths'\n                                                    placeholder=\"Optional\" [fields]='fields'></ejs-dropdownlist>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <input #pass_name3 class=\"e-input\" type=\"text\"\n                                                    placeholder=\"Passenger Name\">\n                                            </td>\n                                            <td>\n                                                <ejs-numerictextbox #pass_age3 [showSpinButton]=false min=1 max=100\n                                                    value=18 format=n0>\n                                                </ejs-numerictextbox>\n                                            </td>\n                                            <td>\n                                                <ejs-dropdownlist #pass_gender3 [dataSource]='gender' text=\"Male\"\n                                                    [fields]='fields'></ejs-dropdownlist>\n                                            </td>\n                                            <td>\n                                                <ejs-dropdownlist #pass_berth3 [dataSource]='berths'\n                                                    placeholder=\"Optional\" [fields]='fields'></ejs-dropdownlist>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                            <br />\n                            <div class=\"btn-container\">\n                                <button id=\"goBackToBook\" class='e-btn' (click)='btnClicked($event)'>Back</button>\n                                <button id=\"confirmTickets\" class='e-btn' (click)='btnClicked($event)'>Continue</button>\n                            </div>\n                            <span id=\"err3\"></span>\n                        </div>\n                    </ng-template>\n                </e-tabitem>\n                <e-tabitem [header]='headerText[3]' disabled=true>\n                    <ng-template #content>\n                        <div id='confirm'>\n                            <div class=\"tab-title1 wizard-title\">Confirm the details and proceed</div>\n                            <ejs-grid #ticketDetailGrid width=\"100%\" [dataSource]='ticketDataSource'>\n                                <e-columns>\n                                    <e-column field='TrainNo' headerText='Train No' width=120 type='number'></e-column>\n                                    <e-column field='PassName' headerText='Name' width=140></e-column>\n                                    <e-column field='Gender' headerText='Gender' width=120></e-column>\n                                    <e-column field='Berth' headerText='Berth' width=140></e-column>\n                                </e-columns>\n                            </ejs-grid>\n                            <br />\n                            <div id=\"amount\"></div>\n                            <br />\n                            <div class=\"btn-container\">\n                                <button id=\"goBackDetails\" class='e-btn' (click)='btnClicked($event)'>Back</button>\n                                <button id=\"makePayment\" class='e-btn' (click)='btnClicked($event)'>Pay</button>\n                            </div>\n                        </div>\n                    </ng-template>\n                </e-tabitem>\n            </e-tabitems>\n        </ejs-tab>\n        <div>\n            <ejs-dialog #alertDialog header='Success' width=250 isModal=true showCloseIcon=true\n                content='Your payment was successfully processed' [target]='dlgTarget' [buttons]='dlgButtons'\n                (created)='dlgCreated()' [visible]=false></ejs-dialog>\n        </div>\n    </div>\n</div>\n<style>\n    .e-content .e-item {\n        font-size: 12px;\n        margin: 10px;\n    }\n\n    #amount {\n        text-align: right;\n        font-size: 15px;\n        padding: 15px 0px;\n    }\n\n    #passenger-table th {\n        text-align: center;\n        font-size: 14px;\n        font-weight: 400;\n        border: 1px solid gainsboro;\n    }\n\n    #passenger-table td,\n    th {\n        padding: 10px;\n    }\n\n    #passenger-table td {\n        border: 1px solid gainsboro;\n    }\n\n    .name-header {\n        width: 200px;\n    }\n\n    .age-header {\n        width: 80px;\n    }\n\n    .gender-header {\n        width: 120px;\n    }\n\n    .type-header {\n        width: 150px;\n    }\n\n    .btn-container {\n        text-align: center;\n    }\n\n    .search-item {\n        padding-right: 50px;\n        padding-bottom: 20px;\n    }\n\n    .item-title {\n        font-weight: 500;\n        padding-top: 10px;\n    }\n\n    @media (max-width: 450px) {\n        .e-sample-resize-container {\n            height: 500px;\n        }\n\n        .responsive-align {\n            width: 75%;\n            margin: 0 auto;\n        }\n\n        .search-item {\n            padding: 0 0 20px 0;\n            width: 100%;\n        }\n    }\n\n    #err1,\n    #err2,\n    #err3 {\n        font-weight: bold;\n        color: red;\n        display: block;\n        margin-top: 15px;\n    }\n\n    .wizard-title {\n        font-size: 15px;\n    }\n\n    #PassengersList {\n        overflow: auto;\n    }\n\n    #passenger-table {\n        min-width: 500px;\n        width: 100%;\n    }\n\n    #bookTickets,\n    #confirmTickets,\n    #makePayment {\n        margin-left: 4px;\n    }\n</style>\n","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-popups\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-angular-calendars\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-grids\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-richtexteditor\":\"*\",\"@syncfusion/ej2-angular-richtexteditor\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"@syncfusion/ej2-angular-schedule\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}