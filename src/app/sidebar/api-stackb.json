{"dependencies.json":"{\"@syncfusion/ej2-base\": \"*\", \"@syncfusion/ej2-buttons\": \"*\", \"@syncfusion/ej2-splitbuttons\": \"*\", \"@syncfusion/ej2-calendars\": \"*\", \"@syncfusion/ej2-charts\": \"*\", \"@syncfusion/ej2-diagrams\": \"*\", \"@syncfusion/ej2-maps\": \"*\", \"@syncfusion/ej2-treemap\": \"*\", \"@syncfusion/ej2-circulargauge\": \"*\", \"@syncfusion/ej2-data\": \"*\", \"@syncfusion/ej2-dropdowns\": \"*\", \"@syncfusion/ej2-grids\": \"*\", \"@syncfusion/ej2-inputs\": \"*\", \"@syncfusion/ej2-lists\": \"*\", \"@syncfusion/ej2-navigations\": \"*\", \"@syncfusion/ej2-popups\": \"*\", \"@syncfusion/ej2-lineargauge\": \"*\", \"@syncfusion/ej2-pdf-export\": \"*\", \"@syncfusion/ej2-compression\": \"*\", \"@syncfusion/ej2-excel-export\": \"*\", \"@syncfusion/ej2-file-utils\": \"*\", \"@syncfusion/ej2-svg-base\": \"*\", \"@syncfusion/ej2-documenteditor\": \"*\", \"@syncfusion/ej2-richtexteditor\": \"*\", \"@syncfusion/ej2-notifications\": \"*\", \"@syncfusion/ej2-heatmap\": \"*\", \"@syncfusion/ej2-pivotview\": \"*\", \"@syncfusion/ej2-schedule\": \"*\", \"@syncfusion/ej2-layouts\": \"*\", \"@syncfusion/ej2-angular-base\": \"*\", \"@syncfusion/ej2-angular-buttons\": \"*\", \"@syncfusion/ej2-angular-splitbuttons\": \"*\", \"@syncfusion/ej2-angular-calendars\": \"*\", \"@syncfusion/ej2-angular-charts\": \"*\", \"@syncfusion/ej2-angular-diagrams\": \"*\", \"@syncfusion/ej2-angular-maps\": \"*\", \"@syncfusion/ej2-angular-treemap\": \"*\", \"@syncfusion/ej2-angular-circulargauge\": \"*\", \"@syncfusion/ej2-angular-dropdowns\": \"*\", \"@syncfusion/ej2-angular-grids\": \"*\", \"@syncfusion/ej2-angular-inputs\": \"*\", \"@syncfusion/ej2-angular-lists\": \"*\", \"@syncfusion/ej2-angular-navigations\": \"*\", \"@syncfusion/ej2-angular-popups\": \"*\", \"@syncfusion/ej2-angular-lineargauge\": \"*\", \"@syncfusion/ej2-angular-documenteditor\": \"*\", \"@syncfusion/ej2-angular-richtexteditor\": \"*\", \"@syncfusion/ej2-angular-notifications\": \"*\", \"@syncfusion/ej2-angular-heatmap\": \"*\", \"@syncfusion/ej2-angular-pivotview\": \"*\", \"@syncfusion/ej2-angular-schedule\": \"*\", \"@syncfusion/ej2-angular-layouts\": \"*\" , \"@angular/http\": \"*\", \"rxjs-compat\":\"*\"}","main.ts":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n","polyfills.ts":"/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol';\n// import 'core-js/es6/object';\n// import 'core-js/es6/function';\n// import 'core-js/es6/parse-int';\n// import 'core-js/es6/parse-float';\n// import 'core-js/es6/number';\n// import 'core-js/es6/math';\n// import 'core-js/es6/string';\n// import 'core-js/es6/date';\n// import 'core-js/es6/array';\n// import 'core-js/es6/regexp';\n// import 'core-js/es6/map';\n// import 'core-js/es6/weak-map';\n// import 'core-js/es6/set';\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect';\n\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\nimport 'core-js/es7/reflect';\n\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n **/\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n */\n\n // (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n // (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n // (window as any).__zone_symbol__BLACK_LISTED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n\n /*\n * in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n * with the following flag, it will bypass `zone.js` patch for IE/Edge\n */\n// (window as any).__Zone_enable_cross_context_check = true;\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n<link href=\"../styles/OpenNew.css\" rel=\"stylesheet\">\n  <link href=\"//cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\" />\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body class=\"ej2-new\"> \n\n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WLQL39J\"height=\"0\"width=\"0\"style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app/app.module.ts":"import { ListViewAllModule } from '@syncfusion/ej2-angular-lists';\n\nimport { DropDownListModule } from '@syncfusion/ej2-angular-dropdowns';\n\nimport { SidebarModule, MenuAllModule, TreeViewAllModule} from '@syncfusion/ej2-angular-navigations';\n\nimport { RadioButtonModule, ButtonModule } from '@syncfusion/ej2-angular-buttons';\n\nimport { HttpModule } from '@angular/http';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { RouterModule } from '@angular/router';\n\nimport { CommonModule } from '@angular/common';\n\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from '../app.component';\n@NgModule({ declarations: [   AppComponent ], imports: [ SidebarModule, BrowserModule, RadioButtonModule, MenuAllModule, DropDownListModule, ButtonModule, TreeViewAllModule, ListViewAllModule], providers: [], bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","app.component.html":"<div class=\"control-section\">\n    <!-- sample level element  -->\n    <div class=\"col-lg-12 col-sm-12 col-md-12 center\">\n        Click/Touch the button to view the sample\n    </div>\n    <div class=\"col-lg-12 col-sm-12 col-md-12 center\">\n        <a class=\"e-btn\" id=\"newTab\" (click)=\"newTabClick()\" target=\"_blank\">Open in new tab</a>\n    </div>\n    <!-- sample level element  -->\n    <div id=\"wrapper\">\n        <title>Essential JS 2 for Angular - Sidebar > API</title>\n        <!-- sample level element declaration -->\n        <div class=\"col-lg-12 col-sm-12 col-md-12\" id=\"sidebar-section\">\n            <!-- sidebar element declaration -->\n            <span id=\"hamburger\" class=\"e-icons menu\" (click)=\"openClick()\"></span>\n            <ejs-sidebar id=\"default-sidebar\" #sidebarInstance [showBackdrop]='showBackdrop' [closeOnDocumentClick]='closeOnDocumentClick'>\n                <div class=\"title-header\">\n                    <div style=\"display:inline-block\"> Sidebar </div>\n                    <span id=\"close\" class=\"e-icons\" (click)=\"closeClick()\"></span></div>\n                <div class=\"sub-title\">\n                    Place your primary content here.\n                </div>\n            </ejs-sidebar>\n            <!-- end of sidebar element -->\n            <div class=\"list-group\">\n                <div class=\"list-group-item\">\n                    <div class=\"title\">\n                        <p id=\"overview\">Overview\n                            <p>\n                    </div>\n                    <p id=\"content\">The sidebar component is a collapsible side content that will be displayed along with the primary content area.\n                    </p>\n                    <h3 class=\"title\">\n                        <p id=\"properties\">Options\n                            <p>\n                    </h3>\n                    <div class=\"inline-element responsive\">\n                        <div id=\"text\">\n                            <p class=\" inline-element\" style=\"width:70%\"> <b>Toggle</b> - Toggles the sidebar to be open or closed state.\n                            </p>\n                            <!-- Button element declaration -->\n                            <button ejs-button id=\"toggleSidebar\" cssClass=\"e-info\" (click)=\"toggleSidebar()\" class=\"inline-element right\">Toggle</button>\n                        </div>\n                        <div id=\"text\">\n                            <p class=\" inline-element\" style=\"width:70%\"> <b>Position</b> - Allows to place the sidebar in right or left side of the page.\n                            </p>\n                            <!-- Button element declaration -->\n                            <button ejs-button #sidebarTypesBtn id=\"togglePosition\" cssClass=\"e-info\" isToggle=\"true\" class=\"inline-element right\" (click)=\"onTypeChange()\">Right</button>\n                        </div>\n                        <div id=\"text\">\n                            <p class=\"inline-element\" style=\"width:70%\"><b>Types </b> - Specifies the act of expanding or collapsing the sidebar with main content.</p>\n                            <div class=\"inline-element right\">\n                                <ejs-dropdownlist id=\"types\" #listObj [dataSource]='dataTypes' [fields]='fields' class=\"e-textbox  right\" [placeholder]='waterMark' [index]='index' [popupHeight]='height' cssClass='right' (change)='onChange()' [width]='width'></ejs-dropdownlist>\n                            </div>\n                        </div>\n                        <div id=\"text\">\n                            <p class=\" inline-element\" style=\"width:70%\"><b>Closing on document click</b> - Allows to collapse / close the sidebar on document click.</p>\n                            <!-- Button element declaration -->\n                            <button ejs-button #documentClickBtn id=\"documentclick\" cssClass=\"e-info\" isToggle=\"true\" (click)=\"documentClick()\" class=\"inline-element right\">True</button>\n                        </div>\n                        <p class=\" inline-element\" style=\"width:70%\"><b>Backdrop</b> - Sets the backdrop over the main content area on open / expanded state.</p>\n                        <!-- Button element declaration -->\n                        <button ejs-button #backdropBtn id=\"backdrop\" cssClass=\"e-info\" isToggle=\"true\" (click)=\"backdrop()\" class=\"inline-element right\">True</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!--end of sample level element declaration -->\n    </div>\n</div>","app.component.css":"  /* content area styles */\n   /* custom code start */\n  .responsive {\n      width: 80%;\n  }\n  \n  @media(max-width:550px) {\n      .responsive {\n          width: 100%;\n      }\n  }\n  \n  #overview,\n  #properties,\n  #content {\n      padding: 0px 0px 22px\n  }\n    /* custom code end */\n  #text {\n      padding: 0px 0px 17px;\n  }\n\n  .title {\n      color: #000000;\n      font-weight: 500;\n      line-height: 24px;\n      font-size: 18px;\n      margin: 0px;\n  }\n    /* custom code start */\n  body {\n      font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\n      margin: 0px;\n      font-size: 14px;\n  }\n  /* End of content area styles */\n  /* property content styles */\n    /* custom code end */\n  #types {\n      background-color: #ffffff;\n      border: none;\n      border-radius: 2px;\n  }\n  \n  .inline-element.right.e-btn {\n      color: white;\n      border: none;\n      width: 75px;\n  }\n    /* custom code start */\n  .inline-element {\n      display: inline-block;\n  }\n  \n  .right {\n      float: right;\n  }\n    /* custom code end */\n  .list-group-item {\n      border: none;\n      padding: 60px 10px 10px 45px;\n      font-size: 14px;\n  }\n  \n  .center {\n      text-align: center;\n      display: none;\n      font-size: 13px;\n      font-weight: 400;\n      margin-top: 20px;\n  }\n  \n  .sb-content-tab .center {\n      display: block;\n  }\n  /* end of property content styles */\n  /* sidebar styles */\n  \n  .sb-content-tab #wrapper {\n      display: none;\n  }\n  \n  .content {\n      margin-bottom: 20px;\n      overflow-y: auto;\n  }\n  \n  #wrapper #close:before {\n       content: '\\e109';\n  }\n  \n  .title-header {\n      text-align: center;\n      font-size: 18px;\n      padding: 15px;\n  }\n  \n  .sub-title {\n      text-align: center;\n      font-size: 16px;\n      padding: 10px;\n  }\n  \n  .e-sidebar .title-header #close {\n      color: #fafafa;\n      cursor: pointer;\n      line-height: 25px;\n  }\n  \n  .e-sidebar.e-left .title-header #close {\n      float: right;\n  }\n  \n  .e-sidebar.e-right .title-header #close {\n      float: left;\n  }\n  \n  #default-sidebar {\n      background: #2196f3;\n      color: #ffffff;\n  }\n  \n  #hamburger.menu {\n      font-size: 25px;\n      cursor: pointer;\n      float: left;\n      line-height: 50px;\n      position: absolute;\n      z-index: 1000;\n      padding: 5px 15px;\n  }\n  \n  #hamburger.menu:before {\n      content: '\\e10d';\n  }\n  \n  #hamburger.menu.e-rtl {\n      position: relative;\n      float: right;\n  }\n  \n  #wrapper #close:before {\n      content: \"\\e109\";\n  }\n  \n  .e-sidebar .title-header #close {\n      color: #fafafa;\n      cursor: pointer;\n      line-height: 25px;\n  }\n  \n  .e-sidebar.e-left .title-header #close {\n      float: right;\n  }\n  \n  .e-sidebar.e-right .title-header #close {\n      float: left;\n  }\n  \n  .ej2-new #sample-header,\n  .ej2-new .sb-bread-crumb,\n  .ej2-new #action-description,\n  .ej2-new #description-section,\n  .ej2-new #description,\n  .center,\n  .ej2-new .action,\n  .sb-content-tab #wrapper {\n      display: none\n  }\n  \n  .ej2-new .control-section{\n\tpadding-left: 0px;\n  }\n  \n  .ej2-new app-root > div:first-child{\n\tpadding-left: 0px !important;\n  }\n  \n  .ej2-new .container-fluid,\n  .ej2-new .control-section,\n  #sidebar-section {\n      padding: 0px;\n  }\n  \n  .ej2-new .sample-browser .content.e-view {\n      top: 0px;\n  }\n  /* end of sidebar styles */\n  /* custom generated icons styles */\n  \n  @font-face {\n      font-family: 'e-icons';\n      src: url(data:application/x-font-ttf;charset=utf-8;base64,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) format('truetype');\n      font-weight: normal;\n      font-style: normal;\n  }\n\n  .action {\n      visibility: hidden;\n  }\n  /* end of custom generated icons styles */","app.component.ts":"import { Component, ViewEncapsulation, Inject, ViewChild } from '@angular/core';\nimport { SidebarComponent } from '@syncfusion/ej2-angular-navigations';\nimport { ButtonComponent } from '@syncfusion/ej2-angular-buttons';\nimport { DropDownListComponent, ChangeEventArgs } from '@syncfusion/ej2-angular-dropdowns';\nimport { enableRipple } from '@syncfusion/ej2-base';\n@Component({\n    selector: 'app-root',\n    styleUrls: ['app.component.css'],\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n    @ViewChild('sidebarInstance')\n    public sidebarInstance: SidebarComponent;\n    @ViewChild('sidebarTypesBtn')\n    public sidebarTypesBtn: ButtonComponent;\n    @ViewChild('backdropBtn')\n    public backdropBtn: ButtonComponent;\n    @ViewChild('documentClickBtn')\n    public documentClickBtn: ButtonComponent\n    @ViewChild('listObj')\n    public listObj: DropDownListComponent;\n    public dataTypes: Object[] = [\n        { Id: '1', Type: 'Over', value: 'Over' },\n        { Id: '2', Type: 'Push', value: 'Push' },\n        { Id: '3', Type: 'Slide', value: 'Slide' },\n        { Id: '4', Type: 'Auto', value: 'Auto' }\n    ];\n    public fields: object = { id: 'Id', text: 'Type', value: 'value' };\n    public showBackdrop: boolean = false;\n    public closeOnDocumentClick: boolean = false;\n    public height: string = '220px';\n    public width: string = '75px';\n    public waterMark: string = 'Select a Type';\n    public index: number = 3;\n    // only for sample browser use \n    constructor() {\n        \n    }\n\n    // open new tab\n    newTabClick(): void {\n        document.getElementById('newTab').setAttribute('href', location.href.split('#')[0] + 'sidebar/api');\n    }\n\n    //Toggle button click event handler\n    toggleSidebar(): void {\n        this.sidebarInstance.toggle();\n    };\n    closeClick(): void {\n        this.sidebarInstance.hide();\n    };\n    openClick(): void {\n        this.sidebarInstance.show();\n    };\n    documentClick(): void {\n\n        if (this.documentClickBtn.element.classList.contains('e-active')) {\n            this.documentClickBtn.content = 'False';\n            //enable the closeOnDocumentClick property\n            this.sidebarInstance.closeOnDocumentClick = true;\n\n        } else {\n            this.documentClickBtn.content = 'True';\n            //disable the closeOnDocumentClick property\n            this.sidebarInstance.closeOnDocumentClick = false;\n        }\n    };\n    onTypeChange(): void {\n        if (this.sidebarTypesBtn.element.classList.contains('e-active')) {\n            this.sidebarTypesBtn.content = 'Left';\n            this.sidebarInstance.position = 'Right';\n            document.getElementById(\"hamburger\").className += \" e-rtl\";\n        } else {\n            this.sidebarTypesBtn.content = 'Right';\n            this.sidebarInstance.position = 'Left';\n             document.getElementById(\"hamburger\").classList.remove(\"e-rtl\");\n        }\n    };\n    backdrop(): void {\n        if (this.backdropBtn.element.classList.contains('e-active')) {\n            this.backdropBtn.content = 'True';\n            //enable the backdrop property\n            this.sidebarInstance.showBackdrop = false;\n\n        } else {\n            this.backdropBtn.content = 'False';\n            //disable the backdrop property\n            this.sidebarInstance.showBackdrop = true;\n        }\n    };\n    onChange(): void {\n        let types: any = this.listObj.value;\n        this.sidebarInstance.type = types;\n    }\n\n}"}