{"main.ts":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","polyfills.ts":"/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n  <link href=\"../../styles/material.css\" rel=\"stylesheet\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n</head>\n<body class=\"ej2-new\"> \n\n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WLQL39J\"height=\"0\"width=\"0\"style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app.component.ts":"import { Component, ViewEncapsulation, Inject, ViewChild } from '@angular/core';\nimport { SidebarComponent, ClickEventArgs } from '@syncfusion/ej2-angular-navigations';\nimport { SelectEventArgs } from '@syncfusion/ej2-angular-lists';\n\n@Component({\n    selector: 'app-root',\n    styleUrls: ['app.component.css'],\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n    @ViewChild('sidebarInstance')\n    public sidebarInstance: SidebarComponent;\n    public ListData: { [key: string]: Object }[] = [\n        { id: \"1\", text: \"JavaScript\", pic: \"javascript\", \n            description: \"JavaScript (JS) is an interpreted computer programming language. \" +\n            \"It was originally implemented as part of web browsers so that client-side scripts\" + \n            \"could interact with the user, control the browser, communicate asynchronously, and\" +\n            \"alter the document content that was displayed. However, it has recently\" +\n            \"become common in both game development and the creation of desktop applications.\" },\n        { id: \"2\", text: \"TypeScript\", pic: \"typescript\", \n            description: \"It is a typed superset of JavaScript that compiles to plain JavaScript.\" + \n            \"TypeScript is an open-source, object-oriented programing language. It contains all elements of JavaScript\" + \n            \"It is a language designed for large-scale JavaScript application development, which can be executed on any\" + \n            \"browser, any Host, and any Operating System. TypeScript is a language as well as a set of tools.\" +\n            \" TypeScript is the ES6 version of JavaScript with some additional features.\" },\n        { id: \"3\", text: \"Angular\", pic: \"angular\", \n            description: \"Angular is a platform and framework for building single-page client applications using HTML and TypeScript.\" +\n            \" Angular is written in TypeScript. It implements core and optional functionality as a set of TypeScript\" +\n            \" libraries that you import into your applications.\" },\n        { id: \"4\", text: \"React\", pic: \"react\",\n            description: \"React is a declarative, efficient, and flexible JavaScript library for building user interfaces.\" +\n            \" It lets you compose complex UIs from small and isolated pieces of code called “components”.\" +\n            \" It can also render on the server using Node.\" },\n        { id: \"5\", text: \"Vue\", pic: \"vue\", \n            description: \"A progressive framework for building user interfaces. It is incrementally adoptable.\" +\n            \" The core library is focused on the view layer only and is easy to pick up and integrate with other\" +\n            \" libraries or existing projects. On the other hand, Vue is also perfectly capable of powering\" +\n            \" sophisticated Single-Page Applications when used in combination with modern tooling and supporting libraries.\" }\n    ];\n    public listFields: { [key: string]: Object } = { id: \"id\", text: \"text\" };\n    constructor( ) {\n        \n    }\n\n    toolbarCliked(args: ClickEventArgs) {\n        if(args.item.tooltipText == \"Menu\") {\n            this.sidebarInstance.toggle();\n        }\n    }\n    OnSelect(args: any) {\n        document.getElementById(\"listContent\").innerHTML = args.data.description;\n    }\n};","app/app.module.ts":"import { ListViewAllModule } from '@syncfusion/ej2-angular-lists';\n\nimport { TextBoxAllModule } from '@syncfusion/ej2-angular-inputs';\n\nimport { DropDownListModule } from '@syncfusion/ej2-angular-dropdowns';\n\nimport { SidebarModule, MenuAllModule, TreeViewAllModule, ToolbarAllModule} from '@syncfusion/ej2-angular-navigations';\n\nimport { RadioButtonModule, ButtonModule } from '@syncfusion/ej2-angular-buttons';\n\nimport { HttpModule } from '@angular/http';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { RouterModule } from '@angular/router';\n\nimport { CommonModule } from '@angular/common';\n\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from '../app.component';\n@NgModule({ declarations: [ AppComponent ], imports: [ SidebarModule, BrowserModule, ToolbarAllModule, TextBoxAllModule, RadioButtonModule, MenuAllModule, DropDownListModule, ButtonModule, TreeViewAllModule, ListViewAllModule], providers: [], bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","app.component.html":"<div class=\"control-section\" id=\"sidelistwrapper\">\n    <!-- sample level element  -->\n    <!-- main content declaration -->\n    <div>\n        <ejs-toolbar id=\"listToolbar\" (clicked)=\"toolbarCliked($event)\">\n            <e-items>\n                <e-item prefixIcon=\"e-tbar-menu-icon tb-icons\" tooltipText=\"Menu\"></e-item>\n                <e-item>\n                    <ng-template #template>\n                        <div class=\"e-folder\">\n                            <div class=\"e-folder-name\">Language</div>\n                        </div>\n                    </ng-template>\n                </e-item>\n            </e-items>\n        </ejs-toolbar>\n    </div>\n    <div class=\"listmaincontent\">\n        <div>\n            <div id=\"listContent\" class=\"listcontent\">\n                Before getting into any programming language, one should have basic knowledge about HTML, CSS, and\n                JavaScript. These are the basic building blocks of web designing. HTML describes the structure of a web\n                page whereas CSS describes the presentation of the web page.\n            </div>\n        </div>\n    </div>\n    <!-- end of main content declaration -->\n    <!-- sidebar element declaration -->\n    <ejs-sidebar #sidebarInstance id=\"listSidebar\" class=\"sidebar-list\" #sidebarTreeviewInstance width=\"250px\"\n        target=\".listmaincontent\" type=\"Auto\" [isOpen]='true'>\n        <ejs-listview id=\"listSidebarList\" [dataSource]='ListData' cssClass=\"e-template-list\"\n            template={this.listTemplate} [fields]='listFields' (select)=\"OnSelect($event)\">\n            <ng-template #template let-dataSource=\"\">\n                <div class=\"list-wrapper\">\n                    <span class=\"{{dataSource.pic}} e-avatar e-avatar-xsmall e-avatar-circle\"></span>\n                    <span class=\"text e-text-content\">{{dataSource.text}}</span>\n                </div>\n            </ng-template>\n        </ejs-listview>\n    </ejs-sidebar>\n</div>","app.component.css":"/* Specifies sample level styles for Sidebar */\n#sidelistwrapper .listmaincontent {\n    font-size: 14px;\n    padding: 15px;\n}\n\n.container-fluid {\n    padding-right: 0;\n    padding-left: 0;\n}\n\n.col-lg-12.col-sm-12.col-md-12,\n.control-section {\n    padding: 0;\n}\n\n#sidelistwrapper .listmaincontent {\n    height: 380px;\n}\n\n#sidelistwrapper #left {\n    float: left;\n    width: 30px;\n    height: 47px;\n}\n\n#sidelistwrapper .sidebar-list {\n    z-index: 20 !important;\n}\n\n/*Specifies sample level style for Toolbar*/\n#sidelistwrapper .e-toolbar .e-icons {\n    font-size: 20px;\n}\n\n#sidelistwrapper .e-tbar-menu-icon:before {\n    content: \"\\e914\";\n    font-family: 'sbicons';\n}\n\n/* Specifies the border bottom styles for toolbar in light theme*/\n.material #sidelistwrapper .e-toolbar,\n.tailwind #sidelistwrapper .e-toolbar,\n.bootstrap5 #sidelistwrapper .e-toolbar {\n    border-bottom: 1px solid #eaeaeae0;\n}\n\n/* Specifies the border bottom styles for toolbar in dark theme*/\n.bootstrap5-dark #sidelistwrapper .e-toolbar,\n.tailwind-dark #sidelistwrapper .e-toolbar,\n.material-dark #sidelistwrapper .e-toolbar {\n    border-bottom: 1px solid #eaeaea63;\n}\n\n.material #sidelistwrapper .e-toolbar .e-toolbar-items:not(.e-tbar-pos) .e-toolbar-item:first-child,\n.material-dark #sidelistwrapper .e-toolbar .e-toolbar-items:not(.e-tbar-pos) .e-toolbar-item:first-child,\n.bootstrap4.e-bigger #sidelistwrapper .e-toolbar .e-toolbar-items:not(.e-tbar-pos) .e-toolbar-item:first-child,\n.tailwind.e-bigger #sidelistwrapper .e-toolbar .e-toolbar-items:not(.e-tbar-pos) .e-toolbar-item:first-child,\n.tailwind-dark.e-bigger #sidelistwrapper .e-toolbar .e-toolbar-items:not(.e-tbar-pos) .e-toolbar-item:first-child {\n    margin-left: 12px;\n}\n\n.e-bigger.material #sidelistwrapper .e-toolbar .e-toolbar-items:not(.e-tbar-pos) .e-toolbar-item:first-child {\n    margin-left: 16px;\n}\n\n.bootstrap4 #sidelistwrapper .e-toolbar .e-toolbar-items:not(.e-tbar-pos) .e-toolbar-item:first-child,\n.bootstrap #sidelistwrapper .e-toolbar .e-toolbar-items:not(.e-tbar-pos) .e-toolbar-item:first-child,\n.bootstrap-dark #sidelistwrapper .e-toolbar .e-toolbar-items:not(.e-tbar-pos) .e-toolbar-item:first-child,\n.bootstrap5.e-bigger #sidelistwrapper .e-toolbar .e-toolbar-items:not(.e-tbar-pos) .e-toolbar-item:first-child,\n.bootstrap5-dark.e-bigger #sidelistwrapper .e-toolbar .e-toolbar-items:not(.e-tbar-pos) .e-toolbar-item:first-child {\n    margin-left: 8px;\n}\n\n.bootstrap5 #sidelistwrapper .e-toolbar .e-toolbar-items:not(.e-tbar-pos) .e-toolbar-item:first-child,\n.bootstrap5-dark #sidelistwrapper .e-toolbar .e-toolbar-items:not(.e-tbar-pos) .e-toolbar-item:first-child {\n    margin-left: 5px;\n}\n\n.bootstrap.e-bigger #sidelistwrapper .e-toolbar .e-toolbar-items:not(.e-tbar-pos) .e-toolbar-item:first-child,\n.bootstrap-dark.e-bigger #sidelistwrapper .e-toolbar .e-toolbar-items:not(.e-tbar-pos) .e-toolbar-item:first-child {\n    margin-left: 10px;\n}\n\n.e-folder {\n    text-align: center;\n    font-weight: 500;\n    font-size: 16px\n}\n\n.e-bigger .e-folder {\n    font-size: 18px;\n}\n\n.bootstrap5 .e-folder-name,\n.bootstrap5-dark .e-folder-name {\n    margin-top: -2px;\n}\n\n.tailwind .e-folder-name,\n.tailwind-dark .e-folder-name,\n.bootstrap4 .e-folder-name,\n.bootstrap .e-folder-name,\n.bootstrap-dark .e-folder-name {\n    margin-top: 3px;\n    margin-left: 7px;\n}\n\n.material .e-folder-name,\n.material-dark .e-folder-name {\n    margin-top: 1px;\n    margin-left: 9px;\n}\n\n/*Specifies sample level style for ListView*/\n.bootstrap5 .e-template-list,\n.bootstrap5-dark .e-template-list,\n.tailwind .e-template-list,\n.tailwind-dark .e-template-list,\n.bootstrap4 .e-template-list {\n    border: 0;\n    border-radius: 0;\n}\n\n.e-template-list .e-list-item {\n    line-height: 1.5;\n    padding: 0 16px;\n}\n\n.list-wrapper {\n    display: inline-flex;\n    width: 100%;\n}\n\n.e-bigger .list-wrapper {\n    padding-left: 8px;\n}\n\n.list-wrapper .text {\n    padding-left: 14px;\n}\n\n.e-bigger .list-wrapper .text {\n    padding-left: 20px;\n}\n\n.e-listbox-wrapper .list-wrapper .text {\n    font-weight: bold;\n    font-size: 13px;\n}\n\n.list-wrapper .e-avatar {\n    background-color: transparent;\n    float: left;\n}\n\n/* Specifies the background color of listview in dark theme*/\n .material-dark #sidelistwrapper .e-list-item,\n.bootstrap-dark #sidelistwrapper .e-list-item {\n    background-color: transparent;\n}\n\n.material .list-wrapper .e-avatar,\n.material-dark .list-wrapper .e-avatar,\n.highcontrast .list-wrapper .e-avatar {\n    margin-top: 3px;\n}\n\n.fabric .list-wrapper .e-avatar,\n.fabric-dark .list-wrapper .e-avatar {\n    margin-top: 6px;\n}\n\n.material.e-bigger .list-wrapper .e-avatar,\n.material-dark.e-bigger .list-wrapper .e-avatar,\n.highcontrast.e-bigger .list-wrapper .e-avatar {\n    margin-top: 7px;\n}\n\n.fabric-dark.e-bigger .list-wrapper .e-avatar,\n.fabric.e-bigger .list-wrapper .e-avatar,\n.bootstrap-dark.e-bigger .list-wrapper .e-avatar,\n.bootstrap.e-bigger .list-wrapper .e-avatar {\n    margin-top: 10px;\n}\n\n.bootstrap .list-wrapper .e-avatar,\n.bootstrap-dark .list-wrapper .e-avatar {\n    margin-top: 5px;\n}\n\n.bootstrap5 .list-wrapper .e-avatar,\n.bootstrap5-dark .list-wrapper .e-avatar {\n    margin-top: -3px;\n}\n\n.tailwind .list-wrapper .e-avatar,\n.tailwind-dark .list-wrapper .e-avatar {\n    margin-top: -1px;\n}\n\n.bootstrap5.e-bigger .list-wrapper .e-avatar,\n.bootstrap5-dark.e-bigger .list-wrapper .e-avatar {\n    margin-top: 0px;\n}\n\n.e-bigger.bootstrap5 .sidebar-list .e-listview:not(.e-list-template) .e-list-item,\n.e-bigger.bootstrap5-dark .sidebar-list .e-listview:not(.e-list-template) .e-list-item {\n    height: 43px;\n}\n\n.bootstrap4.e-bigger .sidebar-list .e-listview:not(.e-list-template) .e-list-item {\n    padding: 12px 14px;\n}\n\n/*Specifies the icon styles for the ListView*/\n.javascript {\n    background-image: url('/assets/sidebar/images/javascript.svg');\n}\n\n.typescript {\n    background-image: url('/assets/sidebar/images/typescript.svg')\n}\n\n.angular {\n    background-image: url('/assets/sidebar/images/angular.svg');\n}\n\n.vue {\n    background-image: url('/assets/sidebar/images/vue.svg');\n}\n\n.react {\n    background-image: url('/assets/sidebar/images/react.svg');\n}\n\n.material-dark #sidelistwrapper .content {\n    color: white;\n}\n\n/* Specifies the border right color for the sidebar in light theme*/\n.material .sidebar-list,\n.fabric .sidebar-list,\n.tailwind .sidebar-list,\n.highcontrast .sidebar-list,\n.bootstrap5 .sidebar-list {\n    border-right: 1px solid #eaeaeae0;\n}\n\n/* Specifies the border right color for the sidebar in dark theme*/\n.material-dark .sidebar-list,\n.fabric-dark .sidebar-list,\n.tailwind-dark .sidebar-list,\n.bootstrap5-dark .sidebar-list {\n    border-right: 1px solid #eaeaea63;\n}","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-angular-lists\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\"}"}