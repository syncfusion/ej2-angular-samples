{"main.ts":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","polyfills.ts":"/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n  <link href=\"../../styles/material.css\" rel=\"stylesheet\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n</head>\n<body class=\"ej2-new\"> \n\n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WLQL39J\"height=\"0\"width=\"0\"style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { ButtonComponent } from '@syncfusion/ej2-angular-buttons';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n  @ViewChild('regularBtn') regularBtn: ButtonComponent;\n  @ViewChild('prominentBtn') prominentBtn: ButtonComponent;\n  @ViewChild('denseBtn') denseBtn: ButtonComponent;\n  public ngAfterViewInit(): void {\n    this.regularBtn.element.setAttribute(\"aria-label\", \"menu\");\n    this.prominentBtn.element.setAttribute(\"aria-label\", \"menu\");\n    this.denseBtn.element.setAttribute(\"aria-label\", \"menu\");\n  }\n}\n","app/app.module.ts":"import { DropDownButtonAllModule } from '@syncfusion/ej2-angular-splitbuttons';\n\nimport { ButtonAllModule } from '@syncfusion/ej2-angular-buttons';\n\nimport { AppBarAllModule, MenuAllModule } from '@syncfusion/ej2-angular-navigations';\n\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from '../app.component';\n\n@NgModule({ declarations: [ AppComponent ], imports: [ AppBarAllModule, ButtonAllModule, DropDownButtonAllModule, MenuAllModule, BrowserModule, BrowserModule], providers: [], bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","app.component.html":"<div class=\"col-lg-12 control-section default-appbar-section\">\n  <div class=\"default-appbar-container\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <h5>Simple AppBar</h5>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <ejs-appbar colorMode=\"Primary\">\n          <button #regularBtn ejs-button cssClass=\"e-inherit menu\" iconCss=\"e-icons e-menu\"></button>\n          <span class=\"regular\">Angular AppBar</span>\n          <div class=\"e-appbar-spacer\"></div>\n          <button ejs-button cssClass=\"e-inherit login\">FREE TRIAL</button>\n        </ejs-appbar>\n      </div>\n    </div>\n    <br/>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <h5>Prominent</h5>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <ejs-appbar cssClass=\"prominent-appbar\" mode=\"Prominent\" colorMode=\"Primary\">\n          <button #prominentBtn ejs-button cssClass=\"e-inherit menu\" iconCss=\"e-icons e-menu\"></button>\n          <span class=\"prominent\">Angular AppBar Component with Prominent mode</span>\n          <div class=\"e-appbar-spacer\"></div>\n          <button ejs-button cssClass=\"e-inherit login\">FREE TRIAL</button>\n        </ejs-appbar>\n      </div>\n    </div>\n    <br/>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <h5>Dense</h5>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <ejs-appbar mode=\"Dense\" colorMode=\"Primary\">\n          <button #denseBtn ejs-button cssClass=\"e-inherit menu\" iconCss=\"e-icons e-menu\"></button>\n          <span class=\"dense\">Angular AppBar</span>\n          <div class=\"e-appbar-spacer\"></div>\n          <button ejs-button cssClass=\"e-inherit login\">FREE TRIAL</button>\n        </ejs-appbar>\n      </div>\n    </div>\n    <br/>\n  </div>\n</div>","app.component.css":".default-appbar-section .regular,\n.default-appbar-section .prominent,\n.default-appbar-section .dense {\n  margin: 0 5px;\n}\n.default-appbar-section .prominent {\n  align-self: center;\n  white-space: break-spaces;\n  text-align: inherit;\n  font-size: 35px;\n  line-height: 50px;\n}\n.default-appbar-section .e-appbar.prominent-appbar {\n  background-image: url('/assets/appbar/images/prominent.png');\n  background-size: 100% 400px;\n  color: #ffffff;\n  background-repeat: no-repeat;\n  height: 400px;\n}\n.default-appbar-section .prominent-appbar .e-inherit.e-btn {\n  background: transparent;\n}\n.default-appbar-section .prominent-appbar .e-inherit.e-btn:hover,\n.default-appbar-section .prominent-appbar .e-inherit.e-btn:focus,\n.default-appbar-section .prominent-appbar .e-inherit.e-btn:active,\n.default-appbar-section .prominent-appbar .e-inherit.e-btn.e-active,\n.default-appbar-section .prominent-appbar .e-inherit.e-css.e-btn:hover,\n.default-appbar-section .prominent-appbar .e-inherit.e-css.e-btn:focus\n.default-appbar-section .prominent-appbar .e-inherit.e-css.e-btn:active\n.default-appbar-section .prominent-appbar .e-inherit.e-css.e-btn.e-active {\n  background: rgba(255, 255, 255, .08);\n}\n@media only screen and (max-width: 480px) {\n  .default-appbar-section .prominent {\n    font-size: 20px;\n    line-height: 28px;\n  }\n  .default-appbar-section .e-appbar.prominent-appbar {\n    background-size: 100% 250px;\n    height: 250px;\n  }\n  .e-bigger .default-appbar-section .e-inherit.e-btn.login,\n  .e-bigger.tailwind-dark .default-appbar-section .e-inherit.e-btn.e-icon-btn.menu,\n  .e-bigger.tailwind .default-appbar-section .e-inherit.e-btn.e-icon-btn.menu {\n    padding-left: 7px;\n    padding-right: 7px;\n  }\n}","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-angular-splitbuttons\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\"}"}