{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","document-loader.ts":"import { DocumentEditor } from '@syncfusion/ej2-documenteditor';\n/**\n * Document editor - Document loader\n */\nexport class DocumentLoader {\n    private hostUrl: string = 'https://services.syncfusion.com/angular/production/api/documenteditor/';\n    private documentEditor: DocumentEditor = undefined;\n\n\n    constructor(documentEditor: DocumentEditor) {\n        this.documentEditor = documentEditor;\n    }\n    public loadDefault(defaultDocument: Object): void {\n        this.documentEditor.open(JSON.stringify(defaultDocument));\n    }\n    public loadFile(path: any): void {\n        let baseUrl: string = this.hostUrl + 'import';\n        let httpRequest: XMLHttpRequest = new XMLHttpRequest();\n        httpRequest.open('POST', baseUrl, true);\n        let waitingPopUp: HTMLElement = document.getElementById('waiting-popup');\n        let inActiveDiv: HTMLElement = document.getElementById('popup-overlay');\n        this.documentEditor.isReadOnly = true;\n        waitingPopUp.style.display = 'block';\n        inActiveDiv.style.display = 'block';\n        httpRequest.onreadystatechange = () => {\n            if (httpRequest.readyState === 4) {\n                if (httpRequest.status === 200 || httpRequest.status === 304) {\n                    this.documentEditor.open(httpRequest.responseText);\n                    this.documentEditor.isReadOnly = false;\n                    waitingPopUp.style.display = 'none';\n                    inActiveDiv.style.display = 'none';\n                } else {\n                    waitingPopUp.style.display = 'none';\n                    inActiveDiv.style.display = 'none';\n                    this.documentEditor.isReadOnly = false;\n                    console.error(httpRequest.response);\n                }\n            }\n        };\n        let formData: FormData = new FormData();\n        formData.append('files', path);\n        this.documentEditor.documentName = path.name.substr(0, path.name.lastIndexOf('.'));\n        httpRequest.send(formData);\n    }\n    public destroy(): void {\n        this.documentEditor = undefined;\n        this.hostUrl = undefined;\n    }\n}","title-bar.ts":"import { createElement, Event, KeyboardEventArgs } from '@syncfusion/ej2-base';\nimport { DocumentEditor, FormatType } from '@syncfusion/ej2-angular-documenteditor';\nimport { Button } from '@syncfusion/ej2-angular-buttons';\nimport { DropDownButton, ItemModel } from '@syncfusion/ej2-angular-splitbuttons';\nimport { MenuEventArgs } from '@syncfusion/ej2-angular-navigations';\nimport { DialogComponent } from '@syncfusion/ej2-angular-popups';\n/**\n * Represents document editor title bar.\n */\nexport class TitleBar {\n    private tileBarDiv: HTMLElement;\n    private documentTitle: HTMLElement;\n    private documentTitleContentEditor: HTMLElement;\n    private export: DropDownButton;\n    private close: Button;\n    private print: Button;\n    private open: Button;\n    private documentEditor: DocumentEditor;\n    private isRtl: boolean;\n    private dialogComponent: DialogComponent\n    constructor(element: HTMLElement, docEditor: DocumentEditor, isShareNeeded: Boolean, isRtl?: boolean, dialogComponent?: DialogComponent) {\n        this.isRtl = isRtl;\n        //initializes title bar elements.\n        this.tileBarDiv = element;\n        this.documentEditor = docEditor;\n        this.dialogComponent = dialogComponent;\n        this.initializeTitleBar(isShareNeeded);\n        this.wireEvents();\n    }\n    private initializeTitleBar = (isShareNeeded: Boolean): void => {\n        let downloadText: string;\n        let downloadToolTip: string;\n        let printText: string;\n        let closeToolTip: string;\n        let printToolTip: string;\n        let openText: string;\n        let documentTileText: string;\n        if (!this.isRtl) {\n            downloadText = 'Download';\n            downloadToolTip = 'Download this document.';\n            printText = 'Print';\n            printToolTip = 'Print this document (Ctrl+P).';\n            closeToolTip = 'Close this document';\n            openText = 'Open';\n            documentTileText = 'Document Name. Click or tap to rename this document.';\n        } else {\n            downloadText = 'تحميل';\n            downloadToolTip = 'تحميل هذا المستند';\n            printText = 'طباعه';\n            printToolTip = 'طباعه هذا المستند (Ctrl + P)';\n            openText = 'فتح';\n            documentTileText = 'اسم المستند. انقر أو اضغط لأعاده تسميه هذا المستند';\n        }\n        // tslint:disable-next-line:max-line-length\n        this.documentTitle = createElement('label', { id: 'documenteditor_title_name', styles: 'font-weight:400;text-overflow:ellipsis;white-space:pre;overflow:hidden;user-select:none;cursor:text' });\n        let iconCss: string = 'e-de-padding-right';\n        let btnFloatStyle: string = 'float:right;';\n        let titleCss: string = '';\n        if (this.isRtl) {\n            iconCss = 'e-de-padding-right-rtl';\n            btnFloatStyle = 'float:left;';\n            titleCss = 'float:right;';\n        }\n        // tslint:disable-next-line:max-line-length\n        this.documentTitleContentEditor = createElement('div', { id: 'documenteditor_title_contentEditor', className: 'single-line', styles: titleCss });\n        this.documentTitleContentEditor.appendChild(this.documentTitle);\n        this.tileBarDiv.appendChild(this.documentTitleContentEditor);\n        this.documentTitleContentEditor.setAttribute('title', 'Document Name. Click or tap to rename this document.');\n        let btnStyles: string = btnFloatStyle + 'background: transparent;box-shadow:none; font-family: inherit;border-color: transparent;'\n            + 'border-radius: 2px;color:inherit;font-size:12px;text-transform:capitalize;margin-top:4px;height:28px;font-weight:400;'\n            + 'margin-top: 2px;';\n        // tslint:disable-next-line:max-line-length\n        this.close = this.addButton('e-icons e-close e-de-padding-right',\"\", btnStyles, 'de-close', closeToolTip, false) as Button;\n        this.print = this.addButton('e-de-icon-Print ' + iconCss, printText, btnStyles, 'de-print', printToolTip, false) as Button;\n        this.open = this.addButton('e-de-icon-Open ' + iconCss, openText, btnStyles, 'de-open', documentTileText, false) as Button;\n        let items: ItemModel[] = [\n            { text: 'Syncfusion Document Text (*.sfdt)', id: 'sfdt' },\n            { text: 'Word Document (*.docx)', id: 'word' },\n            { text: 'Word Template (*.dotx)', id: 'dotx' },\n            { text: 'Plain Text (*.txt)', id: 'txt' },\n        ];\n        // tslint:disable-next-line:max-line-length\n        this.export = this.addButton('e-de-icon-Download ' + iconCss, downloadText, btnStyles, 'documenteditor-share', downloadToolTip, true, items) as DropDownButton;\n        if (!isShareNeeded) {\n            this.export.element.style.display = 'none';\n        } else {\n            this.open.element.style.display = 'none';\n        }\n        if(this.dialogComponent == null)\n            this.close.element.style.display = 'none';\n    }\n    private setTooltipForPopup(): void {\n       // tslint:disable-next-line:max-line-length\n       document.getElementById('documenteditor-share-popup').querySelectorAll('li')[0].setAttribute('title', 'Download a copy of this document to your computer as an SFDT file.');\n       // tslint:disable-next-line:max-line-length\n       document.getElementById('documenteditor-share-popup').querySelectorAll('li')[1].setAttribute('title', 'Download a copy of this document to your computer as a DOCX file.');\n       // tslint:disable-next-line:max-line-length\n       document.getElementById('documenteditor-share-popup').querySelectorAll('li')[2].setAttribute('title', 'Download a copy of this document to your computer as an DOTX file.');\n       // tslint:disable-next-line:max-line-length\n       document.getElementById('documenteditor-share-popup').querySelectorAll('li')[3].setAttribute('title', 'Download a copy of this document to your computer as an TXT file.');\n    }\n    private wireEvents = (): void => {\n        this.print.element.addEventListener('click', this.onPrint);\n        this.close.element.addEventListener('click', this.onClose);\n        this.open.element.addEventListener('click', (e: Event) => {\n            if ((e.target as HTMLInputElement).id === 'de-open') {\n                let fileUpload: HTMLInputElement = document.getElementById('uploadfileButton') as HTMLInputElement;\n                fileUpload.value = '';\n                fileUpload.click();\n            }\n        });\n        this.documentTitleContentEditor.addEventListener('keydown', (e: KeyboardEventArgs) => {\n            if (e.keyCode === 13) {\n                e.preventDefault();\n                this.documentTitleContentEditor.contentEditable = 'false';\n                if (this.documentTitleContentEditor.textContent === '') {\n                    this.documentTitleContentEditor.textContent = 'Document1';\n                }\n            }\n        });\n        this.documentTitleContentEditor.addEventListener('blur', (): void => {\n            if (this.documentTitleContentEditor.textContent === '') {\n                this.documentTitleContentEditor.textContent = 'Document1';\n            }\n            this.documentTitleContentEditor.contentEditable = 'false';\n            this.documentEditor.documentName = this.documentTitle.textContent;\n        });\n        this.documentTitleContentEditor.addEventListener('click', (): void => {\n            this.updateDocumentEditorTitle();\n        });\n    }\n    private updateDocumentEditorTitle = (): void => {\n        this.documentTitleContentEditor.contentEditable = 'true';\n        this.documentTitleContentEditor.focus();\n        window.getSelection().selectAllChildren(this.documentTitleContentEditor);\n    }\n    // Updates document title.\n    public updateDocumentTitle = (): void => {\n        if (this.documentEditor.documentName === '') {\n            this.documentEditor.documentName = 'Untitled';\n        }\n        this.documentTitle.textContent = this.documentEditor.documentName;\n    }\n    // tslint:disable-next-line:max-line-length\n    private addButton(iconClass: string, btnText: string, styles: string, id: string, tooltipText: string, isDropDown: boolean, items?: ItemModel[]): Button | DropDownButton {\n        let button: HTMLButtonElement = createElement('button', { id: id, styles: styles }) as HTMLButtonElement;\n        this.tileBarDiv.appendChild(button);\n        button.setAttribute('title', tooltipText);\n        if (isDropDown) {\n            // tslint:disable-next-line:max-line-length\n            let dropButton: DropDownButton = new DropDownButton({ select: this.onExportClick, items: items, iconCss: iconClass, cssClass: 'e-caret-hide', content: btnText, open: (): void => { this.setTooltipForPopup(); } }, button);\n            return dropButton;\n        } else {\n            let ejButton: Button = new Button({ iconCss: iconClass, content: btnText }, button);\n            return ejButton;\n        }\n    }\n    private onPrint = (): void => {\n        this.documentEditor.print();\n    }\n    private onClose= (): void => {\n        this.dialogComponent.hide();\n    }\n    private onExportClick = (args: MenuEventArgs): void => {\n        let value: string = args.item.id;\n        switch (value) {\n            case 'word':\n                this.save('Docx');\n                break;\n            case 'sfdt':\n                this.save('Sfdt');\n                break;\n            case 'dotx':\n                this.save('Dotx');\n                break;\n            case 'txt':\n                this.save('Txt');\n                break;\n        }\n    }\n    private save = (format: string): void => {\n        // tslint:disable-next-line:max-line-length\n        this.documentEditor.save(this.documentEditor.documentName === '' ? 'sample' : this.documentEditor.documentName, format as FormatType);\n    }\n    public showButtons = (show: boolean): void => {\n        const displayStyle = show ? 'block' : 'none';\n\n        if (this.print) {\n            this.print.element.style.display = displayStyle;\n        }\n        if (this.export) {\n            this.export.element.style.display = displayStyle;\n        }\n    }\n}","status-bar.ts":"import { DocumentEditor, ViewChangeEventArgs } from '@syncfusion/ej2-angular-documenteditor';\nimport { createElement, KeyboardEventArgs } from '@syncfusion/ej2-base';\nimport { DropDownButton, ItemModel, MenuEventArgs } from '@syncfusion/ej2-angular-splitbuttons';\n/**\n * Represents document editor status bar.\n */\nexport class StatusBar {\n    private documentEditor: DocumentEditor;\n    private statusBarDiv: HTMLElement;\n    private pageCount: HTMLElement;\n    private zoom: DropDownButton;\n    private pageNumberLabel: HTMLElement;\n    private editablePageNumber: HTMLElement;\n    public startPage: number = 1;\n    get editorPageCount(): number {\n        return this.documentEditor.pageCount;\n    }\n    constructor(parentElement: HTMLElement, docEditor: DocumentEditor) {\n        this.statusBarDiv = parentElement;\n        this.documentEditor = docEditor;\n        this.initializeStatusBar();\n        this.wireEvents();\n    }\n    private initializeStatusBar = (): void => {\n        let label: HTMLElement = createElement('label', { styles: 'margin-top: 6px;margin-right: 2px' });\n        label.textContent = 'Page ';\n        this.statusBarDiv.appendChild(label);\n\n        // tslint:disable-next-line:max-line-length\n        this.pageNumberLabel = createElement('label', { id: 'documenteditor_page_no', styles: 'text-transform:capitalize;white-space:pre;overflow:hidden;user-select:none;cursor:text;height:17px;max-width:150px' });\n        this.editablePageNumber = createElement('div', { id: 'editablePageNumber', styles: 'border: 1px solid #F1F1F1;display: inline-flex;height: 17px;padding: 0px 4px;', className: 'single-line e-de-pagenumber-text' });\n        this.editablePageNumber.appendChild(this.pageNumberLabel);\n        this.updatePageNumber();\n        this.statusBarDiv.appendChild(this.editablePageNumber);\n        this.editablePageNumber.setAttribute('title', 'The current page number in the document. Click or tap to navigate specific page.');\n        // tslint:disable-next-line:max-line-length\n        let label1: HTMLElement = createElement('label', { styles: 'margin-left:2px;letter-spacing: 1.05px;' });\n        label1.textContent = 'of';\n        this.statusBarDiv.appendChild(label1);\n        // tslint:disable-next-line:max-line-length\n        this.pageCount = createElement('label', { id: 'documenteditor_pagecount', styles: 'margin-left:6px;letter-spacing: 1.05px;' });\n        this.statusBarDiv.appendChild(this.pageCount);\n        this.updatePageCount();\n        let zoomBtn: HTMLButtonElement = createElement('button', {\n            id: 'documenteditor-zoom',\n            // tslint:disable-next-line:max-line-length\n            className: 'e-de-print-statusbar'\n        }) as HTMLButtonElement;\n        this.statusBarDiv.appendChild(zoomBtn);\n        zoomBtn.setAttribute('title', 'Zoom level. Click or tap to open the Zoom options.');\n        let items: ItemModel[] = [\n            {\n                text: '200%',\n            },\n            {\n                text: '175%',\n            },\n            {\n                text: '150%',\n            },\n            {\n                text: '125%',\n            },\n            {\n                text: '100%',\n            },\n            {\n                text: '75%',\n            },\n            {\n                text: '50%',\n            },\n            {\n                text: '25%',\n            },\n            {\n                separator: true\n            },\n            {\n                text: 'Fit one page'\n            },\n            {\n                text: 'Fit page width',\n            },\n        ];\n        this.zoom = new DropDownButton({ content: '100%', items: items, select: this.onZoom }, zoomBtn);\n    }\n    private onZoom = (args: MenuEventArgs) => {\n        this.setZoomValue(args.item.text);\n        this.updateZoomContent();\n    }\n    public updateZoomContent = (): void => {\n        this.zoom.content = Math.round(this.documentEditor.zoomFactor * 100) + '%';\n    }\n    private setZoomValue = (text: string): void => {\n        if (text.match('Fit one page')) {\n            this.documentEditor.fitPage('FitOnePage');\n        } else if (text.match('Fit page width')) {\n            this.documentEditor.fitPage('FitPageWidth');\n        } else {\n            this.documentEditor.zoomFactor = parseInt(text, 0) / 100;\n        }\n    }\n    /**\n     * Updates page count.\n     */\n    public updatePageCount = (): void => {\n        this.pageCount.textContent = this.editorPageCount.toString();\n    }\n    /**\n     * Updates page number.\n     */\n    public updatePageNumber = (): void => {\n        this.pageNumberLabel.textContent = this.startPage.toString();\n    }\n    public updatePageNumberOnViewChange = (args: ViewChangeEventArgs): void => {\n        if (this.documentEditor.selection\n            && this.documentEditor.selection.startPage >= args.startPage && this.documentEditor.selection.startPage <= args.endPage) {\n            this.startPage = this.documentEditor.selection.startPage;\n        } else {\n            this.startPage = args.startPage;\n        }\n        this.updatePageNumber();\n    }\n    private wireEvents = (): void => {\n        this.editablePageNumber.addEventListener('keydown', (e: KeyboardEventArgs) => {\n            if (e.which === 13) {\n                e.preventDefault();\n                let pageNumber: number = parseInt(this.editablePageNumber.textContent, 0);\n                if (pageNumber > this.editorPageCount) {\n                    this.updatePageNumber();\n                } else {\n                    if (this.documentEditor.selection) {\n                        this.documentEditor.selection.goToPage(parseInt(this.editablePageNumber.textContent, 0));\n                    } else {\n                        this.documentEditor.scrollToPage(parseInt(this.editablePageNumber.textContent, 0));\n                    }\n                }\n                this.editablePageNumber.contentEditable = 'false';\n                if (this.editablePageNumber.textContent === '') {\n                    this.updatePageNumber();\n                }\n            }\n            if (e.which > 64) {\n                e.preventDefault();\n            }\n        });\n        this.editablePageNumber.addEventListener('blur', (): void => {\n            if (this.editablePageNumber.textContent === '' || parseInt(this.editablePageNumber.textContent, 0) > this.editorPageCount) {\n                this.updatePageNumber();\n            }\n            this.editablePageNumber.contentEditable = 'false';\n        });\n        this.editablePageNumber.addEventListener('click', (): void => {\n            this.updateDocumentEditorPageNumber();\n        });\n    }\n    private updateDocumentEditorPageNumber = (): void => {\n        this.editablePageNumber.contentEditable = 'true';\n        this.editablePageNumber.focus();\n        window.getSelection().selectAllChildren(this.editablePageNumber);\n    }\n}","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { DocumentEditorComponent, ViewChangeEventArgs, PrintService, DocumentEditorModule } from '@syncfusion/ej2-angular-documenteditor';\nimport { DocumentLoader } from './document-loader';\nimport { TitleBar } from './title-bar';\nimport { StatusBar } from './status-bar';\n\n\nimport { NumericTextBoxModule } from '@syncfusion/ej2-angular-inputs';\nimport { TooltipModule } from '@syncfusion/ej2-angular-popups';\n/**\n * Print Component\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    providers: [PrintService],\n    standalone: true,\n    imports: [DocumentEditorModule, TooltipModule, NumericTextBoxModule,  ]\n})\nexport class AppComponent {\n    @ViewChild(\"documenteditor_print\")\n    public documentEditor: DocumentEditorComponent;\n    public documentLoader: DocumentLoader;\n    public containerPanel: HTMLElement;\n    public titleBar: TitleBar;\n    public statusBar: StatusBar;\n    private isComponentCreated: boolean = false;\n\n    private ngOnInit(): void {\n        this.containerPanel = document.getElementById('documenteditor_container_panel');\n    }\n    public initHelperModules(): void {\n        this.documentLoader = new DocumentLoader(this.documentEditor);\n        this.titleBar = new TitleBar(document.getElementById('documenteditor_titlebar'), this.documentEditor, false);\n        this.statusBar = new StatusBar(document.getElementById('documenteditor_statusbar'), this.documentEditor);\n        document.getElementById('uploadfileButton').addEventListener('change', this.onFileChange);\n        document.getElementById('uploadfileButton').setAttribute('accept', '.doc,.docx,.rtf,.txt,.htm,.html');\n        this.documentEditor.resize();\n        this.documentEditor.documentEditorSettings.printDevicePixelRatio = 2;\n        this.documentEditor.pageOutline = '#E0E0E0';\n        this.documentEditor.height = \"590px\";\n        this.onLoadDefault();\n        this.applyPageCountAndDocumentTitle();\n    }\n    private onFileChange = (args: any): void => {\n        if (args.target.files[0]) {\n            let path: any = args.target.files[0];\n            if (path.name.substr(path.name.lastIndexOf('.')) === '.sfdt') {\n                let fileReader: FileReader = new FileReader();\n                fileReader.onload = (e: any) => {\n                    let contents: any = e.target.result;\n                    this.documentEditor.open(contents);\n                };\n                fileReader.readAsText(path);\n                this.documentEditor.documentName = path.name.substr(0, path.name.lastIndexOf('.'));\n            } else {\n                this.documentLoader.loadFile(path);\n            }\n        }\n        event.preventDefault();\n    }\n    private onLoadDefault(): void {\n        // tslint:disable\n        let defaultDocument: Object = {\"sfdt\":\"\"};\n        // tslint: enable             \n        let waitingPopUp: HTMLElement = document.getElementById('waiting-popup');\n        let overlay: HTMLElement = document.getElementById('popup-overlay');\n        overlay.style.display = 'block';\n        waitingPopUp.style.display = 'block';\n        this.documentLoader.loadDefault(defaultDocument);\n        this.documentEditor.documentName = 'Getting Started';\n        waitingPopUp.style.display = 'none';\n        overlay.style.display = 'none';\n    }\n    public documentChange = (): void => {\n        if (!this.isComponentCreated) {\n            this.isComponentCreated = true;\n            setTimeout(() => {\n                this.initHelperModules();\n            });\n        }\n        this.applyPageCountAndDocumentTitle();\n    };\n    public zoomFactorChange = (): void => {\n        this.statusBar.updateZoomContent();\n    };\n\n    public viewChange = (e: ViewChangeEventArgs) => {\n        this.onViewChange(e);\n    };\n    private updateContainerSize(): void {\n        let titleBarDiv: HTMLElement = document.getElementById('documenteditor_titlebar');\n        let statusBarDiv: HTMLElement = document.getElementById('documenteditor_statusbar');\n        if (this.containerPanel && titleBarDiv && statusBarDiv) {\n\t\t\tvar height = window.innerHeight - (titleBarDiv.offsetHeight\n                + statusBarDiv.offsetHeight) + 'px';\n            this.containerPanel.style.height = height;\n\t\t\tthis.documentEditor.height = height;\n        }\n    }\n    private applyPageCountAndDocumentTitle(): void {\n        if (this.titleBar && this.statusBar) {\n            //Sets Document name.\n            this.titleBar.updateDocumentTitle();\n            this.statusBar.updatePageCount();\n        }\n    }\n\n    public onPixelRatioChange = (args: any): void  => {\n        this.documentEditor.documentEditorSettings.printDevicePixelRatio = args.value;\n    }\n\n    private onViewChange(args: ViewChangeEventArgs): void {\n        this.statusBar.updatePageNumberOnViewChange(args);\n    }\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n            <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" >\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"col-lg-8 control-section\">\n    <input type=\"file\" id=\"uploadfileButton\" style=\"position:fixed; left:-100em\" />\n    <div id=\"panel\">\n    <div id='documenteditor_titlebar' class=\"e-de-ctn-title\"></div>\n    <div id=\"documenteditor_container_panel\">\n        <ejs-documenteditor #documenteditor_print id=\"container\" [isReadOnly]=true [enablePrint]=true\n            (documentChange)=\"documentChange()\" (zoomFactorChange)=\"zoomFactorChange()\"\n            (viewChange)=\"viewChange($event)\" style=\"display:block\">\n        </ejs-documenteditor>\n            </div>\n        <div id=\"documenteditor_statusbar\">\n    </div>\n    </div>\n    <div class=\"overlay\" id=\"popup-overlay\" style=\"display: block;\"></div>\n    <div id='waiting-popup' style=\"display: block;\">\n        <svg class=\"circular\" height=\"40\" width=\"40\">\n            <circle class=\"circle-path\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" stroke-width=\"6\" stroke-miterlimit=\"10\" />\n        </svg>\n    </div>\n</div>\n<div class=\"col-lg-4 property-section\">\n    <div style=\"padding-top: 20px\">\n        <b>Document Editor settings</b>\n    </div>\n    <table style=\"margin-top: 20px; margin-bottom: 30px;\">\n        <tr>\n            <td style=\"width: 50%;\">\n                <span for=\"numeric\" style=\"padding-right: 10px\">Device pixel ratio:</span>\n            </td>\n            <td style=\"width: 50%;\">\n                <ejs-tooltip target='#printNumeric'\n                content='Specifies the device pixel ratio for the image generated while printing the document.'>\n                    <ejs-numerictextbox id='printNumeric' width=\"120px\" value=\"2\" min=\"1\" max=\"10\" step=\"0.5\" format=\"n\"\n                    decimals=\"1\" (change)=\"onPixelRatioChange($event)\">\n                    </ejs-numerictextbox>\n                </ejs-tooltip>\n            </td>\n        </tr>\n    </table>\n</div>\n\n<style>\n.center {\n    text-align: center;\n    display: none;\n    font-size: 13px;\n    font-weight: 400;\n    margin-top: 20px;\n}\n\n.sb-content-tab .center {\n    display: block;\n}\n\n.sb-content-tab #wrapper {\n    display: none;\n}\n\n#wrapper {\n    width: 100%;\n    height: 100%;\n}\n\nbody {\n    margin: 0;\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n}\n\n#documenteditor_container_panel {\n    width: 100%;\n    height: 100%;\n    border: solid 1px #D9D9D9;\n}\n\n#documenteditor_statusbar {\n    height: 28px;\n    min-height: 28px;\n    width: 100%;\n    background: #F1F1F1;\n    font-size: 12px;\n    color: #515151;\n    border: 0.5px solid #D4D4D4;\n    padding-right: 15px;\n    padding-left: 15px;\n    position: relative;\n\tbox-sizing: border-box;\n}\n\n.overlay {\n    z-index: 10;\n    display: none;\n    position: fixed;\n    background-color: #383838;\n    height: 100%;\n    width: 100%;\n    opacity: .5;\n    left: 0;\n    top: 0;\n}\n\n.e-de-print-statusbar {\n    background-color: #F1F1F1;\n    border: 0;\n    color: #000;\n    float: right;\n    height: 26px;\n}\n\n.e-bigger .e-de-print-statusbar {\n    background-color: #F1F1F1;\n    border: 0;\n    color: #000;\n    float: right;\n    height: 26px;\n    padding-top: 0;\n}\n\n#documenteditor_titlebar {\n    height: 36px;\n    line-height: 26px;\n    width: 100%;\n    font-size: 12px;\n    padding-left: 15px;\n    padding-right: 10px;\n    font-family: inherit;\n\tbox-sizing: border-box;\n}\n\n#documenteditor_title_contentEditor {\n    height: 26px;\n    max-width: 85%;\n    width: auto;\n    overflow: hidden;\n    display: inline-block;\n    padding-left: 4px;\n    padding-right: 4px;\n    margin: 5px;\n}\n\n.single-line {\n    cursor: text !important;\n    outline: none;\n}\n\n.single-line:hover {\n    border-color: #e4e4e4 !important;\n}\n\n[contenteditable=\"true\"].single-line {\n    white-space: nowrap;\n    border-color: #e4e4e4 !important;\n}\n\n#waiting-popup {\n    width: 56px;\n    height: 56px;\n    position: absolute;\n    top: calc(50% - 28px);\n    left: calc(50% - 28px);\n    border-radius: 50%;\n    padding: 3px;\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n    overflow: hidden;\n    background-color: white;\n    z-index: 20;\n    display: none;\n}\n\n.circular {\n    animation: rotate 2s linear infinite;\n    height: 50px;\n    width: 50px;\n    border-radius: 50%;\n}\n\n.circle-path {\n    stroke-dasharray: 1, 200;\n    stroke-dashoffset: 0;\n    animation: dash 1.5s ease-in-out infinite, color 6s ease-in-out infinite;\n    stroke-linecap: round;\n    stroke: #2B3481;\n}\n\n@keyframes rotate {\n    100% {\n        transform: rotate(360deg);\n    }\n}\n\n@keyframes dash {\n    0% {\n        stroke-dasharray: 1, 200;\n        stroke-dashoffset: 0;\n    }\n    50% {\n        stroke-dasharray: 89, 200;\n        stroke-dashoffset: -35;\n    }\n    100% {\n        stroke-dasharray: 89, 200;\n        stroke-dashoffset: -124;\n    }\n}\n\n@font-face {\n    font-family: 'Sample level icons FONT';\n    src: url(data:application/x-font-ttf;charset=utf-8;base64,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ZQAgAGwAZQB2AGUAbAAgAGkAYwBvAG4AcwAgAEYATwBOAFQAUgBlAGcAdQBsAGEAcgBTAGEAbQBwAGwAZQAgAGwAZQB2AGUAbAAgAGkAYwBvAG4AcwAgAEYATwBOAFQAUwBhAG0AcABsAGUAIABsAGUAdgBlAGwAIABpAGMAbwBuAHMAIABGAE8ATgBUAFYAZQByAHMAaQBvAG4AIAAxAC4AMABTAGEAbQBwAGwAZQAgAGwAZQB2AGUAbAAgAGkAYwBvAG4AcwAgAEYATwBOAFQARgBvAG4AdAAgAGcAZQBuAGUAcgBhAHQAZQBkACAAdQBzAGkAbgBnACAAUwB5AG4AYwBmAHUAcwBpAG8AbgAgAE0AZQB0AHIAbwAgAFMAdAB1AGQAaQBvAHcAdwB3AC4AcwB5AG4AYwBmAHUAcwBpAG8AbgAuAGMAbwBtAAAAAAIAAAAAAAAACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPwECAQMBBAEFAQYBBwEIAQkBCgELAQwBDQEOAQ8BEAERARIBEwEUARUBFgEXARgBGQEaARsBHAEdAR4BHwEgASEBIgEjASQBJQEmAScBKAEpASoBKwEsAS0BLgEvATABMQEyATMBNAE1ATYBNwE4ATkBOgE7ATwBPQE+AT8BQAALU3Ryb2tlU3R5bGUIQm9va21hcmsHUGljdHVyZQRGaW5kDU91dHNpZGVCb3JkZXIHSnVzdGlmeQVDbG9zZQ5EZWNyZWFzZUluZGVudBVQaXhlbEFsaWduQ2VudGVyVGFibGUPQmFja2dyb3VuZENvbG9yC0FsaWduQm90dG9tCVBhZ2VTZXR1cA5IaWdobGlnaHRDb2xvcgtTdXBlcnNjcmlwdAVUYWJsZQRVbmRvC0luc2VydEJlbG93CVRvcEJvcmRlcgpQYWdlTnVtYmVyEEFsaWduQ2VudGVyVGFibGUOSW5jcmVhc2VJbmRlbnQEQm9sZAlBbGlnbkxlZnQGRm9vdGVyC0luc2VydFJpZ2h0CVVuZGVybGluZQpJbnNlcnRMZWZ0BExvY2sGSGVhZGVyDVN0cmlrZXRocm91Z2gIQ2xlYXJBbGwLUmlnaHRCb3JkZXIKQWxpZ25SaWdodARPcGVuClN0cm9rZVNpemUFUHJpbnQLRGVsZXRlVGFibGUJRm9udENvbG9yDUluc2lkZUJvcmRlcnMKRGVsZXRlUm93cwtMaW5lU3BhY2luZwxTaG93SGlkZVBhbmUUSW5zaWRlVmVydGljYWxCb3JkZXIIQWxpZ25UT3AEUmVkbwxCb3R0b21Cb3JkZXIDTmV3BVBhc3RlB0J1bGxldHMEQ2VsbA1EZWxldGVDb2x1bW5zCkFsbEJvcmRlcnMJU3Vic2NyaXB0CERvd25sb2FkDlRhYmxlT2ZDb250ZW50Bkl0YWxpYxZJbnNpZGVIb3Jpem9uZGFsYm9yZGVyC0xlZnRCb3JkZXJzCU51bWJlcmluZwRMaW5rC0FsaWduQ2VudGVyC0luc2VydEFib3ZlAAAAAAA=) format('truetype');\n    font-weight: normal;\n    font-style: normal;\n}\n\n[class^=\"e-de-icon-\"],\n[class*=\"e-de-icon-\"] {\n    font-family: 'Sample level icons FONT' !important;\n}\n\n.e-de-icon-Open:before {\n    content: \"\\e721\";\n}\n\n.e-de-icon-Print:before {\n    content: \"\\e723\";\n}\n</style>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-documenteditor\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-angular-popups\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-angular-lists\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-angular-splitbuttons\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-grids\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}