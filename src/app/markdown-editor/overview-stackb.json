{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"/**\n * Rich Text Editor Markdown Preview Sample\n */\nimport { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { addClass, removeClass, Browser } from '@syncfusion/ej2-base';\nimport { RichTextEditorComponent, ToolbarService, LinkService, EditorMode, ToolbarType, RichTextEditorModule } from '@syncfusion/ej2-angular-richtexteditor';\nimport { ImageService, MarkdownEditorService, TableService } from '@syncfusion/ej2-angular-richtexteditor';\nimport { createElement, KeyboardEventArgs, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as Marked from 'marked';\nimport { ToolbarModule } from '@syncfusion/ej2-angular-navigations';\nimport { SplitterComponent, SplitterModule } from '@syncfusion/ej2-angular-layouts';\n\n\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [ToolbarService, LinkService, ImageService, TableService, MarkdownEditorService],\n    standalone: true,\n    imports: [ SplitterModule, RichTextEditorModule, ]\n})\nexport class AppComponent {\n\n    @ViewChild('defaultRTE')\n    public rteObj: RichTextEditorComponent;\n    @ViewChild('splitterInstance') splitterObj: SplitterComponent;\n    public srcArea: any;\n    public textArea: any;\n    public mode: EditorMode = 'Markdown';\n    public placeholder: string = 'Enter the text here...';\n    public tools: ToolbarModule = {\n        type: ToolbarType.Expand,\n        enableFloating :false,\n        items: ['Bold', 'Italic', 'StrikeThrough', '|', 'Formats', 'Blockquote', 'OrderedList',\n        'UnorderedList', '|', 'CreateLink', 'Image', 'CreateTable',\n        '|', 'Undo', 'Redo']\n    };\n    public onCreate(): void {\n        setTimeout(()=>{\n            this.rteObj.refreshUI();\n            this.textArea = this.rteObj.contentModule.getEditPanel();\n            this.srcArea = document.querySelector('.source-code');\n            this.updateValue();\n        },0)\n    }\n    public onChange(): void {\n        this.updateValue();\n    }\n    public resizing(): void {\n        this.rteObj.refreshUI();\n    }\n    public updateValue(): void {\n        this.srcArea.innerHTML = (Marked as any).marked((this.rteObj.contentModule.getEditPanel() as HTMLTextAreaElement).value);\n    }\n    public updateOrientation(): void {\n        if (Browser.isDevice) {\n            this.splitterObj.orientation = 'Vertical';\n            (document.body.querySelector('.heading') as HTMLElement).style.width = 'auto';\n        }\n    }\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n\n<div class=\"control-section\">\n    <div class=\"sample-container markdown-preview\">\n        <div class=\"default-section\">\n            <ejs-splitter id=\"splitter-rte-markdown-preview\" #splitterInstance height='450px' width='100%' (resizing)=\"resizing()\" (created)='updateOrientation()'>\n                <e-panes>\n                    <e-pane size='50%' [resizable]='true' cssClass='pane1' min='40%' >\n                        <ng-template #content>\n                            <div class=\"content\">\n                                <ejs-richtexteditor id=\"defaultRTE\" #defaultRTE height='447px' [toolbarSettings]='tools' saveInterval='10' [editorMode]='mode'\n                                    (created)='onCreate()' (change)='onChange()' (actionComplete)='updateValue()'>\n                                    <ng-template #valueTemplate>\n                                        In Rich Text Editor, you click the toolbar buttons to format the words and the changes are visible immediately. \n                                        Markdown is not like that. When you format the word in Markdown format, you need to add Markdown syntax to the word to indicate which words \n                                        and phrases should look different from each other\n                    \n                                        Rich Text Editor supports markdown editing when the editorMode set as **markdown** and using both *keyboard interaction* and *toolbar action*, you can apply the formatting to text.\n                    \n                                        We can add our own custom formation syntax for the Markdown formation, [sample link](https://ej2.syncfusion.com/home/).\n                    \n                                        The third-party library <b>Marked</b> is used in this sample to convert markdown into HTML content.\n                                    </ng-template>\n                                </ejs-richtexteditor>\n                            </div>\n                        </ng-template>\n                    </e-pane>\n                    <e-pane cssClass='pane2' min='40%'>\n                        <ng-template #content>\n                            <div class=\"heading right\">\n                                <h6 class=\"title\"><b>Markdown Preview</b></h6>\n                                <div class=\"splitter-default-content source-code pane2\" style=\"padding: 20px;\"></div>\n                            </div>\n                        </ng-template>\n                    </e-pane>\n                </e-panes>\n            </ejs-splitter>\n        </div>\n    </div>\n</div>\n\n","app.component.css":"    /* csslint ignore:start */\n    .markdown-preview .heading {\n        float: left;\n        width: 100%;\n        position: relative;\n        box-sizing: border-box;\n        padding: 0px;\n        padding-left:0px;\n        padding-right:0px;\n      }\n      \n    .markdown-preview .title {\n        color: #333333;\n        letter-spacing: 1px;\n        padding-left: 10px;\n        text-align: center;\n        margin: 15px 0;\n    }\n    .markdown-preview .title-head {\n        text-align: center\n    }\n    #mdPreview.e-richtexteditor textarea.e-content {\n        float: left;\n        border-right: 1px solid rgba(0, 0, 0, 0.12);\n    }\n    #mdPreview.e-richtexteditor .e-rte-content .e-content{\n        min-height: 150px;\n    }\n\n    #mdPreview.e-richtexteditor .e-rte-content {\n        overflow: hidden;\n    }\n\n    .e-icon-btn.e-active .e-md-preview::before {\n        content: '\\e350';\n    }\n\n    .e-icon-btn .e-md-preview::before {\n        content: '\\e345';\n    }\n   .bootstrap4 .e-icon-btn.e-active .e-md-preview::before {\n        content: '\\e790';\n    }\n\n    .bootstrap4 .e-icon-btn .e-md-preview::before {\n        content: '\\e787';\n    }\n\n    .tailwind .e-icon-btn .e-md-preview::before,\n    .tailwind-dark .e-icon-btn .e-md-preview::before,\n    .tailwind3 .e-icon-btn .e-md-preview::before,\n    .tailwind3-dark .e-icon-btn .e-md-preview::before,\n    .bootstrap5 .e-icon-btn .e-md-preview::before,\n    .bootstrap5\\.3 .e-icon-btn .e-md-preview::before,\n    .bootstrap5\\.3-dark .e-icon-btn .e-md-preview::before,\n    .bootstrap5-dark .e-icon-btn .e-md-preview::before,\n    .fluent .e-icon-btn .e-md-preview::before,\n    .fluent-dark .e-icon-btn .e-md-preview::before,\n    .fluent2 .e-icon-btn .e-md-preview::before,\n    .fluent2-dark .e-icon-btn .e-md-preview::before,\n    .fluent2-highcontrast .e-icon-btn .e-md-preview::before,\n    .material3 .e-icon-btn .e-md-preview::before,\n    .material3-dark .e-icon-btn .e-md-preview::before {\n        content: '\\e7de';\n    }\n    \n    .fluent .e-icon-btn.e-active .e-md-preview::before,\n    .fluent-dark .e-icon-btn.e-active .e-md-preview::before,\n    .fluent2 .e-icon-btn.e-active .e-md-preview::before,\n    .fluent2-dark .e-icon-btn.e-active .e-md-preview::before,\n    .fluent2-highcontrast .e-icon-btn.e-active .e-md-preview::before,\n    .bootstrap5 .e-icon-btn.e-active .e-md-preview::before,\n    .bootstrap5\\.3 .e-icon-btn.e-active .e-md-preview::before,\n    .bootstrap5\\.3-dark .e-icon-btn.e-active .e-md-preview::before,\n    .bootstrap5-dark .e-icon-btn.e-active .e-md-preview::before,\n    .tailwind .e-icon-btn.e-active .e-md-preview::before,\n    .tailwind-dark .e-icon-btn.e-active .e-md-preview::before,\n    .tailwind3 .e-icon-btn.e-active .e-md-preview::before,\n    .tailwind3-dark .e-icon-btn.e-active .e-md-preview::before,\n    .material3 .e-icon-btn.e-active .e-md-preview::before,\n    .material3-dark .e-icon-btn.e-active .e-md-preview::before {\n        content: '\\e80e';\n    }\n\n    #mdPreview .e-rte-content .e-content.e-pre-source {\n        width: 100%;\n    }\n\n    .highcontrast #mdPreview.e-richtexteditor textarea.e-content {\n        border-right: 1px solid #fff;\n    }\n\n    .sb-content.e-view.hide-header {\n        top: 0 !important;\n    }\n    \n    .sb-header.e-view.hide-header {\n        display: none;\n    }\n\n    .editor-mention-item-template {\n        width: 100%;\n        height: 100%;\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n      }\n      .em-content {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n      }\n      .em-avatar {\n        width: 32px;\n        height: 32px;\n        text-align: center;\n        border-radius: 50%;\n        font-size: 12px;\n        font-weight: 500;\n        text-indent: 0px;\n        line-height: 13px;\n        color: #fff;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      .em-name {\n        color: rgb(16, 24, 40);\n        font-size: 14px;\n        font-weight: 400;\n        line-height: 14px;\n        margin-bottom: 5px;\n      }\n      .em-email {\n        color: gray;\n        font-size: 12px;\n        font-weight: 400;\n        line-height: 14px;\n      }\n      #mdDefault_editable-content_popup li {\n        padding: 10px;\n        height: 60px;\n      }\n      body[class*='-dark'] .em-name {\n        color: #fff !important;\n      }\n/* csslint ignore:end */\n","dependencies.json":"{\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-richtexteditor\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-richtexteditor\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-layouts\":\"*\",\"@syncfusion/ej2-angular-layouts\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\",\"fuse.js\":\"^7.0.0\"}"}